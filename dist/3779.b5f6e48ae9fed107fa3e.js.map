{"version":3,"file":"3779.b5f6e48ae9fed107fa3e.js","mappings":"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QovF,GACRt2E,WAAgC,cAApB61E,EACZ1uF,QAASqvF,GACTv1E,MAAOA,EACPlB,QAASA,IAEXzY,EAAAA,GAAAC,cAAC2tG,EAAAA,EAAW,CACVhuG,OAAQgpG,GACR/oG,QAASipG,GACT9uF,WAAY2oH,KAEd3iI,EAAAA,GAAAC,cAAC6jB,EAAAA,EAAe,CACdlkB,OAAQ2/H,GACRx7G,UAAWtL,EAAQ3N,GACnBU,OAAQiN,EAAQjN,OAChB3L,QAASihI,KAEX9gI,EAAAA,GAAAC,cAAC0hB,EAAAA,EAAa,CACZ/hB,OAAQ6/H,GACR5/H,QAAS8/H,GACTn/H,KAAMV,GAAK,0BACX8hB,aAAc9hB,GAAK,uBACnB+hB,eAAgB4/G,KAEjBjE,GAAiB3rG,GACd,I,wKExeV,SAASuyG,EAAaC,GACpB,OAAIA,EACK,4BAEF,uBACT,C,6HCXA,MA2VA,GAAe3kI,EAAAA,EAAAA,KAtV0BmjI,EACvC5E,uBACA9tH,qBACAZ,eACA3P,SACA6Y,UACA8rD,YACAx0D,uBACA0tH,mBACAvC,qBACAxoB,SACA0rB,aACAb,aACAC,gBACA1jE,gBACAshE,WACA0H,WACAvH,UACA+C,YACAjD,SACAC,WACAptC,YACAQ,YACAupB,aACAujB,iBACAC,mBACAC,UACAC,cACAC,YACA32F,cACA42F,aACAC,aACAC,gBACA5jE,gBACA2lE,mBACAC,qBACA74F,iBACAm5F,qBACA/B,iBACAG,yBACAmB,uBACAmC,qBACAD,kBACAzoH,mBACAC,yBACAgtH,gBACAtB,WACAD,gBACAE,UACAC,SACA7vG,WACA07D,aACAwqB,YACA3qB,YACAu0C,iBACAC,mBACAj+F,YACA26E,UACAujB,gBACAxjI,WACAgJ,uBACAy6H,cACAE,gBACAC,cACAC,aACAC,gBACAC,eACAC,gBACAE,kBACAD,oBACAP,kBACAgB,cACAC,mBACAC,iBACAT,wBACAC,eACAC,kBACAC,wBAEA,MAAM,iBAAEplH,GAAgB,eAAEvH,GAAc,oBAAEktH,KAAwB37H,EAAAA,EAAAA,MAE5DygB,IAAUvgB,EAAAA,EAAAA,IAAuB,MAEj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","sources":["webpack://telegram-t/./src/components/common/AboutAdsModal.tsx","webpack://telegram-t/./src/components/common/CalendarModal.tsx","webpack://telegram-t/./src/components/common/ChatOrUserPicker.tsx","webpack://telegram-t/./src/components/common/CustomEmojiPicker.module.scss?b9fd","webpack://telegram-t/./src/components/common/CustomEmojiPicker.tsx","webpack://telegram-t/./src/components/common/CustomEmojiSetsModal.module.scss?b138","webpack://telegram-t/./src/components/common/CustomEmojiSetsModal.tsx","webpack://telegram-t/./src/components/common/DeleteMessageModal.tsx","webpack://telegram-t/./src/components/common/GifButton.tsx","webpack://telegram-t/./src/components/common/ManageUsernames.module.scss?3086","webpack://telegram-t/./src/components/common/ManageUsernames.tsx","webpack://telegram-t/./src/components/common/PasswordMonkey.tsx","webpack://telegram-t/./src/components/common/PinMessageModal.tsx","webpack://telegram-t/./src/components/common/ReactionEmoji.module.scss?b399","webpack://telegram-t/./src/components/common/ReactionEmoji.tsx","webpack://telegram-t/./src/components/common/RecipientPicker.tsx","webpack://telegram-t/./src/components/common/SeenByModal.module.scss?1d45","webpack://telegram-t/./src/components/common/SeenByModal.tsx","webpack://telegram-t/./src/components/common/StickerButton.tsx","webpack://telegram-t/./src/components/common/StickerSet.tsx","webpack://telegram-t/./src/components/common/StickerSetCard.tsx","webpack://telegram-t/./src/components/common/StickerSetModal.tsx","webpack://telegram-t/./src/components/common/UnpinAllMessagesModal.tsx","webpack://telegram-t/./src/components/common/UsernameInput.tsx","webpack://telegram-t/./src/components/common/hooks/useStickerPickerObservers.ts","webpack://telegram-t/./src/components/left/ArchivedChats.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.tsx","webpack://telegram-t/./src/components/left/MuteChatModal.tsx","webpack://telegram-t/./src/components/left/main/ContactList.tsx","webpack://telegram-t/./src/components/left/main/StatusPickerMenu.module.scss?d7cd","webpack://telegram-t/./src/components/left/main/StatusPickerMenu.tsx","webpack://telegram-t/./src/components/left/newChat/NewChat.tsx","webpack://telegram-t/./src/components/left/newChat/NewChatStep1.tsx","webpack://telegram-t/./src/components/left/newChat/NewChatStep2.tsx","webpack://telegram-t/./src/components/left/search/helpers/createMapStateToProps.ts","webpack://telegram-t/./src/components/left/search/AudioResults.tsx","webpack://telegram-t/./src/hooks/useSelectWithEnter.ts","webpack://telegram-t/./src/components/left/search/ChatMessage.tsx","webpack://telegram-t/./src/components/left/search/DateSuggest.tsx","webpack://telegram-t/./src/components/left/search/LeftSearchResultTopic.tsx","webpack://telegram-t/./src/components/left/search/ChatMessageResults.tsx","webpack://telegram-t/./src/components/left/search/LeftSearchResultChat.tsx","webpack://telegram-t/./src/components/left/search/RecentContacts.tsx","webpack://telegram-t/./src/components/left/search/ChatResults.tsx","webpack://telegram-t/./src/components/left/search/FileResults.tsx","webpack://telegram-t/./src/components/left/search/LinkResults.tsx","webpack://telegram-t/./src/components/left/search/MediaResults.tsx","webpack://telegram-t/./src/components/left/search/LeftSearch.tsx","webpack://telegram-t/./src/hooks/reducers/useTwoFaReducer.ts","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersChatsPicker.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersChatFilters.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersEdit.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersMain.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsShareChatlist.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFolders.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPasswordForm.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeCongratulations.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeEnabled.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeStart.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscode.tsx","webpack://telegram-t/./src/components/left/settings/helpers/getSessionIcon.ts","webpack://telegram-t/./src/components/left/settings/SettingsActiveSession.module.scss?ead4","webpack://telegram-t/./src/components/left/settings/SettingsActiveSession.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveSessions.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsite.module.scss?99ae","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsite.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsites.module.scss?28f4","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsites.tsx","webpack://telegram-t/./src/components/left/settings/SettingsCustomEmoji.tsx","webpack://telegram-t/./src/components/left/settings/SettingsDataStorage.tsx","webpack://telegram-t/./src/components/left/settings/SettingsDoNotTranslate.tsx","webpack://telegram-t/./src/components/left/settings/SettingsDoNotTranslate.module.scss?24c7","webpack://telegram-t/./src/components/left/settings/SettingsEditProfile.tsx","webpack://telegram-t/./src/components/left/settings/SettingsExperimental.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneral.tsx","webpack://telegram-t/./src/components/left/settings/WallpaperTile.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneralBackground.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneralBackgroundColor.tsx","webpack://telegram-t/./src/components/left/settings/SettingsHeader.tsx","webpack://telegram-t/./src/hooks/useMultiClick.ts","webpack://telegram-t/./src/components/left/settings/SettingsLanguage.tsx","webpack://telegram-t/./src/components/left/settings/SettingsMain.tsx","webpack://telegram-t/./src/components/left/settings/SettingsNotifications.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPerformance.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacy.tsx","webpack://telegram-t/./src/components/left/settings/BlockUserModal.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyBlockedUsers.tsx","webpack://telegram-t/./src/components/left/settings/helpers/privacy.ts","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyPublicPhoto.module.scss?04c5","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyPublicProfilePhoto.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyVisibility.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyVisibilityExceptionList.tsx","webpack://telegram-t/./src/components/left/settings/SettingsQuickReaction.tsx","webpack://telegram-t/./src/components/left/settings/SettingsStickers.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaCongratulations.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaEmailCode.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaEnabled.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaSkippableForm.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaStart.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFa.tsx","webpack://telegram-t/./src/components/left/settings/Settings.tsx","webpack://telegram-t/./src/components/main/AttachBotRecipientPicker.tsx","webpack://telegram-t/./src/components/main/BotTrustModal.tsx","webpack://telegram-t/./src/components/main/DeleteFolderDialog.tsx","webpack://telegram-t/./src/components/main/Dialogs.tsx","webpack://telegram-t/./src/components/main/DraftRecipientPicker.tsx","webpack://telegram-t/./src/components/main/ForwardRecipientPicker.tsx","webpack://telegram-t/./src/components/main/HistoryCalendar.tsx","webpack://telegram-t/./src/components/main/InviteViaLinkModal.module.scss?0f1a","webpack://telegram-t/./src/components/main/InviteViaLinkModal.tsx","webpack://telegram-t/./src/components/main/NewContactModal.tsx","webpack://telegram-t/./src/components/main/Notifications.tsx","webpack://telegram-t/./src/components/main/SafeLinkModal.tsx","webpack://telegram-t/./src/components/main/premium/GiftPremiumModal.module.scss?1c3e","webpack://telegram-t/./src/components/main/premium/GiftPremiumModal.tsx","webpack://telegram-t/./src/components/main/premium/PremiumFeatureItem.module.scss?7431","webpack://telegram-t/./src/components/main/premium/PremiumFeatureItem.tsx","webpack://telegram-t/./src/components/common/SliderDots.module.scss?afdd","webpack://telegram-t/./src/components/common/SliderDots.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitPreview.module.scss?28b4","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitPreview.tsx","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStickers.module.scss?0900","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStickers.tsx","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStories.module.scss?e925","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStories.tsx","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewVideo.module.scss?0228","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewVideo.tsx","webpack://telegram-t/./src/components/main/premium/PremiumFeatureModal.module.scss?b65b","webpack://telegram-t/./src/components/main/premium/PremiumFeatureModal.tsx","webpack://telegram-t/./src/components/main/premium/PremiumMainModal.module.scss?323f","webpack://telegram-t/./src/components/main/premium/PremiumMainModal.tsx","webpack://telegram-t/./src/components/main/premium/PremiumSubscriptionOption.module.scss?b798","webpack://telegram-t/./src/components/main/premium/PremiumSubscriptionOption.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitReachedModal.module.scss?434e","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitReachedModal.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitsCompare.module.scss?00e6","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitsCompare.tsx","webpack://telegram-t/./src/components/mediaViewer/helpers/ghostAnimation.ts","webpack://telegram-t/./src/hooks/usePictureInPicture.ts","webpack://telegram-t/./src/hooks/useBlur.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useMediaProps.ts","webpack://telegram-t/./src/hooks/useBlurSync.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useZoomChangeSignal.ts","webpack://telegram-t/./src/components/common/DeleteProfilePhotoModal.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerActions.tsx","webpack://telegram-t/./src/hooks/useSignalRef.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useControlsSignal.ts","webpack://telegram-t/./src/components/mediaViewer/MediaViewerFooter.tsx","webpack://telegram-t/./src/hooks/useCurrentTimeSignal.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useVideoWaitingSignal.ts","webpack://telegram-t/./src/lib/video-preview/VideoPreview.ts","webpack://telegram-t/./src/components/mediaViewer/SeekLine.module.scss?dc47","webpack://telegram-t/./src/components/mediaViewer/SeekLine.tsx","webpack://telegram-t/./src/components/mediaViewer/VideoPlayerControls.tsx","webpack://telegram-t/./src/components/mediaViewer/VideoPlayer.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerContent.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerSlides.tsx","webpack://telegram-t/./src/components/mediaViewer/SenderInfo.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewer.tsx","webpack://telegram-t/./src/components/middle/ChatLanguageModal.module.scss?68c3","webpack://telegram-t/./src/components/middle/ChatLanguageModal.tsx","webpack://telegram-t/./src/components/middle/EmojiInteractionAnimation.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.tsx","webpack://telegram-t/./src/components/middle/DeleteSelectedMessageModal.tsx","webpack://telegram-t/./src/components/middle/MessageSelectToolbar.tsx","webpack://telegram-t/./src/components/middle/hooks/useCopySelectedMessages.ts","webpack://telegram-t/./src/components/middle/MobileSearch.tsx","webpack://telegram-t/./src/components/middle/ReactorListModal.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/getHtmlTextLength.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModalItem.module.scss?41a0","webpack://telegram-t/./src/components/middle/composer/AttachmentModalItem.tsx","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.module.scss?23ea","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommand.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.module.scss?c44f","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiButton.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiButton.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/BaseResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/ArticleResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/GifResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/MediaResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/StickerResult.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.tsx","webpack://telegram-t/./src/components/middle/composer/StickerSetCover.module.scss?4629","webpack://telegram-t/./src/components/middle/composer/StickerSetCover.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiCategory.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiPicker.tsx","webpack://telegram-t/./src/components/middle/composer/GifPicker.tsx","webpack://telegram-t/./src/components/middle/composer/StickerPicker.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuFooter.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useKeyboardNavigation.ts","webpack://telegram-t/./src/components/middle/message/helpers/getSelectionAsFormattedText.ts","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.tsx","webpack://telegram-t/./src/components/middle/message/helpers/isSelectionRangeInsideMessage.ts","webpack://telegram-t/./src/components/middle/message/helpers/copyOptions.ts","webpack://telegram-t/./src/components/middle/message/MessageContextMenu.tsx","webpack://telegram-t/./src/components/middle/message/ReactionPickerLimited.module.scss?8334","webpack://telegram-t/./src/components/middle/message/ReactionPickerLimited.tsx","webpack://telegram-t/./src/components/middle/message/ReactionPicker.tsx","webpack://telegram-t/./src/components/middle/message/ReactionPicker.module.scss?e7ab","webpack://telegram-t/./src/components/middle/message/SponsoredMessageContextMenuContainer.tsx","webpack://telegram-t/./src/components/modals/attachBotInstall/AttachBotInstallModal.tsx","webpack://telegram-t/./src/components/modals/boost/BoostModal.tsx","webpack://telegram-t/./src/components/modals/boost/BoostModal.module.scss?aeb4","webpack://telegram-t/./src/components/modals/chatlist/ChatlistModal.module.scss?f731","webpack://telegram-t/./src/components/modals/chatlist/ChatlistAlready.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistDelete.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistNew.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistModal.tsx","webpack://telegram-t/./src/components/modals/giftcode/GiftCodeModal.module.scss?1c77","webpack://telegram-t/./src/components/modals/giftcode/GiftCodeModal.tsx","webpack://telegram-t/./src/components/modals/map/MapModal.module.scss?0842","webpack://telegram-t/./src/components/modals/map/MapModal.tsx","webpack://telegram-t/./src/components/modals/oneTimeMedia/OneTimeMediaModal.module.scss?de6c","webpack://telegram-t/./src/components/modals/oneTimeMedia/OneTimeMediaModal.tsx","webpack://telegram-t/./src/components/modals/urlAuth/UrlAuthModal.module.scss?df39","webpack://telegram-t/./src/components/modals/urlAuth/UrlAuthModal.tsx","webpack://telegram-t/./src/components/modals/webApp/WebAppModal.module.scss?615e","webpack://telegram-t/./src/components/modals/webApp/WebAppModal.tsx","webpack://telegram-t/./src/components/modals/webApp/hooks/usePopupLimit.ts","webpack://telegram-t/./src/components/modals/webApp/hooks/useWebAppFrame.ts","webpack://telegram-t/./src/components/payment/Checkout.module.scss?4e47","webpack://telegram-t/./src/components/payment/Checkout.tsx","webpack://telegram-t/./src/components/common/helpers/detectCardType.ts","webpack://telegram-t/./src/hooks/reducers/usePaymentReducer.ts","webpack://telegram-t/./src/components/payment/ConfirmPayment.tsx","webpack://telegram-t/./src/components/payment/PasswordConfirm.tsx","webpack://telegram-t/./src/hooks/useFocusAfterAnimation.tsx","webpack://telegram-t/./src/components/payment/CardInput.tsx","webpack://telegram-t/./src/components/middle/helpers/inputFormatters.ts","webpack://telegram-t/./src/components/payment/ExpiryInput.tsx","webpack://telegram-t/./src/components/payment/PaymentInfo.tsx","webpack://telegram-t/./src/components/payment/SavedPaymentCredentials.tsx","webpack://telegram-t/./src/components/payment/Shipping.tsx","webpack://telegram-t/./src/components/payment/ShippingInfo.tsx","webpack://telegram-t/./src/components/payment/PaymentModal.tsx","webpack://telegram-t/./src/components/payment/ReceiptModal.tsx","webpack://telegram-t/./src/components/right/CreateTopic.tsx","webpack://telegram-t/./src/components/right/EditTopic.tsx","webpack://telegram-t/./src/components/right/GifSearch.tsx","webpack://telegram-t/./src/components/right/PollAnswerResults.tsx","webpack://telegram-t/./src/components/right/PollResults.tsx","webpack://telegram-t/./src/components/right/RightSearch.tsx","webpack://telegram-t/./src/components/right/StickerSetResult.tsx","webpack://telegram-t/./src/components/right/StickerSearch.tsx","webpack://telegram-t/./src/components/right/hooks/useManagePermissions.ts","webpack://telegram-t/./src/components/right/management/ManageBot.tsx","webpack://telegram-t/./src/components/right/management/ManageChannel.tsx","webpack://telegram-t/./src/components/right/management/ManageChatAdministrators.tsx","webpack://telegram-t/./src/components/right/management/ManageChatPrivacyType.tsx","webpack://telegram-t/./src/components/right/management/RemoveGroupUserModal.tsx","webpack://telegram-t/./src/components/right/management/ManageChatRemovedUsers.tsx","webpack://telegram-t/./src/components/right/management/ManageDiscussion.tsx","webpack://telegram-t/./src/components/right/management/ManageGroup.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupAdminRights.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupMembers.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupPermissions.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupUserPermissions.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupUserPermissionsCreate.tsx","webpack://telegram-t/./src/components/right/management/ManageInvite.tsx","webpack://telegram-t/./src/components/right/management/ManageInviteInfo.tsx","webpack://telegram-t/./src/components/right/management/ManageInvites.tsx","webpack://telegram-t/./src/components/right/management/JoinRequest.tsx","webpack://telegram-t/./src/components/right/management/ManageJoinRequests.tsx","webpack://telegram-t/./src/components/right/management/ManageReactions.tsx","webpack://telegram-t/./src/components/right/management/ManageUser.tsx","webpack://telegram-t/./src/components/right/management/Management.tsx","webpack://telegram-t/./src/components/right/statistics/MessageStatistics.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentPost.module.scss?fea0","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentPostMeta.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentMessage.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentStory.tsx","webpack://telegram-t/./src/components/right/statistics/Statistics.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsMessagePublicForward.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsStoryPublicForward.tsx","webpack://telegram-t/./src/components/right/statistics/StoryStatistics.tsx","webpack://telegram-t/./src/components/story/StoryViewer.module.scss?5f32","webpack://telegram-t/./src/components/story/helpers/ghostAnimation.ts","webpack://telegram-t/./src/components/story/helpers/dimensions.ts","webpack://telegram-t/./src/components/story/hooks/useSlideSizes.ts","webpack://telegram-t/./src/components/story/hooks/useStoryProps.ts","webpack://telegram-t/./src/components/story/StealthModeModal.module.scss?40cf","webpack://telegram-t/./src/components/story/StealthModeModal.tsx","webpack://telegram-t/./src/components/story/StoryDeleteConfirmModal.tsx","webpack://telegram-t/./src/components/story/privacy/AllowDenyList.tsx","webpack://telegram-t/./src/components/story/privacy/CloseFriends.module.scss?5d02","webpack://telegram-t/./src/components/story/privacy/CloseFriends.tsx","webpack://telegram-t/./src/components/story/StorySettings.module.scss?b887","webpack://telegram-t/./src/components/story/StorySettings.tsx","webpack://telegram-t/./src/components/common/embedded/EmbeddedStoryForward.tsx","webpack://telegram-t/./src/components/story/StoryCaption.tsx","webpack://telegram-t/./src/components/story/StoryFooter.module.scss?19b1","webpack://telegram-t/./src/components/story/StoryFooter.tsx","webpack://telegram-t/./src/components/story/StoryProgress.tsx","webpack://telegram-t/./src/components/story/StoryProgress.module.scss?59b4","webpack://telegram-t/./src/components/story/Story.tsx","webpack://telegram-t/./src/hooks/useLongPress.ts","webpack://telegram-t/./src/components/story/StoryPreview.tsx","webpack://telegram-t/./src/components/story/StorySlides.tsx","webpack://telegram-t/./src/components/story/StoryViewModal.module.scss?06b1","webpack://telegram-t/./src/components/story/StoryView.tsx","webpack://telegram-t/./src/components/story/StoryViewModal.tsx","webpack://telegram-t/./src/components/story/StoryViewer.tsx","webpack://telegram-t/./src/hooks/useScrolledState.ts","webpack://telegram-t/./src/util/findInViewport.ts","webpack://telegram-t/./src/util/isFullyVisible.ts","webpack://telegram-t/./src/util/launchMediaWorkers.ts","webpack://telegram-t/./src/util/scrollLock.ts","webpack://telegram-t/./src/util/setTooltipItemVisible.ts","webpack://telegram-t/./src/components/middle/composer/StickerPicker.module.scss?0978","webpack://telegram-t/./src/components/right/ManageTopic.module.scss?04dd","webpack://telegram-t/./src/components/right/statistics/Statistics.module.scss?96a0","webpack://telegram-t/./src/components/right/statistics/StatisticsPublicForward.module.scss?bbd6"],"sourcesContent":["import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport SafeLink from './SafeLink';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n};\n\nconst AboutAdsModal: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n}) => {\n  const lang = useLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      hasCloseButton\n      title={lang('SponsoredMessageInfo')}\n    >\n      <p>{renderText(lang('SponsoredMessageInfoDescription1'), ['br'])}</p>\n      <p>{renderText(lang('SponsoredMessageInfoDescription2'), ['br'])}</p>\n      <p>{renderText(lang('SponsoredMessageInfoDescription3'), ['br'])}</p>\n      <p>\n        <SafeLink\n          url={lang('SponsoredMessageAlertLearnMoreUrl')}\n          text={lang('SponsoredMessageAlertLearnMoreUrl')}\n        />\n      </p>\n      <p>{renderText(lang('SponsoredMessageInfoDescription4'), ['br'])}</p>\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Close')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(AboutAdsModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\n\nimport type { LangFn } from '../../hooks/useLang';\n\nimport { MAX_INT_32 } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateToString, formatTime, getDayStart } from '../../util/dateFormat';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nimport './CalendarModal.scss';\n\nconst MAX_SAFE_DATE = MAX_INT_32 * 1000;\nconst MIN_SAFE_DATE = 0;\n\nexport type OwnProps = {\n  selectedAt?: number;\n  minAt?: number;\n  maxAt?: number;\n  isFutureMode?: boolean;\n  isPastMode?: boolean;\n  isOpen: boolean;\n  withTimePicker?: boolean;\n  submitButtonLabel?: string;\n  secondButtonLabel?: string;\n  onClose: () => void;\n  onSubmit: (date: Date) => void;\n  onSecondButtonClick?: NoneToVoidFunction;\n};\n\nconst WEEKDAY_LETTERS = [\n  'lng_weekday1',\n  'lng_weekday2',\n  'lng_weekday3',\n  'lng_weekday4',\n  'lng_weekday5',\n  'lng_weekday6',\n  'lng_weekday7',\n];\n\nconst CalendarModal: FC<OwnProps> = ({\n  selectedAt,\n  minAt,\n  maxAt,\n  isFutureMode,\n  isPastMode,\n  isOpen,\n  withTimePicker,\n  submitButtonLabel,\n  secondButtonLabel,\n  onClose,\n  onSubmit,\n  onSecondButtonClick,\n}) => {\n  const lang = useLang();\n  const now = new Date();\n\n  const minDate = useMemo(() => {\n    if (isFutureMode && !minAt) return new Date();\n    return new Date(Math.max(minAt || MIN_SAFE_DATE, MIN_SAFE_DATE));\n  }, [isFutureMode, minAt]);\n  const maxDate = useMemo(() => {\n    if (isPastMode && !maxAt) return new Date();\n    return new Date(Math.min(maxAt || MAX_SAFE_DATE, MAX_SAFE_DATE));\n  }, [isPastMode, maxAt]);\n\n  const passedSelectedDate = useMemo(() => (selectedAt ? new Date(selectedAt) : new Date()), [selectedAt]);\n  const prevIsOpen = usePrevious(isOpen);\n  const [isTimeInputFocused, markTimeInputAsFocused, unmarkTimeInputAsFocused] = useFlag(false);\n\n  const [selectedDate, setSelectedDate] = useState<Date>(passedSelectedDate);\n  const [currentMonthAndYear, setCurrentMonthAndYear] = useState<Date>(\n    new Date(selectedDate.getFullYear(), selectedDate.getMonth(), 1),\n  );\n  const [selectedHours, setSelectedHours] = useState<string>(\n    formatInputTime(passedSelectedDate.getHours()),\n  );\n  const [selectedMinutes, setSelectedMinutes] = useState<string>(\n    formatInputTime(passedSelectedDate.getMinutes()),\n  );\n\n  const selectedDay = formatDay(selectedDate.getFullYear(), selectedDate.getMonth(), selectedDate.getDate());\n  const currentYear = currentMonthAndYear.getFullYear();\n  const currentMonth = currentMonthAndYear.getMonth();\n\n  useEffect(() => {\n    if (!prevIsOpen && isOpen) {\n      setSelectedDate(passedSelectedDate);\n      setCurrentMonthAndYear(new Date(passedSelectedDate.getFullYear(), passedSelectedDate.getMonth(), 1));\n      if (withTimePicker) {\n        setSelectedHours(formatInputTime(passedSelectedDate.getHours()));\n        setSelectedMinutes(formatInputTime(passedSelectedDate.getMinutes()));\n      }\n    }\n  }, [passedSelectedDate, isOpen, prevIsOpen, withTimePicker]);\n\n  useEffect(() => {\n    if (isFutureMode && !isTimeInputFocused && selectedDate.getTime() < minDate.getTime()) {\n      setSelectedDate(minDate);\n      setSelectedHours(formatInputTime(minDate.getHours()));\n      setSelectedMinutes(formatInputTime(minDate.getMinutes()));\n    }\n  }, [isFutureMode, isTimeInputFocused, minDate, selectedDate]);\n\n  useEffect(() => {\n    if (isPastMode && !isTimeInputFocused && selectedDate.getTime() > maxDate.getTime()) {\n      setSelectedDate(maxDate);\n      setSelectedHours(formatInputTime(maxDate.getHours()));\n      setSelectedMinutes(formatInputTime(maxDate.getMinutes()));\n    }\n  }, [isFutureMode, isPastMode, isTimeInputFocused, maxDate, minDate, selectedDate]);\n\n  useEffect(() => {\n    if (selectedAt) {\n      const newSelectedDate = new Date(selectedAt);\n      setSelectedDate(newSelectedDate);\n      setSelectedHours(formatInputTime(newSelectedDate.getHours()));\n      setSelectedMinutes(formatInputTime(newSelectedDate.getMinutes()));\n    }\n  }, [selectedAt]);\n\n  const shouldDisableNextMonth = (isPastMode && currentYear >= now.getFullYear() && currentMonth >= now.getMonth())\n    || (maxDate && currentYear >= maxDate.getFullYear() && currentMonth >= maxDate.getMonth());\n  const shouldDisablePrevMonth = isFutureMode && currentYear <= now.getFullYear() && currentMonth <= now.getMonth();\n\n  const { prevMonthGrid, currentMonthGrid, nextMonthGrid } = useMemo(() => (\n    buildCalendarGrid(currentYear, currentMonth)\n  ), [currentMonth, currentYear]);\n\n  const submitLabel = useMemo(() => {\n    return submitButtonLabel || formatSubmitLabel(lang, selectedDate);\n  }, [lang, selectedDate, submitButtonLabel]);\n\n  function handlePrevMonth() {\n    setCurrentMonthAndYear((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setMonth(dateCopy.getMonth() - 1);\n\n      return dateCopy;\n    });\n  }\n\n  function handleNextMonth() {\n    setCurrentMonthAndYear((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setMonth(dateCopy.getMonth() + 1);\n\n      return dateCopy;\n    });\n  }\n\n  function handleDateSelect(date: number) {\n    setSelectedDate((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setDate(date);\n      dateCopy.setMonth(currentMonth);\n      dateCopy.setFullYear(currentYear);\n\n      return dateCopy;\n    });\n  }\n\n  const handleSubmit = useCallback(() => {\n    onSubmit(selectedDate);\n  }, [onSubmit, selectedDate]);\n\n  const handleChangeHours = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.replace(/[^\\d]+/g, '');\n    if (!value.length) {\n      setSelectedHours('');\n      e.target.value = '';\n      return;\n    }\n\n    const hours = Math.max(0, Math.min(Number(value), 23));\n\n    const date = new Date(selectedDate.getTime());\n    date.setHours(hours);\n    setSelectedDate(date);\n\n    const hoursStr = formatInputTime(hours);\n    setSelectedHours(hoursStr);\n    e.target.value = hoursStr;\n  }, [selectedDate]);\n\n  const handleChangeMinutes = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.replace(/[^\\d]+/g, '');\n    if (!value.length) {\n      setSelectedMinutes('');\n      e.target.value = '';\n      return;\n    }\n\n    const minutes = Math.max(0, Math.min(Number(value), 59));\n\n    const date = new Date(selectedDate.getTime());\n    date.setMinutes(minutes);\n    setSelectedDate(date);\n\n    const minutesStr = formatInputTime(minutes);\n    setSelectedMinutes(minutesStr);\n    e.target.value = minutesStr;\n  }, [selectedDate]);\n\n  function renderTimePicker() {\n    return (\n      <div className=\"timepicker\">\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          inputMode=\"decimal\"\n          value={selectedHours}\n          onChange={handleChangeHours}\n          onFocus={markTimeInputAsFocused}\n          onBlur={unmarkTimeInputAsFocused}\n        />\n        :\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          inputMode=\"decimal\"\n          value={selectedMinutes}\n          onChange={handleChangeMinutes}\n          onFocus={markTimeInputAsFocused}\n          onBlur={unmarkTimeInputAsFocused}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"CalendarModal\"\n      onEnter={handleSubmit}\n    >\n      <div className=\"container\">\n        <div className=\"month-selector\">\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            onClick={onClose}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n\n          <h4>\n            {lang(`lng_month${currentMonth + 1}`)}\n            {' '}\n            {currentYear}\n          </h4>\n\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            disabled={shouldDisablePrevMonth}\n            onClick={!shouldDisablePrevMonth ? handlePrevMonth : undefined}\n          >\n            <i className=\"icon icon-previous\" />\n          </Button>\n\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            disabled={shouldDisableNextMonth}\n            onClick={!shouldDisableNextMonth ? handleNextMonth : undefined}\n          >\n            <i className=\"icon icon-next\" />\n          </Button>\n        </div>\n      </div>\n\n      <div className=\"calendar-wrapper\">\n        <div className=\"calendar-grid\">\n          {WEEKDAY_LETTERS.map((day) => (\n            <div className=\"day-button faded weekday\">\n              <span>{lang(day)}</span>\n            </div>\n          ))}\n          {prevMonthGrid.map((gridDate) => (\n            <div className=\"day-button disabled\"><span>{gridDate}</span></div>\n          ))}\n          {currentMonthGrid.map((gridDate) => (\n            <div\n              role=\"button\"\n              tabIndex={0}\n              onClick={() => handleDateSelect(gridDate)}\n              className={buildClassName(\n                'day-button',\n                'div-button',\n                isDisabledDay(\n                  currentYear, currentMonth, gridDate, minDate, maxDate,\n                )\n                  ? 'disabled'\n                  : `${gridDate ? 'clickable' : ''}`,\n                selectedDay === formatDay(currentYear, currentMonth, gridDate) && 'selected',\n              )}\n            >\n              {Boolean(gridDate) && (\n                <span>{gridDate}</span>\n              )}\n            </div>\n          ))}\n          {nextMonthGrid.map((gridDate) => (\n            <div className=\"day-button disabled\"><span>{gridDate}</span></div>\n          ))}\n        </div>\n      </div>\n\n      {withTimePicker && renderTimePicker()}\n\n      <div className=\"footer\">\n        <Button onClick={handleSubmit}>\n          {submitLabel}\n        </Button>\n        {secondButtonLabel && (\n          <Button onClick={onSecondButtonClick} isText>\n            {secondButtonLabel}\n          </Button>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nfunction buildCalendarGrid(year: number, month: number) {\n  const prevMonthGrid: number[] = [];\n  const currentMonthGrid: number[] = [];\n  const nextMonthGrid: number[] = [];\n\n  const date = new Date();\n  date.setDate(1);\n  date.setMonth(month);\n  date.setFullYear(year);\n  const firstDay = date.getDay() || 7;\n  const totalDaysInPrevMonth = new Date(year, month, 0).getDate();\n\n  for (let i = 1; i < firstDay; i++) {\n    prevMonthGrid.push(totalDaysInPrevMonth - firstDay + i + 1);\n  }\n\n  while (date.getMonth() === month) {\n    const gridDate = date.getDate();\n    currentMonthGrid.push(gridDate);\n    date.setDate(gridDate + 1);\n  }\n\n  const lastRowDaysCount = (currentMonthGrid.length + prevMonthGrid.length) % 7;\n  if (lastRowDaysCount > 0) {\n    for (let i = 1; i <= 7 - lastRowDaysCount; i++) {\n      nextMonthGrid.push(i);\n    }\n  }\n\n  return { prevMonthGrid, currentMonthGrid, nextMonthGrid };\n}\n\nfunction isDisabledDay(year: number, month: number, day: number, minDate?: Date, maxDate?: Date) {\n  const selectedDay = new Date(year, month, day);\n  const fixedMinDate = minDate && getDayStart(minDate);\n  const fixedMaxDate = maxDate && getDayStart(maxDate);\n\n  if (fixedMaxDate && selectedDay > fixedMaxDate) {\n    return true;\n  } else if (fixedMinDate && selectedDay < fixedMinDate) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction formatInputTime(value: string | number) {\n  return String(value).padStart(2, '0');\n}\n\nfunction formatDay(year: number, month: number, day: number) {\n  return `${year}-${month + 1}-${day}`;\n}\n\nfunction formatSubmitLabel(lang: LangFn, date: Date) {\n  const day = formatDateToString(date, lang.code);\n  const today = formatDateToString(new Date(), lang.code);\n\n  if (day === today) {\n    return lang('Conversation.ScheduleMessage.SendToday', formatTime(lang, date));\n  }\n\n  return lang('Conversation.ScheduleMessage.SendOn', [day, formatTime(lang, date)]);\n}\n\nexport default memo(CalendarModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChat, ApiTopic } from '../../api/types';\nimport type { ThreadId } from '../../types';\n\nimport { CHAT_HEIGHT_PX } from '../../config';\nimport { getCanPostInChat, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useInputFocusOnOpen from '../../hooks/useInputFocusOnOpen';\nimport useKeyboardListNavigation from '../../hooks/useKeyboardListNavigation';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport Modal from '../ui/Modal';\nimport Transition from '../ui/Transition';\nimport GroupChatInfo from './GroupChatInfo';\nimport PrivateChatInfo from './PrivateChatInfo';\nimport TopicIcon from './TopicIcon';\n\nimport './ChatOrUserPicker.scss';\n\nexport type OwnProps = {\n  currentUserId?: string;\n  chatOrUserIds: string[];\n  chatsById?: Record<string, ApiChat>;\n  isOpen: boolean;\n  searchPlaceholder: string;\n  search: string;\n  className?: string;\n  loadMore?: NoneToVoidFunction;\n  onSearchChange: (search: string) => void;\n  onSelectChatOrUser: (chatOrUserId: string, threadId?: ThreadId) => void;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n};\n\nconst CHAT_LIST_SLIDE = 0;\nconst TOPIC_LIST_SLIDE = 1;\nconst TOPIC_ICON_SIZE = 2.75 * REM;\n\nconst ChatOrUserPicker: FC<OwnProps> = ({\n  isOpen,\n  currentUserId,\n  chatOrUserIds,\n  chatsById,\n  search,\n  searchPlaceholder,\n  className,\n  loadMore,\n  onSearchChange,\n  onSelectChatOrUser,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { loadTopics } = getActions();\n\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const topicContainerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const searchRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const topicSearchRef = useRef<HTMLInputElement>(null);\n  const [viewportIds, getMore] = useInfiniteScroll(loadMore, chatOrUserIds, Boolean(search));\n  const [forumId, setForumId] = useState<string | undefined>(undefined);\n  const [topicSearch, setTopicSearch] = useState<string>('');\n  const activeKey = forumId ? TOPIC_LIST_SLIDE : CHAT_LIST_SLIDE;\n  const viewportOffset = chatOrUserIds!.indexOf(viewportIds![0]);\n\n  const resetSearch = useLastCallback(() => {\n    onSearchChange('');\n  });\n  useInputFocusOnOpen(searchRef, isOpen && activeKey === CHAT_LIST_SLIDE, resetSearch);\n  useInputFocusOnOpen(topicSearchRef, isOpen && activeKey === TOPIC_LIST_SLIDE);\n\n  const [topicIds, topics] = useMemo(() => {\n    const topicsResult = forumId ? chatsById?.[forumId].topics : undefined;\n    if (!topicsResult) {\n      return [undefined, undefined];\n    }\n\n    const searchTitle = topicSearch.toLowerCase();\n\n    const result = topicsResult\n      ? Object.values(topicsResult).reduce((acc, topic) => {\n        if (\n          getCanPostInChat(chatsById![forumId!], topic.id)\n          && (!searchTitle || topic.title.toLowerCase().includes(searchTitle))\n        ) {\n          acc[topic.id] = topic;\n        }\n\n        return acc;\n      }, {} as Record<number, ApiTopic>)\n      : topicsResult;\n\n    return [Object.keys(result).map(Number), result];\n  }, [chatsById, forumId, topicSearch]);\n\n  const handleHeaderBackClick = useLastCallback(() => {\n    setForumId(undefined);\n    setTopicSearch('');\n  });\n\n  const handleSearchChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    onSearchChange(e.currentTarget.value);\n  });\n\n  const handleTopicSearchChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setTopicSearch(e.currentTarget.value);\n  });\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isOpen, (index) => {\n    if (viewportIds && viewportIds.length > 0) {\n      const chatId = viewportIds[index === -1 ? 0 : index];\n      const chat = chatsById?.[chatId];\n      if (chat?.isForum) {\n        if (!chat.topics) loadTopics({ chatId });\n        setForumId(chatId);\n      } else {\n        onSelectChatOrUser(chatId);\n      }\n    }\n  }, '.ListItem-button', true);\n\n  const handleTopicKeyDown = useKeyboardListNavigation(topicContainerRef, isOpen, (index) => {\n    if (topicIds?.length) {\n      onSelectChatOrUser(forumId!, topicIds[index === -1 ? 0 : index]);\n    }\n  }, '.ListItem-button', true);\n\n  const handleClick = useLastCallback((e: React.MouseEvent, chatId: string) => {\n    const chat = chatsById?.[chatId];\n    if (chat?.isForum) {\n      if (!chat.topics) loadTopics({ chatId });\n      setForumId(chatId);\n      resetSearch();\n    } else {\n      onSelectChatOrUser(chatId);\n    }\n  });\n\n  const handleTopicClick = useLastCallback((e: React.MouseEvent, topicId: number) => {\n    onSelectChatOrUser(forumId!, topicId);\n  });\n\n  function renderTopicList() {\n    return (\n      <>\n        <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Back')} onClick={handleHeaderBackClick}>\n            <i className=\"icon icon-arrow-left\" />\n          </Button>\n          <InputText\n            ref={topicSearchRef}\n            value={topicSearch}\n            onChange={handleTopicSearchChange}\n            onKeyDown={handleTopicKeyDown}\n            placeholder={searchPlaceholder}\n          />\n        </div>\n        <InfiniteScroll\n          ref={topicContainerRef}\n          className=\"picker-list custom-scroll\"\n          items={topicIds}\n          withAbsolutePositioning\n          maxHeight={!topicIds ? 0 : topicIds.length * CHAT_HEIGHT_PX}\n          onKeyDown={handleTopicKeyDown}\n        >\n          {topicIds\n            ? topicIds.map((topicId, i) => (\n              <ListItem\n                key={`${forumId}_${topicId}`}\n                className=\"chat-item-clickable force-rounded-corners small-icon topic-item\"\n                style={`top: ${i * CHAT_HEIGHT_PX}px;`}\n                onClick={handleTopicClick}\n                clickArg={topicId}\n              >\n                <TopicIcon\n                  size={TOPIC_ICON_SIZE}\n                  topic={topics[topicId]}\n                  className=\"topic-icon\"\n                  letterClassName=\"topic-icon-letter\"\n                />\n                <div dir=\"auto\" className=\"fullName\">{renderText(topics[topicId].title)}</div>\n              </ListItem>\n            ))\n            : <Loading />}\n        </InfiniteScroll>\n      </>\n    );\n  }\n\n  function renderChatList() {\n    return (\n      <>\n        <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n          <InputText\n            ref={searchRef}\n            value={search}\n            onChange={handleSearchChange}\n            onKeyDown={handleKeyDown}\n            placeholder={searchPlaceholder}\n          />\n        </div>\n        {viewportIds?.length ? (\n          <InfiniteScroll\n            ref={containerRef}\n            className=\"picker-list custom-scroll\"\n            items={viewportIds}\n            onLoadMore={getMore}\n            withAbsolutePositioning\n            maxHeight={chatOrUserIds!.length * CHAT_HEIGHT_PX}\n            onKeyDown={handleKeyDown}\n          >\n            {viewportIds.map((id, i) => (\n              <ListItem\n                key={id}\n                className=\"chat-item-clickable force-rounded-corners small-icon\"\n                style={`height: ${CHAT_HEIGHT_PX}px; top: ${(viewportOffset + i) * CHAT_HEIGHT_PX}px;`}\n                onClick={handleClick}\n                clickArg={id}\n              >\n                {isUserId(id) ? (\n                  <PrivateChatInfo\n                    status={id === currentUserId ? lang('SavedMessagesInfo') : undefined}\n                    userId={id}\n                  />\n                ) : (\n                  <GroupChatInfo chatId={id} />\n                )}\n              </ListItem>\n            ))}\n          </InfiniteScroll>\n        ) : viewportIds && !viewportIds.length ? (\n          <p className=\"no-results\">{lang('lng_blocked_list_not_found')}</p>\n        ) : (\n          <Loading />\n        )}\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className={buildClassName('ChatOrUserPicker', className)}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      <Transition activeKey={activeKey} name=\"slideFade\" slideClassName=\"ChatOrUserPicker_slide\">\n        {() => {\n          return activeKey === TOPIC_LIST_SLIDE ? renderTopicList() : renderChatList();\n        }}\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(ChatOrUserPicker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"z0kj3ATb_u7kBMYsqUpx\",\"activated\":\"sGL0teusRxo4NrXceldd\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAvailableReaction, ApiReaction, ApiSticker, ApiStickerSet,\n} from '../../api/types';\nimport type { StickerSetOrReactionsSetOrRecent } from '../../types';\n\nimport {\n  CHAT_STICKER_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n  PREMIUM_STICKER_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  SLIDE_TRANSITION_DURATION,\n  STICKER_PICKER_MAX_SHARED_COVERS,\n  STICKER_SIZE_PICKER_HEADER,\n  TOP_SYMBOL_SET_ID,\n} from '../../config';\nimport { isSameReaction } from '../../global/helpers';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectIsAlwaysHighPriorityEmoji,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n} from '../../global/selectors';\nimport animateHorizontalScroll from '../../util/animateHorizontalScroll';\nimport buildClassName from '../../util/buildClassName';\nimport { pickTruthy, unique } from '../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { REM } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useScrolledState from '../../hooks/useScrolledState';\nimport useAsyncRendering from '../right/hooks/useAsyncRendering';\nimport { useStickerPickerObservers } from './hooks/useStickerPickerObservers';\n\nimport StickerSetCover from '../middle/composer/StickerSetCover';\nimport Button from '../ui/Button';\nimport Loading from '../ui/Loading';\nimport StickerButton from './StickerButton';\nimport StickerSet from './StickerSet';\n\nimport pickerStyles from '../middle/composer/StickerPicker.module.scss';\nimport styles from './CustomEmojiPicker.module.scss';\n\ntype OwnProps = {\n  chatId?: string;\n  className?: string;\n  pickerListClassName?: string;\n  isHidden?: boolean;\n  loadAndPlay: boolean;\n  idPrefix?: string;\n  withDefaultTopicIcons?: boolean;\n  onCustomEmojiSelect: (sticker: ApiSticker) => void;\n  onReactionSelect?: (reaction: ApiReaction) => void;\n  selectedReactionIds?: string[];\n  isStatusPicker?: boolean;\n  isReactionPicker?: boolean;\n  isTranslucent?: boolean;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  customEmojisById?: Record<string, ApiSticker>;\n  recentCustomEmojiIds?: string[];\n  recentStatusEmojis?: ApiSticker[];\n  topReactions?: ApiReaction[];\n  recentReactions?: ApiReaction[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  availableReactions?: ApiAvailableReaction[];\n  addedCustomEmojiIds?: string[];\n  defaultTopicIconsId?: string;\n  defaultStatusIconsId?: string;\n  customEmojiFeaturedIds?: string[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst HEADER_BUTTON_WIDTH = 2.5 * REM; // px (including margin)\n\nconst DEFAULT_ID_PREFIX = 'custom-emoji-set';\nconst TOP_REACTIONS_COUNT = 16;\nconst RECENT_REACTIONS_COUNT = 32;\nconst FADED_BUTTON_SET_IDS = new Set([RECENT_SYMBOL_SET_ID, FAVORITE_SYMBOL_SET_ID, POPULAR_SYMBOL_SET_ID]);\nconst STICKER_SET_IDS_WITH_COVER = new Set([\n  RECENT_SYMBOL_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n  CHAT_STICKER_SET_ID,\n  PREMIUM_STICKER_SET_ID,\n]);\n\nconst CustomEmojiPicker: FC<OwnProps & StateProps> = ({\n  className,\n  pickerListClassName,\n  isHidden,\n  loadAndPlay,\n  addedCustomEmojiIds,\n  customEmojisById,\n  recentCustomEmojiIds,\n  selectedReactionIds,\n  recentStatusEmojis,\n  stickerSetsById,\n  topReactions,\n  recentReactions,\n  availableReactions,\n  idPrefix = DEFAULT_ID_PREFIX,\n  customEmojiFeaturedIds,\n  canAnimate,\n  isReactionPicker,\n  isStatusPicker,\n  isTranslucent,\n  isSavedMessages,\n  isCurrentUserPremium,\n  withDefaultTopicIcons,\n  defaultTopicIconsId,\n  defaultStatusIconsId,\n  onCustomEmojiSelect,\n  onReactionSelect,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n\n  const { isMobile } = useAppLayout();\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const recentCustomEmojis = useMemo(() => {\n    return isStatusPicker\n      ? recentStatusEmojis\n      : Object.values(pickTruthy(customEmojisById!, recentCustomEmojiIds!));\n  }, [customEmojisById, isStatusPicker, recentCustomEmojiIds, recentStatusEmojis]);\n\n  const prefix = `${idPrefix}-custom-emoji`;\n  const {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForShowingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  } = useStickerPickerObservers(containerRef, headerRef, prefix, isHidden);\n\n  const lang = useLang();\n\n  const areAddedLoaded = Boolean(addedCustomEmojiIds);\n\n  const allSets = useMemo(() => {\n    if (!addedCustomEmojiIds) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    const defaultSets: StickerSetOrReactionsSetOrRecent[] = [];\n\n    if (isReactionPicker) {\n      const topReactionsSlice = topReactions?.slice(0, TOP_REACTIONS_COUNT) || [];\n      if (topReactionsSlice?.length) {\n        defaultSets.push({\n          id: TOP_SYMBOL_SET_ID,\n          accessHash: '',\n          title: lang('Reactions'),\n          reactions: topReactionsSlice,\n          count: topReactionsSlice.length,\n          isEmoji: true,\n        });\n      }\n\n      const cleanRecentReactions = (recentReactions || [])\n        .filter((reaction) => !topReactionsSlice.some((topReaction) => isSameReaction(topReaction, reaction)))\n        .slice(0, RECENT_REACTIONS_COUNT);\n      const cleanAvailableReactions = (availableReactions || [])\n        .map(({ reaction }) => reaction)\n        .filter((reaction) => {\n          return !topReactionsSlice.some((topReaction) => isSameReaction(topReaction, reaction))\n            && !cleanRecentReactions.some((topReaction) => isSameReaction(topReaction, reaction));\n        });\n      if (cleanAvailableReactions?.length || cleanRecentReactions?.length) {\n        const isPopular = !cleanRecentReactions?.length;\n        const allRecentReactions = cleanRecentReactions.concat(cleanAvailableReactions);\n        defaultSets.push({\n          id: isPopular ? POPULAR_SYMBOL_SET_ID : RECENT_SYMBOL_SET_ID,\n          accessHash: '',\n          title: lang(isPopular ? 'PopularReactions' : 'RecentStickers'),\n          reactions: allRecentReactions,\n          count: allRecentReactions.length,\n          isEmoji: true,\n        });\n      }\n    } else if (isStatusPicker) {\n      const defaultStatusIconsPack = stickerSetsById[defaultStatusIconsId!];\n      if (defaultStatusIconsPack?.stickers?.length) {\n        const stickers = (defaultStatusIconsPack.stickers || []).concat(recentCustomEmojis || []);\n        defaultSets.push({\n          ...defaultStatusIconsPack,\n          stickers,\n          count: stickers.length,\n          id: RECENT_SYMBOL_SET_ID,\n          title: lang('RecentStickers'),\n        });\n      }\n    } else if (withDefaultTopicIcons) {\n      const defaultTopicIconsPack = stickerSetsById[defaultTopicIconsId!];\n      if (defaultTopicIconsPack.stickers?.length) {\n        defaultSets.push({\n          ...defaultTopicIconsPack,\n          id: RECENT_SYMBOL_SET_ID,\n          title: lang('RecentStickers'),\n        });\n      }\n    } else if (recentCustomEmojis?.length) {\n      defaultSets.push({\n        id: RECENT_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('RecentStickers'),\n        stickers: recentCustomEmojis,\n        count: recentCustomEmojis.length,\n        isEmoji: true,\n      });\n    }\n\n    const setIdsToDisplay = unique(addedCustomEmojiIds.concat(customEmojiFeaturedIds || []));\n\n    const setsToDisplay = Object.values(pickTruthy(stickerSetsById, setIdsToDisplay));\n\n    return [\n      ...defaultSets,\n      ...setsToDisplay,\n    ];\n  }, [\n    addedCustomEmojiIds, isReactionPicker, isStatusPicker, withDefaultTopicIcons, recentCustomEmojis,\n    customEmojiFeaturedIds, stickerSetsById, topReactions, availableReactions, lang, recentReactions,\n    defaultStatusIconsId, defaultTopicIconsId,\n  ]);\n\n  const noPopulatedSets = useMemo(() => (\n    areAddedLoaded\n    && allSets.filter((set) => set.stickers?.length).length === 0\n  ), [allSets, areAddedLoaded]);\n\n  const canRenderContent = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n  const shouldRenderContent = areAddedLoaded && canRenderContent && !noPopulatedSets;\n\n  useHorizontalScroll(headerRef, isMobile || !shouldRenderContent);\n\n  // Scroll container and header when active set changes\n  useEffect(() => {\n    if (!areAddedLoaded) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeSetIndex * HEADER_BUTTON_WIDTH - (header.offsetWidth / 2 - HEADER_BUTTON_WIDTH / 2);\n\n    animateHorizontalScroll(header, newLeft);\n  }, [areAddedLoaded, activeSetIndex]);\n\n  const handleEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n  });\n\n  const handleReactionSelect = useLastCallback((reaction: ApiReaction) => {\n    onReactionSelect?.(reaction);\n  });\n\n  function renderCover(stickerSet: StickerSetOrReactionsSetOrRecent, index: number) {\n    const firstSticker = stickerSet.stickers?.[0];\n    const buttonClassName = buildClassName(\n      pickerStyles.stickerCover,\n      index === activeSetIndex && styles.activated,\n    );\n\n    const withSharedCanvas = index < STICKER_PICKER_MAX_SHARED_COVERS;\n    const isHq = selectIsAlwaysHighPriorityEmoji(getGlobal(), stickerSet as ApiStickerSet);\n\n    if (stickerSet.id === TOP_SYMBOL_SET_ID) {\n      return undefined;\n    }\n\n    if (STICKER_SET_IDS_WITH_COVER.has(stickerSet.id) || stickerSet.hasThumbnail || !firstSticker) {\n      const isRecent = stickerSet.id === RECENT_SYMBOL_SET_ID || stickerSet.id === POPULAR_SYMBOL_SET_ID;\n      const isFaded = FADED_BUTTON_SET_IDS.has(stickerSet.id);\n      return (\n        <Button\n          key={stickerSet.id}\n          className={buttonClassName}\n          ariaLabel={stickerSet.title}\n          round\n          faded={isFaded}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => selectStickerSet(isRecent ? 0 : index)}\n        >\n          {isRecent ? (\n            <i className=\"icon icon-recent\" />\n          ) : (\n            <StickerSetCover\n              stickerSet={stickerSet as ApiStickerSet}\n              noPlay={!canAnimate || !loadAndPlay}\n              forcePlayback\n              observeIntersection={observeIntersectionForCovers}\n              sharedCanvasRef={withSharedCanvas ? (isHq ? sharedCanvasHqRef : sharedCanvasRef) : undefined}\n            />\n          )}\n        </Button>\n      );\n    }\n\n    return (\n      <StickerButton\n        key={stickerSet.id}\n        sticker={firstSticker}\n        size={STICKER_SIZE_PICKER_HEADER}\n        title={stickerSet.title}\n        className={buttonClassName}\n        noPlay={!canAnimate || !loadAndPlay}\n        observeIntersection={observeIntersectionForCovers}\n        noContextMenu\n        isCurrentUserPremium\n        sharedCanvasRef={withSharedCanvas ? (isHq ? sharedCanvasHqRef : sharedCanvasRef) : undefined}\n        withTranslucentThumb={isTranslucent}\n        onClick={selectStickerSet}\n        clickArg={index}\n        forcePlayback\n      />\n    );\n  }\n\n  const fullClassName = buildClassName('StickerPicker', styles.root, className);\n\n  if (!shouldRenderContent) {\n    return (\n      <div className={fullClassName}>\n        {noPopulatedSets ? (\n          <div className={pickerStyles.pickerDisabled}>{lang('NoStickers')}</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    pickerStyles.header,\n    'no-scrollbar',\n    !shouldHideTopBorder && pickerStyles.headerWithBorder,\n  );\n  const listClassName = buildClassName(\n    pickerStyles.main,\n    pickerStyles.main_customEmoji,\n    IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n    pickerListClassName,\n  );\n\n  return (\n    <div className={fullClassName}>\n      <div\n        ref={headerRef}\n        className={headerClassName}\n      >\n        <div className=\"shared-canvas-container\">\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          {allSets.map(renderCover)}\n        </div>\n      </div>\n      <div\n        ref={containerRef}\n        onScroll={handleContentScroll}\n        className={listClassName}\n      >\n        {allSets.map((stickerSet, i) => {\n          const shouldHideHeader = stickerSet.id === TOP_SYMBOL_SET_ID\n            || (stickerSet.id === RECENT_SYMBOL_SET_ID && (withDefaultTopicIcons || isStatusPicker));\n\n          return (\n            <StickerSet\n              key={stickerSet.id}\n              stickerSet={stickerSet}\n              loadAndPlay={Boolean(canAnimate && loadAndPlay)}\n              index={i}\n              idPrefix={prefix}\n              observeIntersection={observeIntersectionForSet}\n              observeIntersectionForPlayingItems={observeIntersectionForPlayingItems}\n              observeIntersectionForShowingItems={observeIntersectionForShowingItems}\n              isNearActive={activeSetIndex >= i - 1 && activeSetIndex <= i + 1}\n              isSavedMessages={isSavedMessages}\n              isStatusPicker={isStatusPicker}\n              isReactionPicker={isReactionPicker}\n              shouldHideHeader={shouldHideHeader}\n              withDefaultTopicIcon={withDefaultTopicIcons && stickerSet.id === RECENT_SYMBOL_SET_ID}\n              withDefaultStatusIcon={isStatusPicker && stickerSet.id === RECENT_SYMBOL_SET_ID}\n              isCurrentUserPremium={isCurrentUserPremium}\n              selectedReactionIds={selectedReactionIds}\n              availableReactions={availableReactions}\n              isTranslucent={isTranslucent}\n              onReactionSelect={handleReactionSelect}\n              onStickerSelect={handleEmojiSelect}\n              onContextMenuOpen={onContextMenuOpen}\n              onContextMenuClose={onContextMenuClose}\n              onContextMenuClick={onContextMenuClick}\n              forcePlayback\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isStatusPicker, isReactionPicker }): StateProps => {\n    const {\n      stickers: {\n        setsById: stickerSetsById,\n      },\n      customEmojis: {\n        byId: customEmojisById,\n        featuredIds: customEmojiFeaturedIds,\n        statusRecent: {\n          emojis: recentStatusEmojis,\n        },\n      },\n      recentCustomEmojis: recentCustomEmojiIds,\n      recentReactions,\n      topReactions,\n    } = global;\n\n    const isSavedMessages = Boolean(chatId && selectIsChatWithSelf(global, chatId));\n\n    return {\n      customEmojisById: !isStatusPicker ? customEmojisById : undefined,\n      recentCustomEmojiIds: !isStatusPicker ? recentCustomEmojiIds : undefined,\n      recentStatusEmojis: isStatusPicker ? recentStatusEmojis : undefined,\n      stickerSetsById,\n      addedCustomEmojiIds: global.customEmojis.added.setIds,\n      canAnimate: selectCanPlayAnimatedEmojis(global),\n      isSavedMessages,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      customEmojiFeaturedIds,\n      defaultTopicIconsId: global.defaultTopicIconsId,\n      defaultStatusIconsId: global.defaultStatusIconsId,\n      topReactions: isReactionPicker ? topReactions : undefined,\n      recentReactions: isReactionPicker ? recentReactions : undefined,\n      availableReactions: isReactionPicker ? global.availableReactions : undefined,\n    };\n  },\n)(CustomEmojiPicker));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Qzt_zq5gWHne6P2rw7Wj\",\"sets\":\"Ay41sqhq2QmXdgDHnt2E\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport Modal from '../ui/Modal';\nimport StickerSetCard from './StickerSetCard';\n\nimport styles from './CustomEmojiSetsModal.module.scss';\n\nexport type OwnProps = {\n  customEmojiSetIds?: string[];\n  onClose: () => void;\n};\n\ntype StateProps = {\n  customEmojiSets?: ApiStickerSet[];\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst CustomEmojiSetsModal: FC<OwnProps & StateProps> = ({\n  customEmojiSets,\n  canPlayAnimatedEmojis,\n  onClose,\n}) => {\n  const { openStickerSet } = getActions();\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const customEmojiModalRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({\n    rootRef: customEmojiModalRef, isDisabled: !customEmojiSets,\n  });\n\n  const prevCustomEmojiSets = usePrevious(customEmojiSets);\n  const renderingCustomEmojiSets = customEmojiSets || prevCustomEmojiSets;\n\n  const handleSetClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  }, [openStickerSet]);\n\n  return (\n    <Modal\n      isOpen={Boolean(customEmojiSets)}\n      className={styles.root}\n      onClose={onClose}\n      hasCloseButton\n      title={lang('lng_custom_emoji_used_sets')}\n    >\n      <div className={buildClassName(styles.sets, 'custom-scroll')} ref={customEmojiModalRef} teactFastList>\n        {renderingCustomEmojiSets?.map((customEmojiSet) => (\n          <StickerSetCard\n            key={customEmojiSet.id}\n            className={styles.setCard}\n            stickerSet={customEmojiSet}\n            onClick={handleSetClick}\n            observeIntersection={observeIntersectionForCovers}\n            noPlay={!canPlayAnimatedEmojis}\n          />\n        ))}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { customEmojiSetIds }): StateProps => {\n    const customEmojiSets = customEmojiSetIds?.map((id) => global.stickers.setsById[id]);\n\n    return {\n      customEmojiSets,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(CustomEmojiSetsModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { IAlbum } from '../../types';\n\nimport {\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectAllowedMessageActions,\n  selectBot,\n  selectChat,\n  selectCurrentMessageList,\n  selectUser,\n} from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  isSchedule: boolean;\n  message: ApiMessage;\n  album?: IAlbum;\n  onClose: NoneToVoidFunction;\n  onConfirm?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  canDeleteForAll?: boolean;\n  contactName?: string;\n  willDeleteForCurrentUserOnly?: boolean;\n  willDeleteForAll?: boolean;\n};\n\nconst DeleteMessageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  isSchedule,\n  message,\n  album,\n  canDeleteForAll,\n  contactName,\n  willDeleteForCurrentUserOnly,\n  willDeleteForAll,\n  onConfirm,\n  onClose,\n}) => {\n  const {\n    deleteMessages,\n    deleteScheduledMessages,\n  } = getActions();\n\n  const handleDeleteMessageForAll = useCallback(() => {\n    onConfirm?.();\n    const messageIds = album?.messages\n      ? album.messages.map(({ id }) => id)\n      : [message.id];\n    deleteMessages({ messageIds, shouldDeleteForAll: true });\n    onClose();\n  }, [onConfirm, album, message.id, deleteMessages, onClose]);\n\n  const handleDeleteMessageForSelf = useCallback(() => {\n    onConfirm?.();\n    const messageIds = album?.messages\n      ? album.messages.map(({ id }) => id)\n      : [message.id];\n    if (isSchedule) {\n      deleteScheduledMessages({ messageIds });\n    } else {\n      deleteMessages({\n        messageIds,\n        shouldDeleteForAll: false,\n      });\n    }\n    onClose();\n  }, [onConfirm, album, message.id, isSchedule, onClose, deleteScheduledMessages, deleteMessages]);\n\n  const lang = useLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={isOpen && !canDeleteForAll ? handleDeleteMessageForSelf : undefined}\n      className=\"delete\"\n      title={lang('DeleteSingleMessagesTitle')}\n    >\n      <p>{lang('AreYouSureDeleteSingleMessage')}</p>\n      {willDeleteForCurrentUserOnly && (\n        <p>{lang('lng_delete_for_me_chat_hint', 1, 'i')}</p>\n      )}\n      {willDeleteForAll && (\n        <p>{lang('lng_delete_for_everyone_hint', 1, 'i')}</p>\n      )}\n      <div className={canDeleteForAll ? 'dialog-buttons-column' : 'dialog-buttons'}>\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForAll}>\n            {contactName && renderText(lang('Conversation.DeleteMessagesFor', contactName))}\n            {!contactName && lang('Conversation.DeleteMessagesForEveryone')}\n          </Button>\n        )}\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForSelf}>\n          {lang(canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, isSchedule }): StateProps => {\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const { canDeleteForAll } = (threadId && selectAllowedMessageActions(global, message, threadId)) || {};\n    const chat = selectChat(global, message.chatId);\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n    const isChatWithBot = Boolean(selectBot(global, message.chatId));\n\n    const willDeleteForCurrentUserOnly = (chat && isChatBasicGroup(chat) && !canDeleteForAll) || isChatWithBot;\n    const willDeleteForAll = chat && isChatSuperGroup(chat);\n\n    return {\n      canDeleteForAll: !isSchedule && canDeleteForAll,\n      contactName,\n      willDeleteForCurrentUserOnly,\n      willDeleteForAll,\n    };\n  },\n)(DeleteMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { ApiVideo } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useBuffering from '../../hooks/useBuffering';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMenuPosition from '../../hooks/useMenuPosition';\n\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\n\nimport './GifButton.scss';\n\ntype OwnProps = {\n  gif: ApiVideo;\n  observeIntersection: ObserveFn;\n  isDisabled?: boolean;\n  className?: string;\n  onClick?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onUnsaveClick?: (gif: ApiVideo) => void;\n  isSavedMessages?: boolean;\n};\n\nconst GifButton: FC<OwnProps> = ({\n  gif,\n  isDisabled,\n  className,\n  observeIntersection,\n  onClick,\n  onUnsaveClick,\n  isSavedMessages,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const localMediaHash = `gif${gif.id}`;\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const loadAndPlay = isIntersecting && !isDisabled;\n  const previewBlobUrl = useMedia(`${localMediaHash}?size=m`, !loadAndPlay, ApiMediaFormat.BlobUrl);\n  const [withThumb] = useState(gif.thumbnail?.dataUri && !previewBlobUrl);\n  const thumbRef = useCanvasBlur(gif.thumbnail?.dataUri, !withThumb);\n  const videoData = useMedia(localMediaHash, !loadAndPlay, ApiMediaFormat.BlobUrl);\n  const shouldRenderVideo = Boolean(loadAndPlay && videoData);\n  const { isBuffered, bufferingHandlers } = useBuffering(true);\n  const shouldRenderSpinner = loadAndPlay && !isBuffered;\n  const isVideoReady = loadAndPlay && isBuffered;\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.gif-context-menu .bubble'));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n  );\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen || !onClick) return;\n    onClick({\n      ...gif,\n      blobUrl: videoData,\n    });\n  });\n\n  const handleUnsaveClick = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n    onUnsaveClick!(gif);\n  });\n\n  const handleContextDelete = useLastCallback(() => {\n    onUnsaveClick?.(gif);\n  });\n\n  const handleSendQuiet = useLastCallback(() => {\n    onClick!({\n      ...gif,\n      blobUrl: videoData,\n    }, true);\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    onClick!({\n      ...gif,\n      blobUrl: videoData,\n    }, undefined, true);\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  useEffect(() => {\n    if (isDisabled) handleContextMenuClose();\n  }, [handleContextMenuClose, isDisabled]);\n\n  const fullClassName = buildClassName(\n    'GifButton',\n    gif.width && gif.height && gif.width < gif.height ? 'vertical' : 'horizontal',\n    onClick && 'interactive',\n    localMediaHash,\n    className,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {!IS_TOUCH_ENV && onUnsaveClick && (\n        <Button\n          className=\"gif-unsave-button\"\n          color=\"dark\"\n          pill\n          noFastClick\n          onClick={handleUnsaveClick}\n        >\n          <i className=\"icon icon-close gif-unsave-button-icon\" />\n        </Button>\n      )}\n      {withThumb && (\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n          // We need to always render to avoid blur re-calculation\n          style={isVideoReady ? 'display: none;' : undefined}\n        />\n      )}\n      {previewBlobUrl && !isVideoReady && (\n        <img\n          src={previewBlobUrl}\n          alt=\"\"\n          className=\"preview\"\n          draggable={false}\n        />\n      )}\n      {shouldRenderVideo && (\n        <OptimizedVideo\n          canPlay\n          src={videoData}\n          autoPlay\n          loop\n          muted\n          disablePictureInPicture\n          playsInline\n          preload=\"none\"\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...bufferingHandlers}\n        />\n      )}\n      {shouldRenderSpinner && (\n        <Spinner color={previewBlobUrl || withThumb ? 'white' : 'black'} />\n      )}\n      {onClick && contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className=\"gif-context-menu\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {!isSavedMessages && <MenuItem onClick={handleSendQuiet} icon=\"mute\">{lang('SendWithoutSound')}</MenuItem>}\n          <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n            {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n          </MenuItem>\n          {onUnsaveClick && (\n            <MenuItem destructive icon=\"delete\" onClick={handleContextDelete}>{lang('Delete')}</MenuItem>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(GifButton);\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"u8GGVdXgbKUMvoqqs0VJ\",\"header\":\"sPTmRsKHnc3FL9AubUaY\",\"description\":\"YqnFSIc98kYMRge1RrlJ\",\"sortableContainer\":\"pWxbEJm12NZb25lGmdwA\",\"item\":\"AWgYeVXfLin4VAmQzhKQ\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiUsername } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport { isBetween } from '../../util/math';\n\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport Draggable from '../ui/Draggable';\nimport ListItem from '../ui/ListItem';\n\nimport styles from './ManageUsernames.module.scss';\n\ntype SortState = {\n  orderedUsernames?: string[];\n  dragOrderUsernames?: string[];\n  draggedIndex?: number;\n};\n\ntype OwnProps = {\n  chatId?: string;\n  usernames: ApiUsername[];\n  onEditUsername: (username: string) => void;\n};\n\nconst USERNAME_HEIGHT_PX = 60;\n\nconst ManageUsernames: FC<OwnProps> = ({\n  chatId,\n  usernames,\n  onEditUsername,\n}) => {\n  const {\n    showNotification,\n    toggleUsername,\n    toggleChatUsername,\n    sortUsernames,\n    sortChatUsernames,\n  } = getActions();\n  const lang = useLang();\n  const [usernameForConfirm, setUsernameForConfirm] = useState<ApiUsername | undefined>();\n\n  const usernameList = useMemo(() => usernames.map(({ username }) => username), [usernames]);\n  const prevUsernameList = usePrevious(usernameList);\n\n  const [state, setState] = useState<SortState>({\n    orderedUsernames: usernameList,\n    dragOrderUsernames: usernameList,\n    draggedIndex: undefined,\n  });\n\n  // Sync folders state after changing folders in other clients\n  useEffect(() => {\n    if (prevUsernameList !== usernameList) {\n      setState({\n        orderedUsernames: usernameList,\n        dragOrderUsernames: usernameList,\n        draggedIndex: undefined,\n      });\n    }\n  }, [prevUsernameList, usernameList]);\n\n  const handleCopyUsername = useCallback((value: string) => {\n    copyTextToClipboard(`@${value}`);\n    showNotification({\n      message: lang('UsernameCopied'),\n    });\n  }, [lang, showNotification]);\n\n  const handleUsernameClick = useCallback((data: ApiUsername) => {\n    if (data.isEditable) {\n      onEditUsername(data.username);\n    } else {\n      setUsernameForConfirm(data);\n    }\n  }, [onEditUsername]);\n\n  const closeConfirmUsernameDialog = useCallback(() => {\n    setUsernameForConfirm(undefined);\n  }, []);\n\n  const handleUsernameToggle = useCallback(() => {\n    if (!usernameForConfirm) {\n      return;\n    }\n\n    if (chatId) {\n      toggleChatUsername({\n        chatId,\n        username: usernameForConfirm.username,\n        isActive: !usernameForConfirm.isActive,\n      });\n    } else {\n      toggleUsername({\n        username: usernameForConfirm.username,\n        isActive: !usernameForConfirm.isActive,\n      });\n    }\n    closeConfirmUsernameDialog();\n  }, [chatId, closeConfirmUsernameDialog, toggleChatUsername, toggleUsername, usernameForConfirm]);\n\n  const handleDrag = useCallback((translation: { x: number; y: number }, id: string | number) => {\n    const delta = Math.round(translation.y / USERNAME_HEIGHT_PX);\n    const index = state.orderedUsernames?.indexOf(id as string) || 0;\n    const dragOrderUsernames = state.orderedUsernames?.filter((username) => username !== id);\n\n    if (!dragOrderUsernames || !isBetween(index + delta, 0, usernameList.length)) {\n      return;\n    }\n\n    dragOrderUsernames.splice(index + delta, 0, id as string);\n    setState((current) => ({\n      ...current,\n      draggedIndex: index,\n      dragOrderUsernames,\n    }));\n  }, [state.orderedUsernames, usernameList.length]);\n\n  const handleDragEnd = useCallback(() => {\n    setState((current) => {\n      if (chatId) {\n        sortChatUsernames({\n          chatId,\n          usernames: current.dragOrderUsernames!,\n        });\n      } else {\n        sortUsernames({ usernames: current.dragOrderUsernames! });\n      }\n\n      return {\n        ...current,\n        orderedUsernames: current.dragOrderUsernames,\n        draggedIndex: undefined,\n      };\n    });\n  }, [chatId, sortChatUsernames, sortUsernames]);\n\n  return (\n    <>\n      <div className={styles.container}>\n        <h4 className={styles.header} dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_usernames_subtitle')}\n        </h4>\n        <div className={styles.sortableContainer} style={`height: ${(usernames.length) * USERNAME_HEIGHT_PX}px`}>\n          {usernames.map((usernameData, i) => {\n            const isDragged = state.draggedIndex === i;\n            const draggedTop = (state.orderedUsernames?.indexOf(usernameData.username) ?? 0) * USERNAME_HEIGHT_PX;\n            const top = (state.dragOrderUsernames?.indexOf(usernameData.username) ?? 0) * USERNAME_HEIGHT_PX;\n            const subtitle = usernameData.isEditable\n              ? 'lng_usernames_edit'\n              : (usernameData.isActive ? 'lng_usernames_active' : 'lng_usernames_non_active');\n\n            return (\n              <Draggable\n                key={usernameData.username}\n                id={usernameData.username}\n                onDrag={handleDrag}\n                onDragEnd={handleDragEnd}\n                style={`top: ${isDragged ? draggedTop : top}px;`}\n                knobStyle={`${lang.isRtl ? 'left' : 'right'}: 3rem;`}\n                isDisabled={!usernameData.isActive}\n              >\n                <ListItem\n                  key={usernameData.username}\n                  className={buildClassName('drag-item mb-2 no-icon', styles.item)}\n                  narrow\n                  secondaryIcon=\"more\"\n                  icon={usernameData.isActive ? 'link' : 'link-broken'}\n                  multiline\n                  contextActions={[\n                    {\n                      handler: () => {\n                        handleCopyUsername(usernameData.username);\n                      },\n                      title: lang('Copy'),\n                      icon: 'copy',\n                    },\n                  ]}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => {\n                    handleUsernameClick(usernameData);\n                  }}\n                >\n                  <span className=\"title\">@{usernameData.username}</span>\n                  <span className=\"subtitle\">{lang(subtitle)}</span>\n                </ListItem>\n              </Draggable>\n            );\n          })}\n        </div>\n        <p className={styles.description} dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_usernames_description')}\n        </p>\n      </div>\n      <ConfirmDialog\n        isOpen={Boolean(usernameForConfirm)}\n        onClose={closeConfirmUsernameDialog}\n        title={lang(usernameForConfirm?.isActive ? 'Username.DeactivateAlertTitle' : 'Username.ActivateAlertTitle')}\n        text={lang(usernameForConfirm?.isActive ? 'Username.DeactivateAlertText' : 'Username.ActivateAlertText')}\n        confirmLabel={lang(usernameForConfirm?.isActive\n          ? 'Username.DeactivateAlertHide'\n          : 'Username.ActivateAlertShow')}\n        confirmHandler={handleUsernameToggle}\n        confirmIsDestructive={!usernameForConfirm?.isActive}\n      />\n    </>\n  );\n};\n\nexport default memo(ManageUsernames);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport { STICKER_SIZE_AUTH, STICKER_SIZE_AUTH_MOBILE, STICKER_SIZE_TWO_FA } from '../../config';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport useTimeout from '../../hooks/useTimeout';\n\nimport AnimatedSticker from './AnimatedSticker';\n\nimport './PasswordMonkey.scss';\n\ntype OwnProps = {\n  isPasswordVisible: boolean;\n  isBig?: boolean;\n};\n\nconst PEEK_MONKEY_SHOW_DELAY = 2000;\nconst SEGMENT_COVER_EYES: [number, number] = [0, 50];\nconst SEGMENT_UNCOVER_EYE: [number, number] = [0, 20];\nconst SEGMENT_COVER_EYE: [number, number] = [20, 0];\n\nconst PasswordMonkey: FC<OwnProps> = ({ isPasswordVisible, isBig }) => {\n  const [isFirstMonkeyLoaded, markFirstMonkeyLoaded] = useFlag(false);\n  const [isPeekShown, markPeekShown] = useFlag(false);\n  const { isMobile } = useAppLayout();\n\n  const stikerSize = isMobile ? STICKER_SIZE_AUTH_MOBILE : STICKER_SIZE_AUTH;\n\n  useTimeout(markPeekShown, PEEK_MONKEY_SHOW_DELAY);\n  const handleFirstMonkeyLoad = useCallback(markFirstMonkeyLoaded, [markFirstMonkeyLoaded]);\n\n  return (\n    <div id=\"monkey\" className={isBig ? 'big' : ''}>\n      {!isFirstMonkeyLoaded && (\n        <div className=\"monkey-preview\" />\n      )}\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'hidden' : 'shown'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyClose}\n        playSegment={SEGMENT_COVER_EYES}\n        noLoop\n        onLoad={handleFirstMonkeyLoad}\n      />\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'shown' : 'hidden'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyPeek}\n        playSegment={isPasswordVisible ? SEGMENT_UNCOVER_EYE : SEGMENT_COVER_EYE}\n        noLoop\n      />\n    </div>\n  );\n};\n\nexport default memo(PasswordMonkey);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport {\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport { selectChat, selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  messageId: number;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isPrivateChat: boolean;\n  isChatWithSelf: boolean;\n  isGroup: boolean;\n  isSuperGroup: boolean;\n  canPinForAll: boolean;\n  contactName?: string;\n};\n\nconst PinMessageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  messageId,\n  isChannel,\n  isGroup,\n  isSuperGroup,\n  canPinForAll,\n  contactName,\n  onClose,\n}) => {\n  const { pinMessage } = getActions();\n\n  const handlePinMessageForAll = useCallback(() => {\n    pinMessage({\n      messageId, isUnpin: false,\n    });\n    onClose();\n  }, [pinMessage, messageId, onClose]);\n\n  const handlePinMessage = useCallback(() => {\n    pinMessage({\n      messageId, isUnpin: false, isOneSide: true, isSilent: true,\n    });\n    onClose();\n  }, [messageId, onClose, pinMessage]);\n\n  const lang = useLang();\n\n  function renderMessage() {\n    if (isChannel) {\n      return lang('PinMessageAlertChannel');\n    }\n\n    if (isGroup || isSuperGroup) {\n      return lang('PinMessageAlert');\n    }\n\n    return lang('PinMessageAlertChat');\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"pin\"\n      title={lang('PinMessageAlertTitle')}\n    >\n      <p>{renderMessage()}</p>\n      <div className=\"dialog-buttons-column\">\n        <Button className=\"confirm-dialog-button\" isText onClick={handlePinMessage}>\n          {lang('DialogPin')}\n        </Button>\n        {canPinForAll && (\n          <Button className=\"confirm-dialog-button\" isText onClick={handlePinMessageForAll}>\n            {contactName\n              ? renderText(lang('Conversation.PinMessagesFor', contactName))\n              : lang('Conversation.PinMessageAlert.PinAndNotifyMembers')}\n          </Button>\n        )}\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const isPrivateChat = isUserId(chatId);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat) && isChatChannel(chat);\n    const isGroup = Boolean(chat) && isChatBasicGroup(chat);\n    const isSuperGroup = Boolean(chat) && isChatSuperGroup(chat);\n    const canPinForAll = (isPrivateChat && !isChatWithSelf) || isSuperGroup || isGroup;\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isChannel,\n      isGroup,\n      isSuperGroup,\n      canPinForAll,\n      contactName,\n    };\n  },\n)(PinMessageModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"xW0m4eR0ukCfRp6WS_Qd\",\"selected\":\"XTCJlnWtVba28wuDmeBN\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { EMOJI_SIZE_PICKER } from '../../config';\nimport { getDocumentMediaHash, isSameReaction } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useCoordsInSharedCanvas from '../../hooks/useCoordsInSharedCanvas';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\nimport CustomEmoji from './CustomEmoji';\n\nimport styles from './ReactionEmoji.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  isSelected?: boolean;\n  loadAndPlay?: boolean;\n  observeIntersection?: ObserveFn;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef?: React.RefObject<HTMLCanvasElement>;\n  forcePlayback?: boolean;\n  onClick: (reaction: ApiReaction) => void;\n};\n\nconst ReactionEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  isSelected,\n  loadAndPlay,\n  observeIntersection,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  forcePlayback,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isCustom = 'documentId' in reaction;\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const thumbDataUri = availableReaction?.staticIcon?.thumbnail?.dataUri;\n  const animationId = availableReaction?.selectAnimation?.id;\n  const coords = useCoordsInSharedCanvas(ref, sharedCanvasRef);\n  const mediaData = useMedia(\n    availableReaction?.selectAnimation ? getDocumentMediaHash(availableReaction.selectAnimation) : undefined,\n    !animationId,\n  );\n  const handleClick = useLastCallback(() => {\n    onClick(reaction);\n  });\n\n  const transitionClassNames = useMediaTransition(mediaData);\n  const fullClassName = buildClassName(\n    styles.root,\n    isSelected && styles.selected,\n    !isCustom && 'sticker-reaction',\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      onClick={handleClick}\n      title={availableReaction?.title}\n      data-sticker-id={isCustom ? reaction.documentId : undefined}\n    >\n      {isCustom ? (\n        <CustomEmoji\n          ref={ref}\n          documentId={reaction.documentId}\n          size={EMOJI_SIZE_PICKER}\n          noPlay={!loadAndPlay}\n          observeIntersectionForPlaying={observeIntersection}\n          sharedCanvasRef={sharedCanvasRef}\n          sharedCanvasHqRef={sharedCanvasHqRef}\n          withTranslucentThumb\n          forceAlways={forcePlayback}\n        />\n      ) : (\n        <AnimatedIconWithPreview\n          tgsUrl={mediaData}\n          thumbDataUri={thumbDataUri}\n          play={loadAndPlay}\n          noLoop={false}\n          size={EMOJI_SIZE_PICKER}\n          isLowPriority\n          className={transitionClassNames}\n          sharedCanvas={sharedCanvasRef!.current || undefined}\n          sharedCanvasCoords={coords}\n          forceAlways={forcePlayback}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionEmoji);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getGlobal, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiChatType } from '../../api/types';\nimport type { ThreadId } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { API_CHAT_TYPES } from '../../config';\nimport {\n  filterChatsByName,\n  filterUsersByName,\n  getCanPostInChat,\n  isDeletedUser,\n} from '../../global/helpers';\nimport { filterChatIdsByType } from '../../global/selectors';\nimport { unique } from '../../util/iteratees';\nimport sortChatIds from './helpers/sortChatIds';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useLang from '../../hooks/useLang';\n\nimport ChatOrUserPicker from './ChatOrUserPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  searchPlaceholder: string;\n  className?: string;\n  filter?: ApiChatType[];\n  loadMore?: NoneToVoidFunction;\n  onSelectRecipient: (peerId: string, threadId?: ThreadId) => void;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  chatsById: Record<string, ApiChat>;\n  activeListIds?: string[];\n  archivedListIds?: string[];\n  pinnedIds?: string[];\n  contactIds?: string[];\n};\n\nconst RecipientPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  chatsById,\n  activeListIds,\n  archivedListIds,\n  pinnedIds,\n  contactIds,\n  filter = API_CHAT_TYPES,\n  className,\n  searchPlaceholder,\n  loadMore,\n  onSelectRecipient,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const lang = useLang();\n  const [search, setSearch] = useState('');\n  const ids = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    let priorityIds = pinnedIds || [];\n    if (currentUserId) {\n      priorityIds = unique([currentUserId, ...priorityIds]);\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const global = getGlobal();\n    const usersById = global.users.byId;\n\n    const chatIds = [\n      ...(activeListIds || []),\n      ...((search && archivedListIds) || []),\n    ].filter((id) => {\n      const chat = chatsById[id];\n      const user = usersById[id];\n      if (user && isDeletedUser(user)) return false;\n\n      return chat && getCanPostInChat(chat, MAIN_THREAD_ID);\n    });\n\n    const sorted = sortChatIds(unique([\n      ...filterChatsByName(lang, chatIds, chatsById, search, currentUserId),\n      ...(contactIds && filter.includes('users') ? filterUsersByName(contactIds, usersById, search) : []),\n    ]), undefined, priorityIds);\n\n    return filterChatIdsByType(global, sorted, filter);\n  }, [pinnedIds, currentUserId, activeListIds, search, archivedListIds, lang, chatsById, contactIds, filter, isOpen]);\n\n  const renderingIds = useCurrentOrPrev(ids, true)!;\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      className={className}\n      chatOrUserIds={renderingIds}\n      chatsById={chatsById}\n      searchPlaceholder={searchPlaceholder}\n      search={search}\n      onSearchChange={setSearch}\n      loadMore={loadMore}\n      onSelectChatOrUser={onSelectRecipient}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      chats: {\n        byId: chatsById,\n        listIds,\n        orderedPinnedIds,\n      },\n      currentUserId,\n    } = global;\n\n    return {\n      chatsById,\n      activeListIds: listIds.active,\n      archivedListIds: listIds.archived,\n      pinnedIds: orderedPinnedIds.active,\n      contactIds: global.contactList?.userIds,\n      currentUserId,\n    };\n  },\n)(RecipientPicker));\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"phK_DdEImRiGA8z2FwyB\"};","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectChatMessage, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dateFormat';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport PrivateChatInfo from './PrivateChatInfo';\n\nimport styles from './SeenByModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\nexport type StateProps = {\n  seenByDates?: Record<string, number>;\n};\n\nconst CLOSE_ANIMATION_DURATION = 100;\n\nfunction SeenByModal({\n  isOpen,\n  seenByDates,\n}: OwnProps & StateProps) {\n  const {\n    openChat,\n    closeSeenByModal,\n  } = getActions();\n\n  const lang = useLang();\n\n  const renderingSeenByDates = useCurrentOrPrev(seenByDates, true);\n  const memberIds = useMemo(() => {\n    if (!renderingSeenByDates) {\n      return undefined;\n    }\n\n    const result = Object.keys(renderingSeenByDates);\n    result.sort((leftId, rightId) => renderingSeenByDates[rightId] - renderingSeenByDates[leftId]);\n\n    return result;\n  }, [renderingSeenByDates]);\n\n  const handleClick = useLastCallback((userId: string) => {\n    closeSeenByModal();\n\n    setTimeout(() => {\n      openChat({ id: userId });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleCloseSeenByModal = useLastCallback(() => {\n    closeSeenByModal();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={closeSeenByModal}\n      className={buildClassName(styles.modal, 'narrow')}\n      title={`Seen by ${memberIds?.length} users`}\n    >\n      <div dir={lang.isRtl ? 'rtl' : undefined}>\n        {memberIds && memberIds.map((userId) => (\n          <ListItem\n            key={userId}\n            className=\"chat-item-clickable scroll-item small-icon\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleClick(userId)}\n          >\n            <PrivateChatInfo\n              userId={userId}\n              noStatusOrTyping\n              status={formatDateAtTime(lang, renderingSeenByDates![userId] * 1000)}\n              statusIcon=\"message-read\"\n            />\n          </ListItem>\n        ))}\n      </div>\n      <div className=\"dialog-buttons mt-2\">\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={handleCloseSeenByModal}\n        >\n          {lang('Close')}\n        </Button>\n      </div>\n    </Modal>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).seenByModal || {};\n    if (!chatId || !messageId) {\n      return {};\n    }\n\n    return {\n      seenByDates: selectChatMessage(global, chatId, messageId)?.seenByDates,\n    };\n  },\n)(SeenByModal));\n","import type { MouseEvent as ReactMouseEvent, ReactNode } from 'react';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiBotInlineMediaResult, ApiSticker } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTimeOffset } from '../../util/serverTime';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useDynamicColorListener from '../../hooks/stickers/useDynamicColorListener';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMenuPosition from '../../hooks/useMenuPosition';\n\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport StickerView from './StickerView';\n\nimport './StickerButton.scss';\n\ntype OwnProps<T> = {\n  sticker: ApiSticker;\n  size: number;\n  noPlay?: boolean;\n  title?: string;\n  className?: string;\n  noContextMenu?: boolean;\n  isSavedMessages?: boolean;\n  isStatusPicker?: boolean;\n  canViewSet?: boolean;\n  isSelected?: boolean;\n  isCurrentUserPremium?: boolean;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n  withTranslucentThumb?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection: ObserveFn;\n  observeIntersectionForShowing?: ObserveFn;\n  noShowPremium?: boolean;\n  onClick?: (arg: OwnProps<T>['clickArg'], isSilent?: boolean, shouldSchedule?: boolean) => void;\n  clickArg: T;\n  onFaveClick?: (sticker: ApiSticker) => void;\n  onUnfaveClick?: (sticker: ApiSticker) => void;\n  onRemoveRecentClick?: (sticker: ApiSticker) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\nconst contentForStatusMenuContext = [\n  { title: 'SetTimeoutFor.Hours', value: 1, arg: 3600 },\n  { title: 'SetTimeoutFor.Hours', value: 2, arg: 7200 },\n  { title: 'SetTimeoutFor.Hours', value: 8, arg: 28800 },\n  { title: 'SetTimeoutFor.Days', value: 1, arg: 86400 },\n  { title: 'SetTimeoutFor.Days', value: 2, arg: 172800 },\n];\n\nconst StickerButton = <T extends number | ApiSticker | ApiBotInlineMediaResult | undefined = undefined>({\n  sticker,\n  size,\n  noPlay,\n  title,\n  className,\n  noContextMenu,\n  isSavedMessages,\n  isStatusPicker,\n  canViewSet,\n  observeIntersection,\n  observeIntersectionForShowing,\n  isSelected,\n  isCurrentUserPremium,\n  noShowPremium,\n  sharedCanvasRef,\n  withTranslucentThumb,\n  forcePlayback,\n  onClick,\n  clickArg,\n  onFaveClick,\n  onUnfaveClick,\n  onRemoveRecentClick,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n}: OwnProps<T>) => {\n  const { openStickerSet, openPremiumModal, setEmojiStatus } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n  const hasCustomColor = sticker.shouldUseTextColor;\n  const customColor = useDynamicColorListener(ref, !hasCustomColor);\n\n  const {\n    id, isCustomEmoji, hasEffect: isPremium, stickerSetInfo,\n  } = sticker;\n  const isLocked = !isCurrentUserPremium && isPremium;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const shouldLoad = isIntersecting;\n  const shouldPlay = isIntersecting && !noPlay;\n\n  const isIntesectingForShowing = useIsIntersecting(ref, observeIntersectionForShowing);\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const shouldRenderContextMenu = Boolean(!noContextMenu && contextMenuPosition);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => {\n    return isStatusPicker ? menuRef.current : ref.current!.querySelector('.sticker-context-menu .bubble');\n  });\n\n  const getLayout = () => ({ withPortal: isStatusPicker, shouldAvoidNegativePosition: true });\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onContextMenuOpen?.();\n    } else {\n      onContextMenuClose?.();\n    }\n  }, [isContextMenuOpen, onContextMenuClose, onContextMenuOpen]);\n\n  useEffect(() => {\n    if (!isIntersecting) handleContextMenuClose();\n  }, [handleContextMenuClose, isIntersecting]);\n\n  const handleClick = () => {\n    if (isContextMenuOpen) return;\n    if (isLocked) {\n      openPremiumModal({ initialSection: 'premium_stickers' });\n      return;\n    }\n    onClick?.(clickArg);\n  };\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handleRemoveClick = useLastCallback((e: ReactMouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n    e.preventDefault();\n\n    onRemoveRecentClick!(sticker);\n  });\n\n  const handleContextRemoveRecent = useLastCallback(() => {\n    onRemoveRecentClick!(sticker);\n  });\n\n  const handleContextUnfave = useLastCallback(() => {\n    onUnfaveClick!(sticker);\n  });\n\n  const handleContextFave = useLastCallback(() => {\n    onFaveClick!(sticker);\n  });\n\n  const handleSendQuiet = useLastCallback(() => {\n    onClick?.(clickArg, true);\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    onClick?.(clickArg, undefined, true);\n  });\n\n  const handleOpenSet = useLastCallback(() => {\n    openStickerSet({ stickerSetInfo });\n  });\n\n  const handleEmojiStatusExpiresClick = useLastCallback((e: React.SyntheticEvent, duration = 0) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    handleContextMenuClose();\n    onContextMenuClick?.();\n    setEmojiStatus({\n      emojiStatus: sticker,\n      expires: Date.now() / 1000 + duration + getServerTimeOffset(),\n    });\n  });\n\n  const shouldShowCloseButton = !IS_TOUCH_ENV && onRemoveRecentClick;\n\n  const fullClassName = buildClassName(\n    'StickerButton',\n    onClick && 'interactive',\n    isSelected && 'selected',\n    isCustomEmoji && 'custom-emoji',\n    className,\n  );\n\n  const contextMenuItems = useMemo(() => {\n    if (!shouldRenderContextMenu || noContextMenu || (isCustomEmoji && !isStatusPicker)) return [];\n\n    const items: ReactNode[] = [];\n\n    if (isCustomEmoji) {\n      contentForStatusMenuContext.forEach((item) => {\n        items.push(\n          <MenuItem onClick={handleEmojiStatusExpiresClick} clickArg={item.arg}>\n            {lang(item.title, item.value, 'i')}\n          </MenuItem>,\n        );\n      });\n\n      return items;\n    }\n\n    if (onUnfaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextUnfave}>\n          {lang('Stickers.RemoveFromFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (onFaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextFave}>\n          {lang('Stickers.AddToFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (!isLocked && onClick) {\n      if (!isSavedMessages) {\n        items.push(<MenuItem onClick={handleSendQuiet} icon=\"muted\">{lang('SendWithoutSound')}</MenuItem>);\n      }\n      items.push(\n        <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n          {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n        </MenuItem>,\n      );\n    }\n\n    if (canViewSet) {\n      items.push(\n        <MenuItem onClick={handleOpenSet} icon=\"stickers\">\n          {lang('ViewPackPreview')}\n        </MenuItem>,\n      );\n    }\n    if (onRemoveRecentClick) {\n      items.push(\n        <MenuItem icon=\"delete\" onClick={handleContextRemoveRecent}>\n          {lang('DeleteFromRecent')}\n        </MenuItem>,\n      );\n    }\n    return items;\n  }, [\n    shouldRenderContextMenu, noContextMenu, isCustomEmoji, isStatusPicker, onUnfaveClick, onFaveClick, isLocked,\n    onClick, canViewSet, onRemoveRecentClick, handleEmojiStatusExpiresClick, lang, handleContextUnfave,\n    handleContextFave, isSavedMessages, handleSendScheduled, handleSendQuiet, handleOpenSet, handleContextRemoveRecent,\n  ]);\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      title={title || (sticker?.emoji)}\n      data-sticker-id={id}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {isIntesectingForShowing && (\n        <StickerView\n          containerRef={ref}\n          sticker={sticker}\n          isSmall\n          size={size}\n          shouldLoop\n          shouldPreloadPreview\n          noLoad={!shouldLoad}\n          noPlay={!shouldPlay}\n          withSharedAnimation\n          sharedCanvasRef={sharedCanvasRef}\n          withTranslucentThumb={withTranslucentThumb}\n          customColor={customColor}\n          forceAlways={forcePlayback}\n        />\n      )}\n      {!noShowPremium && isLocked && (\n        <div\n          className=\"sticker-locked\"\n        >\n          <i className=\"icon icon-lock-badge\" />\n        </div>\n      )}\n      {!noShowPremium && isPremium && !isLocked && (\n        <div className=\"sticker-premium\">\n          <i className=\"icon icon-premium\" />\n        </div>\n      )}\n      {shouldShowCloseButton && (\n        <Button\n          className=\"sticker-remove-button\"\n          color=\"dark\"\n          round\n          noFastClick\n          onClick={handleRemoveClick}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n      )}\n      {Boolean(contextMenuItems.length) && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className=\"sticker-context-menu\"\n          autoClose\n          withPortal={isStatusPicker}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {contextMenuItems}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerButton);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiAvailableReaction, ApiReaction, ApiSticker } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { StickerSetOrReactionsSetOrRecent } from '../../types';\n\nimport {\n  DEFAULT_STATUS_ICON_ID,\n  DEFAULT_TOPIC_ICON_STICKER_ID,\n  EMOJI_SIZE_PICKER,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  STICKER_SIZE_PICKER,\n} from '../../config';\nimport { getReactionUniqueKey } from '../../global/helpers';\nimport { selectIsAlwaysHighPriorityEmoji, selectIsSetPremium } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useResizeObserver from '../../hooks/useResizeObserver';\nimport useWindowSize from '../../hooks/window/useWindowSize';\n\nimport Button from '../ui/Button';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport ReactionEmoji from './ReactionEmoji';\nimport StickerButton from './StickerButton';\n\nimport grey from '../../assets/icons/forumTopic/grey.svg';\n\ntype OwnProps = {\n  stickerSet: StickerSetOrReactionsSetOrRecent;\n  loadAndPlay: boolean;\n  index: number;\n  idPrefix: string;\n  isNearActive: boolean;\n  favoriteStickers?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isStatusPicker?: boolean;\n  isReactionPicker?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldHideHeader?: boolean;\n  selectedReactionIds?: string[];\n  withDefaultTopicIcon?: boolean;\n  withDefaultStatusIcon?: boolean;\n  isTranslucent?: boolean;\n  noContextMenus?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection?: ObserveFn;\n  observeIntersectionForPlayingItems: ObserveFn;\n  observeIntersectionForShowingItems: ObserveFn;\n  availableReactions?: ApiAvailableReaction[];\n  onStickerSelect?: (sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onReactionSelect?: (reaction: ApiReaction) => void;\n  onStickerUnfave?: (sticker: ApiSticker) => void;\n  onStickerFave?: (sticker: ApiSticker) => void;\n  onStickerRemoveRecent?: (sticker: ApiSticker) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\nconst ITEMS_PER_ROW_FALLBACK = 8;\nconst ITEMS_MOBILE_PER_ROW_FALLBACK = 7;\nconst ITEMS_MINI_MOBILE_PER_ROW_FALLBACK = 6;\nconst MOBILE_WIDTH_THRESHOLD_PX = 440;\nconst MINI_MOBILE_WIDTH_THRESHOLD_PX = 362;\n\nconst StickerSet: FC<OwnProps> = ({\n  stickerSet,\n  loadAndPlay,\n  index,\n  idPrefix,\n  isNearActive,\n  favoriteStickers,\n  availableReactions,\n  isSavedMessages,\n  isStatusPicker,\n  isReactionPicker,\n  isCurrentUserPremium,\n  shouldHideHeader,\n  withDefaultTopicIcon,\n  selectedReactionIds,\n  withDefaultStatusIcon,\n  isTranslucent,\n  noContextMenus,\n  forcePlayback,\n  observeIntersection,\n  observeIntersectionForPlayingItems,\n  observeIntersectionForShowingItems,\n  onReactionSelect,\n  onStickerSelect,\n  onStickerUnfave,\n  onStickerFave,\n  onStickerRemoveRecent,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n}) => {\n  const {\n    clearRecentStickers,\n    clearRecentCustomEmoji,\n    clearRecentReactions,\n    openPremiumModal,\n    toggleStickerSet,\n    loadStickers,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useLang();\n  const { width: windowWidth } = useWindowSize();\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n  const { isMobile } = useAppLayout();\n\n  const [itemsPerRow, setItemsPerRow] = useState(getItemsPerRowFallback(windowWidth));\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection ?? observeIntersectionForShowingItems);\n  const transitionClassNames = useMediaTransition(isIntersecting);\n\n  // `isNearActive` is set in advance during animation, but it is not reliable for short sets\n  const shouldRender = isNearActive || isIntersecting;\n\n  const stickerMarginPx = isMobile ? 8 : 4;\n  const emojiMarginPx = isMobile ? 8 : 10;\n  const emojiVerticalMarginPx = isMobile ? 8 : 4;\n  const isRecent = stickerSet.id === RECENT_SYMBOL_SET_ID;\n  const isFavorite = stickerSet.id === FAVORITE_SYMBOL_SET_ID;\n  const isPopular = stickerSet.id === POPULAR_SYMBOL_SET_ID;\n  const isEmoji = stickerSet.isEmoji;\n  const isPremiumSet = !isRecent && selectIsSetPremium(stickerSet);\n\n  const handleClearRecent = useLastCallback(() => {\n    if (isReactionPicker) {\n      clearRecentReactions();\n    } else if (isEmoji) {\n      clearRecentCustomEmoji();\n    } else {\n      clearRecentStickers();\n    }\n    closeConfirmModal();\n  });\n\n  const handleAddClick = useLastCallback(() => {\n    if (isPremiumSet && !isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'animated_emoji',\n      });\n    } else {\n      toggleStickerSet({\n        stickerSetId: stickerSet.id,\n      });\n    }\n  });\n\n  const handleDefaultTopicIconClick = useLastCallback(() => {\n    onStickerSelect?.({\n      id: DEFAULT_TOPIC_ICON_STICKER_ID,\n      isLottie: false,\n      isVideo: false,\n      stickerSetInfo: {\n        shortName: 'dummy',\n      },\n    } satisfies ApiSticker);\n  });\n\n  const handleDefaultStatusIconClick = useLastCallback(() => {\n    onStickerSelect?.({\n      id: DEFAULT_STATUS_ICON_ID,\n      isLottie: false,\n      isVideo: false,\n      stickerSetInfo: {\n        shortName: 'dummy',\n      },\n    } satisfies ApiSticker);\n  });\n\n  const itemSize = isEmoji ? EMOJI_SIZE_PICKER : STICKER_SIZE_PICKER;\n  const margin = isEmoji ? emojiMarginPx : stickerMarginPx;\n  const verticalMargin = isEmoji ? emojiVerticalMarginPx : stickerMarginPx;\n\n  const calculateItemsPerRow = useLastCallback((width: number) => {\n    if (!width) {\n      return getItemsPerRowFallback(windowWidth);\n    }\n\n    return Math.floor((width + margin) / (itemSize + margin));\n  });\n\n  const handleResize = useLastCallback((entry: ResizeObserverEntry) => {\n    setItemsPerRow(calculateItemsPerRow(entry.contentRect.width));\n  });\n\n  useResizeObserver(ref, handleResize);\n\n  useEffect(() => {\n    if (!ref.current) return;\n    setItemsPerRow(calculateItemsPerRow(ref.current.clientWidth));\n  }, [calculateItemsPerRow]);\n\n  useEffect(() => {\n    if (shouldRender && !stickerSet.stickers?.length && !stickerSet.reactions?.length && stickerSet.accessHash) {\n      loadStickers({\n        stickerSetInfo: {\n          id: stickerSet.id,\n          accessHash: stickerSet.accessHash,\n        },\n      });\n    }\n  }, [shouldRender, loadStickers, stickerSet]);\n\n  const isLocked = !isSavedMessages && !isCurrentUserPremium && isPremiumSet;\n\n  const isInstalled = stickerSet.installedDate && !stickerSet.isArchived;\n  const canCut = !isInstalled && stickerSet.id !== RECENT_SYMBOL_SET_ID && stickerSet.id !== POPULAR_SYMBOL_SET_ID;\n  const [isCut, , expand] = useFlag(canCut);\n  const itemsBeforeCutout = itemsPerRow * 3 - 1;\n  const totalItemsCount = withDefaultTopicIcon ? stickerSet.count + 1 : stickerSet.count;\n\n  const itemHeight = itemSize + verticalMargin;\n  const heightWhenCut = Math.ceil(Math.min(itemsBeforeCutout, totalItemsCount) / itemsPerRow)\n    * itemHeight - verticalMargin;\n  const height = isCut ? heightWhenCut : Math.ceil(totalItemsCount / itemsPerRow) * itemHeight - verticalMargin;\n\n  const favoriteStickerIdsSet = useMemo(() => (\n    favoriteStickers ? new Set(favoriteStickers.map(({ id }) => id)) : undefined\n  ), [favoriteStickers]);\n  const withAddSetButton = !shouldHideHeader && !isRecent && isEmoji && !isPopular\n    && (!isInstalled || (!isCurrentUserPremium && !isSavedMessages));\n  const addSetButtonText = useMemo(() => {\n    if (isLocked) {\n      if (isInstalled) return lang('lng_emoji_premium_restore');\n      return lang('Unlock');\n    }\n\n    return lang('Add');\n  }, [isLocked, lang, isInstalled]);\n\n  return (\n    <div\n      ref={ref}\n      key={stickerSet.id}\n      id={`${idPrefix}-${index}`}\n      className={\n        buildClassName('symbol-set', isLocked && 'symbol-set-locked')\n      }\n    >\n      {!shouldHideHeader && (\n        <div className=\"symbol-set-header\">\n          <p className={buildClassName('symbol-set-name', withAddSetButton && 'symbol-set-name-external')}>\n            {isLocked && <i className=\"symbol-set-locked-icon icon icon-lock-badge\" />}\n            {stickerSet.title}\n            {withAddSetButton && Boolean(stickerSet.stickers) && (\n              <span className=\"symbol-set-amount\">\n                {lang(isEmoji ? 'EmojiCount' : 'Stickers', stickerSet.stickers.length, 'i')}\n              </span>\n            )}\n          </p>\n          {isRecent && (\n            <i className=\"symbol-set-remove icon icon-close\" onClick={openConfirmModal} />\n          )}\n          {withAddSetButton && (\n            <Button\n              className=\"symbol-set-add-button\"\n              withPremiumGradient={isPremiumSet && !isCurrentUserPremium}\n              onClick={handleAddClick}\n              pill\n              size=\"tiny\"\n              fluid\n            >\n              {addSetButtonText}\n            </Button>\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName('symbol-set-container shared-canvas-container', transitionClassNames)}\n        style={`height: ${height}px;`}\n      >\n        <canvas\n          ref={sharedCanvasRef}\n          className=\"shared-canvas\"\n          style={canCut ? `height: ${heightWhenCut}px;` : undefined}\n        />\n        {(isRecent || isFavorite || canCut) && <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />}\n        {withDefaultTopicIcon && (\n          <Button\n            className=\"StickerButton custom-emoji\"\n            color=\"translucent\"\n            onClick={handleDefaultTopicIconClick}\n            key=\"default-topic-icon\"\n          >\n            <img src={grey} alt=\"Reset\" className=\"sticker-media\" draggable={false} />\n          </Button>\n        )}\n        {withDefaultStatusIcon && (\n          <Button\n            className=\"StickerButton custom-emoji status-default\"\n            color=\"translucent\"\n            onClick={handleDefaultStatusIconClick}\n            key=\"default-status-icon\"\n          >\n            <i className=\"icon icon-premium\" />\n          </Button>\n        )}\n        {shouldRender && stickerSet.reactions?.map((reaction) => {\n          const reactionId = getReactionUniqueKey(reaction);\n          const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n          return (\n            <ReactionEmoji\n              key={`${stickerSet.id}_${reactionId}`}\n              reaction={reaction}\n              isSelected={isSelected}\n              loadAndPlay={loadAndPlay}\n              availableReactions={availableReactions}\n              observeIntersection={observeIntersectionForPlayingItems}\n              onClick={onReactionSelect!}\n              sharedCanvasRef={sharedCanvasRef}\n              sharedCanvasHqRef={sharedCanvasHqRef}\n              forcePlayback={forcePlayback}\n            />\n          );\n        })}\n        {shouldRender && stickerSet.stickers?.slice(0, isCut ? itemsBeforeCutout : stickerSet.stickers.length)\n          .map((sticker, i) => {\n            const isHqEmoji = (isRecent || isFavorite)\n              && selectIsAlwaysHighPriorityEmoji(getGlobal(), sticker.stickerSetInfo);\n            const canvasRef = (canCut && i >= itemsBeforeCutout) || isHqEmoji\n              ? sharedCanvasHqRef\n              : sharedCanvasRef;\n            const reactionId = sticker.isCustomEmoji ? sticker.id : sticker.emoji;\n            const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n            return (\n              <StickerButton\n                key={sticker.id}\n                sticker={sticker}\n                size={itemSize}\n                observeIntersection={observeIntersectionForPlayingItems}\n                observeIntersectionForShowing={observeIntersectionForShowingItems}\n                noPlay={!loadAndPlay}\n                isSavedMessages={isSavedMessages}\n                isStatusPicker={isStatusPicker}\n                canViewSet\n                noContextMenu={noContextMenus}\n                isCurrentUserPremium={isCurrentUserPremium}\n                sharedCanvasRef={canvasRef}\n                withTranslucentThumb={isTranslucent}\n                onClick={onStickerSelect}\n                clickArg={sticker}\n                isSelected={isSelected}\n                onUnfaveClick={isFavorite && favoriteStickerIdsSet?.has(sticker.id) ? onStickerUnfave : undefined}\n                onFaveClick={!favoriteStickerIdsSet?.has(sticker.id) ? onStickerFave : undefined}\n                onRemoveRecentClick={isRecent ? onStickerRemoveRecent : undefined}\n                onContextMenuOpen={onContextMenuOpen}\n                onContextMenuClose={onContextMenuClose}\n                onContextMenuClick={onContextMenuClick}\n                forcePlayback={forcePlayback}\n              />\n            );\n          })}\n        {isCut && totalItemsCount > itemsBeforeCutout && (\n          <Button\n            className=\"StickerButton custom-emoji set-expand\"\n            round\n            color=\"translucent\"\n            onClick={expand}\n            key=\"more\"\n          >\n            +{totalItemsCount - itemsBeforeCutout}\n          </Button>\n        )}\n      </div>\n\n      {isRecent && (\n        <ConfirmDialog\n          text={lang(isReactionPicker ? 'ClearRecentReactionsAlertMessage' : 'ClearRecentStickersAlertMessage')}\n          isOpen={isConfirmModalOpen}\n          onClose={closeConfirmModal}\n          confirmHandler={handleClearRecent}\n          confirmIsDestructive\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerSet);\n\nfunction getItemsPerRowFallback(windowWidth: number): number {\n  return windowWidth > MOBILE_WIDTH_THRESHOLD_PX\n    ? ITEMS_PER_ROW_FALLBACK\n    : (windowWidth < MINI_MOBILE_WIDTH_THRESHOLD_PX\n      ? ITEMS_MINI_MOBILE_PER_ROW_FALLBACK\n      : ITEMS_MOBILE_PER_ROW_FALLBACK);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_GENERAL_SETTINGS } from '../../config';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\n\nimport StickerSetCover from '../middle/composer/StickerSetCover';\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport StickerButton from './StickerButton';\n\nimport './StickerSetCard.scss';\n\ntype OwnProps = {\n  stickerSet?: ApiStickerSet;\n  noPlay?: boolean;\n  className?: string;\n  observeIntersection: ObserveFn;\n  onClick: (value: ApiSticker) => void;\n};\n\nconst StickerSetCard: FC<OwnProps> = ({\n  stickerSet,\n  noPlay,\n  className,\n  observeIntersection,\n  onClick,\n}) => {\n  const lang = useLang();\n\n  const firstSticker = stickerSet?.stickers?.[0];\n\n  const handleCardClick = useCallback(() => {\n    if (firstSticker) onClick(firstSticker);\n  }, [firstSticker, onClick]);\n\n  if (!stickerSet || !stickerSet.stickers) {\n    return undefined;\n  }\n\n  function renderPreview() {\n    if (!stickerSet) return undefined;\n    if (stickerSet.hasThumbnail || !firstSticker) {\n      return (\n        <Button\n          ariaLabel={stickerSet.title}\n          color=\"translucent\"\n          isRtl={lang.isRtl}\n        >\n          <StickerSetCover\n            stickerSet={stickerSet}\n            size={STICKER_SIZE_GENERAL_SETTINGS}\n            noPlay={noPlay}\n            observeIntersection={observeIntersection}\n          />\n        </Button>\n      );\n    } else {\n      return (\n        <StickerButton\n          sticker={firstSticker}\n          size={STICKER_SIZE_GENERAL_SETTINGS}\n          title={stickerSet.title}\n          noPlay={noPlay}\n          observeIntersection={observeIntersection}\n          noContextMenu\n          isCurrentUserPremium\n          clickArg={undefined}\n        />\n      );\n    }\n  }\n\n  return (\n    <ListItem\n      narrow\n      className={buildClassName('StickerSetCard', className)}\n      inactive={!firstSticker}\n      onClick={handleCardClick}\n    >\n      {renderPreview()}\n      <div className=\"multiline-menu-item\">\n        <div className=\"title\">{stickerSet.title}</div>\n        <div className=\"subtitle\">{lang('StickerPack.StickerCount', stickerSet.count, 'i')}</div>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(StickerSetCard);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { MessageList } from '../../global/types';\n\nimport { EMOJI_SIZE_MODAL, STICKER_SIZE_MODAL, TME_LINK_PREFIX } from '../../config';\nimport { getAllowedAttachmentOptions, getCanPostInChat } from '../../global/helpers';\nimport {\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectShouldSchedule,\n  selectStickerSet,\n  selectThreadInfo,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\nimport useSchedule from '../../hooks/useSchedule';\nimport useScrolledState from '../../hooks/useScrolledState';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport Loading from '../ui/Loading';\nimport MenuItem from '../ui/MenuItem';\nimport Modal from '../ui/Modal';\nimport StickerButton from './StickerButton';\n\nimport './StickerSetModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  fromSticker?: ApiSticker;\n  stickerSetShortName?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  currentMessageList?: MessageList;\n  canSendStickers?: boolean;\n  stickerSet?: ApiStickerSet;\n  canScheduleUntilOnline?: boolean;\n  shouldSchedule?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldUpdateStickerSetOrder?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst StickerSetModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  fromSticker,\n  stickerSetShortName,\n  stickerSet,\n  canSendStickers,\n  canScheduleUntilOnline,\n  shouldSchedule,\n  isSavedMessages,\n  isCurrentUserPremium,\n  shouldUpdateStickerSetOrder,\n  currentMessageList,\n  onClose,\n}) => {\n  const {\n    loadStickers,\n    toggleStickerSet,\n    sendMessage,\n    showNotification,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n\n  const prevStickerSet = usePrevious(stickerSet);\n  const renderingStickerSet = stickerSet || prevStickerSet;\n\n  const isAdded = Boolean(!renderingStickerSet?.isArchived && renderingStickerSet?.installedDate);\n  const isEmoji = renderingStickerSet?.isEmoji;\n\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline);\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  useEffect(() => {\n    if (isOpen && !renderingStickerSet?.stickers) {\n      loadStickers({\n        stickerSetInfo: fromSticker ? fromSticker.stickerSetInfo : { shortName: stickerSetShortName! },\n      });\n    }\n  }, [isOpen, fromSticker, loadStickers, stickerSetShortName, renderingStickerSet]);\n\n  const handleSelect = useCallback((sticker: ApiSticker, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList) {\n      return;\n    }\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (shouldSchedule || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        sendMessage({\n          messageList: currentMessageList, sticker, isSilent, scheduledAt,\n        });\n        onClose();\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && isAdded,\n      });\n      onClose();\n    }\n  }, [currentMessageList, shouldSchedule, requestCalendar, onClose, shouldUpdateStickerSetOrder, isAdded]);\n\n  const handleButtonClick = useCallback(() => {\n    if (renderingStickerSet) {\n      toggleStickerSet({ stickerSetId: renderingStickerSet.id });\n      onClose();\n    }\n  }, [onClose, renderingStickerSet, toggleStickerSet]);\n\n  const handleCopyLink = useCallback(() => {\n    if (!renderingStickerSet) return;\n    const { shortName } = renderingStickerSet;\n    const suffix = isEmoji ? 'addemoji' : 'addstickers';\n    const url = `${TME_LINK_PREFIX}${suffix}/${shortName}`;\n    copyTextToClipboard(url);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [isEmoji, lang, renderingStickerSet, showNotification]);\n\n  const renderButtonText = () => {\n    if (!renderingStickerSet) return lang('Loading');\n\n    const suffix = isEmoji ? 'Emoji' : 'Sticker';\n\n    return lang(\n      isAdded ? `StickerPack.Remove${suffix}Count` : `StickerPack.Add${suffix}Count`,\n      renderingStickerSet.count,\n      'i',\n    );\n  };\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isMenuOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  function renderHeader() {\n    const fullClassName = buildClassName('modal-header', !shouldHideTopBorder && 'with-top-border');\n\n    return (\n      <div className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">\n          {renderingStickerSet ? renderText(renderingStickerSet.title, ['emoji', 'links']) : lang('AccDescrStickerSet')}\n        </div>\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"copy\" onClick={handleCopyLink}>{lang('StickersCopy')}</MenuItem>\n        </DropdownMenu>\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className={buildClassName('StickerSetModal', isEmoji && 'custom-emoji')}\n      isOpen={isOpen}\n      onClose={onClose}\n      header={renderHeader()}\n    >\n      {renderingStickerSet?.stickers ? (\n        <>\n          <div ref={containerRef} className=\"stickers custom-scroll\" onScroll={handleContentScroll}>\n            <div className=\"shared-canvas-container stickers-grid\">\n              <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n              {renderingStickerSet.stickers.map((sticker) => (\n                <StickerButton\n                  sticker={sticker}\n                  size={isEmoji ? EMOJI_SIZE_MODAL : STICKER_SIZE_MODAL}\n                  observeIntersection={observeIntersection}\n                  onClick={canSendStickers && !isEmoji ? handleSelect : undefined}\n                  clickArg={sticker}\n                  isSavedMessages={isSavedMessages}\n                  isCurrentUserPremium={isCurrentUserPremium}\n                  sharedCanvasRef={sharedCanvasRef}\n                />\n              ))}\n            </div>\n          </div>\n          <div className=\"button-wrapper\">\n            <Button\n              size=\"smaller\"\n              fluid\n              color={isAdded ? 'danger' : 'primary'}\n              onClick={handleButtonClick}\n            >\n              {renderButtonText()}\n            </Button>\n          </div>\n        </>\n      ) : (\n        <Loading />\n      )}\n      {calendar}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { fromSticker, stickerSetShortName }): StateProps => {\n    const currentMessageList = selectCurrentMessageList(global);\n    const { chatId, threadId } = currentMessageList || {};\n    const chat = chatId && selectChat(global, chatId);\n    const sendOptions = chat ? getAllowedAttachmentOptions(chat) : undefined;\n    const threadInfo = chatId && threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const isMessageThread = Boolean(!threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n    const canSendStickers = Boolean(\n      chat && threadId && getCanPostInChat(chat, threadId, isMessageThread) && sendOptions?.canSendStickers,\n    );\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n\n    const stickerSetInfo = fromSticker ? fromSticker.stickerSetInfo\n      : stickerSetShortName ? { shortName: stickerSetShortName } : undefined;\n\n    const stickerSet = stickerSetInfo ? selectStickerSet(global, stickerSetInfo) : undefined;\n\n    return {\n      canScheduleUntilOnline: Boolean(chatId) && selectCanScheduleUntilOnline(global, chatId),\n      canSendStickers,\n      isSavedMessages,\n      shouldSchedule: selectShouldSchedule(global),\n      stickerSet,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      shouldUpdateStickerSetOrder: global.settings.byKey.shouldUpdateStickerSetOrder,\n      currentMessageList,\n    };\n  },\n)(StickerSetModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId?: string;\n  pinnedMessagesCount?: number;\n  onClose: () => void;\n  onUnpin: () => void;\n};\n\nconst UnpinAllMessagesModal: FC<OwnProps> = ({\n  isOpen,\n  pinnedMessagesCount = 0,\n  onClose,\n  onUnpin,\n}) => {\n  const lang = useLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"unpin-all\"\n      title={lang('Chat.PanelUnpinAllMessages')}\n    >\n      <p>{lang('Chat.UnpinAllMessagesConfirmation', pinnedMessagesCount, 'i')}</p>\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" isText onClick={onUnpin}>\n          {lang('DialogUnpin')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(UnpinAllMessagesModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { TME_LINK_PREFIX } from '../../config';\nimport { debounce } from '../../util/schedulers';\nimport {\n  isUsernameValid, MAX_USERNAME_LENGTH, MIN_USERNAME_LENGTH, USERNAME_REGEX,\n} from '../../util/username';\n\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport InputText from '../ui/InputText';\n\ntype OwnProps = {\n  currentUsername?: string;\n  asLink?: boolean;\n  isLoading?: boolean;\n  isUsernameAvailable?: boolean;\n  checkedUsername?: string;\n  onChange: (value: string) => void;\n};\n\nconst LINK_PREFIX_REGEX = /https:\\/\\/t\\.me\\/?/i;\n\nconst runDebouncedForCheckUsername = debounce((cb) => cb(), 250, false);\n\nconst UsernameInput: FC<OwnProps> = ({\n  currentUsername,\n  asLink,\n  isLoading,\n  isUsernameAvailable,\n  checkedUsername,\n  onChange,\n}) => {\n  const { checkUsername, checkPublicLink } = getActions();\n  const [username, setUsername] = useState(currentUsername || '');\n\n  const lang = useLang();\n  const langPrefix = asLink ? 'SetUrl' : 'Username';\n  const label = asLink ? lang('SetUrlPlaceholder') : lang('Username');\n\n  const previousIsUsernameAvailable = usePrevious(isUsernameAvailable);\n  const renderingIsUsernameAvailable = currentUsername !== username\n    ? (isUsernameAvailable ?? previousIsUsernameAvailable) : undefined;\n  const isChecking = username && currentUsername !== username && checkedUsername !== username;\n\n  const [usernameSuccess, usernameError] = useMemo(() => {\n    if (!username.length) {\n      return [];\n    }\n\n    if (username.length < MIN_USERNAME_LENGTH) {\n      return [undefined, lang(`${langPrefix}InvalidShort`)];\n    }\n    if (username.length > MAX_USERNAME_LENGTH) {\n      return [undefined, lang(`${langPrefix}InvalidLong`)];\n    }\n    if (!USERNAME_REGEX.test(username)) {\n      return [undefined, lang(`${langPrefix}Invalid`)];\n    }\n\n    if (renderingIsUsernameAvailable === undefined || isChecking) {\n      return [];\n    }\n\n    // Variable `isUsernameAvailable` is initialized with `undefined`, so a strict false check is required\n    return [\n      renderingIsUsernameAvailable ? lang(`${langPrefix}Available`, label) : undefined,\n      renderingIsUsernameAvailable === false ? lang(`${langPrefix}InUse`) : undefined,\n    ];\n  }, [username, renderingIsUsernameAvailable, isChecking, lang, langPrefix, label]);\n\n  useEffect(() => {\n    setUsername(currentUsername || '');\n  }, [asLink, currentUsername]);\n\n  const handleUsernameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.trim();\n    // Prevent prefix editing\n    if (asLink && !value.match(LINK_PREFIX_REGEX)) {\n      if (!value.length) {\n        setUsername('');\n        onChange?.('');\n      }\n      return;\n    }\n    const newUsername = value.replace(LINK_PREFIX_REGEX, '');\n\n    setUsername(newUsername);\n\n    const isValid = isUsernameValid(newUsername);\n    if (!isValid) return;\n\n    onChange?.(newUsername);\n\n    runDebouncedForCheckUsername(() => {\n      if (newUsername !== currentUsername) {\n        const check = asLink ? checkPublicLink : checkUsername;\n        check({ username: newUsername });\n      }\n    });\n  }, [asLink, checkPublicLink, checkUsername, currentUsername, onChange]);\n\n  return (\n    <InputText\n      value={`${asLink ? TME_LINK_PREFIX : ''}${username}`}\n      onChange={handleUsernameChange}\n      label={isChecking ? lang('Checking') : label}\n      error={usernameError}\n      success={usernameSuccess}\n      readOnly={isLoading}\n      teactExperimentControlled\n    />\n  );\n};\n\nexport default memo(UsernameInput);\n","import type { RefObject } from 'react';\nimport { useRef, useState } from '../../../lib/teact/teact';\n\nimport { ANIMATION_END_DELAY } from '../../../config';\nimport animateScroll from '../../../util/animateScroll';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nconst STICKER_INTERSECTION_THROTTLE = 200;\nconst STICKER_INTERSECTION_MARGIN = 100;\nconst SLIDE_TRANSITION_DURATION = 350 + ANIMATION_END_DELAY;\nconst SCROLL_MAX_DISTANCE_WHEN_CLOSE = 200;\nconst SCROLL_MAX_DISTANCE_WHEN_FAR = 80;\nconst FOCUS_MARGIN = 0.5 * REM;\n\nexport function useStickerPickerObservers(\n  containerRef: RefObject<HTMLDivElement>,\n  headerRef: RefObject<HTMLDivElement>,\n  idPrefix: string,\n  isHidden?: boolean,\n) {\n  const stickerSetIntersectionsRef = useRef<boolean[]>([]);\n\n  const [activeSetIndex, setActiveSetIndex] = useState<number>(0);\n\n  const {\n    observe: observeIntersectionForSet,\n    freeze: freezeForSet,\n    unfreeze: unfreezeForSet,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n  }, (entries) => {\n    const stickerSetIntersections = stickerSetIntersectionsRef.current;\n\n    entries.forEach((entry) => {\n      const index = Number(entry.target.id.replace(`${idPrefix}-`, ''));\n      stickerSetIntersections[index] = entry.isIntersecting;\n    });\n\n    const minIntersectingIndex = stickerSetIntersections.reduce((lowestIndex, isIntersecting, index) => {\n      return isIntersecting && index < lowestIndex ? index : lowestIndex;\n    }, Infinity);\n\n    if (minIntersectingIndex === Infinity) {\n      return;\n    }\n\n    setActiveSetIndex(minIntersectingIndex);\n  });\n\n  const {\n    observe: observeIntersectionForShowingItems,\n    freeze: freezeForShowingItems,\n    unfreeze: unfreezeForShowingItems,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: STICKER_INTERSECTION_THROTTLE,\n    margin: STICKER_INTERSECTION_MARGIN,\n  });\n\n  const {\n    observe: observeIntersectionForPlayingItems,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: STICKER_INTERSECTION_THROTTLE,\n    margin: STICKER_INTERSECTION_MARGIN,\n  });\n\n  const {\n    observe: observeIntersectionForCovers,\n  } = useIntersectionObserver({\n    rootRef: headerRef,\n  });\n\n  useSyncEffect(() => {\n    if (isHidden) {\n      freezeForSet();\n      freezeForShowingItems();\n    } else {\n      setTimeout(() => {\n        unfreezeForShowingItems();\n        unfreezeForSet();\n      }, SLIDE_TRANSITION_DURATION);\n    }\n  }, [freezeForSet, freezeForShowingItems, isHidden, unfreezeForSet, unfreezeForShowingItems]);\n\n  const selectStickerSet = useLastCallback((index: number) => {\n    setActiveSetIndex((currentIndex) => {\n      const stickerSetEl = document.getElementById(`${idPrefix}-${index}`)!;\n      const isClose = Math.abs(currentIndex - index) === 1;\n\n      animateScroll(\n        containerRef.current!,\n        stickerSetEl,\n        'start',\n        FOCUS_MARGIN,\n        isClose ? SCROLL_MAX_DISTANCE_WHEN_CLOSE : SCROLL_MAX_DISTANCE_WHEN_FAR,\n      );\n\n      return index;\n    });\n  });\n\n  return {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForShowingItems,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { GlobalState } from '../../global/types';\nimport type { FolderEditDispatch } from '../../hooks/reducers/useFoldersReducer';\nimport type { LeftColumnContent, SettingsScreens } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { ANIMATION_DURATION } from '../story/helpers/ribbonAnimation';\n\nimport useForumPanelRender from '../../hooks/useForumPanelRender';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useLeftHeaderButtonRtlForumTransition from './main/hooks/useLeftHeaderButtonRtlForumTransition';\n\nimport StoryRibbon from '../story/StoryRibbon';\nimport StoryToggler from '../story/StoryToggler';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport ChatList from './main/ChatList';\nimport ForumPanel from './main/ForumPanel';\n\nimport './ArchivedChats.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n  isForumPanelOpen?: boolean;\n  archiveSettings: GlobalState['archiveSettings'];\n  isStoryRibbonShown?: boolean;\n  onReset: () => void;\n  onTopicSearch: NoneToVoidFunction;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n  foldersDispatch: FolderEditDispatch;\n  onLeftColumnContentChange: (content: LeftColumnContent) => void;\n};\n\nconst ArchivedChats: FC<OwnProps> = ({\n  isActive,\n  isForumPanelOpen,\n  archiveSettings,\n  isStoryRibbonShown,\n  onReset,\n  onTopicSearch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n  foldersDispatch,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleDisplayArchiveInChats = useLastCallback(() => {\n    updateArchiveSettings({ isHidden: false });\n  });\n\n  const {\n    shouldDisableDropdownMenuTransitionRef,\n    handleDropdownMenuTransitionEnd,\n  } = useLeftHeaderButtonRtlForumTransition(isForumPanelOpen);\n\n  const {\n    shouldRender: shouldRenderTitle,\n    transitionClassNames: titleClassNames,\n  } = useShowTransition(!isForumPanelOpen);\n\n  const {\n    shouldRenderForumPanel, handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart, isAnimationStarted,\n  } = useForumPanelRender(isForumPanelOpen);\n  const isForumPanelVisible = isForumPanelOpen && isAnimationStarted;\n\n  const {\n    shouldRender: shouldRenderStoryRibbon,\n    transitionClassNames: storyRibbonClassNames,\n    isClosing: isStoryRibbonClosing,\n  } = useShowTransition(isStoryRibbonShown, undefined, undefined, '', false, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n  return (\n    <div className=\"ArchivedChats\">\n      <div className={buildClassName('left-header', !shouldRenderStoryRibbon && 'left-header-shadow')}>\n        {lang.isRtl && <div className=\"DropdownMenuFiller\" />}\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={onReset}\n          ariaLabel=\"Return to chat list\"\n          className={buildClassName(\n            lang.isRtl && 'rtl',\n            isForumPanelVisible && lang.isRtl && 'right-aligned',\n            shouldDisableDropdownMenuTransitionRef.current && lang.isRtl && 'disable-transition',\n          )}\n          onTransitionEnd={handleDropdownMenuTransitionEnd}\n        >\n          <i className=\"icon icon-arrow-left\" />\n        </Button>\n        {shouldRenderTitle && <h3 className={titleClassNames}>{lang('ArchivedChats')}</h3>}\n        <div className=\"story-toggler-wrapper\">\n          <StoryToggler canShow isArchived />\n        </div>\n        {archiveSettings.isHidden && (\n          <DropdownMenu\n            className=\"archived-chats-more-menu\"\n            positionX=\"right\"\n            onTransitionEnd={lang.isRtl ? handleDropdownMenuTransitionEnd : undefined}\n          >\n            <MenuItem icon=\"archive-from-main\" onClick={handleDisplayArchiveInChats}>\n              {lang('lng_context_archive_to_list')}\n            </MenuItem>\n          </DropdownMenu>\n        )}\n      </div>\n      <div\n        className={buildClassName(\n          'chat-list-wrapper',\n          shouldRenderStoryRibbon && 'with-story-ribbon',\n          storyRibbonClassNames,\n        )}\n      >\n        {shouldRenderStoryRibbon && (\n          <StoryRibbon isArchived className=\"left-header-shadow\" isClosing={isStoryRibbonClosing} />\n        )}\n        <ChatList\n          folderType=\"archived\"\n          isActive={isActive}\n          isForumPanelOpen={isForumPanelVisible}\n          onSettingsScreenSelect={onSettingsScreenSelect}\n          onLeftColumnContentChange={onLeftColumnContentChange}\n          foldersDispatch={foldersDispatch}\n          archiveSettings={archiveSettings}\n        />\n      </div>\n      {shouldRenderForumPanel && (\n        <ForumPanel\n          isOpen={isForumPanelOpen}\n          onTopicSearch={onTopicSearch}\n          onOpenAnimationStart={handleForumPanelAnimationStart}\n          onCloseAnimationEnd={handleForumPanelAnimationEnd}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ArchivedChats);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\n\nimport { ALL_FOLDER_ID } from '../../config';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport CheckboxGroup from '../ui/CheckboxGroup';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  foldersById?: Record<number, ApiChatFolder>;\n  folderOrderedIds?: number[];\n};\n\nconst ChatFolderModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chatId,\n  foldersById,\n  folderOrderedIds,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { editChatFolders } = getActions();\n\n  const lang = useLang();\n\n  const initialSelectedFolderIds = useMemo(() => {\n    if (!foldersById) {\n      return [];\n    }\n\n    return Object.keys(foldersById).reduce((result, folderId) => {\n      const { includedChatIds, pinnedChatIds } = foldersById[Number(folderId)];\n      if (includedChatIds.includes(chatId) || pinnedChatIds?.includes(chatId)) {\n        result.push(folderId);\n      }\n\n      return result;\n    }, [] as string[]);\n  }, [chatId, foldersById]);\n\n  const [selectedFolderIds, setSelectedFolderIds] = useState<string[]>(initialSelectedFolderIds);\n\n  const folders = useMemo(() => {\n    return folderOrderedIds?.filter((folderId) => folderId !== ALL_FOLDER_ID).map((folderId) => ({\n      label: foldersById ? foldersById[folderId].title : '',\n      value: String(folderId),\n    })) || [];\n  }, [folderOrderedIds, foldersById]);\n\n  const handleSubmit = useCallback(() => {\n    const idsToRemove = initialSelectedFolderIds.filter((id) => !selectedFolderIds.includes(id)).map(Number);\n    const idsToAdd = selectedFolderIds.filter((id) => !initialSelectedFolderIds.includes(id)).map(Number);\n\n    editChatFolders({ chatId, idsToRemove, idsToAdd });\n    onClose();\n  }, [chatId, editChatFolders, initialSelectedFolderIds, onClose, selectedFolderIds]);\n\n  if (!foldersById || !folderOrderedIds) {\n    return undefined;\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onEnter={handleSubmit}\n      className=\"delete\"\n      title={lang('FilterAddTo')}\n    >\n      <CheckboxGroup\n        options={folders}\n        selected={selectedFolderIds}\n        onChange={setSelectedFolderIds}\n        round\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"primary\" className=\"confirm-dialog-button\" isText onClick={handleSubmit}>\n          {lang('FilterAddTo')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byId: foldersById, orderedIds: folderOrderedIds } = global.chatFolders;\n\n    return {\n      foldersById,\n      folderOrderedIds,\n    };\n  },\n)(ChatFolderModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { MAX_INT_32 } from '../../config';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport RadioGroup from '../ui/RadioGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  topicId?: number;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nenum MuteDuration {\n  OneHour = '3600',\n  FourHours = '14400',\n  EightHours = '28800',\n  OneDay = '86400',\n  ThreeDays = '259200',\n  Forever = '-1',\n}\n\nconst MuteChatModal: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  topicId,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const [muteUntilOption, setMuteUntilOption] = useState(MuteDuration.Forever);\n  const { updateChatMutedState, updateTopicMutedState } = getActions();\n\n  const lang = useLang();\n\n  const muteForOptions = useMemo(() => [\n    { label: lang('MuteFor.Hours', 1), value: MuteDuration.OneHour },\n    { label: lang('MuteFor.Hours', 4), value: MuteDuration.FourHours },\n    { label: lang('MuteFor.Hours', 8), value: MuteDuration.EightHours },\n    { label: lang('MuteFor.Days', 1), value: MuteDuration.OneDay },\n    { label: lang('MuteFor.Days', 3), value: MuteDuration.ThreeDays },\n    { label: lang('MuteFor.Forever'), value: MuteDuration.Forever },\n  ], [lang]);\n\n  const handleSubmit = useCallback(() => {\n    let muteUntil: number;\n    if (muteUntilOption === MuteDuration.Forever) {\n      muteUntil = MAX_INT_32;\n    } else {\n      muteUntil = Math.floor(Date.now() / 1000) + Number(muteUntilOption);\n    }\n    if (topicId) {\n      updateTopicMutedState({ chatId, topicId, muteUntil });\n    } else {\n      updateChatMutedState({ chatId, muteUntil });\n    }\n    onClose();\n  }, [chatId, muteUntilOption, onClose, topicId]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onEnter={handleSubmit}\n      className=\"delete\"\n      title={lang('Notifications')}\n    >\n      <RadioGroup\n        name=\"muteFor\"\n        options={muteForOptions}\n        selected={muteUntilOption}\n        onChange={setMuteUntilOption as any}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"primary\" className=\"confirm-dialog-button\" isText onClick={handleSubmit}>\n          {lang('Common.Done')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(MuteChatModal);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser, ApiUserStatus } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { filterUsersByName, sortUserIds } from '../../../global/helpers';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useLang from '../../../hooks/useLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  filter: string;\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  userStatusesById: Record<string, ApiUserStatus>;\n  contactIds?: string[];\n};\n\nconst ContactList: FC<OwnProps & StateProps> = ({\n  isActive,\n  filter,\n  usersById,\n  userStatusesById,\n  contactIds,\n  onReset,\n}) => {\n  const {\n    openChat,\n    openNewContactDialog,\n  } = getActions();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleClick = useCallback((id: string) => {\n    openChat({ id, shouldReplaceHistory: true });\n  }, [openChat]);\n\n  const listIds = useMemo(() => {\n    if (!contactIds) {\n      return undefined;\n    }\n\n    const filteredIds = filterUsersByName(contactIds, usersById, filter);\n\n    return sortUserIds(filteredIds, usersById, userStatusesById);\n  }, [contactIds, filter, usersById, userStatusesById]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, listIds, Boolean(filter));\n\n  return (\n    <InfiniteScroll items={viewportIds} onLoadMore={getMore} className=\"chat-list custom-scroll\">\n      {viewportIds?.length ? (\n        viewportIds.map((id) => (\n          <ListItem\n            key={id}\n            className=\"chat-item-clickable contact-list-item\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleClick(id)}\n          >\n            <PrivateChatInfo\n              userId={id}\n              forceShowSelf\n              avatarSize=\"large\"\n              withStory\n              storyViewerOrigin={StoryViewerOrigin.ChatList}\n              ripple={!isMobile}\n            />\n          </ListItem>\n        ))\n      ) : viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\" key=\"no-results\" dir=\"auto\">\n          {filter.length ? 'No contacts matched your search.' : 'Contact list is empty.'}\n        </p>\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n      <FloatingActionButton\n        key=\"create-new-contact\"\n        isShown\n        onClick={openNewContactDialog}\n        ariaLabel={lang('CreateNewContact')}\n      >\n        <i className=\"icon icon-add-user-filled\" />\n      </FloatingActionButton>\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: contactIds } = global.contactList || {};\n    const { byId: usersById, statusesById: userStatusesById } = global.users;\n\n    return {\n      usersById,\n      userStatusesById,\n      contactIds,\n    };\n  },\n)(ContactList));\n","// extracted by mini-css-extract-plugin\nexport default {\"menuContent\":\"XWSv0Pf1SKleWNyX04yO\"};","import type { RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { selectIsContextMenuTranslucent } from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\n\nimport CustomEmojiPicker from '../../common/CustomEmojiPicker';\nimport Menu from '../../ui/Menu';\nimport Portal from '../../ui/Portal';\n\nimport styles from './StatusPickerMenu.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  statusButtonRef: RefObject<HTMLButtonElement>;\n  onEmojiStatusSelect: (emojiStatus: ApiSticker) => void;\n  onClose: () => void;\n};\n\ninterface StateProps {\n  areFeaturedStickersLoaded?: boolean;\n  isTranslucent?: boolean;\n}\n\nconst StatusPickerMenu: FC<OwnProps & StateProps> = ({\n  isOpen,\n  statusButtonRef,\n  areFeaturedStickersLoaded,\n  isTranslucent,\n  onEmojiStatusSelect,\n  onClose,\n}) => {\n  const { loadFeaturedEmojiStickers } = getActions();\n\n  const transformOriginX = useRef<number>();\n  const [isContextMenuShown, markContextMenuShown, unmarkContextMenuShown] = useFlag();\n  useEffect(() => {\n    transformOriginX.current = statusButtonRef.current!.getBoundingClientRect().right;\n  }, [isOpen, statusButtonRef]);\n\n  useEffect(() => {\n    if (isOpen && !areFeaturedStickersLoaded) {\n      loadFeaturedEmojiStickers();\n    }\n  }, [areFeaturedStickersLoaded, isOpen, loadFeaturedEmojiStickers]);\n\n  const handleEmojiSelect = useCallback((sticker: ApiSticker) => {\n    onEmojiStatusSelect(sticker);\n    onClose();\n  }, [onClose, onEmojiStatusSelect]);\n\n  return (\n    <Portal>\n      <Menu\n        isOpen={isOpen}\n        noCompact\n        positionX=\"right\"\n        bubbleClassName={styles.menuContent}\n        onClose={onClose}\n        transformOriginX={transformOriginX.current}\n        noCloseOnBackdrop={isContextMenuShown}\n      >\n        <CustomEmojiPicker\n          idPrefix=\"status-emoji-set-\"\n          loadAndPlay={isOpen}\n          isHidden={!isOpen}\n          isStatusPicker\n          isTranslucent={isTranslucent}\n          onContextMenuOpen={markContextMenuShown}\n          onContextMenuClose={unmarkContextMenuShown}\n          onCustomEmojiSelect={handleEmojiSelect}\n          onContextMenuClick={onClose}\n        />\n      </Menu>\n    </Portal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    areFeaturedStickersLoaded: Boolean(global.customEmojis.featuredIds?.length),\n    isTranslucent: selectIsContextMenuTranslucent(global),\n  };\n})(StatusPickerMenu));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\n\nimport { LeftColumnContent } from '../../../types';\n\nimport { LAYERS_ANIMATION_NAME } from '../../../util/windowEnvironment';\n\nimport Transition from '../../ui/Transition';\nimport NewChatStep1 from './NewChatStep1';\nimport NewChatStep2 from './NewChatStep2';\n\nimport './NewChat.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n  isChannel?: boolean;\n  content: LeftColumnContent;\n  onContentChange: (content: LeftColumnContent) => void;\n  onReset: () => void;\n};\n\nconst RENDER_COUNT = Object.keys(LeftColumnContent).length / 2;\n\nconst NewChat: FC<OwnProps> = ({\n  isActive,\n  isChannel = false,\n  content,\n  onContentChange,\n  onReset,\n}) => {\n  const [newChatMemberIds, setNewChatMemberIds] = useState<string[]>([]);\n\n  const handleNextStep = useCallback(() => {\n    onContentChange(isChannel ? LeftColumnContent.NewChannelStep2 : LeftColumnContent.NewGroupStep2);\n  }, [isChannel, onContentChange]);\n\n  return (\n    <Transition\n      id=\"NewChat\"\n      name={LAYERS_ANIMATION_NAME}\n      renderCount={RENDER_COUNT}\n      activeKey={content}\n    >\n      {(isStepActive) => {\n        switch (content) {\n          case LeftColumnContent.NewChannelStep1:\n          case LeftColumnContent.NewGroupStep1:\n            return (\n              <NewChatStep1\n                isChannel={isChannel}\n                isActive={isActive}\n                selectedMemberIds={newChatMemberIds}\n                onSelectedMemberIdsChange={setNewChatMemberIds}\n                onNextStep={handleNextStep}\n                onReset={onReset}\n              />\n            );\n          case LeftColumnContent.NewChannelStep2:\n          case LeftColumnContent.NewGroupStep2:\n            return (\n              <NewChatStep2\n                isChannel={isChannel}\n                isActive={isStepActive && isActive}\n                memberIds={newChatMemberIds}\n                onReset={onReset}\n              />\n            );\n          default:\n            return undefined;\n        }\n      }}\n    </Transition>\n  );\n};\n\nexport default memo(NewChat);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { filterUsersByName, isUserBot } from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Picker from '../../common/Picker';\nimport Button from '../../ui/Button';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nexport type OwnProps = {\n  isChannel?: boolean;\n  isActive: boolean;\n  selectedMemberIds: string[];\n  onSelectedMemberIdsChange: (ids: string[]) => void;\n  onNextStep: () => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  localContactIds?: string[];\n  searchQuery?: string;\n  isSearching?: boolean;\n  localUserIds?: string[];\n  globalUserIds?: string[];\n};\n\nconst NewChatStep1: FC<OwnProps & StateProps> = ({\n  isChannel,\n  isActive,\n  selectedMemberIds,\n  onSelectedMemberIdsChange,\n  onNextStep,\n  onReset,\n  localContactIds,\n  searchQuery,\n  isSearching,\n  localUserIds,\n  globalUserIds,\n}) => {\n  const {\n    setGlobalSearchQuery,\n  } = getActions();\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleFilterChange = useCallback((query: string) => {\n    setGlobalSearchQuery({ query });\n  }, []);\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const foundContactIds = localContactIds ? filterUsersByName(localContactIds, usersById, searchQuery) : [];\n\n    return sortChatIds(\n      unique([\n        ...foundContactIds,\n        ...(localUserIds || []),\n        ...(globalUserIds || []),\n      ]).filter((contactId) => {\n        const user = usersById[contactId];\n        if (!user) {\n          return true;\n        }\n\n        return !user.isSelf && (user.canBeInvitedToGroup || !isUserBot(user));\n      }),\n      false,\n      selectedMemberIds,\n    );\n  }, [localContactIds, searchQuery, localUserIds, globalUserIds, selectedMemberIds]);\n\n  const handleNextStep = useCallback(() => {\n    setGlobalSearchQuery({ query: '' });\n    onNextStep();\n  }, [onNextStep]);\n\n  return (\n    <div className=\"NewChat step-1\">\n      <div className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={onReset}\n          ariaLabel=\"Return to Chat List\"\n        >\n          <i className=\"icon icon-arrow-left\" />\n        </Button>\n        <h3>{lang('GroupAddMembers')}</h3>\n      </div>\n      <div className=\"NewChat-inner step-1\">\n        <Picker\n          itemIds={displayedIds}\n          selectedIds={selectedMemberIds}\n          filterValue={searchQuery}\n          filterPlaceholder={lang('SendMessageTo')}\n          searchInputId=\"new-group-picker-search\"\n          isLoading={isSearching}\n          isSearchable\n          onSelectedIdsChange={onSelectedMemberIdsChange}\n          onFilterChange={handleFilterChange}\n        />\n\n        <FloatingActionButton\n          isShown\n          onClick={handleNextStep}\n          ariaLabel={isChannel ? 'Continue To Channel Info' : 'Continue To Group Info'}\n        >\n          <i className=\"icon icon-arrow-right\" />\n        </FloatingActionButton>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: localContactIds } = global.contactList || {};\n\n    const {\n      query: searchQuery,\n      fetchingStatus,\n      globalResults,\n      localResults,\n    } = selectTabState(global).globalSearch;\n    const { userIds: globalUserIds } = globalResults || {};\n    const { userIds: localUserIds } = localResults || {};\n\n    return {\n      localContactIds,\n      searchQuery,\n      isSearching: fetchingStatus?.chats,\n      globalUserIds,\n      localUserIds,\n    };\n  },\n)(NewChatStep1));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { ChatCreationProgress } from '../../../types';\n\nimport { getUserFirstOrLastName } from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport Button from '../../ui/Button';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\nexport type OwnProps = {\n  isChannel?: boolean;\n  isActive: boolean;\n  memberIds: string[];\n  onReset: (forceReturnToChatList?: boolean) => void;\n};\n\ntype StateProps = {\n  creationProgress?: ChatCreationProgress;\n  creationError?: string;\n  maxGroupSize?: number;\n};\n\nconst MAX_MEMBERS_FOR_GENERATE_CHAT_NAME = 4;\n\nconst NewChatStep2: FC<OwnProps & StateProps > = ({\n  isChannel,\n  isActive,\n  memberIds,\n  maxGroupSize,\n  creationProgress,\n  creationError,\n  onReset,\n}) => {\n  const {\n    createGroupChat,\n    createChannel,\n  } = getActions();\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const [title, setTitle] = useState('');\n  const [about, setAbout] = useState('');\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n\n  const chatTitleEmptyError = 'Chat title can\\'t be empty';\n  const channelTitleEmptyError = 'Channel title can\\'t be empty';\n  const chatTooManyUsersError = 'Sorry, creating supergroups is not yet supported';\n\n  const isLoading = creationProgress === ChatCreationProgress.InProgress;\n\n  useEffect(() => {\n    if (isChannel) {\n      return;\n    }\n    if (!memberIds.length || memberIds.length > MAX_MEMBERS_FOR_GENERATE_CHAT_NAME) {\n      setTitle('');\n      return;\n    }\n    const global = getGlobal();\n    const usersById = global.users.byId;\n    const memberFirstNames = [global.currentUserId!, ...memberIds]\n      .map((userId) => getUserFirstOrLastName(usersById[userId]))\n      .filter(Boolean);\n    const generatedChatName = memberFirstNames.slice(0, -1).join(', ')\n      + lang('CreateGroup.PeersTitleLastDelimeter')\n      + memberFirstNames[memberFirstNames.length - 1];\n    setTitle(generatedChatName);\n  }, [isChannel, memberIds, lang]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    const newValue = value.replace(/^\\s+/, '');\n\n    setTitle(newValue);\n\n    if (newValue !== value) {\n      e.currentTarget.value = newValue;\n    }\n  }, []);\n\n  const handleDescriptionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setAbout(e.currentTarget.value);\n  }, []);\n\n  const handleCreateGroup = useCallback(() => {\n    if (!title.length) {\n      setError(chatTitleEmptyError);\n      return;\n    }\n\n    if (maxGroupSize && memberIds.length >= maxGroupSize) {\n      setError(chatTooManyUsersError);\n      return;\n    }\n\n    createGroupChat({\n      title,\n      photo,\n      memberIds,\n    });\n  }, [title, memberIds, maxGroupSize, createGroupChat, photo]);\n\n  const handleCreateChannel = useCallback(() => {\n    if (!title.length) {\n      setError(channelTitleEmptyError);\n      return;\n    }\n\n    createChannel({\n      title,\n      about,\n      photo,\n      memberIds,\n    });\n  }, [title, createChannel, about, photo, memberIds, channelTitleEmptyError]);\n\n  useEffect(() => {\n    if (creationProgress === ChatCreationProgress.Complete) {\n      onReset(true);\n    }\n  }, [creationProgress, onReset]);\n\n  const renderedError = (creationError && lang(creationError)) || (\n    error !== chatTitleEmptyError && error !== channelTitleEmptyError\n      ? error\n      : undefined\n  );\n\n  return (\n    <div className=\"NewChat\">\n      <div className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onReset()}\n          ariaLabel=\"Return to member selection\"\n        >\n          <i className=\"icon icon-arrow-left\" />\n        </Button>\n        <h3>{lang(isChannel ? 'NewChannel' : 'NewGroup')}</h3>\n      </div>\n      <div className=\"NewChat-inner step-2\">\n        <AvatarEditable\n          onChange={setPhoto}\n          title={lang('AddPhoto')}\n        />\n        <InputText\n          value={title}\n          onChange={handleTitleChange}\n          label={lang(isChannel ? 'EnterChannelName' : 'GroupName')}\n          error={error === chatTitleEmptyError || error === channelTitleEmptyError ? error : undefined}\n        />\n        {isChannel && (\n          <>\n            <InputText\n              value={about}\n              onChange={handleDescriptionChange}\n              label={lang('DescriptionOptionalPlaceholder')}\n            />\n            <p className=\"note\">{lang('DescriptionInfo')}</p>\n          </>\n        )}\n\n        {renderedError && (\n          <p className=\"error\">{renderedError}</p>\n        )}\n\n        {memberIds.length > 0 && (\n          <>\n            <h3 className=\"chat-members-heading\">{lang('GroupInfo.ParticipantCount', memberIds.length, 'i')}</h3>\n\n            <div className=\"chat-members-list custom-scroll\">\n              {memberIds.map((id) => (\n                <ListItem inactive className=\"chat-item-clickable\">\n                  <PrivateChatInfo userId={id} />\n                </ListItem>\n              ))}\n            </div>\n          </>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={title.length !== 0}\n        onClick={isChannel ? handleCreateChannel : handleCreateGroup}\n        disabled={isLoading}\n        ariaLabel={isChannel ? lang('ChannelIntro.CreateChannel') : 'Create Group'}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-arrow-right\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      progress: creationProgress,\n      error: creationError,\n    } = selectTabState(global).chatCreation || {};\n\n    return {\n      creationProgress,\n      creationError,\n      maxGroupSize: global.config?.maxGroupSize,\n    };\n  },\n)(NewChatStep2));\n","import type {\n  ApiChat, ApiGlobalMessageSearchType, ApiMessage, ApiUser,\n} from '../../../../api/types';\nimport type { GlobalState, TabState } from '../../../../global/types';\nimport type { ISettings } from '../../../../types';\n\nimport { selectChat, selectTabState, selectTheme } from '../../../../global/selectors';\n\nexport type StateProps = {\n  theme: ISettings['theme'];\n  isLoading?: boolean;\n  chatsById: Record<string, ApiChat>;\n  usersById: Record<string, ApiUser>;\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  foundIds?: string[];\n  searchChatId?: string;\n  activeDownloads: TabState['activeDownloads']['byChatId'];\n  isChatProtected?: boolean;\n  shouldWarnAboutSvg?: boolean;\n};\n\nexport function createMapStateToProps(type: ApiGlobalMessageSearchType) {\n  return (global: GlobalState, props: any) => {\n    const tabState = selectTabState(global);\n    const { byId: chatsById } = global.chats;\n    const { byId: usersById } = global.users;\n    const {\n      fetchingStatus, resultsByType, chatId,\n    } = tabState.globalSearch;\n\n    // One component is used for two different types of results.\n    // The differences between them are only in the isVoice property.\n    // The rest of the search results use their own personal components.\n    const currentType = type !== 'audio' ? type : (props?.isVoice ? 'voice' : 'audio');\n\n    const { byChatId: globalMessagesByChatId } = global.messages;\n    const foundIds = resultsByType?.[currentType]?.foundIds;\n\n    const activeDownloads = tabState.activeDownloads.byChatId;\n\n    return {\n      theme: selectTheme(global),\n      isLoading: foundIds === undefined\n        || (fetchingStatus ? Boolean(fetchingStatus.chats || fetchingStatus.messages) : false),\n      chatsById,\n      usersById,\n      globalMessagesByChatId,\n      foundIds,\n      searchChatId: chatId,\n      activeDownloads,\n      isChatProtected: chatId ? selectChat(global, chatId)?.isProtected : undefined,\n      shouldWarnAboutSvg: global.settings.byKey.shouldWarnAboutSvg,\n    };\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { AudioOrigin, LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dateFormat';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport useLang from '../../../hooks/useLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Audio from '../../common/Audio';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  isVoice?: boolean;\n  searchQuery?: string;\n};\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst AudioResults: FC<OwnProps & StateProps> = ({\n  theme,\n  isVoice,\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  activeDownloads,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n    openAudioPlayer,\n  } = getActions();\n\n  const lang = useLang();\n  const currentType = isVoice ? 'voice' : 'audio';\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: currentType,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [currentType, searchMessagesGlobal, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = id.split('_');\n\n      return globalMessagesByChatId[chatId]?.byId[Number(messageId)];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((messageId: number, chatId: string) => {\n    focusMessage({ chatId, messageId });\n  }, [focusMessage]);\n\n  const handlePlayAudio = useCallback((messageId: number, chatId: string) => {\n    openAudioPlayer({ chatId, messageId });\n  }, [openAudioPlayer]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n      return (\n        <div\n          className=\"ListItem small-icon\"\n          key={message.id}\n        >\n          {shouldDrawDateDivider && (\n            <p\n              className={buildClassName(\n                'section-heading',\n                isFirst && 'section-heading-first',\n                !isFirst && 'section-heading-with-border',\n              )}\n              dir={lang.isRtl ? 'rtl' : undefined}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <Audio\n            key={message.id}\n            theme={theme}\n            message={message}\n            origin={AudioOrigin.Search}\n            senderTitle={getSenderName(lang, message, chatsById, usersById)}\n            date={message.date}\n            className=\"scroll-item\"\n            onPlay={handlePlayAudio}\n            onDateClick={handleMessageFocus}\n            canDownload={!chatsById[message.chatId]?.isProtected && !message.isProtected}\n            isDownloading={activeDownloads[message.chatId]?.ids?.includes(message.id)}\n          />\n        </div>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div className=\"LeftSearch\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps('audio'),\n)(AudioResults));\n","import { useCallback, useEffect, useRef } from '../lib/teact/teact';\n\nconst useSendWithEnter = (\n  onSelect: NoneToVoidFunction,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const buttonRef = useRef<HTMLDivElement>(null);\n\n  const handleKeyDown = useCallback((e: KeyboardEvent) => {\n    if (e.key !== 'Enter') return;\n    const isFocused = buttonRef.current === document.activeElement;\n\n    if (isFocused) {\n      onSelect();\n    }\n  }, [onSelect]);\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown, false);\n\n    return () => window.removeEventListener('keydown', handleKeyDown, false);\n  }, [handleKeyDown]);\n\n  return buttonRef;\n};\n\nexport default useSendWithEnter;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiMessageOutgoingStatus,\n  ApiUser,\n} from '../../../api/types';\nimport type { LangFn } from '../../../hooks/useLang';\n\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSticker,\n  getMessageVideo,\n  getPrivateChatUserId,\n} from '../../../global/helpers';\nimport { selectChat, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPastTimeShort } from '../../../util/dateFormat';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Link from '../../ui/Link';\nimport ListItem from '../../ui/ListItem';\n\nimport './ChatMessage.scss';\n\ntype OwnProps = {\n  searchQuery?: string;\n  message: ApiMessage;\n  chatId: string;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  privateChatUser?: ApiUser;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n};\n\nconst ChatMessage: FC<OwnProps & StateProps> = ({\n  message,\n  searchQuery,\n  chatId,\n  chat,\n  privateChatUser,\n}) => {\n  const { focusMessage } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const mediaThumbnail = !getMessageSticker(message) ? getMessageMediaThumbDataUri(message) : undefined;\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'micro'));\n  const isRoundVideo = Boolean(getMessageRoundVideo(message));\n\n  const handleClick = useLastCallback(() => {\n    focusMessage({ chatId, messageId: message.id, shouldReplaceHistory: true });\n  });\n\n  const lang = useLang();\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = privateChatUser || chat;\n\n  return (\n    <ListItem\n      className=\"ChatMessage chat-item-clickable\"\n      ripple={!isMobile}\n      onClick={handleClick}\n      buttonRef={buttonRef}\n    >\n      <Avatar\n        peer={peer}\n        isSavedMessages={privateChatUser?.isSelf}\n      />\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === privateChatUser?.id && privateChatUser?.isSelf}\n          />\n          <div className=\"message-date\">\n            <Link className=\"date\">\n              {formatPastTimeShort(lang, message.date * 1000)}\n            </Link>\n          </div>\n\n        </div>\n        <div className=\"subtitle\">\n          <div className=\"message\" dir=\"auto\">\n            {renderSummary(lang, message, mediaBlobUrl || mediaThumbnail, searchQuery, isRoundVideo)}\n          </div>\n        </div>\n      </div>\n    </ListItem>\n  );\n};\n\nfunction renderSummary(\n  lang: LangFn, message: ApiMessage, blobUrl?: string, searchQuery?: string, isRoundVideo?: boolean,\n) {\n  if (!blobUrl) {\n    return renderMessageSummary(lang, message, undefined, searchQuery);\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <i className=\"icon icon-play\" />}\n      {renderMessageSummary(lang, message, true, searchQuery)}\n    </span>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const privateChatUserId = getPrivateChatUserId(chat);\n    const privateChatUser = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n\n    return {\n      chat,\n      ...(privateChatUserId && { privateChatUser }),\n    };\n  },\n)(ChatMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport { formatDateToString } from '../../../util/dateFormat';\n\nimport './DateSuggest.scss';\n\nconst SUGGESTION_COUNT = 8;\n\nexport type OwnProps = {\n  searchDate: string;\n  onSelect: (value: Date) => void;\n};\n\nconst DateSuggest: FC<OwnProps> = ({\n  searchDate, onSelect,\n}) => {\n  const suggestions = useMemo(() => getSuggestionsFromDate(searchDate), [searchDate]);\n  return (\n    <section className=\"DateSuggest custom-scroll custom-scroll-x\">\n      {suggestions.map(({ date, text }) => {\n        return (\n          <div\n            onClick={() => onSelect(date)}\n            className=\"date-item\"\n            key={text}\n          >\n            <i className=\"icon icon-calendar\" />\n            <span>{text}</span>\n          </div>\n        );\n      })}\n    </section>\n  );\n};\n\nfunction getSuggestionsFromDate(searchDate: string) {\n  const hasYear = searchDate.match(/^\\d{2,4}-\\d{2}-\\d{2}$/g);\n  if (hasYear) {\n    const date = new Date(searchDate);\n    return [{ date, text: formatDateToString(date) }];\n  }\n\n  const suggestion = [];\n  const currentDate = new Date();\n  const currentYear = currentDate.getFullYear();\n  const latestYear = currentDate.getTime() > (new Date(`${currentYear}-${searchDate}`)).getTime()\n    ? currentYear\n    : currentYear - 1;\n\n  for (let i = 0; i < SUGGESTION_COUNT; i++) {\n    const date = new Date(`${latestYear - i}-${searchDate}`);\n    suggestion.push({ date, text: formatDateToString(date) });\n  }\n\n  return suggestion;\n}\n\nexport default memo(DateSuggest);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiTopic } from '../../../api/types';\n\nimport { selectChat } from '../../../global/selectors';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\n\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport TopicIcon from '../../common/TopicIcon';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  topicId: number;\n  onClick: (id: number) => void;\n};\n\ntype StateProps = {\n  topic?: ApiTopic;\n};\n\nconst TOPIC_ICON_SIZE = 2 * REM;\n\nconst LeftSearchResultTopic: FC<OwnProps & StateProps> = ({\n  topicId,\n  topic,\n  onClick,\n}) => {\n  const handleClick = useCallback(() => {\n    onClick(topicId);\n  }, [topicId, onClick]);\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  if (!topic) {\n    return undefined;\n  }\n\n  return (\n    <ListItem\n      className=\"chat-item-clickable search-result\"\n      onClick={handleClick}\n      buttonClassName=\"topic-item\"\n      buttonRef={buttonRef}\n    >\n      <TopicIcon\n        size={TOPIC_ICON_SIZE}\n        topic={topic}\n        className=\"topic-icon\"\n        letterClassName=\"topic-icon-letter\"\n      />\n      <div dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</div>\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topicId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const topic = chat?.topics?.[topicId];\n\n    return {\n      topic,\n    };\n  },\n)(LeftSearchResultTopic));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiMessage } from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\n\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ChatMessage from './ChatMessage';\nimport DateSuggest from './DateSuggest';\nimport LeftSearchResultTopic from './LeftSearchResultTopic';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  dateSearchQuery?: string;\n  onReset: () => void;\n  onSearchDateSelect: (value: Date) => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  foundIds?: string[];\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  chatsById: Record<string, ApiChat>;\n  fetchingStatus?: { chats?: boolean; messages?: boolean };\n  foundTopicIds?: number[];\n  searchChatId?: string;\n};\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst ChatMessageResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  dateSearchQuery,\n  foundIds,\n  globalMessagesByChatId,\n  chatsById,\n  fetchingStatus,\n  foundTopicIds,\n  searchChatId,\n  onSearchDateSelect,\n  onReset,\n}) => {\n  const { searchMessagesGlobal, openThread } = getActions();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: 'text',\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const handleTopicClick = useCallback(\n    (id: number) => {\n      if (!searchChatId) return;\n      openThread({ chatId: searchChatId, threadId: id, shouldReplaceHistory: true });\n\n      if (!isMobile) {\n        onReset();\n      }\n    },\n    [searchChatId, isMobile, onReset],\n  );\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || foundIds.length === 0) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds\n      .map((id) => {\n        const [chatId, messageId] = id.split('_');\n\n        return globalMessagesByChatId?.[chatId]?.byId[Number(messageId)];\n      })\n      .filter(Boolean)\n      .sort((a, b) => b.date - a.date);\n  }, [foundIds, globalMessagesByChatId]);\n\n  function renderFoundMessage(message: ApiMessage) {\n    const text = renderMessageSummary(lang, message);\n    const chat = chatsById[message.chatId];\n\n    if (!text || !chat) {\n      return undefined;\n    }\n\n    return (\n      <ChatMessage\n        chatId={message.chatId}\n        message={message}\n        searchQuery={searchQuery}\n      />\n    );\n  }\n\n  const nothingFound = fetchingStatus && !fetchingStatus.chats && !fetchingStatus.messages && !foundMessages.length\n    && !foundTopicIds?.length;\n\n  return (\n    <div className=\"LeftSearch\">\n      <InfiniteScroll\n        className=\"search-content custom-scroll chat-list\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {dateSearchQuery && (\n          <div className=\"chat-selection no-scrollbar\">\n            <DateSuggest\n              searchDate={dateSearchQuery}\n              onSelect={onSearchDateSelect}\n            />\n          </div>\n        )}\n        {nothingFound && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {Boolean(foundTopicIds?.length) && (\n          <div className=\"pb-2\">\n            <h3 className=\"section-heading topic-search-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n              {lang('Topics')}\n            </h3>\n            {foundTopicIds!.map((id) => {\n              return (\n                <LeftSearchResultTopic\n                  chatId={searchChatId!}\n                  topicId={id}\n                  onClick={handleTopicClick}\n                />\n              );\n            })}\n          </div>\n        )}\n        {Boolean(foundMessages.length) && (\n          <div className=\"pb-2\">\n            <h3 className=\"section-heading topic-search-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n              {lang('SearchMessages')}\n            </h3>\n            {foundMessages.map(renderFoundMessage)}\n          </div>\n        )}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byId: chatsById } = global.chats;\n    const { currentUserId, messages: { byChatId: globalMessagesByChatId } } = global;\n    const {\n      fetchingStatus, resultsByType, foundTopicIds, chatId: searchChatId,\n    } = selectTabState(global).globalSearch;\n\n    const { foundIds } = (resultsByType?.text) || {};\n\n    return {\n      currentUserId,\n      foundIds,\n      globalMessagesByChatId,\n      chatsById,\n      fetchingStatus,\n      foundTopicIds,\n      searchChatId,\n    };\n  },\n)(ChatMessageResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiUser } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { getPrivateChatUserId, isUserId, selectIsChatMuted } from '../../../global/helpers';\nimport {\n  selectChat, selectIsChatPinned, selectNotifyExceptions,\n  selectNotifySettings, selectUser,\n} from '../../../global/selectors';\n\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\n\ntype OwnProps = {\n  chatId: string;\n  withUsername?: boolean;\n  onClick: (id: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n};\n\nconst LeftSearchResultChat: FC<OwnProps & StateProps> = ({\n  chatId,\n  withUsername,\n  onClick,\n  chat,\n  user,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n}) => {\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const handleChatFolderChange = useCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  }, [markRenderChatFolderModal, openChatFolderModal]);\n\n  const handleMute = useCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  }, [markRenderMuteModal, openMuteModal]);\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    handleMute,\n    handleChatFolderChange,\n  }, true);\n\n  const handleClick = useCallback(() => {\n    onClick(chatId);\n  }, [chatId, onClick]);\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  return (\n    <ListItem\n      className=\"chat-item-clickable search-result\"\n      onClick={handleClick}\n      contextActions={contextActions}\n      buttonRef={buttonRef}\n    >\n      {isUserId(chatId) ? (\n        <PrivateChatInfo\n          userId={chatId}\n          withUsername={withUsername}\n          withStory\n          avatarSize=\"large\"\n          storyViewerOrigin={StoryViewerOrigin.SearchResult}\n        />\n      ) : (\n        <GroupChatInfo\n          chatId={chatId}\n          withUsername={withUsername}\n          avatarSize=\"large\"\n          withStory\n          storyViewerOrigin={StoryViewerOrigin.SearchResult}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const privateChatUserId = chat && getPrivateChatUserId(chat);\n    const user = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n    const isPinned = selectIsChatPinned(global, chatId);\n    const isMuted = chat\n      ? selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global))\n      : undefined;\n\n    return {\n      chat,\n      user,\n      isPinned,\n      isMuted,\n      canChangeFolder: Boolean(global.chatFolders.orderedIds?.length),\n    };\n  },\n)(LeftSearchResultChat));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { getUserFirstOrLastName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\nimport Button from '../../ui/Button';\nimport LeftSearchResultChat from './LeftSearchResultChat';\n\nimport './RecentContacts.scss';\n\ntype OwnProps = {\n  onReset: () => void;\n};\n\ntype StateProps = {\n  topUserIds?: string[];\n  usersById: Record<string, ApiUser>;\n  recentlyFoundChatIds?: string[];\n};\n\nconst SEARCH_CLOSE_TIMEOUT_MS = 250;\nconst NBSP = '\\u00A0';\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst RecentContacts: FC<OwnProps & StateProps> = ({\n  topUserIds,\n  usersById,\n  recentlyFoundChatIds,\n  onReset,\n}) => {\n  const {\n    loadTopUsers, openChat,\n    addRecentlyFoundChatId, clearRecentlyFoundChats,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const topUsersRef = useRef<HTMLDivElement>(null);\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadTopUsers();\n    });\n  }, [loadTopUsers]);\n\n  useHorizontalScroll(topUsersRef, !topUserIds);\n\n  const handleClick = useCallback((id: string) => {\n    openChat({ id, shouldReplaceHistory: true });\n    onReset();\n    setTimeout(() => {\n      addRecentlyFoundChatId({ id });\n    }, SEARCH_CLOSE_TIMEOUT_MS);\n  }, [openChat, addRecentlyFoundChatId, onReset]);\n\n  const handleClearRecentlyFoundChats = useCallback(() => {\n    clearRecentlyFoundChats();\n  }, [clearRecentlyFoundChats]);\n\n  const lang = useLang();\n\n  return (\n    <div className=\"RecentContacts custom-scroll\">\n      {topUserIds && (\n        <div className=\"top-peers-section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <div ref={topUsersRef} className=\"top-peers\">\n            {topUserIds.map((userId) => (\n              <div\n                key={userId}\n                className=\"top-peer-item\"\n                onClick={() => handleClick(userId)}\n                dir={lang.isRtl ? 'rtl' : undefined}\n              >\n                <Avatar peer={usersById[userId]} />\n                <div className=\"top-peer-name\">{renderText(getUserFirstOrLastName(usersById[userId]) || NBSP)}</div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n      {recentlyFoundChatIds && (\n        <div className=\"search-section pt-1\">\n          <h3\n            className={buildClassName(\n              'section-heading mt-0 recent-chats-header',\n              !topUserIds && 'without-border',\n            )}\n            dir={lang.isRtl ? 'rtl' : undefined}\n          >\n            {lang('Recent')}\n\n            <Button\n              round\n              size=\"smaller\"\n              color=\"translucent\"\n              ariaLabel=\"Clear recent chats\"\n              onClick={handleClearRecentlyFoundChats}\n              isRtl={lang.isRtl}\n            >\n              <i className=\"icon icon-close\" />\n            </Button>\n          </h3>\n          {recentlyFoundChatIds.map((id) => (\n            <LeftSearchResultChat\n              chatId={id}\n              onClick={handleClick}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: topUserIds } = global.topPeers;\n    const usersById = global.users.byId;\n    const { recentlyFoundChatIds } = global;\n\n    return {\n      topUserIds,\n      usersById,\n      recentlyFoundChatIds,\n    };\n  },\n)(RecentContacts));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiMessage } from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { ALL_FOLDER_ID } from '../../../config';\nimport {\n  filterChatsByName,\n  filterUsersByName,\n} from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\nimport { getOrderedIds } from '../../../util/folderManager';\nimport { unique } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLang from '../../../hooks/useLang';\n\nimport NothingFound from '../../common/NothingFound';\nimport PickerSelectedItem from '../../common/PickerSelectedItem';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Link from '../../ui/Link';\nimport ChatMessage from './ChatMessage';\nimport DateSuggest from './DateSuggest';\nimport LeftSearchResultChat from './LeftSearchResultChat';\nimport RecentContacts from './RecentContacts';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  dateSearchQuery?: string;\n  searchDate?: number;\n  onReset: () => void;\n  onSearchDateSelect: (value: Date) => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  contactIds?: string[];\n  accountChatIds?: string[];\n  accountUserIds?: string[];\n  globalChatIds?: string[];\n  globalUserIds?: string[];\n  foundIds?: string[];\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  chatsById: Record<string, ApiChat>;\n  fetchingStatus?: { chats?: boolean; messages?: boolean };\n};\n\nconst MIN_QUERY_LENGTH_FOR_GLOBAL_SEARCH = 4;\nconst LESS_LIST_ITEMS_AMOUNT = 5;\n\nconst runThrottled = throttle((cb) => cb(), 500, false);\n\nconst ChatResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  searchDate,\n  dateSearchQuery,\n  currentUserId,\n  contactIds,\n  accountChatIds,\n  accountUserIds,\n  globalChatIds,\n  globalUserIds,\n  foundIds,\n  globalMessagesByChatId,\n  chatsById,\n  fetchingStatus,\n  onReset,\n  onSearchDateSelect,\n}) => {\n  const {\n    openChat, addRecentlyFoundChatId, searchMessagesGlobal, setGlobalSearchChatId,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const chatSelectionRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const [shouldShowMoreLocal, setShouldShowMoreLocal] = useState<boolean>(false);\n  const [shouldShowMoreGlobal, setShouldShowMoreGlobal] = useState<boolean>(false);\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: 'text',\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const handleChatClick = useCallback(\n    (id: string) => {\n      openChat({ id, shouldReplaceHistory: true });\n\n      if (id !== currentUserId) {\n        addRecentlyFoundChatId({ id });\n      }\n\n      if (!isMobile) {\n        onReset();\n      }\n    },\n    [openChat, currentUserId, isMobile, addRecentlyFoundChatId, onReset],\n  );\n\n  const handlePickerItemClick = useCallback((id: string) => {\n    setGlobalSearchChatId({ id });\n  }, [setGlobalSearchChatId]);\n\n  const localResults = useMemo(() => {\n    if (!searchQuery || (searchQuery.startsWith('@') && searchQuery.length < 2)) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    const contactIdsWithMe = [\n      ...(currentUserId ? [currentUserId] : []),\n      ...(contactIds || []),\n    ];\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const localContactIds = filterUsersByName(\n      contactIdsWithMe, usersById, searchQuery, currentUserId, lang('SavedMessages'),\n    );\n    const orderedChatIds = getOrderedIds(ALL_FOLDER_ID) ?? [];\n    const localChatIds = filterChatsByName(lang, orderedChatIds, chatsById, searchQuery, currentUserId);\n\n    const localPeerIds = unique([\n      ...localContactIds,\n      ...localChatIds,\n    ]);\n\n    const accountPeerIds = unique([\n      ...(accountChatIds ?? []),\n      ...(accountUserIds ?? []),\n    ].filter((accountPeerId) => !localPeerIds.includes(accountPeerId)));\n\n    return [\n      ...sortChatIds(localPeerIds, undefined, currentUserId ? [currentUserId] : undefined),\n      ...sortChatIds(accountPeerIds),\n    ];\n  }, [searchQuery, currentUserId, contactIds, lang, accountChatIds, accountUserIds, chatsById]);\n\n  useHorizontalScroll(chatSelectionRef, !localResults.length, true);\n\n  const globalResults = useMemo(() => {\n    if (!searchQuery || searchQuery.length < MIN_QUERY_LENGTH_FOR_GLOBAL_SEARCH || !globalChatIds || !globalUserIds) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return sortChatIds(\n      unique([...globalChatIds, ...globalUserIds]),\n      true,\n    );\n  }, [globalChatIds, globalUserIds, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if ((!searchQuery && !searchDate) || !foundIds || foundIds.length === 0) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds\n      .map((id) => {\n        const [chatId, messageId] = id.split('_');\n\n        return globalMessagesByChatId?.[chatId]?.byId[Number(messageId)];\n      })\n      .filter(Boolean);\n  }, [foundIds, globalMessagesByChatId, searchQuery, searchDate]);\n\n  const handleClickShowMoreLocal = useCallback(() => {\n    setShouldShowMoreLocal(!shouldShowMoreLocal);\n  }, [shouldShowMoreLocal]);\n\n  const handleClickShowMoreGlobal = useCallback(() => {\n    setShouldShowMoreGlobal(!shouldShowMoreGlobal);\n  }, [shouldShowMoreGlobal]);\n\n  function renderFoundMessage(message: ApiMessage) {\n    const text = renderMessageSummary(lang, message);\n    const chat = chatsById[message.chatId];\n\n    if (!text || !chat) {\n      return undefined;\n    }\n\n    return (\n      <ChatMessage\n        chatId={message.chatId}\n        message={message}\n        searchQuery={searchQuery}\n      />\n    );\n  }\n\n  const nothingFound = fetchingStatus && !fetchingStatus.chats && !fetchingStatus.messages\n    && !localResults.length && !globalResults.length && !foundMessages.length;\n\n  if (!searchQuery && !searchDate) {\n    return <RecentContacts onReset={onReset} />;\n  }\n\n  return (\n    <InfiniteScroll\n      className=\"LeftSearch custom-scroll\"\n      items={foundMessages}\n      onLoadMore={handleLoadMore}\n      // To prevent scroll jumps caused by delayed local results rendering\n      noScrollRestoreOnTop\n      noFastList\n    >\n      {dateSearchQuery && (\n        <div className=\"chat-selection no-scrollbar\">\n          <DateSuggest\n            searchDate={dateSearchQuery}\n            onSelect={onSearchDateSelect}\n          />\n        </div>\n      )}\n      {nothingFound && (\n        <NothingFound\n          text={lang('ChatList.Search.NoResults')}\n          description={lang('ChatList.Search.NoResultsDescription')}\n        />\n      )}\n      {Boolean(localResults.length) && (\n        <div\n          className=\"chat-selection no-scrollbar\"\n          dir={lang.isRtl ? 'rtl' : undefined}\n          ref={chatSelectionRef}\n        >\n          {localResults.map((id) => (\n            <PickerSelectedItem\n              peerId={id}\n              onClick={handlePickerItemClick}\n              clickArg={id}\n            />\n          ))}\n        </div>\n      )}\n      {Boolean(localResults.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n            {localResults.length > LESS_LIST_ITEMS_AMOUNT && (\n              <Link className=\"Link\" onClick={handleClickShowMoreLocal}>\n                {lang(shouldShowMoreLocal ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n              </Link>\n            )}\n            {lang('DialogList.SearchSectionDialogs')}\n          </h3>\n          {localResults.map((id, index) => {\n            if (!shouldShowMoreLocal && index >= LESS_LIST_ITEMS_AMOUNT) {\n              return undefined;\n            }\n\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      {Boolean(globalResults.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n            {globalResults.length > LESS_LIST_ITEMS_AMOUNT && (\n              <Link className=\"Link\" onClick={handleClickShowMoreGlobal}>\n                {lang(shouldShowMoreGlobal ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n              </Link>\n            )}\n            {lang('DialogList.SearchSectionGlobal')}\n          </h3>\n          {globalResults.map((id, index) => {\n            if (!shouldShowMoreGlobal && index >= LESS_LIST_ITEMS_AMOUNT) {\n              return undefined;\n            }\n\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                withUsername\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      {Boolean(foundMessages.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={lang.isRtl ? 'auto' : undefined}>{lang('SearchMessages')}</h3>\n          {foundMessages.map(renderFoundMessage)}\n        </div>\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byId: chatsById } = global.chats;\n\n    const { userIds: contactIds } = global.contactList || {};\n    const {\n      currentUserId, messages,\n    } = global;\n\n    if (!contactIds) {\n      return {\n        chatsById,\n      };\n    }\n\n    const {\n      fetchingStatus, globalResults, localResults, resultsByType,\n    } = selectTabState(global).globalSearch;\n    const { chatIds: globalChatIds, userIds: globalUserIds } = globalResults || {};\n    const { chatIds: accountChatIds, userIds: accountUserIds } = localResults || {};\n    const { byChatId: globalMessagesByChatId } = messages;\n    const foundIds = resultsByType?.text?.foundIds;\n\n    return {\n      currentUserId,\n      contactIds,\n      accountChatIds,\n      accountUserIds,\n      globalChatIds,\n      globalUserIds,\n      foundIds,\n      globalMessagesByChatId,\n      chatsById,\n      fetchingStatus,\n    };\n  },\n)(ChatResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { getMessageDocument } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dateFormat';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Document from '../../common/Document';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'documents';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst FileResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  activeDownloads,\n  shouldWarnAboutSvg,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = id.split('_');\n      const message = globalMessagesByChatId[chatId]?.byId[Number(messageId)];\n\n      return message && getMessageDocument(message) ? message : undefined;\n    }).filter(Boolean) as ApiMessage[];\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((messageId: number, chatId: string) => {\n    focusMessage({ chatId, messageId });\n  }, [focusMessage]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n      return (\n        <div\n          className=\"ListItem small-icon\"\n          key={message.id}\n        >\n          {shouldDrawDateDivider && (\n            <p\n              className={buildClassName(\n                'section-heading',\n                isFirst && 'section-heading-first',\n                !isFirst && 'section-heading-with-border',\n              )}\n              dir={lang.isRtl ? 'rtl' : undefined}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <Document\n            message={message}\n            withDate\n            datetime={message.date}\n            smaller\n            sender={getSenderName(lang, message, chatsById, usersById)}\n            className=\"scroll-item\"\n            isDownloading={activeDownloads[message.chatId]?.ids?.includes(message.id)}\n            shouldWarnAboutSvg={shouldWarnAboutSvg}\n            observeIntersection={observeIntersectionForMedia}\n            onDateClick={handleMessageFocus}\n          />\n        </div>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(FileResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dateFormat';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport NothingFound from '../../common/NothingFound';\nimport WebLink from '../../common/WebLink';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'links';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst LinkResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  isChatProtected,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = id.split('_');\n\n      return globalMessagesByChatId[chatId]?.byId[Number(messageId)];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((messageId: number, chatId: string) => {\n    focusMessage({ chatId, messageId });\n  }, [focusMessage]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n      return (\n        <div\n          className=\"ListItem small-icon\"\n          dir={lang.isRtl ? 'rtl' : undefined}\n          key={message.id}\n        >\n          {shouldDrawDateDivider && (\n            <p\n              className={buildClassName(\n                'section-heading',\n                isFirst && 'section-heading-first',\n                !isFirst && 'section-heading-with-border',\n              )}\n              dir={lang.isRtl ? 'rtl' : undefined}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <WebLink\n            key={message.id}\n            message={message}\n            senderTitle={getSenderName(lang, message, chatsById, usersById)}\n            isProtected={isChatProtected || message.isProtected}\n            observeIntersection={observeIntersectionForMedia}\n            onMessageClick={handleMessageFocus}\n          />\n        </div>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(LinkResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection, MediaViewerOrigin } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Media from '../../common/Media';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport ChatMessage from './ChatMessage';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'media';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst MediaResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  globalMessagesByChatId,\n  foundIds,\n  isChatProtected,\n}) => {\n  const {\n    searchMessagesGlobal,\n    openMediaViewer,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchMessagesGlobal, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = id.split('_');\n\n      return globalMessagesByChatId[chatId]?.byId[Number(messageId)];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleSelectMedia = useCallback((id: number, chatId: string) => {\n    openMediaViewer({\n      chatId,\n      mediaId: id,\n      origin: MediaViewerOrigin.SearchResult,\n    });\n  }, [openMediaViewer]);\n\n  function renderGallery() {\n    return (\n      <div className=\"media-list\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {foundMessages.map((message) => (\n          <Media\n            key={`${message.chatId}-${message.id}`}\n            idPrefix=\"search-media\"\n            message={message}\n            isProtected={isChatProtected || message.isProtected}\n            observeIntersection={observeIntersectionForMedia}\n            onClick={handleSelectMedia}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderSearchResult() {\n    return foundMessages.map((message) => (\n      <ChatMessage\n        key={message.id}\n        chatId={message.chatId}\n        message={message}\n      />\n    ));\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n  const isMediaGrid = canRenderContents && foundIds && foundIds.length > 0 && !searchQuery;\n  const isMessageList = canRenderContents && foundIds && foundIds.length > 0 && searchQuery;\n\n  const classNames = buildClassName(\n    'search-content custom-scroll',\n    isMessageList && 'chat-list',\n  );\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch\">\n      <InfiniteScroll\n        className={classNames}\n        items={foundMessages}\n        itemSelector={!searchQuery ? '.Media' : '.ListItem'}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {isMediaGrid && renderGallery()}\n        {isMessageList && renderSearchResult()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(MediaResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { GlobalSearchContent } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { parseDateString } from '../../../util/dateFormat';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLang from '../../../hooks/useLang';\n\nimport TabList from '../../ui/TabList';\nimport Transition from '../../ui/Transition';\nimport AudioResults from './AudioResults';\nimport ChatMessageResults from './ChatMessageResults';\nimport ChatResults from './ChatResults';\nimport FileResults from './FileResults';\nimport LinkResults from './LinkResults';\nimport MediaResults from './MediaResults';\n\nimport './LeftSearch.scss';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  searchDate?: number;\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentContent?: GlobalSearchContent;\n  chatId?: string;\n};\n\nconst TABS = [\n  { type: GlobalSearchContent.ChatList, title: 'SearchAllChatsShort' },\n  { type: GlobalSearchContent.Media, title: 'SharedMediaTab2' },\n  { type: GlobalSearchContent.Links, title: 'SharedLinksTab2' },\n  { type: GlobalSearchContent.Files, title: 'SharedFilesTab2' },\n  { type: GlobalSearchContent.Music, title: 'SharedMusicTab2' },\n  { type: GlobalSearchContent.Voice, title: 'SharedVoiceTab2' },\n];\n\nconst CHAT_TABS = [\n  { type: GlobalSearchContent.ChatList, title: 'All Messages' },\n  ...TABS.slice(1),\n];\n\nconst TRANSITION_RENDER_COUNT = Object.keys(GlobalSearchContent).length / 2;\n\nconst LeftSearch: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  searchDate,\n  isActive,\n  currentContent = GlobalSearchContent.ChatList,\n  chatId,\n  onReset,\n}) => {\n  const {\n    setGlobalSearchContent,\n    setGlobalSearchDate,\n  } = getActions();\n\n  const lang = useLang();\n  const [activeTab, setActiveTab] = useState(currentContent);\n  const dateSearchQuery = useMemo(() => parseDateString(searchQuery), [searchQuery]);\n\n  const handleSwitchTab = useCallback((index: number) => {\n    const tab = TABS[index];\n    setGlobalSearchContent({ content: tab.type });\n    setActiveTab(index);\n  }, [setGlobalSearchContent]);\n\n  const handleSearchDateSelect = useCallback((value: Date) => {\n    setGlobalSearchDate({ date: value.getTime() / 1000 });\n  }, [setGlobalSearchDate]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isActive, undefined, '.ListItem-button', true);\n\n  return (\n    <div className=\"LeftSearch\" ref={containerRef} onKeyDown={handleKeyDown}>\n      <TabList activeTab={activeTab} tabs={chatId ? CHAT_TABS : TABS} onSwitchTab={handleSwitchTab} />\n      <Transition\n        name={lang.isRtl ? 'slideOptimizedRtl' : 'slideOptimized'}\n        renderCount={TRANSITION_RENDER_COUNT}\n        activeKey={currentContent}\n      >\n        {(() => {\n          switch (currentContent) {\n            case GlobalSearchContent.ChatList:\n              if (chatId) {\n                return (\n                  <ChatMessageResults\n                    searchQuery={searchQuery}\n                    dateSearchQuery={dateSearchQuery}\n                    onReset={onReset}\n                    onSearchDateSelect={handleSearchDateSelect}\n                  />\n                );\n              }\n              return (\n                <ChatResults\n                  searchQuery={searchQuery}\n                  searchDate={searchDate}\n                  dateSearchQuery={dateSearchQuery}\n                  onReset={onReset}\n                  onSearchDateSelect={handleSearchDateSelect}\n                />\n              );\n            case GlobalSearchContent.Media:\n              return <MediaResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Links:\n              return <LinkResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Files:\n              return <FileResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Music:\n              return (\n                <AudioResults\n                  key=\"audio\"\n                  searchQuery={searchQuery}\n                />\n              );\n            case GlobalSearchContent.Voice:\n              return (\n                <AudioResults\n                  key=\"voice\"\n                  isVoice\n                  searchQuery={searchQuery}\n                />\n              );\n            default:\n              return undefined;\n          }\n        })()}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentContent, chatId } = selectTabState(global).globalSearch;\n\n    return { currentContent, chatId };\n  },\n)(LeftSearch));\n","import type { Dispatch, StateReducer } from '../useReducer';\n\nimport useReducer from '../useReducer';\n\nexport type TwoFaActions = (\n  'setCurrentPassword' | 'setPassword' | 'setHint' | 'setEmail' | 'reset'\n);\nexport type TwoFaDispatch = Dispatch<TwoFaState, TwoFaActions>;\n\nexport type TwoFaState = {\n  currentPassword: string;\n  password: string;\n  hint: string;\n  email: string;\n};\n\nconst INITIAL_STATE: TwoFaState = {\n  currentPassword: '',\n  password: '',\n  hint: '',\n  email: '',\n};\n\nconst twoFaReducer: StateReducer<TwoFaState, TwoFaActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setCurrentPassword':\n      return {\n        ...state,\n        currentPassword: action.payload,\n      };\n\n    case 'setPassword':\n      return {\n        ...state,\n        password: action.payload,\n      };\n\n    case 'setHint':\n      return {\n        ...state,\n        hint: action.payload,\n      };\n\n    case 'setEmail':\n      return {\n        ...state,\n        email: action.payload,\n      };\n\n    case 'reset':\n      return INITIAL_STATE;\n\n    default:\n      return state;\n  }\n};\n\nconst useTwoFaReducer = () => {\n  return useReducer(twoFaReducer, INITIAL_STATE);\n};\n\nexport default useTwoFaReducer;\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { FolderChatType } from '../../../../hooks/reducers/useFoldersReducer';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { isUserId } from '../../../../global/helpers';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport buildClassName from '../../../../util/buildClassName';\n\nimport {\n  EXCLUDED_CHAT_TYPES,\n  INCLUDED_CHAT_TYPES,\n} from '../../../../hooks/reducers/useFoldersReducer';\nimport useInfiniteScroll from '../../../../hooks/useInfiniteScroll';\nimport useLang from '../../../../hooks/useLang';\n\nimport GroupChatInfo from '../../../common/GroupChatInfo';\nimport PickerSelectedItem from '../../../common/PickerSelectedItem';\nimport PrivateChatInfo from '../../../common/PrivateChatInfo';\nimport Checkbox from '../../../ui/Checkbox';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport InfiniteScroll from '../../../ui/InfiniteScroll';\nimport InputText from '../../../ui/InputText';\nimport ListItem from '../../../ui/ListItem';\nimport Loading from '../../../ui/Loading';\n\nimport '../../../common/Picker.scss';\nimport './SettingsFoldersChatsPicker.scss';\n\ntype OwnProps = {\n  mode: 'included' | 'excluded';\n  chatIds: string[];\n  selectedIds: string[];\n  selectedChatTypes: string[];\n  filterValue?: string;\n  shouldHideChatTypes?: boolean;\n  onSelectedIdsChange: (ids: string[]) => void;\n  onSelectedChatTypesChange: (types: string[]) => void;\n  onFilterChange: (value: string) => void;\n  onSaveFilter: VoidFunction;\n  isActive?: boolean;\n};\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\ntype StateProps = {\n  maxChats: number;\n};\n\nconst SettingsFoldersChatsPicker: FC<OwnProps & StateProps> = ({\n  mode,\n  chatIds,\n  selectedIds,\n  selectedChatTypes,\n  filterValue,\n  shouldHideChatTypes,\n  onSelectedIdsChange,\n  onSelectedChatTypesChange,\n  onFilterChange,\n  maxChats,\n  onSaveFilter,\n  isActive,\n}) => {\n  const { openLimitReachedModal } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const chatTypes = mode === 'included' ? INCLUDED_CHAT_TYPES : EXCLUDED_CHAT_TYPES;\n  const shouldMinimize = selectedIds.length + selectedChatTypes.length > MAX_FULL_ITEMS;\n  const [isTouched, setIsTouched] = useState(false);\n\n  useEffect(() => {\n    if (!isActive) {\n      setIsTouched(false);\n    }\n  }, [isActive]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      requestMutation(() => {\n        inputRef.current!.focus();\n      });\n    }, FOCUS_DELAY_MS);\n  }, []);\n\n  const handleItemClick = useCallback((id: string) => {\n    const newSelectedIds = [...selectedIds];\n    if (newSelectedIds.includes(id)) {\n      newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n    } else {\n      if (selectedIds.length >= maxChats && mode === 'included') {\n        openLimitReachedModal({\n          limit: 'dialogFiltersChats',\n        });\n        return;\n      }\n      newSelectedIds.push(id);\n    }\n    setIsTouched(true);\n    onSelectedIdsChange(newSelectedIds);\n  }, [selectedIds, onSelectedIdsChange, maxChats, mode, openLimitReachedModal]);\n\n  const handleChatTypeClick = useCallback((key: FolderChatType['key']) => {\n    const newSelectedChatTypes = [...selectedChatTypes];\n    if (newSelectedChatTypes.includes(key)) {\n      newSelectedChatTypes.splice(newSelectedChatTypes.indexOf(key), 1);\n    } else {\n      newSelectedChatTypes.push(key);\n    }\n    setIsTouched(true);\n    onSelectedChatTypesChange(newSelectedChatTypes);\n  }, [selectedChatTypes, onSelectedChatTypesChange]);\n\n  const handleFilterChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange(value);\n  }, [onFilterChange]);\n\n  const lang = useLang();\n\n  function renderSelectedChatType(key: string) {\n    const selectedType = chatTypes.find(({ key: typeKey }) => key === typeKey);\n    if (!selectedType) {\n      return undefined;\n    }\n\n    return (\n      <PickerSelectedItem\n        icon={selectedType.icon}\n        title={lang(selectedType.title)}\n        isMinimized={shouldMinimize}\n        canClose\n        onClick={handleChatTypeClick}\n        clickArg={selectedType.key}\n      />\n    );\n  }\n\n  function renderChatType(type: FolderChatType) {\n    return (\n      <ListItem\n        key={type.key}\n        className=\"chat-item-clickable picker-list-item chat-type-item\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleChatTypeClick(type.key)}\n        ripple\n      >\n        <i className={buildClassName('icon', `icon-${type.icon}`)} />\n        <h3 className=\"chat-type\" dir=\"auto\">{lang(type.title)}</h3>\n        <Checkbox\n          label=\"\"\n          checked={selectedChatTypes.includes(type.key)}\n          round\n        />\n      </ListItem>\n    );\n  }\n\n  function renderItem(id: string) {\n    const isSelected = selectedIds.includes(id);\n\n    return (\n      <ListItem\n        key={id}\n        className=\"chat-item-clickable picker-list-item chat-item\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleItemClick(id)}\n        ripple\n      >\n        {isUserId(id) ? (\n          <PrivateChatInfo userId={id} />\n        ) : (\n          <GroupChatInfo chatId={id} withChatType />\n        )}\n        <Checkbox\n          label=\"\"\n          checked={isSelected}\n          round\n        />\n      </ListItem>\n    );\n  }\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, chatIds, Boolean(filterValue));\n\n  return (\n    <div className=\"Picker SettingsFoldersChatsPicker\">\n      <div className=\"picker-header custom-scroll\">\n        {selectedChatTypes.map(renderSelectedChatType)}\n        {selectedIds.map((id, i) => (\n          <PickerSelectedItem\n            peerId={id}\n            isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n            canClose\n            onClick={handleItemClick}\n            clickArg={id}\n          />\n        ))}\n        <InputText\n          ref={inputRef}\n          value={filterValue}\n          onChange={handleFilterChange}\n          placeholder={lang('Search')}\n        />\n      </div>\n      <InfiniteScroll\n        className=\"picker-list custom-scroll fab-padding-bottom\"\n        itemSelector=\".chat-item\"\n        items={viewportIds}\n        onLoadMore={getMore}\n      >\n        {(!viewportIds || !viewportIds.length || viewportIds.includes(chatIds[0])) && (\n          <div key=\"header\">\n            {!shouldHideChatTypes && (\n              <>\n                <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n                  {lang('FilterChatTypes')}\n                </h4>\n                {chatTypes.map(renderChatType)}\n                <div className=\"picker-list-divider\" />\n              </>\n            )}\n            <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('FilterChats')}\n            </h4>\n          </div>\n        )}\n\n        {viewportIds?.length ? (\n          viewportIds.map(renderItem)\n        ) : viewportIds && !viewportIds.length ? (\n          <p className=\"no-results\" key=\"no-results\">Sorry, nothing found.</p>\n        ) : (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={onSaveFilter}\n        ariaLabel={lang('Save')}\n      >\n        <i className=\"icon icon-check\" />\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      maxChats: selectCurrentLimit(global, 'dialogFiltersChats'),\n    };\n  },\n)(SettingsFoldersChatsPicker));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type {\n  FolderEditDispatch,\n  FoldersState,\n} from '../../../../hooks/reducers/useFoldersReducer';\n\nimport { ALL_FOLDER_ID, ARCHIVED_FOLDER_ID } from '../../../../config';\nimport { filterChatsByName } from '../../../../global/helpers';\nimport { unique } from '../../../../util/iteratees';\n\nimport {\n  selectChatFilters,\n} from '../../../../hooks/reducers/useFoldersReducer';\nimport { useFolderManagerForOrderedIds } from '../../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\n\nimport Loading from '../../../ui/Loading';\nimport SettingsFoldersChatsPicker from './SettingsFoldersChatsPicker';\n\ntype OwnProps = {\n  mode: 'included' | 'excluded';\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  isActive?: boolean;\n  onReset: VoidFunction;\n  onSaveFilter: VoidFunction;\n};\n\nconst SettingsFoldersChatFilters: FC<OwnProps> = ({\n  mode,\n  state,\n  dispatch,\n  isActive,\n  onReset,\n  onSaveFilter,\n}) => {\n  const { chatFilter } = state;\n  const { selectedChatIds, selectedChatTypes } = selectChatFilters(state, mode, true);\n\n  const lang = useLang();\n\n  const folderAllOrderedIds = useFolderManagerForOrderedIds(ALL_FOLDER_ID);\n  const folderArchivedOrderedIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n\n  const shouldHideChatTypes = state.folder.isChatList;\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on chats, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    const chatIds = [...folderAllOrderedIds || [], ...folderArchivedOrderedIds || []];\n    return unique([\n      ...selectedChatIds,\n      ...filterChatsByName(lang, chatIds, chatsById, chatFilter),\n    ]);\n  }, [folderAllOrderedIds, folderArchivedOrderedIds, selectedChatIds, lang, chatFilter]);\n\n  const handleFilterChange = useCallback((newFilter: string) => {\n    dispatch({\n      type: 'setChatFilter',\n      payload: newFilter,\n    });\n  }, [dispatch]);\n\n  const handleSelectedIdsChange = useCallback((ids: string[]) => {\n    if (mode === 'included') {\n      dispatch({\n        type: 'setIncludeFilters',\n        payload: { ...state.includeFilters, includedChatIds: ids },\n      });\n    } else {\n      dispatch({\n        type: 'setExcludeFilters',\n        payload: { ...state.excludeFilters, excludedChatIds: ids },\n      });\n    }\n  }, [mode, state, dispatch]);\n\n  const handleSelectedChatTypesChange = useCallback((keys: string[]) => {\n    const newFilters: Record<string, boolean> = {};\n    keys.forEach((key) => {\n      newFilters[key] = true;\n    });\n\n    if (mode === 'included') {\n      dispatch({\n        type: 'setIncludeFilters',\n        payload: {\n          includedChatIds: selectedChatIds,\n          ...newFilters,\n        },\n      });\n    } else {\n      dispatch({\n        type: 'setExcludeFilters',\n        payload: {\n          excludedChatIds: selectedChatIds,\n          ...newFilters,\n        },\n      });\n    }\n  }, [mode, selectedChatIds, dispatch]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  if (!displayedIds) {\n    return <Loading />;\n  }\n\n  return (\n    <SettingsFoldersChatsPicker\n      mode={mode}\n      chatIds={displayedIds}\n      selectedIds={selectedChatIds}\n      selectedChatTypes={selectedChatTypes}\n      filterValue={chatFilter}\n      shouldHideChatTypes={shouldHideChatTypes}\n      onSelectedIdsChange={handleSelectedIdsChange}\n      onSelectedChatTypesChange={handleSelectedChatTypesChange}\n      onFilterChange={handleFilterChange}\n      onSaveFilter={onSaveFilter}\n      isActive={isActive}\n    />\n  );\n};\n\nexport default memo(SettingsFoldersChatFilters);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type { ApiChatlistExportedInvite } from '../../../../api/types';\nimport type {\n  FolderEditDispatch,\n  FoldersState,\n} from '../../../../hooks/reducers/useFoldersReducer';\n\nimport { STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { isUserId } from '../../../../global/helpers';\nimport { selectCanShareFolder } from '../../../../global/selectors';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { findIntersectionWithSet } from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport {\n  EXCLUDED_CHAT_TYPES,\n  INCLUDED_CHAT_TYPES,\n  selectChatFilters,\n} from '../../../../hooks/reducers/useFoldersReducer';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport GroupChatInfo from '../../../common/GroupChatInfo';\nimport PrivateChatInfo from '../../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport InputText from '../../../ui/InputText';\nimport ListItem from '../../../ui/ListItem';\nimport ShowMoreButton from '../../../ui/ShowMoreButton';\nimport Spinner from '../../../ui/Spinner';\n\ntype OwnProps = {\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  onAddIncludedChats: VoidFunction;\n  onAddExcludedChats: VoidFunction;\n  onShareFolder: VoidFunction;\n  onOpenInvite: (url: string) => void;\n  isActive?: boolean;\n  isOnlyInvites?: boolean;\n  onReset: () => void;\n  onBack: () => void;\n  onSaveFolder: (cb?: VoidFunction) => void;\n};\n\ntype StateProps = {\n  loadedActiveChatIds?: string[];\n  loadedArchivedChatIds?: string[];\n  invites?: ApiChatlistExportedInvite[];\n  isRemoved?: boolean;\n  maxInviteLinks: number;\n  maxChatLists: number;\n  chatListCount: number;\n};\n\nconst SUBMIT_TIMEOUT = 500;\n\nconst INITIAL_CHATS_LIMIT = 5;\n\nexport const ERROR_NO_TITLE = 'Please provide a title for this folder.';\nexport const ERROR_NO_CHATS = 'ChatList.Filter.Error.Empty';\n\nconst SettingsFoldersEdit: FC<OwnProps & StateProps> = ({\n  state,\n  dispatch,\n  onAddIncludedChats,\n  onAddExcludedChats,\n  onShareFolder,\n  onOpenInvite,\n  isActive,\n  onReset,\n  isRemoved,\n  onBack,\n  loadedActiveChatIds,\n  isOnlyInvites,\n  loadedArchivedChatIds,\n  invites,\n  maxInviteLinks,\n  maxChatLists,\n  chatListCount,\n  onSaveFolder,\n}) => {\n  const {\n    loadChatlistInvites,\n    openLimitReachedModal,\n    showNotification,\n  } = getActions();\n\n  const isCreating = state.mode === 'create';\n  const isEditingChatList = state.folder.isChatList;\n\n  const [isIncludedChatsListExpanded, setIsIncludedChatsListExpanded] = useState(false);\n  const [isExcludedChatsListExpanded, setIsExcludedChatsListExpanded] = useState(false);\n\n  useEffect(() => {\n    if (isRemoved) {\n      onReset();\n    }\n  }, [isRemoved, onReset]);\n\n  useEffect(() => {\n    if (isActive && state.folderId && state.folder.isChatList) {\n      loadChatlistInvites({ folderId: state.folderId });\n    }\n  }, [isActive, state.folder.isChatList, state.folderId]);\n\n  const {\n    selectedChatIds: includedChatIds,\n    selectedChatTypes: includedChatTypes,\n  } = selectChatFilters(state, 'included');\n  const {\n    selectedChatIds: excludedChatIds,\n    selectedChatTypes: excludedChatTypes,\n  } = selectChatFilters(state, 'excluded');\n\n  useEffect(() => {\n    setIsIncludedChatsListExpanded(false);\n    setIsExcludedChatsListExpanded(false);\n  }, [state.folderId]);\n\n  const [visibleIncludedChatIds, visibleExcludedChatIds] = useMemo(() => {\n    const allLoadedChatsSet = new Set([\n      ...(loadedActiveChatIds || []),\n      ...(loadedArchivedChatIds || []),\n    ]);\n\n    const loadedIncludedChatIds = findIntersectionWithSet(includedChatIds, allLoadedChatsSet);\n    const loadedExcludedChatIds = findIntersectionWithSet(excludedChatIds, allLoadedChatsSet);\n\n    return [\n      isIncludedChatsListExpanded\n        ? loadedIncludedChatIds\n        : loadedIncludedChatIds.slice(0, INITIAL_CHATS_LIMIT - includedChatTypes.length),\n      isExcludedChatsListExpanded\n        ? loadedExcludedChatIds\n        : loadedExcludedChatIds.slice(0, INITIAL_CHATS_LIMIT - excludedChatTypes.length),\n    ];\n  }, [\n    excludedChatIds, includedChatIds, includedChatTypes, excludedChatTypes,\n    isExcludedChatsListExpanded, isIncludedChatsListExpanded,\n    loadedActiveChatIds, loadedArchivedChatIds,\n  ]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack,\n  });\n\n  const handleChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const { currentTarget } = event;\n    dispatch({ type: 'setTitle', payload: currentTarget.value.trim() });\n  }, [dispatch]);\n\n  const handleSubmit = useCallback(() => {\n    dispatch({ type: 'setIsLoading', payload: true });\n\n    onSaveFolder(() => {\n      setTimeout(() => {\n        onReset();\n      }, SUBMIT_TIMEOUT);\n    });\n  }, [dispatch, onSaveFolder, onReset]);\n\n  const handleCreateInviteClick = useCallback(() => {\n    if (!invites) {\n      if (isCreating) {\n        onSaveFolder(onShareFolder);\n      }\n      return;\n    }\n\n    // Ignoring global updates is a known drawback here\n    if (!selectCanShareFolder(getGlobal(), state.folderId!)) {\n      showNotification({ message: lang('ChatList.Filter.InviteLink.IncludeExcludeError') });\n      return;\n    }\n\n    if (chatListCount >= maxChatLists && !state.folder.isChatList) {\n      openLimitReachedModal({\n        limit: 'chatlistJoined',\n      });\n      return;\n    }\n\n    if (invites.length < maxInviteLinks) {\n      if (state.isTouched) {\n        onSaveFolder(onShareFolder);\n      } else {\n        onShareFolder();\n      }\n      return;\n    }\n\n    openLimitReachedModal({\n      limit: 'chatlistInvites',\n    });\n  }, [\n    invites, state.folderId, state.isTouched, chatListCount, maxInviteLinks, isCreating, onSaveFolder,\n    onShareFolder, lang, maxChatLists, state.folder.isChatList,\n  ]);\n\n  const handleEditInviteClick = useCallback((e: React.MouseEvent<HTMLElement>, url: string) => {\n    if (state.isTouched) {\n      onSaveFolder(() => onOpenInvite(url));\n    } else {\n      onOpenInvite(url);\n    }\n  }, [onSaveFolder, onOpenInvite, state.isTouched]);\n\n  function renderChatType(key: string, mode: 'included' | 'excluded') {\n    const chatType = mode === 'included'\n      ? INCLUDED_CHAT_TYPES.find(({ key: typeKey }) => typeKey === key)\n      : EXCLUDED_CHAT_TYPES.find(({ key: typeKey }) => typeKey === key);\n\n    if (!chatType) {\n      return undefined;\n    }\n\n    return (\n      <ListItem\n        key={chatType.key}\n        className=\"settings-folders-list-item mb-1\"\n        icon={chatType.icon}\n        narrow\n        inactive\n      >\n        {lang(chatType.title)}\n      </ListItem>\n    );\n  }\n\n  function renderChats(mode: 'included' | 'excluded') {\n    const selectedChatTypes = mode === 'included' ? includedChatTypes : excludedChatTypes;\n    const visibleChatIds = mode === 'included' ? visibleIncludedChatIds : visibleExcludedChatIds;\n\n    const isExpanded = mode === 'included' ? isIncludedChatsListExpanded : isExcludedChatsListExpanded;\n    const allChatIds = mode === 'included' ? includedChatIds : excludedChatIds;\n    const leftChatsCount = allChatIds.length - visibleChatIds.length;\n    const clickHandler = mode === 'included'\n      ? () => setIsIncludedChatsListExpanded(true)\n      : () => setIsExcludedChatsListExpanded(true);\n\n    return (\n      <>\n        {selectedChatTypes.map((key) => renderChatType(key, mode))}\n        {visibleChatIds.map((id) => (\n          <ListItem\n            className=\"settings-folders-list-item mb-1\"\n            narrow\n            inactive\n          >\n            {isUserId(id) ? (\n              <PrivateChatInfo avatarSize=\"small\" userId={id} />\n            ) : (\n              <GroupChatInfo avatarSize=\"small\" chatId={id} />\n            )}\n          </ListItem>\n        ))}\n        {(!isExpanded && leftChatsCount > 0) && (\n          <ShowMoreButton\n            count={leftChatsCount}\n            itemName=\"chat\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={clickHandler}\n          />\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content no-border custom-scroll\">\n        <div className=\"settings-content-header\">\n          <AnimatedIcon\n            size={STICKER_SIZE_FOLDER_SETTINGS}\n            tgsUrl={LOCAL_TGS_URLS.FoldersNew}\n            play={String(state.folderId)}\n            className=\"settings-content-icon\"\n          />\n\n          {isCreating && (\n            <p className=\"settings-item-description mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('FilterIncludeInfo')}\n            </p>\n          )}\n\n          <InputText\n            className=\"mb-0\"\n            label={lang('FilterNameHint')}\n            value={state.folder.title}\n            onChange={handleChange}\n            error={state.error && state.error === ERROR_NO_TITLE ? ERROR_NO_TITLE : undefined}\n          />\n        </div>\n\n        {!isOnlyInvites && (\n          <div className=\"settings-item pt-3\">\n            {state.error && state.error === ERROR_NO_CHATS && (\n              <p className=\"settings-item-description color-danger mb-2\" dir={lang.isRtl ? 'rtl' : undefined}>\n                {lang(state.error)}\n              </p>\n            )}\n\n            <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterInclude')}</h4>\n\n            <ListItem\n              className=\"settings-folders-list-item color-primary mb-0\"\n              icon=\"add\"\n              onClick={onAddIncludedChats}\n            >\n              {lang('FilterAddChats')}\n            </ListItem>\n\n            {renderChats('included')}\n          </div>\n        )}\n\n        {!isOnlyInvites && !isEditingChatList && (\n          <div className=\"settings-item pt-3\">\n            <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterExclude')}</h4>\n\n            <ListItem\n              className=\"settings-folders-list-item color-primary mb-0\"\n              icon=\"add\"\n              onClick={onAddExcludedChats}\n            >\n              {lang('FilterAddChats')}\n            </ListItem>\n\n            {renderChats('excluded')}\n          </div>\n        )}\n\n        <div className=\"settings-item pt-3\">\n          <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('FolderLinkScreen.Title')}\n          </h4>\n\n          <ListItem\n            className=\"settings-folders-list-item color-primary mb-0\"\n            icon=\"add\"\n            onClick={handleCreateInviteClick}\n          >\n            {lang('ChatListFilter.CreateLinkNew')}\n          </ListItem>\n\n          {invites?.map((invite) => (\n            <ListItem\n              className=\"settings-folders-list-item mb-0\"\n              icon=\"link\"\n              multiline\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={handleEditInviteClick}\n              clickArg={invite.url}\n            >\n              <span className=\"title\" dir=\"auto\">{invite.title || invite.url}</span>\n              <span className=\"subtitle\">\n                {lang('ChatListFilter.LinkLabelChatCount', invite.peerIds.length, 'i')}\n              </span>\n            </ListItem>\n          ))}\n\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={Boolean(state.isTouched)}\n        disabled={state.isLoading}\n        onClick={handleSubmit}\n        ariaLabel={state.mode === 'edit' ? 'Save changes' : 'Create folder'}\n      >\n        {state.isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { state }): StateProps => {\n    const { listIds } = global.chats;\n    const { byId, invites } = global.chatFolders;\n    const chatListCount = Object.values(byId).reduce((acc, el) => acc + (el.isChatList ? 1 : 0), 0);\n\n    return {\n      loadedActiveChatIds: listIds.active,\n      loadedArchivedChatIds: listIds.archived,\n      invites: state.folderId ? (invites[state.folderId] || MEMO_EMPTY_ARRAY) : undefined,\n      isRemoved: state.folderId !== undefined && !byId[state.folderId],\n      maxInviteLinks: selectCurrentLimit(global, 'chatlistInvites'),\n      maxChatLists: selectCurrentLimit(global, 'chatlistJoined'),\n      chatListCount,\n    };\n  },\n)(SettingsFoldersEdit));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { ApiChatFolder } from '../../../../api/types';\n\nimport { ALL_FOLDER_ID, STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { getFolderDescriptionText } from '../../../../global/helpers';\nimport { selectIsCurrentUserPremium } from '../../../../global/selectors';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { isBetween } from '../../../../util/math';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { throttle } from '../../../../util/schedulers';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport renderText from '../../../common/helpers/renderText';\n\nimport { useFolderManagerForChatsCount } from '../../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\nimport usePrevious from '../../../../hooks/usePrevious';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Button from '../../../ui/Button';\nimport Draggable from '../../../ui/Draggable';\nimport ListItem from '../../../ui/ListItem';\nimport Loading from '../../../ui/Loading';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onCreateFolder: () => void;\n  onEditFolder: (folder: ApiChatFolder) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  folderIds?: number[];\n  foldersById: Record<number, ApiChatFolder>;\n  recommendedChatFolders?: ApiChatFolder[];\n  maxFolders: number;\n  isPremium?: boolean;\n};\n\ntype SortState = {\n  orderedFolderIds?: number[];\n  dragOrderIds?: number[];\n  draggedIndex?: number;\n};\n\nconst FOLDER_HEIGHT_PX = 68;\nconst runThrottledForLoadRecommended = throttle((cb) => cb(), 60000, true);\n\nconst SettingsFoldersMain: FC<OwnProps & StateProps> = ({\n  isActive,\n  onCreateFolder,\n  onEditFolder,\n  onReset,\n  folderIds,\n  foldersById,\n  isPremium,\n  recommendedChatFolders,\n  maxFolders,\n}) => {\n  const {\n    loadRecommendedChatFolders,\n    addChatFolder,\n    openLimitReachedModal,\n    openDeleteChatFolderModal,\n    sortChatFolders,\n  } = getActions();\n\n  const [state, setState] = useState<SortState>({\n    orderedFolderIds: folderIds,\n    dragOrderIds: folderIds,\n    draggedIndex: undefined,\n  });\n\n  const prevFolderIds = usePrevious(folderIds);\n\n  // Sync folders state after changing folders in other clients\n  useEffect(() => {\n    if (prevFolderIds !== folderIds) {\n      setState({\n        orderedFolderIds: folderIds,\n        dragOrderIds: folderIds,\n        draggedIndex: undefined,\n      });\n    }\n  }, [prevFolderIds, folderIds, state.orderedFolderIds?.length]);\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottledForLoadRecommended(() => {\n      loadRecommendedChatFolders();\n    });\n  }, [loadRecommendedChatFolders]);\n\n  const handleCreateFolder = useCallback(() => {\n    if (Object.keys(foldersById).length >= maxFolders - 1) {\n      openLimitReachedModal({\n        limit: 'dialogFilters',\n      });\n\n      return;\n    }\n\n    onCreateFolder();\n  }, [foldersById, maxFolders, onCreateFolder, openLimitReachedModal]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const chatsCountByFolderId = useFolderManagerForChatsCount();\n  const userFolders = useMemo(() => {\n    if (!folderIds) {\n      return undefined;\n    }\n\n    if (folderIds.length <= 1) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return folderIds.map((id) => {\n      const folder = foldersById[id];\n\n      if (id === ALL_FOLDER_ID) {\n        return {\n          id,\n          title: lang('FilterAllChats'),\n        };\n      }\n\n      return {\n        id: folder.id,\n        title: folder.title,\n        subtitle: getFolderDescriptionText(lang, folder, chatsCountByFolderId[folder.id]),\n        isChatList: folder.isChatList,\n      };\n    });\n  }, [folderIds, foldersById, lang, chatsCountByFolderId]);\n\n  const handleCreateFolderFromRecommended = useCallback((folder: ApiChatFolder) => {\n    if (Object.keys(foldersById).length >= maxFolders - 1) {\n      openLimitReachedModal({\n        limit: 'dialogFilters',\n      });\n\n      return;\n    }\n\n    addChatFolder({ folder });\n  }, [foldersById, maxFolders, addChatFolder, openLimitReachedModal]);\n\n  const handleDrag = useCallback((translation: { x: number; y: number }, id: string | number) => {\n    const delta = Math.round(translation.y / FOLDER_HEIGHT_PX);\n    const index = state.orderedFolderIds?.indexOf(id as number) || 0;\n    const dragOrderIds = state.orderedFolderIds?.filter((folderId) => folderId !== id);\n\n    if (!dragOrderIds || !isBetween(index + delta, 0, folderIds?.length || 0)) {\n      return;\n    }\n\n    dragOrderIds.splice(index + delta + (isPremium ? 0 : 1), 0, id as number);\n    setState((current) => ({\n      ...current,\n      draggedIndex: index,\n      dragOrderIds,\n    }));\n  }, [folderIds?.length, isPremium, state.orderedFolderIds]);\n\n  const handleDragEnd = useCallback(() => {\n    setState((current) => {\n      sortChatFolders({ folderIds: current.dragOrderIds! });\n\n      return {\n        ...current,\n        orderedFolderIds: current.dragOrderIds,\n        draggedIndex: undefined,\n      };\n    });\n  }, [sortChatFolders]);\n\n  const canCreateNewFolder = useMemo(() => {\n    return !isPremium || Object.keys(foldersById).length < maxFolders - 1;\n  }, [foldersById, isPremium, maxFolders]);\n\n  return (\n    <div className=\"settings-content no-border custom-scroll\">\n      <div className=\"settings-content-header\">\n        <AnimatedIcon\n          size={STICKER_SIZE_FOLDER_SETTINGS}\n          tgsUrl={LOCAL_TGS_URLS.FoldersAll}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('CreateNewFilterInfo')}\n        </p>\n\n        {canCreateNewFolder && (\n          <Button\n          // TODO: Refactor button component to handle icon placemenet with props\n            className=\"with-icon mb-2\"\n            color=\"primary\"\n            size=\"smaller\"\n            pill\n            fluid\n            onClick={handleCreateFolder}\n            isRtl={lang.isRtl}\n          >\n            <i className=\"icon icon-add\" />\n            {lang('CreateNewFilter')}\n          </Button>\n        )}\n      </div>\n\n      <div className=\"settings-item pt-3\">\n        <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('Filters')}</h4>\n\n        <div className=\"settings-sortable-container\" style={`height: ${(folderIds?.length || 0) * FOLDER_HEIGHT_PX}px`}>\n          {userFolders?.length ? userFolders.map((folder, i) => {\n            const isBlocked = i > maxFolders - 1;\n            const isDragged = state.draggedIndex === i;\n            const draggedTop = (state.orderedFolderIds?.indexOf(folder.id) ?? 0) * FOLDER_HEIGHT_PX;\n            const top = (state.dragOrderIds?.indexOf(folder.id) ?? 0) * FOLDER_HEIGHT_PX;\n\n            if (folder.id === ALL_FOLDER_ID) {\n              return (\n                <Draggable\n                  key={folder.id}\n                  id={folder.id}\n                  onDrag={handleDrag}\n                  onDragEnd={handleDragEnd}\n                  style={`top: ${isDragged ? draggedTop : top}px;`}\n                  knobStyle={`${lang.isRtl ? 'left' : 'right'}: 0.375rem;`}\n                  isDisabled={!isPremium || !isActive}\n                >\n                  <ListItem\n                    key={folder.id}\n                    className=\"drag-item mb-2 no-icon settings-sortable-item\"\n                    narrow\n                    inactive\n                    multiline\n                    isStatic\n                  >\n                    <span className=\"title\">\n                      {folder.title}\n                    </span>\n                    <span className=\"subtitle\">{lang('FoldersAllChatsDesc')}</span>\n                  </ListItem>\n                </Draggable>\n              );\n            }\n\n            return (\n              <Draggable\n                key={folder.id}\n                id={folder.id}\n                onDrag={handleDrag}\n                onDragEnd={handleDragEnd}\n                style={`top: ${isDragged ? draggedTop : top}px;`}\n                knobStyle={`${lang.isRtl ? 'left' : 'right'}: 3rem;`}\n                isDisabled={isBlocked || !isActive}\n              >\n                <ListItem\n                  className=\"drag-item mb-2 no-icon settings-sortable-item\"\n                  narrow\n                  secondaryIcon=\"more\"\n                  multiline\n                  contextActions={[\n                    {\n                      handler: () => {\n                        openDeleteChatFolderModal({ folderId: folder.id });\n                      },\n                      destructive: true,\n                      title: lang('Delete'),\n                      icon: 'delete',\n                    },\n                  ]}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => {\n                    if (isBlocked) {\n                      openLimitReachedModal({\n                        limit: 'dialogFilters',\n                      });\n                    } else {\n                      onEditFolder(foldersById[folder.id]);\n                    }\n                  }}\n                >\n                  <span className=\"title\">\n                    {renderText(folder.title, ['emoji'])}\n                    {isBlocked && <i className=\"icon icon-lock-badge settings-folders-blocked-icon\" />}\n                  </span>\n                  <span className=\"subtitle\">\n                    {folder.isChatList && <i className=\"icon icon-link mr-1\" />}\n                    {folder.subtitle}\n                  </span>\n                </ListItem>\n              </Draggable>\n            );\n          }) : userFolders && !userFolders.length ? (\n            <p className=\"settings-item-description my-4\" dir=\"auto\">\n              You have no folders yet.\n            </p>\n          ) : <Loading />}\n        </div>\n      </div>\n\n      {(recommendedChatFolders && Boolean(recommendedChatFolders.length)) && (\n        <div className=\"settings-item pt-3\">\n          <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('FilterRecommended')}\n          </h4>\n\n          {recommendedChatFolders.map((folder) => (\n            <ListItem\n              className=\"mb-2\"\n              narrow\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleCreateFolderFromRecommended(folder)}\n            >\n              <div className=\"settings-folders-recommended-item\">\n                <div className=\"multiline-item\">\n                  <span className=\"title\">{renderText(folder.title, ['emoji'])}</span>\n                  <span className=\"subtitle\">{folder.description}</span>\n                </div>\n\n                <Button\n                  className=\"px-3\"\n                  color=\"primary\"\n                  size=\"tiny\"\n                  pill\n                  fluid\n                  isRtl={lang.isRtl}\n                >\n                  {lang('Add')}\n                </Button>\n              </div>\n            </ListItem>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      orderedIds: folderIds,\n      byId: foldersById,\n      recommended: recommendedChatFolders,\n    } = global.chatFolders;\n\n    return {\n      folderIds,\n      foldersById,\n      isPremium: selectIsCurrentUserPremium(global),\n      recommendedChatFolders,\n      maxFolders: selectCurrentLimit(global, 'dialogFilters'),\n    };\n  },\n)(SettingsFoldersMain));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport { STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { isChatChannel, isUserBot } from '../../../../global/helpers';\nimport {\n  selectCanInviteToChat, selectChat,\n  selectChatFolder,\n  selectTabState, selectUser,\n} from '../../../../global/selectors';\nimport { partition } from '../../../../util/iteratees';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport LinkField from '../../../common/LinkField';\nimport Picker from '../../../common/Picker';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport Spinner from '../../../ui/Spinner';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: VoidFunction;\n};\n\ntype StateProps = {\n  folderId?: number;\n  title?: string;\n  includedChatIds?: string[];\n  pinnedChatIds?: string[];\n  peerIds?: string[];\n  url?: string;\n  isLoading?: boolean;\n};\n\nconst SettingsShareChatlist: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  folderId,\n  title,\n  includedChatIds,\n  pinnedChatIds,\n  peerIds,\n  url,\n  isLoading,\n}) => {\n  const {\n    createChatlistInvite, deleteChatlistInvite, editChatlistInvite, showNotification,\n  } = getActions();\n  const lang = useLang();\n\n  const [isTouched, setIsTouched] = useState(false);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  useEffect(() => {\n    if (!isLoading) {\n      setIsTouched(false);\n    }\n  }, [isLoading]);\n\n  useEffect(() => {\n    if (!url && folderId && isActive) {\n      createChatlistInvite({ folderId });\n    }\n  }, [folderId, isActive, url]);\n\n  const handleRevoke = useLastCallback(() => {\n    if (!url || !folderId) return;\n\n    deleteChatlistInvite({ folderId, url });\n    onReset();\n  });\n\n  const itemIds = useMemo(() => {\n    return (includedChatIds || []).concat(pinnedChatIds || []);\n  }, [includedChatIds, pinnedChatIds]);\n\n  const [unlockedIds, lockedIds] = useMemo(() => {\n    const global = getGlobal();\n    return partition(itemIds, (id) => selectCanInviteToChat(global, id));\n  }, [itemIds]);\n\n  const [selectedIds, setSelectedIds] = useState<string[]>(peerIds || []);\n\n  const isFirstRenderRef = useRef(true);\n  useEffectWithPrevDeps(([prevUrl]) => {\n    if (prevUrl !== url) {\n      isFirstRenderRef.current = true;\n    }\n    if (!isFirstRenderRef.current) return;\n    isFirstRenderRef.current = false;\n    if (!url) {\n      setSelectedIds(unlockedIds);\n    } else if (peerIds) {\n      setSelectedIds(peerIds);\n    }\n  }, [url, unlockedIds, peerIds]);\n\n  const handleClickDisabled = useLastCallback((id: string) => {\n    const global = getGlobal();\n    const user = selectUser(global, id);\n    const chat = selectChat(global, id);\n    if (user && isUserBot(user)) {\n      showNotification({\n        message: lang('FolderLinkScreen.AlertTextUnavailableBot'),\n      });\n    } else if (user) {\n      showNotification({\n        message: lang('FolderLinkScreen.AlertTextUnavailableUser'),\n      });\n    } else if (chat && isChatChannel(chat)) {\n      showNotification({\n        message: lang('FolderLinkScreen.AlertTextUnavailablePublicChannel'),\n      });\n    } else {\n      showNotification({\n        message: lang('FolderLinkScreen.AlertTextUnavailablePublicGroup'),\n      });\n    }\n  });\n\n  const handleSelectedIdsChange = useLastCallback((ids: string[]) => {\n    setSelectedIds(ids);\n    setIsTouched(true);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    if (!folderId || !url || !isTouched) return;\n    editChatlistInvite({ folderId, peerIds: selectedIds, url });\n  });\n\n  const chatsCount = selectedIds.length;\n  const isDisabled = !chatsCount || isLoading;\n\n  return (\n    <div className=\"settings-content no-border custom-scroll SettingsFoldersChatsPicker\">\n      <div className=\"settings-content-header\">\n        <AnimatedIcon\n          size={STICKER_SIZE_FOLDER_SETTINGS}\n          tgsUrl={LOCAL_TGS_URLS.FoldersShare}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {renderText(lang('FolderLinkScreen.TitleDescriptionSelected', [title, chatsCount]),\n            ['simple_markdown'])}\n        </p>\n      </div>\n\n      <LinkField\n        className=\"settings-item\"\n        link={!url ? lang('Loading') : url}\n        withShare\n        onRevoke={handleRevoke}\n        isDisabled={!chatsCount || isTouched}\n      />\n\n      <div className=\"settings-item settings-item-chatlist\">\n        <Picker\n          itemIds={itemIds}\n          lockedIds={lockedIds}\n          onSelectedIdsChange={handleSelectedIdsChange}\n          selectedIds={selectedIds}\n          onDisabledClick={handleClickDisabled}\n          isRoundCheckbox\n        />\n      </div>\n\n      <FloatingActionButton\n        isShown={isLoading || isTouched}\n        disabled={isDisabled}\n        onClick={handleSubmit}\n        ariaLabel=\"Save changes\"\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { folderId, url, isLoading } = selectTabState(global).shareFolderScreen || {};\n    const folder = folderId ? selectChatFolder(global, folderId) : undefined;\n    const invite = folderId ? global.chatFolders.invites[folderId]?.find((i) => i.url === url) : undefined;\n\n    return {\n      folderId,\n      title: folder?.title,\n      includedChatIds: folder?.includedChatIds,\n      pinnedChatIds: folder?.pinnedChatIds,\n      url,\n      isLoading,\n      peerIds: invite?.peerIds,\n    };\n  },\n)(SettingsShareChatlist));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChatFolder } from '../../../../api/types';\nimport type { FolderEditDispatch, FoldersState } from '../../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../../types';\n\nimport { selectChatFilters } from '../../../../hooks/reducers/useFoldersReducer';\n\nimport SettingsFoldersChatFilters from './SettingsFoldersChatFilters';\nimport SettingsFoldersEdit, { ERROR_NO_CHATS, ERROR_NO_TITLE } from './SettingsFoldersEdit';\nimport SettingsFoldersMain from './SettingsFoldersMain';\nimport SettingsShareChatlist from './SettingsShareChatlist';\n\nimport './SettingsFolders.scss';\n\nconst TRANSITION_DURATION = 200;\n\nexport type OwnProps = {\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsFolders: FC<OwnProps> = ({\n  currentScreen,\n  shownScreen,\n  state,\n  dispatch,\n  isActive,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    openShareChatFolderModal,\n    editChatFolder,\n    addChatFolder,\n  } = getActions();\n\n  const handleReset = useCallback(() => {\n    if (\n      currentScreen === SettingsScreens.FoldersCreateFolder\n      || currentScreen === SettingsScreens.FoldersEditFolder\n      || currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      || currentScreen === SettingsScreens.FoldersEditFolderInvites\n    ) {\n      setTimeout(() => {\n        dispatch({ type: 'reset' });\n      }, TRANSITION_DURATION);\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersIncludedChats\n      || currentScreen === SettingsScreens.FoldersExcludedChats\n    ) {\n      if (state.mode === 'create') {\n        onScreenSelect(SettingsScreens.FoldersCreateFolder);\n      } else {\n        onScreenSelect(SettingsScreens.FoldersEditFolder);\n      }\n      return;\n    }\n\n    onReset();\n  }, [\n    state.mode, dispatch,\n    currentScreen, onReset, onScreenSelect,\n  ]);\n\n  const isCreating = state.mode === 'create';\n\n  const saveState = useCallback((newState: FoldersState) => {\n    const { title } = newState.folder;\n\n    if (!title) {\n      dispatch({ type: 'setError', payload: ERROR_NO_TITLE });\n      return false;\n    }\n\n    const {\n      selectedChatIds: includedChatIds,\n      selectedChatTypes: includedChatTypes,\n    } = selectChatFilters(newState, 'included');\n\n    if (!includedChatIds.length && !Object.keys(includedChatTypes).length) {\n      dispatch({ type: 'setError', payload: ERROR_NO_CHATS });\n      return false;\n    }\n\n    if (!isCreating) {\n      editChatFolder({ id: newState.folderId!, folderUpdate: newState.folder });\n    } else {\n      addChatFolder({ folder: newState.folder as ApiChatFolder });\n    }\n\n    dispatch({ type: 'setError', payload: undefined });\n    dispatch({ type: 'setIsTouched', payload: false });\n\n    return true;\n  }, [dispatch, isCreating]);\n\n  const handleSaveFolder = useCallback((cb?: NoneToVoidFunction) => {\n    if (!saveState(state)) {\n      return;\n    }\n    cb?.();\n  }, [saveState, state]);\n\n  const handleSaveFilter = useCallback(() => {\n    const newState = dispatch({ type: 'saveFilters' });\n    handleReset();\n    saveState(newState);\n  }, [dispatch, handleReset, saveState]);\n\n  const handleCreateFolder = useCallback(() => {\n    dispatch({ type: 'reset' });\n    onScreenSelect(SettingsScreens.FoldersCreateFolder);\n  }, [onScreenSelect, dispatch]);\n\n  const handleEditFolder = useCallback((folder: ApiChatFolder) => {\n    dispatch({ type: 'editFolder', payload: folder });\n    onScreenSelect(SettingsScreens.FoldersEditFolder);\n  }, [dispatch, onScreenSelect]);\n\n  const handleAddIncludedChats = useCallback(() => {\n    dispatch({ type: 'editIncludeFilters' });\n    onScreenSelect(currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      ? SettingsScreens.FoldersIncludedChatsFromChatList\n      : SettingsScreens.FoldersIncludedChats);\n  }, [currentScreen, dispatch, onScreenSelect]);\n\n  const handleAddExcludedChats = useCallback(() => {\n    dispatch({ type: 'editExcludeFilters' });\n    onScreenSelect(currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      ? SettingsScreens.FoldersExcludedChatsFromChatList\n      : SettingsScreens.FoldersExcludedChats);\n  }, [currentScreen, dispatch, onScreenSelect]);\n\n  const handleShareFolder = useCallback(() => {\n    openShareChatFolderModal({ folderId: state.folderId!, noRequestNextScreen: true });\n    dispatch({ type: 'setIsChatlist', payload: true });\n    onScreenSelect(SettingsScreens.FoldersShare);\n  }, [dispatch, onScreenSelect, state.folderId]);\n\n  const handleOpenInvite = useCallback((url: string) => {\n    openShareChatFolderModal({ folderId: state.folderId!, url, noRequestNextScreen: true });\n    onScreenSelect(SettingsScreens.FoldersShare);\n  }, [onScreenSelect, state.folderId]);\n\n  switch (currentScreen) {\n    case SettingsScreens.Folders:\n      return (\n        <SettingsFoldersMain\n          onCreateFolder={handleCreateFolder}\n          onEditFolder={handleEditFolder}\n          isActive={isActive || [\n            SettingsScreens.FoldersCreateFolder,\n            SettingsScreens.FoldersEditFolder,\n            SettingsScreens.FoldersIncludedChats,\n            SettingsScreens.FoldersExcludedChats,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n    case SettingsScreens.FoldersCreateFolder:\n    case SettingsScreens.FoldersEditFolder:\n    case SettingsScreens.FoldersEditFolderFromChatList:\n    case SettingsScreens.FoldersEditFolderInvites:\n      return (\n        <SettingsFoldersEdit\n          state={state}\n          dispatch={dispatch}\n          onAddIncludedChats={handleAddIncludedChats}\n          onAddExcludedChats={handleAddExcludedChats}\n          onShareFolder={handleShareFolder}\n          onOpenInvite={handleOpenInvite}\n          onReset={handleReset}\n          isActive={isActive || [\n            SettingsScreens.FoldersIncludedChats,\n            SettingsScreens.FoldersExcludedChats,\n          ].includes(shownScreen)}\n          isOnlyInvites={currentScreen === SettingsScreens.FoldersEditFolderInvites}\n          onBack={onReset}\n          onSaveFolder={handleSaveFolder}\n        />\n      );\n    case SettingsScreens.FoldersIncludedChats:\n    case SettingsScreens.FoldersIncludedChatsFromChatList:\n      return (\n        <SettingsFoldersChatFilters\n          mode=\"included\"\n          state={state}\n          dispatch={dispatch}\n          onReset={handleReset}\n          onSaveFilter={handleSaveFilter}\n          isActive={isActive}\n        />\n      );\n    case SettingsScreens.FoldersExcludedChats:\n    case SettingsScreens.FoldersExcludedChatsFromChatList:\n      return (\n        <SettingsFoldersChatFilters\n          mode=\"excluded\"\n          state={state}\n          dispatch={dispatch}\n          onReset={handleReset}\n          onSaveFilter={handleSaveFilter}\n          isActive={isActive}\n        />\n      );\n\n    case SettingsScreens.FoldersShare:\n      return (\n        <SettingsShareChatlist\n          isActive={isActive}\n          onReset={handleReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(SettingsFolders);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport PasswordForm from '../../common/PasswordForm';\nimport PasswordMonkey from '../../common/PasswordMonkey';\n\ntype OwnProps = {\n  error?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  expectedPassword?: string;\n  placeholder?: string;\n  hint?: string;\n  submitLabel?: string;\n  clearError?: NoneToVoidFunction;\n  onSubmit: (password: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst EQUAL_PASSWORD_ERROR = 'Passwords Should Be Equal';\n\nconst SettingsPasswordForm: FC<OwnProps> = ({\n  isActive,\n  onReset,\n  error,\n  isLoading,\n  shouldDisablePasswordManager,\n  expectedPassword,\n  placeholder = 'Current Password',\n  hint,\n  submitLabel,\n  clearError,\n  onSubmit,\n}) => {\n  const [validationError, setValidationError] = useState<string>('');\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n\n  const handleSubmit = useCallback((newPassword) => {\n    if (expectedPassword && newPassword !== expectedPassword) {\n      setValidationError(EQUAL_PASSWORD_ERROR);\n    } else {\n      onSubmit(newPassword);\n    }\n  }, [onSubmit, expectedPassword]);\n\n  const handleClearError = useCallback(() => {\n    if (clearError) {\n      clearError();\n    }\n    setValidationError('');\n  }, [clearError]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content password-form custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <PasswordMonkey isBig isPasswordVisible={shouldShowPassword} />\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <PasswordForm\n          error={validationError || error}\n          hint={hint}\n          placeholder={placeholder}\n          shouldDisablePasswordManager={shouldDisablePasswordManager}\n          submitLabel={submitLabel || lang('Next')}\n          clearError={handleClearError}\n          isLoading={isLoading}\n          isPasswordVisible={shouldShowPassword}\n          shouldResetValue={isActive}\n          onChangePasswordVisibility={setShouldShowPassword}\n          onSubmit={handleSubmit}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasswordForm);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\n\nimport { STICKER_SIZE_PASSCODE } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Button from '../../../ui/Button';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: (forceReturnToChatList?: boolean) => void;\n};\n\nconst SettingsPasscodeCongratulations: FC<OwnProps> = ({\n  isActive, onReset,\n}) => {\n  const lang = useLang();\n\n  const fullReset = useCallback(() => {\n    onReset(true);\n  }, [onReset]);\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          size={STICKER_SIZE_PASSCODE}\n          tgsUrl={LOCAL_TGS_URLS.Congratulations}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Congratulations!\n        </p>\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Now you can lock the app with a passcode so that others can&apos;t open it.\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={fullReset}>{lang('Back')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeCongratulations);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport ListItem from '../../../ui/ListItem';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsPasscodeEnabled: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useLang();\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Local passcode is enabled.\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <ListItem\n          icon=\"edit\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PasscodeChangePasscodeCurrent)}\n        >\n          {lang('Passcode.Change')}\n        </ListItem>\n        <ListItem\n          icon=\"password-off\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PasscodeTurnOff)}\n        >\n          {lang('Passcode.TurnOff')}\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeEnabled);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { STICKER_SIZE_PASSCODE } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport Button from '../../../ui/Button';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  onStart: NoneToVoidFunction;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst SettingsPasscodeStart: FC<OwnProps> = ({\n  isActive, onReset, onStart,\n}) => {\n  const lang = useLang();\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={STICKER_SIZE_PASSCODE}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description\" dir=\"auto\">\n          When you set up an additional passcode, a lock icon will appear on the chats page.\n          Tap it to lock and unlock your Telegram Web A.\n        </p>\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Note: if you forget your local passcode, you&apos;ll need to log out of Telegram Web A and log in again.\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={onStart}>{lang('EnablePasscode')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeStart);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { GlobalState } from '../../../../global/types';\nimport { SettingsScreens } from '../../../../types';\n\nimport { decryptSession } from '../../../../util/passcode';\n\nimport useLang from '../../../../hooks/useLang';\n\nimport SettingsPasscodeForm from '../SettingsPasswordForm';\nimport SettingsPasscodeCongratulations from './SettingsPasscodeCongratulations';\nimport SettingsPasscodeEnabled from './SettingsPasscodeEnabled';\nimport SettingsPasscodeStart from './SettingsPasscodeStart';\n\nexport type OwnProps = {\n  passcode: string;\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  isActive?: boolean;\n  onSetPasscode: (passcode: string) => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = GlobalState['passcode'];\n\nconst SettingsPasscode: FC<OwnProps & StateProps> = ({\n  passcode,\n  currentScreen,\n  shownScreen,\n  error,\n  isActive,\n  isLoading,\n  onScreenSelect,\n  onSetPasscode,\n  onReset,\n}) => {\n  const {\n    setPasscode,\n    clearPasscode,\n    setPasscodeError,\n    clearPasscodeError,\n  } = getActions();\n\n  const lang = useLang();\n\n  const handleStartWizard = useCallback(() => {\n    onSetPasscode('');\n    onScreenSelect(SettingsScreens.PasscodeNewPasscode);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleNewPassword = useCallback((value: string) => {\n    onSetPasscode(value);\n    onScreenSelect(SettingsScreens.PasscodeNewPasscodeConfirm);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleNewPasswordConfirm = useCallback(() => {\n    setPasscode({ passcode });\n    onSetPasscode('');\n    onScreenSelect(SettingsScreens.PasscodeCongratulations);\n  }, [onScreenSelect, onSetPasscode, passcode, setPasscode]);\n\n  const handleChangePasswordCurrent = useCallback((currentPasscode: string) => {\n    onSetPasscode('');\n    decryptSession(currentPasscode).then(() => {\n      onScreenSelect(SettingsScreens.PasscodeChangePasscodeNew);\n    }, () => {\n      setPasscodeError({\n        error: lang('PasscodeController.Error.Current'),\n      });\n    });\n  }, [lang, onScreenSelect, onSetPasscode, setPasscodeError]);\n\n  const handleChangePasswordNew = useCallback((value: string) => {\n    onSetPasscode(value);\n    onScreenSelect(SettingsScreens.PasscodeChangePasscodeConfirm);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleTurnOff = useCallback((currentPasscode: string) => {\n    decryptSession(currentPasscode).then(() => {\n      clearPasscode();\n      onScreenSelect(SettingsScreens.Privacy);\n    }, () => {\n      setPasscodeError({\n        error: lang('PasscodeController.Error.Current'),\n      });\n    });\n  }, [clearPasscode, lang, onScreenSelect, setPasscodeError]);\n\n  switch (currentScreen) {\n    case SettingsScreens.PasscodeDisabled:\n      return (\n        <SettingsPasscodeStart\n          onStart={handleStartWizard}\n          isActive={isActive || [\n            SettingsScreens.PasscodeNewPasscode,\n            SettingsScreens.PasscodeNewPasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeNewPasscode:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          placeholder={lang('EnterNewPasscode')}\n          submitLabel={lang('Continue')}\n          onSubmit={handleNewPassword}\n          isActive={isActive || [\n            SettingsScreens.PasscodeNewPasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeNewPasscodeConfirm:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          expectedPassword={passcode}\n          placeholder={lang('ReEnterYourPasscode')}\n          submitLabel={lang('Continue')}\n          isLoading={isLoading}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeCongratulations:\n      return (\n        <SettingsPasscodeCongratulations\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeEnabled:\n      return (\n        <SettingsPasscodeEnabled\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeCurrent,\n            SettingsScreens.PasscodeChangePasscodeNew,\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n            SettingsScreens.PasscodeTurnOff,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeCurrent:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          error={error}\n          clearError={clearPasscodeError}\n          placeholder={lang('PasscodeController.Current.Placeholder')}\n          onSubmit={handleChangePasswordCurrent}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeNew,\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeNew:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          placeholder={lang('PleaseEnterNewFirstPassword')}\n          onSubmit={handleChangePasswordNew}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeConfirm:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          expectedPassword={passcode}\n          placeholder={lang('PasscodeController.ReEnterPasscode.Placeholder')}\n          isLoading={isLoading}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeTurnOff:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          error={error ? lang(error) : undefined}\n          clearError={clearPasscodeError}\n          placeholder={lang('PasscodeController.Current.Placeholder')}\n          onSubmit={handleTurnOff}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => ({ ...global.passcode }),\n)(SettingsPasscode));\n","import type { ApiSession } from '../../../../api/types';\nimport type { DeviceType } from '../../../../types/icons/device';\n\nexport default function getSessionIcon(session: ApiSession): DeviceType {\n  const platform = session.platform.toLowerCase();\n  const device = session.deviceModel.toLowerCase();\n  const systemVersion = session.systemVersion.toLowerCase();\n\n  if (device.includes('xbox')) {\n    return 'xbox';\n  }\n\n  if (device.includes('chrome') && !device.includes('chromebook')) {\n    return 'chrome';\n  }\n  if (device.includes('brave')) {\n    return 'brave';\n  }\n  if (device.includes('vivaldi')) {\n    return 'vivaldi';\n  }\n  if (device.includes('safari')) {\n    return 'safari';\n  }\n  if (device.includes('firefox')) {\n    return 'firefox';\n  }\n  if (device.includes('opera')) {\n    return 'opera';\n  }\n  if (device.includes('samsungbrowser')) {\n    return 'samsung';\n  }\n  if (platform.includes('android')) {\n    return 'android';\n  }\n  if (\n    device.includes('iphone')\n    || device.includes('ipad')\n    || platform.includes('ios')\n    || platform.includes('macos')\n    || systemVersion.includes('macos')\n  ) {\n    return 'apple';\n  }\n  if (platform.includes('ubuntu') || systemVersion.includes('ubuntu')) {\n    return 'ubuntu';\n  }\n  if (platform.includes('linux') || systemVersion.includes('linux')) {\n    return 'linux';\n  }\n  if (platform.includes('windows') || systemVersion.includes('windows')) {\n    return 'windows';\n  }\n\n  return 'unknown';\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"SettingsActiveSession\":\"P9I8aybVU7NyFiMWiyU2\",\"settingsActiveSession\":\"P9I8aybVU7NyFiMWiyU2\",\"iconDevice\":\"a633Zas_0v2MAAY277vj\",\"iconDevice__android\":\"GUI0ogXbRdxQ2RGy8fGv\",\"iconDeviceAndroid\":\"GUI0ogXbRdxQ2RGy8fGv\",\"iconDevice__apple\":\"emCcCPeQ7_9DHBonyO02\",\"iconDeviceApple\":\"emCcCPeQ7_9DHBonyO02\",\"iconDevice__brave\":\"OMEQQMEIcjln7GIyfO3Q\",\"iconDeviceBrave\":\"OMEQQMEIcjln7GIyfO3Q\",\"iconDevice__chrome\":\"XEQtza6nFt8ptPkvbi2w\",\"iconDeviceChrome\":\"XEQtza6nFt8ptPkvbi2w\",\"iconDevice__edge\":\"iHueuVDDSF_BaK2Wa06i\",\"iconDeviceEdge\":\"iHueuVDDSF_BaK2Wa06i\",\"iconDevice__firefox\":\"KM9rrbhNSrNOW8roXGo_\",\"iconDeviceFirefox\":\"KM9rrbhNSrNOW8roXGo_\",\"iconDevice__linux\":\"JzdHedSfMsVcaa8u4X6O\",\"iconDeviceLinux\":\"JzdHedSfMsVcaa8u4X6O\",\"iconDevice__opera\":\"McukeiFuIkeZbxMNzQKK\",\"iconDeviceOpera\":\"McukeiFuIkeZbxMNzQKK\",\"iconDevice__safari\":\"XGWuju_22haQw0Qraor7\",\"iconDeviceSafari\":\"XGWuju_22haQw0Qraor7\",\"iconDevice__samsung\":\"ZZGcTr3P3RJrOwOwFX6r\",\"iconDeviceSamsung\":\"ZZGcTr3P3RJrOwOwFX6r\",\"iconDevice__ubuntu\":\"OPtbMfpfiWN3dxilMOPX\",\"iconDeviceUbuntu\":\"OPtbMfpfiWN3dxilMOPX\",\"iconDevice__unknown\":\"xoc1kuf1XAKh_dhO758U\",\"iconDeviceUnknown\":\"xoc1kuf1XAKh_dhO758U\",\"iconDevice__vivaldi\":\"Y25gBvz9xzZicoJgQf8Y\",\"iconDeviceVivaldi\":\"Y25gBvz9xzZicoJgQf8Y\",\"iconDevice__windows\":\"dKbtoO2xjdhL8W2mqyxr\",\"iconDeviceWindows\":\"dKbtoO2xjdhL8W2mqyxr\",\"iconDevice__xbox\":\"FhLv8AIUHzsoTX8b0zdA\",\"iconDeviceXbox\":\"FhLv8AIUHzsoTX8b0zdA\",\"title\":\"b9iUjEhCpOrQ4dPhn2KU\",\"note\":\"hTTCWbngkwJoEwtGFD9o\",\"date\":\"pUv5oVVNDZ5lBRzNzx3X\",\"box\":\"e32uLjclYAYuxxW1CAex\",\"actionHeader\":\"xwSMwr4aHsrRVIVInLEo\",\"actionName\":\"tSrCe7E_Iom1nGuh2Gs3\",\"headerButton\":\"N0buK669iHOZ1hN_H7Ik\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dateFormat';\nimport getSessionIcon from './helpers/getSessionIcon';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\n\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Switcher from '../../ui/Switcher';\n\nimport styles from './SettingsActiveSession.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  hash?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  session?: ApiSession;\n};\n\nconst SettingsActiveSession: FC<OwnProps & StateProps> = ({\n  isOpen, session, onClose,\n}) => {\n  const { changeSessionSettings, terminateAuthorization } = getActions();\n  const lang = useLang();\n\n  const renderingSession = useCurrentOrPrev(session, true);\n\n  const handleSecretChatsStateChange = useCallback(() => {\n    changeSessionSettings({\n      hash: session!.hash,\n      areSecretChatsEnabled: !session!.areSecretChatsEnabled,\n    });\n  }, [changeSessionSettings, session]);\n\n  const handleCallsStateChange = useCallback(() => {\n    changeSessionSettings({\n      hash: session!.hash,\n      areCallsEnabled: !session!.areCallsEnabled,\n    });\n  }, [changeSessionSettings, session]);\n\n  const handleTerminateSessionClick = useCallback(() => {\n    terminateAuthorization({ hash: session!.hash });\n    onClose();\n  }, [onClose, session, terminateAuthorization]);\n\n  if (!renderingSession) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('SessionPreview.Title')}</div>\n        <Button\n          color=\"danger\"\n          onClick={handleTerminateSessionClick}\n          className={buildClassName('modal-action-button', styles.headerButton)}\n        >\n          {lang('SessionPreview.TerminateSession')}\n        </Button>\n      </div>\n    );\n  }\n  return (\n    <Modal\n      header={renderHeader()}\n      isOpen={isOpen}\n      hasCloseButton\n      onClose={onClose}\n      className={styles.SettingsActiveSession}\n    >\n      <div className={buildClassName(\n        styles.iconDevice,\n        renderingSession && styles[`iconDevice__${getSessionIcon(renderingSession)}`],\n      )}\n      />\n      <h3 className={styles.title} dir=\"auto\">{renderingSession?.deviceModel}</h3>\n      <div className={styles.date} aria-label={lang('PrivacySettings.LastSeen')}>\n        {formatDateTimeToString(renderingSession.dateActive * 1000, lang.code)}\n      </div>\n\n      <dl className={styles.box}>\n        <dt>{lang('SessionPreview.App')}</dt>\n        <dd>\n          {renderingSession?.appName} {renderingSession?.appVersion},{' '}\n          {renderingSession?.platform} {renderingSession?.systemVersion}\n        </dd>\n\n        <dt>{lang('SessionPreview.Ip')}</dt>\n        <dd>{renderingSession?.ip}</dd>\n\n        <dt>{lang('SessionPreview.Location')}</dt>\n        <dd>{renderingSession && getLocation(renderingSession)}</dd>\n      </dl>\n\n      <p className={styles.note}>{lang('SessionPreview.IpDesc')}</p>\n\n      <h4 className={styles.actionHeader}>{lang('AuthSessions.View.AcceptTitle')}</h4>\n\n      <ListItem onClick={handleSecretChatsStateChange}>\n        <span className={styles.actionName}>{lang('SessionPreview.Accept.Secret')}</span>\n        <Switcher\n          id=\"accept_secrets\"\n          label=\"On\"\n          checked={renderingSession.areSecretChatsEnabled}\n        />\n      </ListItem>\n      <ListItem onClick={handleCallsStateChange}>\n        <span className={styles.actionName}>{lang('SessionPreview.Accept.Calls')}</span>\n        <Switcher\n          id=\"accept_calls\"\n          label=\"On\"\n          checked={renderingSession.areCallsEnabled}\n        />\n      </ListItem>\n    </Modal>\n  );\n};\n\nfunction getLocation(session: ApiSession) {\n  return [session.region, session.country].filter(Boolean).join(', ');\n}\n\nexport default memo(withGlobal<OwnProps>((global, { hash }) => {\n  return {\n    session: hash ? global.activeSessions.byHash[hash] : undefined,\n  };\n})(SettingsActiveSession));\n","/* eslint-disable react/jsx-no-bind */\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport { formatPastTimeShort } from '../../../util/dateFormat';\nimport getSessionIcon from './helpers/getSessionIcon';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport SettingsActiveSession from './SettingsActiveSession';\n\nimport './SettingsActiveSessions.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  byHash: Record<string, ApiSession>;\n  orderedHashes: string[];\n  ttlDays?: number;\n};\n\nconst SettingsActiveSessions: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  byHash,\n  orderedHashes,\n  ttlDays,\n}) => {\n  const {\n    terminateAuthorization,\n    terminateAllAuthorizations,\n    changeSessionTtl,\n  } = getActions();\n\n  const lang = useLang();\n  const [isConfirmTerminateAllDialogOpen, openConfirmTerminateAllDialog, closeConfirmTerminateAllDialog] = useFlag();\n  const [openedSessionHash, setOpenedSessionHash] = useState<string | undefined>();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const autoTerminateValue = useMemo(() => {\n    // eslint-disable-next-line max-len\n    // https://github.com/DrKLO/Telegram/blob/96dce2c9aabc33b87db61d830aa087b6b03fe397/TMessagesProj/src/main/java/org/telegram/ui/SessionsActivity.java#L195\n    if (ttlDays === undefined) {\n      return undefined;\n    }\n\n    if (ttlDays <= 7) {\n      return '7';\n    }\n\n    if (ttlDays <= 30) {\n      return '30';\n    }\n\n    if (ttlDays <= 93) {\n      return '90';\n    }\n\n    if (ttlDays <= 183) {\n      return '183';\n    }\n\n    if (ttlDays > 183) {\n      return '365';\n    }\n\n    return undefined;\n  }, [ttlDays]);\n\n  const AUTO_TERMINATE_OPTIONS = useMemo(() => {\n    const options = [{\n      label: lang('Weeks', 1, 'i'),\n      value: '7',\n    }, {\n      label: lang('Months', 1, 'i'),\n      value: '30',\n    }, {\n      label: lang('Months', 3, 'i'),\n      value: '90',\n    }, {\n      label: lang('Months', 6, 'i'),\n      value: '183',\n    }];\n    if (ttlDays && ttlDays >= 365) {\n      options.push({\n        label: lang('Years', 1, 'i'),\n        value: '365',\n      });\n    }\n    return options;\n  }, [lang, ttlDays]);\n\n  const handleTerminateSessionClick = useCallback((hash: string) => {\n    terminateAuthorization({ hash });\n  }, [terminateAuthorization]);\n\n  const handleTerminateAllSessions = useCallback(() => {\n    closeConfirmTerminateAllDialog();\n    terminateAllAuthorizations();\n  }, [closeConfirmTerminateAllDialog, terminateAllAuthorizations]);\n\n  const handleOpenSessionModal = useCallback((hash: string) => {\n    setOpenedSessionHash(hash);\n    openModal();\n  }, [openModal]);\n\n  const handleCloseSessionModal = useCallback(() => {\n    setOpenedSessionHash(undefined);\n    closeModal();\n  }, [closeModal]);\n\n  const handleChangeSessionTtl = useCallback((value: string) => {\n    changeSessionTtl({ days: Number(value) });\n  }, [changeSessionTtl]);\n\n  const currentSession = useMemo(() => {\n    const currentSessionHash = orderedHashes.find((hash) => byHash[hash].isCurrent);\n\n    return currentSessionHash ? byHash[currentSessionHash] : undefined;\n  }, [byHash, orderedHashes]);\n\n  const otherSessionHashes = useMemo(() => {\n    return orderedHashes.filter((hash) => !byHash[hash].isCurrent);\n  }, [byHash, orderedHashes]);\n  const hasOtherSessions = Boolean(otherSessionHashes.length);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function renderCurrentSession(session: ApiSession) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('AuthSessions.CurrentSession')}\n        </h4>\n\n        <ListItem narrow inactive icon={`device-${getSessionIcon(session)}`} iconClassName=\"icon-device\">\n          <div className=\"multiline-menu-item full-size\" dir=\"auto\">\n            <span className=\"title\" dir=\"auto\">{session.deviceModel}</span>\n            <span className=\"subtitle black tight\">\n              {session.appName} {session.appVersion}, {session.platform} {session.systemVersion}\n            </span>\n            <span className=\"subtitle\">{session.ip} - {getLocation(session)}</span>\n          </div>\n        </ListItem>\n\n        {hasOtherSessions && (\n          <ListItem\n            className=\"destructive mb-0 no-icon\"\n            icon=\"stop\"\n            ripple\n            narrow\n            onClick={openConfirmTerminateAllDialog}\n          >\n            {lang('TerminateAllSessions')}\n          </ListItem>\n        )}\n      </div>\n    );\n  }\n\n  function renderOtherSessions(sessionHashes: string[]) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('OtherSessions')}\n        </h4>\n\n        {sessionHashes.map(renderSession)}\n      </div>\n    );\n  }\n\n  function renderAutoTerminate() {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('TerminateOldSessionHeader')}\n        </h4>\n\n        <p>{lang('IfInactiveFor')}</p>\n        <RadioGroup\n          name=\"session_ttl\"\n          options={AUTO_TERMINATE_OPTIONS}\n          selected={autoTerminateValue}\n          onChange={handleChangeSessionTtl}\n        />\n      </div>\n    );\n  }\n\n  function renderSession(sessionHash: string) {\n    const session = byHash[sessionHash];\n\n    return (\n      <ListItem\n        key={session.hash}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Terminate',\n          icon: 'stop',\n          destructive: true,\n          handler: () => {\n            handleTerminateSessionClick(session.hash);\n          },\n        }]}\n        icon={`device-${getSessionIcon(session)}`}\n        iconClassName=\"icon-device\"\n        onClick={() => { handleOpenSessionModal(session.hash); }}\n      >\n        <div className=\"multiline-menu-item full-size\" dir=\"auto\">\n          <span className=\"date\">{formatPastTimeShort(lang, session.dateActive * 1000)}</span>\n          <span className=\"title\">{session.deviceModel}</span>\n          <span className=\"subtitle black tight\">\n            {session.appName} {session.appVersion}, {session.platform} {session.systemVersion}\n          </span>\n          <span className=\"subtitle\">{session.ip} {getLocation(session)}</span>\n        </div>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll SettingsActiveSessions\">\n      {currentSession && renderCurrentSession(currentSession)}\n      {hasOtherSessions && renderOtherSessions(otherSessionHashes)}\n      {renderAutoTerminate()}\n      {hasOtherSessions && (\n        <ConfirmDialog\n          isOpen={isConfirmTerminateAllDialogOpen}\n          onClose={closeConfirmTerminateAllDialog}\n          text={lang('AreYouSureSessions')}\n          confirmLabel={lang('TerminateAllSessions')}\n          confirmHandler={handleTerminateAllSessions}\n          confirmIsDestructive\n          areButtonsInColumn\n        />\n      )}\n      <SettingsActiveSession isOpen={isModalOpen} hash={openedSessionHash} onClose={handleCloseSessionModal} />\n    </div>\n  );\n};\n\nfunction getLocation(session: ApiSession) {\n  return [session.region, session.country].filter(Boolean).join(', ');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => global.activeSessions,\n)(SettingsActiveSessions));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"OeRWKjYQC6t7Uxv8I3j0\",\"avatar\":\"oy_023CG29VsnL9L5ulf\",\"title\":\"bg8UD_Pu2JWogmjuvVXg\",\"note\":\"TgiK64wG1hkOWSiXybQf\",\"box\":\"HSyJbRkyhkeT0s2QA4Ku\",\"action-header\":\"AQX7GM28GeWO4b1bXTNK\",\"actionHeader\":\"AQX7GM28GeWO4b1bXTNK\",\"action-name\":\"_VJHBZTk5qdYimQAoCWe\",\"actionName\":\"_VJHBZTk5qdYimQAoCWe\",\"header-button\":\"hlKLEbMQAsx572pUREy0\",\"headerButton\":\"hlKLEbMQAsx572pUREy0\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser, ApiWebSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './SettingsActiveWebsite.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  hash?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  session?: ApiWebSession;\n  bot?: ApiUser;\n};\n\nconst SettingsActiveWebsite: FC<OwnProps & StateProps> = ({\n  isOpen,\n  session,\n  bot,\n  onClose,\n}) => {\n  const { terminateWebAuthorization } = getActions();\n  const lang = useLang();\n\n  const renderingSession = useCurrentOrPrev(session, true);\n  const renderingBot = useCurrentOrPrev(bot, true);\n\n  const handleTerminateSessionClick = useCallback(() => {\n    terminateWebAuthorization({ hash: session!.hash });\n    onClose();\n  }, [onClose, session, terminateWebAuthorization]);\n\n  if (!renderingSession) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('WebSessionsTitle')}</div>\n        <Button\n          color=\"danger\"\n          onClick={handleTerminateSessionClick}\n          className={buildClassName('modal-action-button', styles.headerButton)}\n        >\n          {lang('AuthSessions.LogOut')}\n        </Button>\n      </div>\n    );\n  }\n  return (\n    <Modal\n      header={renderHeader()}\n      isOpen={isOpen}\n      hasCloseButton\n      onClose={onClose}\n      className={styles.root}\n    >\n      <Avatar\n        className={styles.avatar}\n        peer={renderingBot}\n        size=\"large\"\n      />\n      {renderingBot && <FullNameTitle className={styles.title} peer={renderingBot} />}\n      <div className={styles.note}>\n        {renderingSession?.domain}\n      </div>\n\n      <dl className={styles.box}>\n        <dt>{lang('AuthSessions.View.Browser')}</dt>\n        <dd>\n          {renderingSession?.browser}\n        </dd>\n\n        <dt>{lang('SessionPreview.Ip')}</dt>\n        <dd>{renderingSession?.ip}</dd>\n\n        <dt>{lang('SessionPreview.Location')}</dt>\n        <dd>{renderingSession?.region}</dd>\n      </dl>\n      <p className={styles.note}>{lang('AuthSessions.View.LocationInfo')}</p>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { hash }): StateProps => {\n  const session = hash ? global.activeWebSessions.byHash[hash] : undefined;\n  const bot = session ? global.users.byId[session.botId] : undefined;\n\n  return {\n    session,\n    bot,\n  };\n})(SettingsActiveWebsite));\n","// extracted by mini-css-extract-plugin\nexport default {\"avatar\":\"n3bBygyO4j5MQyJ70Twt\",\"clear-help\":\"vUICy6ZQCYFSrvvxXe7f\",\"clearHelp\":\"vUICy6ZQCYFSrvvxXe7f\",\"subtitle\":\"t3PK9_nPdL12eMsiMNcM\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiWebSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPastTimeShort } from '../../../util/dateFormat';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport SettingsActiveWebsite from './SettingsActiveWebsite';\n\nimport styles from './SettingsActiveWebsites.module.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  byHash: Record<string, ApiWebSession>;\n  orderedHashes: string[];\n};\n\nconst SettingsActiveWebsites: FC<OwnProps & StateProps> = ({\n  isActive,\n  byHash,\n  orderedHashes,\n  onReset,\n}) => {\n  const {\n    terminateWebAuthorization,\n    terminateAllWebAuthorizations,\n  } = getActions();\n\n  const lang = useLang();\n  const [isConfirmTerminateAllDialogOpen, openConfirmTerminateAllDialog, closeConfirmTerminateAllDialog] = useFlag();\n  const [openedWebsiteHash, setOpenedWebsiteHash] = useState<string | undefined>();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const handleTerminateAuthClick = useCallback((hash: string) => {\n    terminateWebAuthorization({ hash });\n  }, [terminateWebAuthorization]);\n\n  const handleTerminateAllAuth = useCallback(() => {\n    closeConfirmTerminateAllDialog();\n    terminateAllWebAuthorizations();\n  }, [closeConfirmTerminateAllDialog, terminateAllWebAuthorizations]);\n\n  const handleOpenSessionModal = useCallback((hash: string) => {\n    setOpenedWebsiteHash(hash);\n    openModal();\n  }, [openModal]);\n\n  const handleCloseWebsiteModal = useCallback(() => {\n    setOpenedWebsiteHash(undefined);\n    closeModal();\n  }, [closeModal]);\n\n  // Close when empty\n  useEffect(() => {\n    if (!orderedHashes.length) {\n      onReset();\n    }\n  }, [onReset, orderedHashes]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function renderSessions(sessionHashes: string[]) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('WebSessionsTitle')}\n        </h4>\n\n        {sessionHashes.map(renderSession)}\n      </div>\n    );\n  }\n\n  function renderSession(sessionHash: string) {\n    const session = byHash[sessionHash];\n    const bot = getGlobal().users.byId[session.botId];\n\n    return (\n      <ListItem\n        key={session.hash}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Terminate',\n          icon: 'stop',\n          destructive: true,\n          handler: () => {\n            handleTerminateAuthClick(session.hash);\n          },\n        }]}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleOpenSessionModal(session.hash)}\n      >\n        <Avatar className={styles.avatar} peer={bot} size=\"tiny\" />\n        <div className=\"multiline-menu-item full-size\" dir=\"auto\">\n          <span className=\"date\">{formatPastTimeShort(lang, session.dateActive * 1000)}</span>\n          {bot && <FullNameTitle className={styles.title} peer={bot} />}\n          <span className={buildClassName('subtitle', 'black', 'tight', styles.platform)}>\n            {session.domain}, {session.browser}, {session.platform}\n          </span>\n          <span className={buildClassName('subtitle', styles.subtitle)}>{session.ip} {session.region}</span>\n        </div>\n      </ListItem>\n    );\n  }\n\n  if (!orderedHashes.length) return undefined;\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <ListItem\n          className=\"destructive mb-0 no-icon\"\n          icon=\"stop\"\n          ripple\n          narrow\n          onClick={openConfirmTerminateAllDialog}\n        >\n          {lang('AuthSessions.LogOutApplications')}\n        </ListItem>\n        <p className={buildClassName('settings-item-description', styles.clearHelp)}>\n          {lang('ClearOtherWebSessionsHelp')}\n        </p>\n      </div>\n      {renderSessions(orderedHashes)}\n      <ConfirmDialog\n        isOpen={isConfirmTerminateAllDialogOpen}\n        onClose={closeConfirmTerminateAllDialog}\n        title={lang('AuthSessions.LogOutApplications')}\n        text={lang('AreYouSureWebSessions')}\n        confirmHandler={handleTerminateAllAuth}\n        confirmIsDestructive\n      />\n      <SettingsActiveWebsite isOpen={isModalOpen} hash={openedWebsiteHash} onClose={handleCloseWebsiteModal} />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byHash, orderedHashes } = global.activeWebSessions;\n    return {\n      byHash,\n      orderedHashes,\n    };\n  },\n)(SettingsActiveWebsites));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../../api/types';\nimport type { ISettings } from '../../../types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport { pick } from '../../../util/iteratees';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\n\nimport StickerSetCard from '../../common/StickerSetCard';\nimport Checkbox from '../../ui/Checkbox';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, (\n  'shouldSuggestCustomEmoji'\n)> & {\n  customEmojiSetIds?: string[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst SettingsCustomEmoji: FC<OwnProps & StateProps> = ({\n  isActive,\n  customEmojiSetIds,\n  stickerSetsById,\n  shouldSuggestCustomEmoji,\n  canPlayAnimatedEmojis,\n  onReset,\n}) => {\n  const { openStickerSet, setSettingOption } = getActions();\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const stickerSettingsRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({ rootRef: stickerSettingsRef });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleStickerSetClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  }, [openStickerSet]);\n\n  const handleSuggestCustomEmojiChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldSuggestCustomEmoji: newValue });\n  }, [setSettingOption]);\n\n  const customEmojiSets = useMemo(() => (\n    customEmojiSetIds && Object.values(pick(stickerSetsById, customEmojiSetIds))\n  ), [customEmojiSetIds, stickerSetsById]);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      {customEmojiSets && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('SuggestAnimatedEmoji')}\n            checked={shouldSuggestCustomEmoji}\n            onCheck={handleSuggestCustomEmojiChange}\n          />\n          <div className=\"mt-4\" ref={stickerSettingsRef}>\n            {customEmojiSets.map((stickerSet: ApiStickerSet) => (\n              <StickerSetCard\n                key={stickerSet.id}\n                stickerSet={stickerSet}\n                observeIntersection={observeIntersectionForCovers}\n                onClick={handleStickerSetClick}\n                noPlay={!canPlayAnimatedEmojis}\n              />\n            ))}\n          </div>\n          <p className=\"settings-item-description mt-3\" dir=\"auto\">\n            {renderText(lang('EmojiBotInfo'), ['links'])}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      ...pick(global.settings.byKey, [\n        'shouldSuggestCustomEmoji',\n      ]),\n      customEmojiSetIds: global.customEmojis.added.setIds,\n      stickerSetsById: global.stickers.setsById,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(SettingsCustomEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings } from '../../../types';\n\nimport { AUTODOWNLOAD_FILESIZE_MB_LIMITS } from '../../../config';\nimport { pick } from '../../../util/iteratees';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, (\n  'canAutoLoadPhotoFromContacts' |\n  'canAutoLoadPhotoInPrivateChats' |\n  'canAutoLoadPhotoInGroups' |\n  'canAutoLoadPhotoInChannels' |\n  'canAutoLoadVideoFromContacts' |\n  'canAutoLoadVideoInPrivateChats' |\n  'canAutoLoadVideoInGroups' |\n  'canAutoLoadVideoInChannels' |\n  'canAutoLoadFileFromContacts' |\n  'canAutoLoadFileInPrivateChats' |\n  'canAutoLoadFileInGroups' |\n  'canAutoLoadFileInChannels' |\n  'autoLoadFileMaxSizeMb'\n)>;\n\nconst SettingsDataStorage: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  canAutoLoadPhotoFromContacts,\n  canAutoLoadPhotoInPrivateChats,\n  canAutoLoadPhotoInGroups,\n  canAutoLoadPhotoInChannels,\n  canAutoLoadVideoFromContacts,\n  canAutoLoadVideoInPrivateChats,\n  canAutoLoadVideoInGroups,\n  canAutoLoadVideoInChannels,\n  canAutoLoadFileFromContacts,\n  canAutoLoadFileInPrivateChats,\n  canAutoLoadFileInGroups,\n  canAutoLoadFileInChannels,\n  autoLoadFileMaxSizeMb,\n}) => {\n  const { setSettingOption } = getActions();\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const renderFileSizeCallback = useCallback((value: number) => {\n    return lang('AutodownloadSizeLimitUpTo', lang('FileSize.MB', String(AUTODOWNLOAD_FILESIZE_MB_LIMITS[value]), 'i'));\n  }, [lang]);\n\n  const handleFileSizeChange = useCallback((value: number) => {\n    setSettingOption({ autoLoadFileMaxSizeMb: AUTODOWNLOAD_FILESIZE_MB_LIMITS[value] });\n  }, [setSettingOption]);\n\n  function renderContentSizeSlider() {\n    const value = AUTODOWNLOAD_FILESIZE_MB_LIMITS.indexOf(autoLoadFileMaxSizeMb);\n\n    return (\n      <div className=\"pt-5\">\n        <RangeSlider\n          label={lang('AutoDownloadMaxFileSize')}\n          min={0}\n          max={5}\n          value={value !== -1 ? value : 2}\n          renderValue={renderFileSizeCallback}\n          onChange={handleFileSizeChange}\n        />\n      </div>\n    );\n  }\n\n  function renderAutoDownloadBlock(\n    title: string,\n    key: 'Photo' | 'Video' | 'File',\n    canAutoLoadFromContacts: boolean,\n    canAutoLoadInPrivateChats: boolean,\n    canAutoLoadInGroups: boolean,\n    canAutoLoadInChannels: boolean,\n  ) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{title}</h4>\n\n        <Checkbox\n          label={lang('AutoDownloadSettings.Contacts')}\n          checked={canAutoLoadFromContacts}\n          // TODO rewrite to support `useCallback`\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}FromContacts`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettings.PrivateChats')}\n          checked={canAutoLoadInPrivateChats}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InPrivateChats`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettings.GroupChats')}\n          checked={canAutoLoadInGroups}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InGroups`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettings.Channels')}\n          checked={canAutoLoadInChannels}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InChannels`]: isChecked })}\n        />\n\n        {key === 'File' && renderContentSizeSlider()}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      {renderAutoDownloadBlock(\n        lang('AutoDownloadPhotosTitle'),\n        'Photo',\n        canAutoLoadPhotoFromContacts,\n        canAutoLoadPhotoInPrivateChats,\n        canAutoLoadPhotoInGroups,\n        canAutoLoadPhotoInChannels,\n      )}\n      {renderAutoDownloadBlock(\n        lang('AutoDownloadVideosTitle'),\n        'Video',\n        canAutoLoadVideoFromContacts,\n        canAutoLoadVideoInPrivateChats,\n        canAutoLoadVideoInGroups,\n        canAutoLoadVideoInChannels,\n      )}\n      {renderAutoDownloadBlock(\n        'Auto-download files', // Proper translation is not available yet\n        'File',\n        canAutoLoadFileFromContacts,\n        canAutoLoadFileInPrivateChats,\n        canAutoLoadFileInGroups,\n        canAutoLoadFileInChannels,\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return pick(global.settings.byKey, [\n      'canAutoLoadPhotoFromContacts',\n      'canAutoLoadPhotoInPrivateChats',\n      'canAutoLoadPhotoInGroups',\n      'canAutoLoadPhotoInChannels',\n      'canAutoLoadVideoFromContacts',\n      'canAutoLoadVideoInPrivateChats',\n      'canAutoLoadVideoInGroups',\n      'canAutoLoadVideoInChannels',\n      'canAutoLoadFileFromContacts',\n      'canAutoLoadFileInPrivateChats',\n      'canAutoLoadFileInGroups',\n      'canAutoLoadFileInChannels',\n      'autoLoadFileMaxSizeMb',\n    ]);\n  },\n)(SettingsDataStorage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings } from '../../../types';\nimport type { IRadioOption } from '../../ui/CheckboxGroup';\n\nimport { SUPPORTED_TRANSLATION_LANGUAGES } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { partition, unique } from '../../../util/iteratees';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport InputText from '../../ui/InputText';\n\nimport styles from './SettingsDoNotTranslate.module.scss';\n\n// https://fasttext.cc/docs/en/language-identification.html\nconst LOCAL_SUPPORTED_DETECTION_LANGUAGES = [\n  'af', 'als', 'am', 'an', 'ar', 'arz', 'as', 'ast', 'av', 'az',\n  'azb', 'ba', 'bar', 'bcl', 'be', 'bg', 'bh', 'bn', 'bo', 'bpy',\n  'br', 'bs', 'bxr', 'ca', 'cbk', 'ce', 'ceb', 'ckb', 'co', 'cs',\n  'cv', 'cy', 'da', 'de', 'diq', 'dsb', 'dty', 'dv', 'el', 'eml',\n  'en', 'eo', 'es', 'et', 'eu', 'fa', 'fi', 'fr', 'frr', 'fy',\n  'ga', 'gd', 'gl', 'gn', 'gom', 'gu', 'gv', 'he', 'hi', 'hif',\n  'hr', 'hsb', 'ht', 'hu', 'hy', 'ia', 'id', 'ie', 'ilo', 'io',\n  'is', 'it', 'ja', 'jbo', 'jv', 'ka', 'kk', 'km', 'kn', 'ko',\n  'krc', 'ku', 'kv', 'kw', 'ky', 'la', 'lb', 'lez', 'li', 'lmo',\n  'lo', 'lrc', 'lt', 'lv', 'mai', 'mg', 'mhr', 'min', 'mk', 'ml',\n  'mn', 'mr', 'mrj', 'ms', 'mt', 'mwl', 'my', 'myv', 'mzn', 'nah',\n  'nap', 'nds', 'ne', 'new', 'nl', 'nn', 'no', 'oc', 'or', 'os',\n  'pa', 'pam', 'pfl', 'pl', 'pms', 'pnb', 'ps', 'pt', 'qu', 'rm',\n  'ro', 'ru', 'rue', 'sa', 'sah', 'sc', 'scn', 'sco', 'sd', 'sh',\n  'si', 'sk', 'sl', 'so', 'sq', 'sr', 'su', 'sv', 'sw', 'ta', 'te',\n  'tg', 'th', 'tk', 'tl', 'tr', 'tt', 'tyv', 'ug', 'uk', 'ur', 'uz',\n  'vec', 'vep', 'vi', 'vls', 'vo', 'wa', 'war', 'wuu', 'xal', 'xmf',\n  'yi', 'yo', 'yue', 'zh',\n];\n\nconst SUPPORTED_LANGUAGES = SUPPORTED_TRANSLATION_LANGUAGES.filter((lang: string) => (\n  LOCAL_SUPPORTED_DETECTION_LANGUAGES.includes(lang)\n));\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, 'language' | 'doNotTranslate'>;\n\nconst SettingsDoNotTranslate: FC<OwnProps & StateProps> = ({\n  isActive,\n  language,\n  doNotTranslate,\n  onReset,\n}) => {\n  const { setSettingOption } = getActions();\n\n  const lang = useLang();\n  const [displayedOptions, setDisplayedOptions] = useState<IRadioOption[]>([]);\n  const [search, setSearch] = useState('');\n\n  const options: IRadioOption[] = useMemo(() => {\n    return SUPPORTED_LANGUAGES.map((langCode: string) => {\n      const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n      const translatedName = translatedNames.of(langCode)!;\n\n      const originalNames = new Intl.DisplayNames([langCode], { type: 'language' });\n      const originalName = originalNames.of(langCode)!;\n\n      return {\n        langCode,\n        translatedName,\n        originalName,\n      };\n    }).map(({ langCode, translatedName, originalName }) => ({\n      label: translatedName,\n      subLabel: originalName,\n      value: langCode,\n    }));\n  }, [language]);\n\n  useEffect(() => {\n    if (!isActive) setSearch('');\n  }, [isActive]);\n\n  useEffectWithPrevDeps(([prevIsActive]) => {\n    if (prevIsActive === isActive) return;\n    if (isActive && displayedOptions.length) return;\n\n    const current = options.find((option) => option.value === language);\n    const otherLanguages = options.filter((option) => option.value !== language);\n\n    const [selected, unselected] = partition(otherLanguages, (option) => doNotTranslate.includes(option.value));\n\n    setDisplayedOptions([current!, ...selected, ...unselected]);\n  }, [isActive, doNotTranslate, displayedOptions.length, language, options]);\n\n  const handleChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value, checked } = event.currentTarget;\n    let newDoNotTranslate: string[];\n    if (checked) {\n      newDoNotTranslate = unique([...doNotTranslate, value]);\n    } else {\n      newDoNotTranslate = doNotTranslate.filter((v) => v !== value);\n    }\n\n    setSettingOption({\n      doNotTranslate: newDoNotTranslate,\n    });\n  }, [doNotTranslate, setSettingOption]);\n\n  const handleSearch = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearch(e.target.value);\n  }, []);\n\n  const filteredDisplayedOptions = useMemo(() => {\n    if (!search.trim()) {\n      return displayedOptions;\n    }\n\n    return displayedOptions.filter((option) => (\n      option.label.toLowerCase().includes(search.toLowerCase())\n      || option.subLabel?.toLowerCase().includes(search.toLowerCase())\n      || option.value.toLowerCase().includes(search.toLowerCase())\n    ));\n  }, [displayedOptions, search]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className={buildClassName(styles.root, 'settings-content custom-scroll')}>\n      <div className={buildClassName(styles.item, 'settings-item')}>\n        <InputText\n          key=\"search\"\n          value={search}\n          onChange={handleSearch}\n          placeholder={lang('Search')}\n          teactExperimentControlled\n        />\n        <div className={buildClassName(styles.languages, 'radio-group custom-scroll')}>\n          {filteredDisplayedOptions.map((option) => (\n            <Checkbox\n              className={styles.checkbox}\n              label={option.label}\n              subLabel={option.subLabel}\n              checked={doNotTranslate.includes(option.value)}\n              value={option.value}\n              key={option.value}\n              onChange={handleChange}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      language, doNotTranslate,\n    } = global.settings.byKey;\n\n    return {\n      language,\n      doNotTranslate,\n    };\n  },\n)(SettingsDoNotTranslate));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"obOZMv8VwZgTltdIBhFA\",\"item\":\"lDWs17bpqtGWDX0EJr0y\",\"checkbox\":\"BShBwPkgjleuDsjyfnNk\",\"languages\":\"whcbPSSJLGdGCaY66qfR\"};","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUsername } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ProfileEditProgress } from '../../../types';\n\nimport { PURCHASE_USERNAME, TME_LINK_PREFIX, USERNAME_PURCHASE_ERROR } from '../../../config';\nimport { getChatAvatarHash } from '../../../global/helpers';\nimport { selectTabState, selectUser, selectUserFullInfo } from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport { throttle } from '../../../util/schedulers';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useMedia from '../../../hooks/useMedia';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport ManageUsernames from '../../common/ManageUsernames';\nimport SafeLink from '../../common/SafeLink';\nimport UsernameInput from '../../common/UsernameInput';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\ntype OwnProps = {\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentAvatarHash?: string;\n  currentFirstName?: string;\n  currentLastName?: string;\n  currentBio?: string;\n  progress?: ProfileEditProgress;\n  checkedUsername?: string;\n  editUsernameError?: string;\n  isUsernameAvailable?: boolean;\n  maxBioLength: number;\n  usernames?: ApiUsername[];\n};\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst ERROR_FIRST_NAME_MISSING = 'Please provide your first name';\n\nconst SettingsEditProfile: FC<OwnProps & StateProps> = ({\n  isActive,\n  currentAvatarHash,\n  currentFirstName,\n  currentLastName,\n  currentBio,\n  progress,\n  checkedUsername,\n  editUsernameError,\n  isUsernameAvailable,\n  maxBioLength,\n  usernames,\n  onReset,\n}) => {\n  const {\n    loadCurrentUser,\n    updateProfile,\n  } = getActions();\n\n  const lang = useLang();\n\n  const firstEditableUsername = useMemo(() => usernames?.find(({ isEditable }) => isEditable), [usernames]);\n  const currentUsername = firstEditableUsername?.username || '';\n  const [isUsernameTouched, setIsUsernameTouched] = useState(false);\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [error, setError] = useState<string | undefined>();\n\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [firstName, setFirstName] = useState(currentFirstName || '');\n  const [lastName, setLastName] = useState(currentLastName || '');\n  const [bio, setBio] = useState(currentBio || '');\n  const [editableUsername, setEditableUsername] = useState<string | false>(currentUsername);\n\n  const currentAvatarBlobUrl = useMedia(currentAvatarHash, false, ApiMediaFormat.BlobUrl);\n\n  const isLoading = progress === ProfileEditProgress.InProgress;\n  const isUsernameError = editableUsername === false;\n\n  const previousIsUsernameAvailable = usePrevious(isUsernameAvailable);\n  const renderingIsUsernameAvailable = isUsernameAvailable ?? previousIsUsernameAvailable;\n  const shouldRenderUsernamesManage = usernames && usernames.length > 1;\n\n  const isSaveButtonShown = useMemo(() => {\n    if (isUsernameError) {\n      return false;\n    }\n\n    return Boolean(photo) || isProfileFieldsTouched || (isUsernameTouched && renderingIsUsernameAvailable === true);\n  }, [isUsernameError, photo, isProfileFieldsTouched, isUsernameTouched, renderingIsUsernameAvailable]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadCurrentUser();\n    });\n  }, [loadCurrentUser]);\n\n  useEffect(() => {\n    setPhoto(undefined);\n  }, [currentAvatarBlobUrl]);\n\n  useEffect(() => {\n    setFirstName(currentFirstName || '');\n    setLastName(currentLastName || '');\n    setBio(currentBio || '');\n  }, [currentFirstName, currentLastName, currentBio]);\n\n  useEffect(() => {\n    setEditableUsername(currentUsername || '');\n  }, [currentUsername]);\n\n  useEffect(() => {\n    if (progress === ProfileEditProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setIsUsernameTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handlePhotoChange = useCallback((newPhoto: File) => {\n    setPhoto(newPhoto);\n  }, []);\n\n  const handleFirstNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleLastNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleBioChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setBio(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleUsernameChange = useCallback((value: string | false) => {\n    setEditableUsername(value);\n    setIsUsernameTouched(currentUsername !== value);\n  }, [currentUsername]);\n\n  const handleProfileSave = useCallback(() => {\n    const trimmedFirstName = firstName.trim();\n    const trimmedLastName = lastName.trim();\n    const trimmedBio = bio.trim();\n\n    if (!editableUsername) return;\n\n    if (!trimmedFirstName.length) {\n      setError(ERROR_FIRST_NAME_MISSING);\n      return;\n    }\n\n    updateProfile({\n      photo,\n      ...(isProfileFieldsTouched && {\n        firstName: trimmedFirstName,\n        lastName: trimmedLastName,\n        bio: trimmedBio,\n      }),\n      ...(isUsernameTouched && {\n        username: editableUsername,\n      }),\n    });\n  }, [\n    photo,\n    firstName, lastName, bio, isProfileFieldsTouched,\n    editableUsername, isUsernameTouched,\n    updateProfile,\n  ]);\n\n  function renderPurchaseLink() {\n    const purchaseInfoLink = `${TME_LINK_PREFIX}${PURCHASE_USERNAME}`;\n\n    return (\n      <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {(lang('lng_username_purchase_available') as string)\n          .replace('{link}', '%PURCHASE_LINK%')\n          .split('%')\n          .map((s) => {\n            return (s === 'PURCHASE_LINK' ? <SafeLink url={purchaseInfoLink} text={`@${PURCHASE_USERNAME}`} /> : s);\n          })}\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content no-border custom-scroll\">\n        <div className=\"settings-edit-profile settings-item\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handlePhotoChange}\n            title=\"Edit your profile photo\"\n            disabled={isLoading}\n          />\n          <InputText\n            value={firstName}\n            onChange={handleFirstNameChange}\n            label={lang('FirstName')}\n            disabled={isLoading}\n            error={error === ERROR_FIRST_NAME_MISSING ? error : undefined}\n          />\n          <InputText\n            value={lastName}\n            onChange={handleLastNameChange}\n            label={lang('LastName')}\n            disabled={isLoading}\n          />\n          <TextArea\n            value={bio}\n            onChange={handleBioChange}\n            label={lang('UserBio')}\n            disabled={isLoading}\n            maxLength={maxBioLength}\n            maxLengthIndicator={maxBioLength ? (maxBioLength - bio.length).toString() : undefined}\n          />\n\n          <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('lng_settings_about_bio'), ['br', 'simple_markdown'])}\n          </p>\n        </div>\n\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('Username')}</h4>\n\n          <UsernameInput\n            currentUsername={currentUsername}\n            isLoading={isLoading}\n            isUsernameAvailable={isUsernameAvailable}\n            checkedUsername={checkedUsername}\n            onChange={handleUsernameChange}\n          />\n\n          {editUsernameError === USERNAME_PURCHASE_ERROR && renderPurchaseLink()}\n          <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('UsernameHelp'), ['br', 'simple_markdown'])}\n          </p>\n          {editableUsername && (\n            <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('lng_username_link')}<br />\n              <span className=\"username-link\">{TME_LINK_PREFIX}{editableUsername}</span>\n            </p>\n          )}\n        </div>\n\n        {shouldRenderUsernamesManage && (\n          <ManageUsernames\n            usernames={usernames}\n            onEditUsername={setEditableUsername}\n          />\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={isSaveButtonShown}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentUserId } = global;\n    const {\n      progress, isUsernameAvailable, checkedUsername, error: editUsernameError,\n    } = selectTabState(global).profileEdit || {};\n    const currentUser = currentUserId ? selectUser(global, currentUserId) : undefined;\n\n    const maxBioLength = selectCurrentLimit(global, 'aboutLength');\n\n    if (!currentUser) {\n      return {\n        progress,\n        checkedUsername,\n        isUsernameAvailable,\n        editUsernameError,\n        maxBioLength,\n      };\n    }\n\n    const {\n      firstName: currentFirstName,\n      lastName: currentLastName,\n      usernames,\n    } = currentUser;\n    const currentUserFullInfo = currentUserId ? selectUserFullInfo(global, currentUserId) : undefined;\n    const currentAvatarHash = getChatAvatarHash(currentUser);\n\n    return {\n      currentAvatarHash,\n      currentFirstName,\n      currentLastName,\n      currentBio: currentUserFullInfo?.bio,\n      progress,\n      isUsernameAvailable,\n      checkedUsername,\n      editUsernameError,\n      maxBioLength,\n      usernames,\n    };\n  },\n)(SettingsEditProfile));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { DEBUG_LOG_FILENAME } from '../../../config';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport download from '../../../util/download';\nimport { IS_ELECTRON } from '../../../util/windowEnvironment';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  shouldShowLoginCodeInChatList?: boolean;\n  shouldForceHttpTransport?: boolean;\n  shouldAllowHttpTransport?: boolean;\n  shouldCollectDebugLogs?: boolean;\n  shouldDebugExportedSenders?: boolean;\n};\n\nconst SettingsExperimental: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  shouldShowLoginCodeInChatList,\n  shouldForceHttpTransport,\n  shouldAllowHttpTransport,\n  shouldCollectDebugLogs,\n  shouldDebugExportedSenders,\n}) => {\n  const { requestConfetti, setSettingOption } = getActions();\n  const lang = useLang();\n\n  const [isAutoUpdateEnabled, setIsAutoUpdateEnabled] = useState(false);\n  useEffect(() => {\n    window.electron?.getIsAutoUpdateEnabled().then(setIsAutoUpdateEnabled);\n  }, []);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleDownloadLog = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    const url = URL.createObjectURL(file);\n    download(url, DEBUG_LOG_FILENAME);\n  });\n\n  const handleIsAutoUpdateEnabledChange = useCallback((isChecked: boolean) => {\n    window.electron?.setIsAutoUpdateEnabled(isChecked);\n  }, []);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          tgsUrl={LOCAL_TGS_URLS.Experimental}\n          size={200}\n          className=\"experimental-duck\"\n          nonInteractive\n          noLoop={false}\n        />\n        <p className=\"settings-item-description pt-3\" dir=\"auto\">{lang('lng_settings_experimental_about')}</p>\n      </div>\n      <div className=\"settings-item\">\n        <ListItem\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => requestConfetti({})}\n          icon=\"animations\"\n        >\n          <div className=\"title\">Launch some confetti!</div>\n        </ListItem>\n\n        <Checkbox\n          label=\"Show login code in chat list\"\n          checked={Boolean(shouldShowLoginCodeInChatList)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldShowLoginCodeInChatList: !shouldShowLoginCodeInChatList })}\n        />\n\n        <Checkbox\n          label=\"Allow HTTP Transport\"\n          checked={Boolean(shouldAllowHttpTransport)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldAllowHttpTransport: !shouldAllowHttpTransport })}\n        />\n\n        <Checkbox\n          label=\"Force HTTP Transport\"\n          disabled={!shouldAllowHttpTransport}\n          checked={Boolean(shouldForceHttpTransport)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldForceHttpTransport: !shouldForceHttpTransport })}\n        />\n\n        <Checkbox\n          label={lang('DebugMenuEnableLogs')}\n          checked={Boolean(shouldCollectDebugLogs)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldCollectDebugLogs: !shouldCollectDebugLogs })}\n        />\n\n        <Checkbox\n          label=\"Enable exported senders debug\"\n          checked={Boolean(shouldDebugExportedSenders)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldDebugExportedSenders: !shouldDebugExportedSenders })}\n        />\n\n        {IS_ELECTRON && (\n          <Checkbox\n            label=\"Enable autoupdates\"\n            checked={Boolean(isAutoUpdateEnabled)}\n            onCheck={handleIsAutoUpdateEnabledChange}\n          />\n        )}\n\n        <ListItem\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={handleDownloadLog}\n          icon=\"bug\"\n        >\n          <div className=\"title\">Download log</div>\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      shouldShowLoginCodeInChatList: global.settings.byKey.shouldShowLoginCodeInChatList,\n      shouldForceHttpTransport: global.settings.byKey.shouldForceHttpTransport,\n      shouldAllowHttpTransport: global.settings.byKey.shouldAllowHttpTransport,\n      shouldCollectDebugLogs: global.settings.byKey.shouldCollectDebugLogs,\n      shouldDebugExportedSenders: global.settings.byKey.shouldDebugExportedSenders,\n    };\n  },\n)(SettingsExperimental));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings, TimeFormat } from '../../../types';\nimport type { IRadioOption } from '../../ui/RadioGroup';\nimport { SettingsScreens } from '../../../types';\n\nimport { pick } from '../../../util/iteratees';\nimport { setTimeFormat } from '../../../util/langProvider';\nimport { getSystemTheme } from '../../../util/systemTheme';\nimport {\n  IS_ANDROID, IS_ELECTRON, IS_IOS, IS_MAC_OS, IS_WINDOWS,\n} from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps =\n  Pick<ISettings, (\n    'messageTextSize' |\n    'animationLevel' |\n    'messageSendKeyCombo' |\n    'timeFormat'\n  )> & {\n    theme: ISettings['theme'];\n    shouldUseSystemTheme: boolean;\n  };\n\nconst TIME_FORMAT_OPTIONS: IRadioOption[] = [{\n  label: '12-hour',\n  value: '12h',\n}, {\n  label: '24-hour',\n  value: '24h',\n}];\n\nconst SettingsGeneral: FC<OwnProps & StateProps> = ({\n  isActive,\n  onScreenSelect,\n  onReset,\n  messageTextSize,\n  messageSendKeyCombo,\n  timeFormat,\n  theme,\n  shouldUseSystemTheme,\n}) => {\n  const {\n    setSettingOption,\n  } = getActions();\n\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const appearanceThemeOptions: IRadioOption[] = [{\n    label: lang('EmptyChat.Appearance.Light'),\n    value: 'light',\n  }, {\n    label: lang('EmptyChat.Appearance.Dark'),\n    value: 'dark',\n  }, {\n    label: lang('EmptyChat.Appearance.System'),\n    value: 'auto',\n  }];\n\n  const keyboardSendOptions = !isMobileDevice ? [\n    { value: 'enter', label: lang('lng_settings_send_enter'), subLabel: 'New line by Shift + Enter' },\n    {\n      value: 'ctrl-enter',\n      label: lang(IS_MAC_OS || IS_IOS ? 'lng_settings_send_cmdenter' : 'lng_settings_send_ctrlenter'),\n      subLabel: 'New line by Enter',\n    },\n  ] : undefined;\n\n  const handleMessageTextSizeChange = useCallback((newSize: number) => {\n    document.documentElement.style.setProperty(\n      '--composer-text-size', `${Math.max(newSize, IS_IOS ? 16 : 15)}px`,\n    );\n    document.documentElement.style.setProperty('--message-meta-height', `${Math.floor(newSize * 1.3125)}px`);\n    document.documentElement.style.setProperty('--message-text-size', `${newSize}px`);\n    document.documentElement.setAttribute('data-message-text-size', newSize.toString());\n\n    setSettingOption({ messageTextSize: newSize });\n  }, [setSettingOption]);\n\n  const handleAppearanceThemeChange = useCallback((value: string) => {\n    const newTheme = value === 'auto' ? getSystemTheme() : value as ISettings['theme'];\n\n    setSettingOption({ theme: newTheme });\n    setSettingOption({ shouldUseSystemTheme: value === 'auto' });\n  }, [setSettingOption]);\n\n  const handleTimeFormatChange = useCallback((newTimeFormat: string) => {\n    setSettingOption({ timeFormat: newTimeFormat as TimeFormat });\n    setSettingOption({ wasTimeFormatSetManually: true });\n\n    setTimeFormat(newTimeFormat as TimeFormat);\n  }, [setSettingOption]);\n\n  const handleMessageSendComboChange = useCallback((newCombo: string) => {\n    setSettingOption({ messageSendKeyCombo: newCombo as ISettings['messageSendKeyCombo'] });\n  }, [setSettingOption]);\n\n  const [isTrayIconEnabled, setIsTrayIconEnabled] = useState(false);\n  useEffect(() => {\n    window.electron?.getIsTrayIconEnabled().then(setIsTrayIconEnabled);\n  }, []);\n\n  const handleIsTrayIconEnabledChange = useCallback((isChecked: boolean) => {\n    window.electron?.setIsTrayIconEnabled(isChecked);\n  }, []);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('SETTINGS')}</h4>\n\n        <RangeSlider\n          label={lang('TextSize')}\n          min={12}\n          max={20}\n          value={messageTextSize}\n          onChange={handleMessageTextSizeChange}\n        />\n\n        <ListItem\n          icon=\"photo\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.GeneralChatBackground)}\n        >\n          {lang('ChatBackground')}\n        </ListItem>\n\n        {IS_ELECTRON && IS_WINDOWS && (\n          <Checkbox\n            label={lang('GeneralSettings.StatusBarItem')}\n            checked={Boolean(isTrayIconEnabled)}\n            onCheck={handleIsTrayIconEnabledChange}\n          />\n        )}\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('Theme')}\n        </h4>\n        <RadioGroup\n          name=\"theme\"\n          options={appearanceThemeOptions}\n          selected={shouldUseSystemTheme ? 'auto' : theme}\n          onChange={handleAppearanceThemeChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Time Format\n        </h4>\n        <RadioGroup\n          name=\"timeformat\"\n          options={TIME_FORMAT_OPTIONS}\n          selected={timeFormat}\n          onChange={handleTimeFormatChange}\n        />\n      </div>\n\n      {keyboardSendOptions && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('VoiceOver.Keyboard')}</h4>\n\n          <RadioGroup\n            name=\"keyboard-send-settings\"\n            options={keyboardSendOptions}\n            onChange={handleMessageSendComboChange}\n            selected={messageSendKeyCombo}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { theme, shouldUseSystemTheme } = global.settings.byKey;\n\n    return {\n      ...pick(global.settings.byKey, [\n        'messageTextSize',\n        'animationLevel',\n        'messageSendKeyCombo',\n        'isSensitiveEnabled',\n        'canChangeSensitive',\n        'timeFormat',\n      ]),\n      theme,\n      shouldUseSystemTheme,\n    };\n  },\n)(SettingsGeneral));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n  useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiWallpaper } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { UPLOADING_WALLPAPER_SLUG } from '../../../types';\n\nimport { CUSTOM_BG_CACHE_NAME } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport * as cacheApi from '../../../util/cacheApi';\nimport { fetchBlob } from '../../../util/files';\n\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './WallpaperTile.scss';\n\ntype OwnProps = {\n  wallpaper: ApiWallpaper;\n  theme: ThemeKey;\n  isSelected: boolean;\n  onClick: (slug: string) => void;\n};\n\nconst WallpaperTile: FC<OwnProps> = ({\n  wallpaper,\n  theme,\n  isSelected,\n  onClick,\n}) => {\n  const { slug, document } = wallpaper;\n  const localMediaHash = `wallpaper${document.id!}`;\n  const localBlobUrl = document.previewBlobUrl;\n  const previewBlobUrl = useMedia(`${localMediaHash}?size=m`);\n  const thumbRef = useCanvasBlur(document.thumbnail?.dataUri, Boolean(previewBlobUrl), true);\n  const { transitionClassNames } = useShowTransition(\n    Boolean(previewBlobUrl || localBlobUrl),\n    undefined,\n    undefined,\n    'slow',\n  );\n  const isLoadingRef = useRef(false);\n  const [isLoadAllowed, setIsLoadAllowed] = useState(false);\n  const {\n    mediaData: fullMedia, loadProgress,\n  } = useMediaWithLoadProgress(localMediaHash, !isLoadAllowed);\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n  const { shouldRender: shouldRenderSpinner, transitionClassNames: spinnerClassNames } = useShowTransition(\n    (isLoadAllowed && !fullMedia) || slug === UPLOADING_WALLPAPER_SLUG,\n    undefined,\n    wasLoadDisabled,\n    'slow',\n  );\n  // To prevent triggering of the effect for useCallback\n  const cacheKeyRef = useRef<string>();\n  cacheKeyRef.current = theme;\n\n  const handleSelect = useCallback(() => {\n    (async () => {\n      const blob = await fetchBlob(fullMedia!);\n      await cacheApi.save(CUSTOM_BG_CACHE_NAME, cacheKeyRef.current!, blob);\n      onClick(slug);\n    })();\n  }, [fullMedia, onClick, slug]);\n\n  useEffect(() => {\n    // If we've clicked on a wallpaper, select it when full media is loaded\n    if (fullMedia && isLoadingRef.current) {\n      handleSelect();\n      isLoadingRef.current = false;\n    }\n  }, [fullMedia, handleSelect]);\n\n  const handleClick = useCallback(() => {\n    if (fullMedia) {\n      handleSelect();\n    } else {\n      isLoadingRef.current = true;\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n    }\n  }, [fullMedia, handleSelect]);\n\n  const className = buildClassName(\n    'WallpaperTile',\n    isSelected && 'selected',\n  );\n\n  return (\n    <div className={className} onClick={handleClick}>\n      <div className=\"media-inner\">\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n        />\n        <img\n          src={previewBlobUrl || localBlobUrl}\n          className={buildClassName('full-media', transitionClassNames)}\n          alt=\"\"\n          draggable={false}\n        />\n        {shouldRenderSpinner && (\n          <div className={buildClassName('spinner-container', spinnerClassNames)}>\n            <ProgressSpinner progress={loadProgress} onClick={handleClick} />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(WallpaperTile);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiWallpaper } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { SettingsScreens, UPLOADING_WALLPAPER_SLUG } from '../../../types';\n\nimport { DARK_THEME_PATTERN_COLOR, DEFAULT_PATTERN_COLOR } from '../../../config';\nimport { selectTheme } from '../../../global/selectors';\nimport { getAverageColor, getPatternColor, rgb2hex } from '../../../util/colors';\nimport { validateFiles } from '../../../util/files';\nimport { throttle } from '../../../util/schedulers';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport WallpaperTile from './WallpaperTile';\n\nimport './SettingsGeneralBackground.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  background?: string;\n  isBlurred?: boolean;\n  loadedWallpapers?: ApiWallpaper[];\n  theme: ThemeKey;\n};\n\nconst SUPPORTED_TYPES = 'image/jpeg';\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst SettingsGeneralBackground: FC<OwnProps & StateProps> = ({\n  isActive,\n  onScreenSelect,\n  onReset,\n  background,\n  isBlurred,\n  loadedWallpapers,\n  theme,\n}) => {\n  const {\n    loadWallpapers,\n    uploadWallpaper,\n    setThemeSettings,\n  } = getActions();\n\n  const themeRef = useRef<ThemeKey>();\n  themeRef.current = theme;\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadWallpapers();\n    });\n  }, [loadWallpapers]);\n\n  const handleFileSelect = useCallback((e: Event) => {\n    const { files } = e.target as HTMLInputElement;\n\n    const validatedFiles = validateFiles(files);\n    if (validatedFiles?.length) {\n      uploadWallpaper(validatedFiles[0]);\n    }\n  }, [uploadWallpaper]);\n\n  const handleUploadWallpaper = useCallback(() => {\n    openSystemFilesDialog(SUPPORTED_TYPES, handleFileSelect, true);\n  }, [handleFileSelect]);\n\n  const handleSetColor = useCallback(() => {\n    onScreenSelect(SettingsScreens.GeneralChatBackgroundColor);\n  }, [onScreenSelect]);\n\n  const handleResetToDefault = useCallback(() => {\n    setThemeSettings({\n      theme,\n      background: undefined,\n      backgroundColor: undefined,\n      isBlurred: true,\n      patternColor: theme === 'dark' ? DARK_THEME_PATTERN_COLOR : DEFAULT_PATTERN_COLOR,\n    });\n  }, [setThemeSettings, theme]);\n\n  const handleWallPaperSelect = useCallback((slug: string) => {\n    setThemeSettings({ theme: themeRef.current!, background: slug });\n    const currentWallpaper = loadedWallpapers && loadedWallpapers.find((wallpaper) => wallpaper.slug === slug);\n    if (currentWallpaper?.document.thumbnail) {\n      getAverageColor(currentWallpaper.document.thumbnail.dataUri)\n        .then((color) => {\n          const patternColor = getPatternColor(color);\n          const rgbColor = `#${rgb2hex(color)}`;\n          setThemeSettings({ theme: themeRef.current!, backgroundColor: rgbColor, patternColor });\n        });\n    }\n  }, [loadedWallpapers, setThemeSettings]);\n\n  const handleWallPaperBlurChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setThemeSettings({ theme: themeRef.current!, isBlurred: e.target.checked });\n  }, [setThemeSettings]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const isUploading = loadedWallpapers?.[0] && loadedWallpapers[0].slug === UPLOADING_WALLPAPER_SLUG;\n\n  return (\n    <div className=\"SettingsGeneralBackground settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <ListItem\n          icon=\"camera-add\"\n          className=\"mb-0\"\n          disabled={isUploading}\n          onClick={handleUploadWallpaper}\n        >\n          {lang('UploadImage')}\n        </ListItem>\n\n        <ListItem\n          icon=\"colorize\"\n          className=\"mb-0\"\n          onClick={handleSetColor}\n        >\n          {lang('SetColor')}\n        </ListItem>\n\n        <ListItem icon=\"favorite\" onClick={handleResetToDefault}>\n          {lang('ThemeResetToDefaults')}\n        </ListItem>\n\n        <Checkbox\n          label={lang('BackgroundBlurred')}\n          checked={Boolean(isBlurred)}\n          onChange={handleWallPaperBlurChange}\n        />\n      </div>\n\n      {loadedWallpapers ? (\n        <div className=\"settings-wallpapers\">\n          {loadedWallpapers.map((wallpaper) => (\n            <WallpaperTile\n              key={wallpaper.slug}\n              wallpaper={wallpaper}\n              theme={theme}\n              isSelected={background === wallpaper.slug}\n              onClick={handleWallPaperSelect}\n            />\n          ))}\n        </div>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const { background, isBlurred } = global.settings.themes[theme] || {};\n    const { loadedWallpapers } = global.settings;\n\n    return {\n      background,\n      isBlurred,\n      loadedWallpapers,\n      theme,\n    };\n  },\n)(SettingsGeneralBackground));\n","import type { ChangeEvent, MutableRefObject, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ThemeKey } from '../../../types';\nimport type { RealTouchEvent } from '../../../util/captureEvents';\n\nimport { selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { captureEvents } from '../../../util/captureEvents';\nimport {\n  getPatternColor, hex2rgb, hsb2rgb, rgb2hex, rgb2hsb,\n} from '../../../util/colors';\nimport { pick } from '../../../util/iteratees';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport InputText from '../../ui/InputText';\n\nimport './SettingsGeneralBackgroundColor.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  backgroundColor?: string;\n  theme: ThemeKey;\n};\n\ninterface CanvasRects {\n  colorRect: {\n    offsetLeft: number;\n    top: number;\n    width: number;\n    height: number;\n  };\n  hueRect: {\n    offsetLeft: number;\n    width: number;\n  };\n}\n\nconst DEFAULT_HSB = rgb2hsb(hex2rgb('e6ebee'));\nconst PREDEFINED_COLORS = [\n  '#e6ebee', '#b2cee1', '#008dd0', '#c6e7cb', '#c4e1a6', '#60b16e',\n  '#ccd0af', '#a6a997', '#7a7072', '#fdd7af', '#fdb76e', '#dd8851',\n];\n\nconst SettingsGeneralBackground: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  theme,\n  backgroundColor,\n}) => {\n  const { setThemeSettings } = getActions();\n\n  const themeRef = useRef<ThemeKey>();\n  themeRef.current = theme;\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const colorPickerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const huePickerRef = useRef<HTMLDivElement>(null);\n  const isFirstRunRef = useRef(true);\n\n  const [hsb, setHsb] = useState(getInitialHsb(backgroundColor));\n  // Cache for drag handlers\n  const hsbRef = useRef(hsb);\n  useEffect(() => {\n    hsbRef.current = hsb;\n  }, [hsb]);\n\n  const [isDragging, markIsDragging, unmarkIsDragging] = useFlag();\n  const [rgbInput, setRgbInput] = useState('');\n  const [hexInput, setHexInput] = useState('');\n\n  const rectsRef = useRef<CanvasRects>();\n  const colorCtxRef = useRef<CanvasRenderingContext2D>();\n\n  // Setup: cache rects, subscribe for drag events\n  useEffect(() => {\n    // We use `offsetLeft` instead of `left` to support screen transition\n    const colorRect = {\n      offsetLeft: colorPickerRef.current!.offsetLeft,\n      ...pick(colorPickerRef.current!.getBoundingClientRect(), ['top', 'width', 'height']),\n    };\n    const hueRect = {\n      offsetLeft: huePickerRef.current!.offsetLeft,\n      ...pick(huePickerRef.current!.getBoundingClientRect(), ['width']),\n    };\n\n    rectsRef.current = { colorRect, hueRect };\n\n    function handleColorDrag(e: MouseEvent | RealTouchEvent) {\n      const colorPosition = [\n        Math.min(Math.max(0, e.pageX! - colorRect.offsetLeft), colorRect.width - 1),\n        Math.min(Math.max(0, e.pageY! - colorRect.top + containerRef.current!.scrollTop), colorRect.height - 1),\n      ];\n\n      const { huePosition } = hsb2positions(hsbRef.current, rectsRef.current!);\n\n      setHsb(positions2hsb({ colorPosition, huePosition }, rectsRef.current!));\n      markIsDragging();\n\n      return true;\n    }\n\n    captureEvents(colorPickerRef.current!, {\n      onCapture: handleColorDrag,\n      onDrag: handleColorDrag,\n      onRelease: unmarkIsDragging,\n      onClick: unmarkIsDragging,\n      selectorToPreventScroll: '.SettingsGeneralBackgroundColor',\n      withCursor: true,\n    });\n\n    function handleHueDrag(e: MouseEvent | RealTouchEvent) {\n      const { colorPosition } = hsb2positions(hsbRef.current, rectsRef.current!);\n      const huePosition = Math.min(Math.max(0, e.pageX! - hueRect.offsetLeft), hueRect.width - 1);\n\n      setHsb(positions2hsb({ colorPosition, huePosition }, rectsRef.current!));\n      markIsDragging();\n\n      return true;\n    }\n\n    captureEvents(huePickerRef.current!, {\n      onCapture: handleHueDrag,\n      onDrag: handleHueDrag,\n      onRelease: unmarkIsDragging,\n      onClick: unmarkIsDragging,\n      selectorToPreventScroll: '.SettingsGeneralBackgroundColor',\n      withCursor: true,\n    });\n  }, [markIsDragging, unmarkIsDragging]);\n\n  const { colorPosition = [0, 0], huePosition = 0 } = rectsRef.current ? hsb2positions(hsb, rectsRef.current) : {};\n  const hex = rgb2hex(hsb2rgb(hsb));\n  const hue = hsb[0];\n  const hueHex = rgb2hex(hsb2rgb([hue, 1, 1]));\n\n  // Save value and update inputs when HSL changes\n  useEffect(() => {\n    const rgb = hsb2rgb(hsb);\n    const color = `#${rgb2hex(rgb)}`;\n\n    setRgbInput(rgb.join(', '));\n    setHexInput(color);\n\n    if (!isFirstRunRef.current) {\n      const patternColor = getPatternColor(rgb);\n      setThemeSettings({\n        theme: themeRef.current!,\n        background: undefined,\n        backgroundColor: color,\n        patternColor,\n      });\n    }\n    isFirstRunRef.current = false;\n  }, [hsb, setThemeSettings]);\n\n  // Redraw color picker when hue changes\n  useEffect(() => {\n    drawColor(colorPickerRef.current!.firstChild as HTMLCanvasElement, hue, colorCtxRef, rectsRef);\n  }, [hue]);\n\n  // Initially draw hue picker\n  useEffect(() => {\n    drawHue(huePickerRef.current!.firstChild as HTMLCanvasElement);\n  }, []);\n\n  const handleRgbChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const rgbValue = e.currentTarget.value.replace(/[^\\d, ]/g, '').slice(0, 13);\n\n    if (rgbValue.match(/^\\d{1,3},\\s?\\d{1,3},\\s?\\d{1,3}$/)) {\n      const rgb = rgbValue.split(',').map((channel) => Number(channel.trim())) as [number, number, number];\n      setHsb(rgb2hsb(rgb));\n    }\n\n    e.currentTarget.value = rgbValue;\n  }, []);\n\n  const handleHexChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const hexValue = e.currentTarget.value.replace(/[^0-9a-fA-F]/g, '').slice(0, 6);\n\n    if (hexValue.match(/^#?[0-9a-fA-F]{6}$/)) {\n      setHsb(rgb2hsb(hex2rgb(hexValue.replace('#', ''))));\n    }\n\n    e.currentTarget.value = hexValue;\n  }, []);\n\n  const handlePredefinedColorClick = useCallback((e: React.MouseEvent<HTMLInputElement>) => {\n    setHsb(rgb2hsb(hex2rgb(e.currentTarget.dataset.color!.replace('#', ''))));\n  }, []);\n\n  const className = buildClassName(\n    'SettingsGeneralBackgroundColor settings-content custom-scroll',\n    isDragging && 'is-dragging',\n  );\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div ref={containerRef} className={className}>\n      <div className=\"settings-item pt-3\">\n        <div ref={colorPickerRef} className=\"color-picker\">\n          <canvas />\n          <div\n            className=\"handle\"\n            style={`transform: translate(${colorPosition[0]}px, ${colorPosition[1]}px); background-color: #${hex};`}\n          />\n        </div>\n        <div ref={huePickerRef} className=\"hue-picker\">\n          <canvas />\n          <div\n            className=\"handle\"\n            style={`transform: translateX(${huePosition}px); background-color: #${hueHex};`}\n          />\n        </div>\n        <div className=\"tools\">\n          <InputText value={hexInput} label=\"HEX\" onChange={handleHexChange} />\n          <InputText value={rgbInput} label=\"RGB\" onChange={handleRgbChange} />\n        </div>\n      </div>\n      <div className=\"predefined-colors\">\n        {PREDEFINED_COLORS.map((color) => (\n          <div\n            className={buildClassName('predefined-color', color === `#${hex}` ? 'active' : undefined)}\n            data-color={color}\n            style={`background-color: ${color};`}\n            onClick={handlePredefinedColorClick}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nfunction getInitialHsb(backgroundColor?: string) {\n  return backgroundColor && backgroundColor.startsWith('#')\n    ? rgb2hsb(hex2rgb(backgroundColor.replace('#', '')))\n    : DEFAULT_HSB;\n}\n\nfunction hsb2positions(hsb: [number, number, number], rects: CanvasRects) {\n  return {\n    colorPosition: [\n      Math.round((hsb[1]) * (rects.colorRect.width - 1)),\n      Math.round((1 - hsb[2]) * (rects.colorRect.height - 1)),\n    ],\n    huePosition: Math.round(hsb[0] * (rects.hueRect.width - 1)),\n  };\n}\n\nfunction positions2hsb(\n  { colorPosition, huePosition }: { colorPosition: number[]; huePosition: number },\n  rects: CanvasRects,\n): [number, number, number] {\n  return [\n    huePosition / (rects.hueRect.width - 1),\n    colorPosition[0] / (rects.colorRect.width - 1),\n    1 - colorPosition[1] / (rects.colorRect.height - 1),\n  ];\n}\n\nfunction drawColor(\n  canvas: HTMLCanvasElement,\n  hue: number,\n  colorCtxRef: MutableRefObject<CanvasRenderingContext2D | undefined>,\n  rectsRef: RefObject<CanvasRects | undefined>,\n) {\n  let w: number;\n  let h: number;\n  let ctx: CanvasRenderingContext2D;\n\n  if (!colorCtxRef.current || !rectsRef.current) {\n    // First run\n    w = canvas.offsetWidth;\n    h = canvas.offsetHeight;\n    ctx = canvas.getContext('2d')!;\n\n    canvas.width = w;\n    canvas.height = h;\n\n    colorCtxRef.current = ctx;\n  } else {\n    w = rectsRef.current.colorRect.width;\n    h = rectsRef.current.colorRect.height;\n    ctx = colorCtxRef.current;\n  }\n\n  const imgData = ctx!.createImageData(w, h);\n  const pixels = imgData.data;\n  const col = hsb2rgb([hue, 1, 1]);\n\n  let index = 0;\n\n  for (let y = 0; y < h; y++) {\n    const perY = 1 - y / (h - 1);\n    const st = [255 * perY, 255 * perY, 255 * perY];\n    const ed = [col[0] * perY, col[1] * perY, col[2] * perY];\n    for (let x = 0; x < w; x++) {\n      const perX = x / (w - 1);\n      pixels[index++] = st[0] + (ed[0] - st[0]) * perX;\n      pixels[index++] = st[1] + (ed[1] - st[1]) * perX;\n      pixels[index++] = st[2] + (ed[2] - st[2]) * perX;\n      pixels[index++] = 255;\n    }\n  }\n\n  ctx!.putImageData(imgData, 0, 0);\n}\n\nfunction drawHue(canvas: HTMLCanvasElement) {\n  const w = canvas.offsetWidth;\n  const h = 1;\n  canvas.width = w;\n  canvas.height = h;\n  const ctx = canvas.getContext('2d')!;\n\n  const imgData = ctx.createImageData(w, h);\n  const pixels = imgData.data;\n\n  let index = 0;\n\n  for (let x = 0; x < w; x++) {\n    const hue = x / (w - 1);\n    const rgb = hsb2rgb([hue, 1, 1]);\n    /* eslint-disable prefer-destructuring */\n    pixels[index++] = rgb[0];\n    pixels[index++] = rgb[1];\n    pixels[index++] = rgb[2];\n    /* eslint-enable prefer-destructuring */\n    pixels[index++] = 255;\n  }\n\n  ctx.putImageData(imgData, 0, 0);\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const { backgroundColor } = global.settings.themes[theme] || {};\n    return {\n      backgroundColor,\n      theme,\n    };\n  },\n)(SettingsGeneralBackground));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport { SettingsScreens } from '../../../types';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\nimport useMultiClick from '../../../hooks/useMultiClick';\n\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\n\ntype OwnProps = {\n  currentScreen: SettingsScreens;\n  editedFolderId?: number;\n  onReset: () => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n};\n\nconst SettingsHeader: FC<OwnProps> = ({\n  currentScreen,\n  editedFolderId,\n  onReset,\n  onScreenSelect,\n}) => {\n  const {\n    signOut,\n    openDeleteChatFolderModal,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isSignOutDialogOpen, setIsSignOutDialogOpen] = useState(false);\n\n  const handleMultiClick = useMultiClick(5, () => {\n    onScreenSelect(SettingsScreens.Experimental);\n  });\n\n  const openSignOutConfirmation = useCallback(() => {\n    setIsSignOutDialogOpen(true);\n  }, []);\n\n  const closeSignOutConfirmation = useCallback(() => {\n    setIsSignOutDialogOpen(false);\n  }, []);\n\n  const openDeleteFolderConfirmation = useCallback(() => {\n    if (!editedFolderId) return;\n\n    openDeleteChatFolderModal({ folderId: editedFolderId });\n  }, [editedFolderId, openDeleteChatFolderModal]);\n\n  const handleSignOutMessage = useCallback(() => {\n    closeSignOutConfirmation();\n    signOut({ forceInitApi: true });\n  }, [closeSignOutConfirmation, signOut]);\n\n  const SettingsMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  const lang = useLang();\n\n  function renderHeaderContent() {\n    switch (currentScreen) {\n      case SettingsScreens.EditProfile:\n        return <h3>{lang('lng_settings_information')}</h3>;\n      case SettingsScreens.General:\n        return <h3>{lang('General')}</h3>;\n      case SettingsScreens.QuickReaction:\n        return <h3>{lang('DoubleTapSetting')}</h3>;\n      case SettingsScreens.CustomEmoji:\n        return <h3>{lang('Emoji')}</h3>;\n      case SettingsScreens.Notifications:\n        return <h3>{lang('Notifications')}</h3>;\n      case SettingsScreens.DataStorage:\n        return <h3>{lang('DataSettings')}</h3>;\n      case SettingsScreens.Privacy:\n        return <h3>{lang('PrivacySettings')}</h3>;\n      case SettingsScreens.Language:\n        return <h3>{lang('Language')}</h3>;\n      case SettingsScreens.DoNotTranslate:\n        return <h3>{lang('DoNotTranslate')}</h3>;\n      case SettingsScreens.Stickers:\n        return <h3>{lang('StickersName')}</h3>;\n      case SettingsScreens.Experimental:\n        return <h3>{lang('lng_settings_experimental')}</h3>;\n\n      case SettingsScreens.GeneralChatBackground:\n        return <h3>{lang('ChatBackground')}</h3>;\n      case SettingsScreens.GeneralChatBackgroundColor:\n        return <h3>{lang('SetColor')}</h3>;\n\n      case SettingsScreens.PrivacyPhoneNumber:\n        return <h3>{lang('PrivacyPhone')}</h3>;\n      case SettingsScreens.PrivacyLastSeen:\n        return <h3>{lang('PrivacyLastSeen')}</h3>;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return <h3>{lang('Privacy.ProfilePhoto')}</h3>;\n      case SettingsScreens.PrivacyBio:\n        return <h3>{lang('PrivacyBio')}</h3>;\n      case SettingsScreens.PrivacyForwarding:\n        return <h3>{lang('PrivacyForwards')}</h3>;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return <h3>{lang('PrivacyVoiceMessages')}</h3>;\n      case SettingsScreens.PrivacyGroupChats:\n        return <h3>{lang('AutodownloadGroupChats')}</h3>;\n      case SettingsScreens.PrivacyPhoneCall:\n        return <h3>{lang('Calls')}</h3>;\n\n      case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n      case SettingsScreens.PrivacyLastSeenAllowedContacts:\n      case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n      case SettingsScreens.PrivacyBioAllowedContacts:\n      case SettingsScreens.PrivacyForwardingAllowedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n      case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n      case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n      case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n        return <h3>{lang('AlwaysShareWith')}</h3>;\n      case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      case SettingsScreens.PrivacyBioDeniedContacts:\n      case SettingsScreens.PrivacyForwardingDeniedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n      case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n        return <h3>{lang('NeverShareWith')}</h3>;\n\n      case SettingsScreens.Performance:\n        return <h3>{lang('Animations and Performance')}</h3>;\n\n      case SettingsScreens.ActiveSessions:\n        return <h3>{lang('SessionsTitle')}</h3>;\n      case SettingsScreens.ActiveWebsites:\n        return <h3>{lang('OtherWebSessions')}</h3>;\n      case SettingsScreens.PrivacyBlockedUsers:\n        return <h3>{lang('BlockedUsers')}</h3>;\n\n      case SettingsScreens.TwoFaDisabled:\n      case SettingsScreens.TwoFaEnabled:\n        return <h3>{lang('TwoStepVerification')}</h3>;\n      case SettingsScreens.TwoFaNewPassword:\n      case SettingsScreens.TwoFaChangePasswordNew:\n      case SettingsScreens.TwoFaChangePasswordConfirm:\n        return <h3>{lang('PleaseEnterCurrentPassword')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordConfirm:\n        return <h3>{lang('PleaseReEnterPassword')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordHint:\n      case SettingsScreens.TwoFaChangePasswordHint:\n        return <h3>{lang('PasswordHint')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordEmail:\n      case SettingsScreens.TwoFaRecoveryEmail:\n        return <h3>{lang('RecoveryEmailTitle')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordEmailCode:\n      case SettingsScreens.TwoFaRecoveryEmailCode:\n        return <h3>Recovery Email Code</h3>;\n      case SettingsScreens.TwoFaCongratulations:\n        return <h3>{lang('TwoStepVerificationPasswordSet')}</h3>;\n      case SettingsScreens.TwoFaChangePasswordCurrent:\n      case SettingsScreens.TwoFaTurnOff:\n      case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n        return <h3>{lang('PleaseEnterCurrentPassword')}</h3>;\n\n      case SettingsScreens.PasscodeDisabled:\n      case SettingsScreens.PasscodeEnabled:\n      case SettingsScreens.PasscodeNewPasscode:\n      case SettingsScreens.PasscodeNewPasscodeConfirm:\n      case SettingsScreens.PasscodeCongratulations:\n        return <h3>{lang('Passcode')}</h3>;\n\n      case SettingsScreens.PasscodeTurnOff:\n        return <h3>{lang('PasscodeController.Disable.Title')}</h3>;\n\n      case SettingsScreens.PasscodeChangePasscodeCurrent:\n      case SettingsScreens.PasscodeChangePasscodeNew:\n        return <h3>{lang('PasscodeController.Change.Title')}</h3>;\n\n      case SettingsScreens.PasscodeChangePasscodeConfirm:\n        return <h3>{lang('PasscodeController.ReEnterPasscode.Placeholder')}</h3>;\n\n      case SettingsScreens.Folders:\n        return <h3>{lang('Filters')}</h3>;\n      case SettingsScreens.FoldersCreateFolder:\n        return <h3>{lang('FilterNew')}</h3>;\n      case SettingsScreens.FoldersShare:\n        return <h3>{lang('FolderLinkScreen.Title')}</h3>;\n      case SettingsScreens.FoldersEditFolder:\n      case SettingsScreens.FoldersEditFolderFromChatList:\n      case SettingsScreens.FoldersEditFolderInvites:\n        return (\n          <div className=\"settings-main-header\">\n            <h3>{lang('FilterEdit')}</h3>\n            {Boolean(editedFolderId) && (\n              <DropdownMenu\n                className=\"settings-more-menu\"\n                trigger={SettingsMenuButton}\n                positionX=\"right\"\n              >\n                <MenuItem icon=\"delete\" destructive onClick={openDeleteFolderConfirmation}>\n                  {lang('Delete')}\n                </MenuItem>\n              </DropdownMenu>\n            )}\n          </div>\n        );\n      case SettingsScreens.FoldersIncludedChats:\n      case SettingsScreens.FoldersIncludedChatsFromChatList:\n      case SettingsScreens.FoldersExcludedChats:\n      case SettingsScreens.FoldersExcludedChatsFromChatList:\n        return (\n          <h3>\n            {lang(\n              currentScreen === SettingsScreens.FoldersIncludedChats\n                  || currentScreen === SettingsScreens.FoldersIncludedChatsFromChatList\n                ? 'FilterInclude' : 'FilterExclude',\n            )}\n          </h3>\n        );\n      default:\n        return (\n          <div className=\"settings-main-header\">\n            {/* eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions */}\n            <h3 onClick={handleMultiClick}>\n              {lang('SETTINGS')}\n            </h3>\n\n            <Button\n              round\n              ripple={!isMobile}\n              size=\"smaller\"\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => onScreenSelect(SettingsScreens.EditProfile)}\n              ariaLabel={lang('lng_settings_information')}\n            >\n              <i className=\"icon icon-edit\" />\n            </Button>\n            <DropdownMenu\n              className=\"settings-more-menu\"\n              trigger={SettingsMenuButton}\n              positionX=\"right\"\n            >\n              <MenuItem icon=\"logout\" onClick={openSignOutConfirmation}>{lang('LogOutTitle')}</MenuItem>\n            </DropdownMenu>\n          </div>\n        );\n    }\n  }\n\n  return (\n    <div className=\"left-header\">\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        onClick={onReset}\n        ariaLabel={lang('AccDescrGoBack')}\n      >\n        <i className=\"icon icon-arrow-left\" />\n      </Button>\n      {renderHeaderContent()}\n      <ConfirmDialog\n        isOpen={isSignOutDialogOpen}\n        onClose={closeSignOutConfirmation}\n        text={lang('lng_sure_logout')}\n        confirmLabel={lang('AccountSettings.Logout')}\n        confirmHandler={handleSignOutMessage}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(SettingsHeader);\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nconst CLICK_TIMEOUT = 300;\n\nexport default function useMultiClick(amount: number, callback: NoneToVoidFunction) {\n  const currentAmountRef = useRef(0);\n  const timeoutRef = useRef<ReturnType<typeof setTimeout>>();\n  const handleClick = useCallback(() => {\n    currentAmountRef.current++;\n    if (currentAmountRef.current === amount) {\n      currentAmountRef.current = 0;\n      callback();\n      return;\n    }\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n\n    timeoutRef.current = setTimeout(() => {\n      currentAmountRef.current = 0;\n    }, CLICK_TIMEOUT);\n  }, [amount, callback]);\n\n  return handleClick;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiLanguage } from '../../../api/types';\nimport type { ISettings, LangCode } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectIsCurrentUserPremium } from '../../../global/selectors';\nimport { setLanguage } from '../../../util/langProvider';\nimport { IS_TRANSLATION_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport RadioGroup from '../../ui/RadioGroup';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  isCurrentUserPremium: boolean;\n} & Pick<ISettings, 'languages' | 'language' | 'canTranslate' | 'canTranslateChats' | 'doNotTranslate'>;\n\nconst SettingsLanguage: FC<OwnProps & StateProps> = ({\n  isActive,\n  isCurrentUserPremium,\n  languages,\n  language,\n  canTranslate,\n  canTranslateChats,\n  doNotTranslate,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    loadLanguages,\n    loadAttachBots,\n    setSettingOption,\n    openPremiumModal,\n  } = getActions();\n\n  const [selectedLanguage, setSelectedLanguage] = useState<string>(language);\n  const [isLoading, markIsLoading, unmarkIsLoading] = useFlag();\n\n  const canTranslateChatsEnabled = isCurrentUserPremium && canTranslateChats;\n\n  const lang = useLang();\n\n  useEffect(() => {\n    if (!languages?.length) {\n      loadLanguages();\n    }\n  }, [languages]);\n\n  const handleChange = useLastCallback((langCode: string) => {\n    setSelectedLanguage(langCode);\n    markIsLoading();\n\n    void setLanguage(langCode as LangCode, () => {\n      unmarkIsLoading();\n\n      setSettingOption({ language: langCode as LangCode });\n\n      loadAttachBots(); // Should be refetched every language change\n    });\n  });\n\n  const options = useMemo(() => {\n    return languages ? buildOptions(languages) : undefined;\n  }, [languages]);\n\n  const handleShouldTranslateChange = useLastCallback((newValue: boolean) => {\n    setSettingOption({ canTranslate: newValue });\n  });\n\n  const handleShouldTranslateChatsChange = useLastCallback((newValue: boolean) => {\n    setSettingOption({ canTranslateChats: newValue });\n  });\n\n  const handleShouldTranslateChatsClick = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'translations',\n      });\n    }\n  });\n\n  const doNotTranslateText = useMemo(() => {\n    if (!IS_TRANSLATION_SUPPORTED || !doNotTranslate.length) {\n      return undefined;\n    }\n\n    if (doNotTranslate.length === 1) {\n      const originalNames = new Intl.DisplayNames([language], { type: 'language' });\n      return originalNames.of(doNotTranslate[0])!;\n    }\n\n    return lang('Languages', doNotTranslate.length);\n  }, [doNotTranslate, lang, language]);\n\n  const handleDoNotSelectOpen = useLastCallback(() => {\n    onScreenSelect(SettingsScreens.DoNotTranslate);\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content settings-language custom-scroll\">\n      {IS_TRANSLATION_SUPPORTED && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('ShowTranslateButton')}\n            checked={canTranslate}\n            onCheck={handleShouldTranslateChange}\n          />\n          <Checkbox\n            className=\"pb-2\"\n            label={lang('ShowTranslateChatButton')}\n            checked={canTranslateChatsEnabled}\n            disabled={!isCurrentUserPremium}\n            rightIcon={!isCurrentUserPremium ? 'lock' : undefined}\n            onClickLabel={handleShouldTranslateChatsClick}\n            onCheck={handleShouldTranslateChatsChange}\n          />\n          {(canTranslate || canTranslateChatsEnabled) && (\n            <ListItem\n              onClick={handleDoNotSelectOpen}\n            >\n              {lang('DoNotTranslate')}\n              <span className=\"settings-item__current-value\">{doNotTranslateText}</span>\n            </ListItem>\n          )}\n          <p className=\"settings-item-description mb-0 mt-1\">\n            {lang('lng_translate_settings_about')}\n          </p>\n        </div>\n      )}\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\">{lang('Localization.InterfaceLanguage')}</h4>\n        {options ? (\n          <RadioGroup\n            name=\"language-settings\"\n            options={options}\n            selected={selectedLanguage}\n            loadingOption={isLoading ? selectedLanguage : undefined}\n            onChange={handleChange}\n          />\n        ) : (\n          <Loading />\n        )}\n      </div>\n    </div>\n  );\n};\n\nfunction buildOptions(languages: ApiLanguage[]) {\n  const currentLangCode = (window.navigator.language || 'en').toLowerCase();\n  const shortLangCode = currentLangCode.substr(0, 2);\n\n  return languages.map(({ langCode, nativeName, name }) => ({\n    value: langCode,\n    label: nativeName,\n    subLabel: name,\n  })).sort((a) => {\n    return currentLangCode && (a.value === currentLangCode || a.value === shortLangCode) ? -1 : 0;\n  });\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      language, languages, canTranslate, canTranslateChats, doNotTranslate,\n    } = global.settings.byKey;\n\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      isCurrentUserPremium,\n      languages,\n      language,\n      canTranslate,\n      canTranslateChats,\n      doNotTranslate,\n    };\n  },\n)(SettingsLanguage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { SettingsScreens } from '../../../types';\n\nimport { FAQ_URL, PRIVACY_URL } from '../../../config';\nimport { selectIsPremiumPurchaseBlocked } from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport ChatExtra from '../../common/ChatExtra';\nimport PremiumIcon from '../../common/PremiumIcon';\nimport ProfileInfo from '../../common/ProfileInfo';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  sessionCount: number;\n  currentUserId?: string;\n  canBuyPremium?: boolean;\n};\n\nconst SettingsMain: FC<OwnProps & StateProps> = ({\n  isActive,\n  onScreenSelect,\n  onReset,\n  currentUserId,\n  sessionCount,\n  canBuyPremium,\n}) => {\n  const {\n    loadProfilePhotos,\n    openPremiumModal,\n    openSupportChat,\n    openUrl,\n  } = getActions();\n\n  const [isSupportDialogOpen, openSupportDialog, closeSupportDialog] = useFlag(false);\n\n  const lang = useLang();\n\n  useEffect(() => {\n    if (currentUserId) {\n      loadProfilePhotos({ profileId: currentUserId });\n    }\n  }, [currentUserId, loadProfilePhotos]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleOpenSupport = useLastCallback(() => {\n    openSupportChat();\n    closeSupportDialog();\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-main-menu\">\n        {currentUserId && (\n          <ProfileInfo\n            userId={currentUserId}\n            canPlayVideo={Boolean(isActive)}\n            forceShowSelf\n          />\n        )}\n        {currentUserId && (\n          <ChatExtra\n            chatOrUserId={currentUserId}\n            forceShowSelf\n          />\n        )}\n        <ListItem\n          icon=\"settings\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.General)}\n        >\n          {lang('Telegram.GeneralSettingsViewController')}\n        </ListItem>\n        <ListItem\n          icon=\"animations\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Performance)}\n        >\n          {lang('Animations and Performance')}\n        </ListItem>\n        <ListItem\n          icon=\"unmute\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Notifications)}\n        >\n          {lang('Notifications')}\n        </ListItem>\n        <ListItem\n          icon=\"data\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.DataStorage)}\n        >\n          {lang('DataSettings')}\n        </ListItem>\n        <ListItem\n          icon=\"lock\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Privacy)}\n        >\n          {lang('PrivacySettings')}\n        </ListItem>\n        <ListItem\n          icon=\"folder\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Folders)}\n        >\n          {lang('Filters')}\n        </ListItem>\n        <ListItem\n          icon=\"active-sessions\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.ActiveSessions)}\n        >\n          {lang('SessionsTitle')}\n          {sessionCount > 0 && (<span className=\"settings-item__current-value\">{sessionCount}</span>)}\n        </ListItem>\n        <ListItem\n          icon=\"language\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Language)}\n        >\n          {lang('Language')}\n          <span className=\"settings-item__current-value\">{lang.langName}</span>\n        </ListItem>\n        <ListItem\n          icon=\"stickers\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Stickers)}\n        >\n          {lang('StickersName')}\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentUserId } = global;\n\n    return {\n      sessionCount: global.activeSessions.orderedHashes.length,\n      currentUserId,\n      canBuyPremium: !selectIsPremiumPurchaseBlocked(global),\n    };\n  },\n)(SettingsMain));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport {\n  checkIfNotificationsSupported,\n  checkIfOfflinePushFailed,\n  playNotifySound,\n} from '../../../util/notifications';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useRunDebounced from '../../../hooks/useRunDebounced';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  hasPrivateChatsNotifications: boolean;\n  hasPrivateChatsMessagePreview: boolean;\n  hasGroupNotifications: boolean;\n  hasGroupMessagePreview: boolean;\n  hasBroadcastNotifications: boolean;\n  hasBroadcastMessagePreview: boolean;\n  hasContactJoinedNotifications: boolean;\n  hasWebNotifications: boolean;\n  hasPushNotifications: boolean;\n  notificationSoundVolume: number;\n};\n\nconst SettingsNotifications: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  hasPrivateChatsNotifications,\n  hasPrivateChatsMessagePreview,\n  hasGroupNotifications,\n  hasGroupMessagePreview,\n  hasBroadcastNotifications,\n  hasBroadcastMessagePreview,\n  hasContactJoinedNotifications,\n  hasPushNotifications,\n  hasWebNotifications,\n  notificationSoundVolume,\n}) => {\n  const {\n    loadNotificationSettings,\n    updateContactSignUpNotification,\n    updateNotificationSettings,\n    updateWebNotificationSettings,\n  } = getActions();\n\n  useEffect(() => {\n    loadNotificationSettings();\n  }, [loadNotificationSettings]);\n\n  const runDebounced = useRunDebounced(500, true);\n\n  const areNotificationsSupported = checkIfNotificationsSupported();\n  const areOfflineNotificationsSupported = areNotificationsSupported && !checkIfOfflinePushFailed();\n\n  const handleSettingsChange = useCallback((\n    e: ChangeEvent<HTMLInputElement>,\n    peerType: 'contact' | 'group' | 'broadcast',\n    setting: 'silent' | 'showPreviews',\n  ) => {\n    const currentIsSilent = peerType === 'contact'\n      ? !hasPrivateChatsNotifications\n      : !(peerType === 'group' ? hasGroupNotifications : hasBroadcastNotifications);\n    const currentShouldShowPreviews = peerType === 'contact'\n      ? hasPrivateChatsMessagePreview\n      : (peerType === 'group' ? hasGroupMessagePreview : hasBroadcastMessagePreview);\n\n    updateNotificationSettings({\n      peerType,\n      ...(setting === 'silent' && { isSilent: !e.target.checked, shouldShowPreviews: currentShouldShowPreviews }),\n      ...(setting === 'showPreviews' && { shouldShowPreviews: e.target.checked, isSilent: currentIsSilent }),\n    });\n  }, [\n    hasBroadcastMessagePreview, hasBroadcastNotifications,\n    hasGroupMessagePreview, hasGroupNotifications,\n    hasPrivateChatsMessagePreview, hasPrivateChatsNotifications,\n    updateNotificationSettings,\n  ]);\n\n  const handleWebNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const isEnabled = e.target.checked;\n    updateWebNotificationSettings({\n      hasWebNotifications: isEnabled,\n      ...(!isEnabled && { hasPushNotifications: false }),\n    });\n  }, [updateWebNotificationSettings]);\n\n  const handlePushNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    updateWebNotificationSettings({\n      hasPushNotifications: e.target.checked,\n    });\n  }, [updateWebNotificationSettings]);\n\n  const handlePrivateChatsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'contact', 'silent');\n  }, [handleSettingsChange]);\n\n  const handlePrivateChatsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'contact', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleGroupsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'group', 'silent');\n  }, [handleSettingsChange]);\n\n  const handleGroupsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'group', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleChannelsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'broadcast', 'silent');\n  }, [handleSettingsChange]);\n\n  const handleChannelsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'broadcast', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleContactNotificationChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    updateContactSignUpNotification({\n      isSilent: !e.target.checked,\n    });\n  }, [updateContactSignUpNotification]);\n\n  const handleVolumeChange = useCallback((volume: number) => {\n    updateWebNotificationSettings({\n      notificationSoundVolume: volume,\n    });\n    runDebounced(() => playNotifySound(undefined, volume));\n  }, [runDebounced, updateWebNotificationSettings]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Web notifications\n        </h4>\n        <Checkbox\n          label=\"Web notifications\"\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasWebNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasWebNotifications}\n          disabled={!areNotificationsSupported}\n          onChange={handleWebNotificationsChange}\n        />\n        <Checkbox\n          label=\"Offline notifications\"\n          disabled={!hasWebNotifications || !areOfflineNotificationsSupported}\n          // eslint-disable-next-line max-len\n          subLabel={areOfflineNotificationsSupported ? lang(hasPushNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled') : 'Not supported'}\n          checked={hasPushNotifications}\n          onChange={handlePushNotificationsChange}\n        />\n        <div className=\"settings-item-slider\">\n          <RangeSlider\n            label=\"Sound\"\n            min={0}\n            max={10}\n            disabled={!areNotificationsSupported}\n            value={notificationSoundVolume}\n            onChange={handleVolumeChange}\n          />\n        </div>\n      </div>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('AutodownloadPrivateChats')}\n        </h4>\n\n        <Checkbox\n          label={lang('NotificationsForPrivateChats')}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasPrivateChatsNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasPrivateChatsNotifications}\n          onChange={handlePrivateChatsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!hasPrivateChatsNotifications}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasPrivateChatsMessagePreview ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasPrivateChatsMessagePreview}\n          onChange={handlePrivateChatsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterGroups')}</h4>\n\n        <Checkbox\n          label={lang('NotificationsForGroups')}\n          subLabel={lang(hasGroupNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasGroupNotifications}\n          onChange={handleGroupsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!hasGroupNotifications}\n          subLabel={lang(hasGroupMessagePreview ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasGroupMessagePreview}\n          onChange={handleGroupsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterChannels')}</h4>\n\n        <Checkbox\n          label={lang('NotificationsForChannels')}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasBroadcastNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasBroadcastNotifications}\n          onChange={handleChannelsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!hasBroadcastNotifications}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasBroadcastMessagePreview ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasBroadcastMessagePreview}\n          onChange={handleChannelsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('PhoneOther')}</h4>\n\n        <Checkbox\n          label={lang('ContactJoined')}\n          checked={hasContactJoinedNotifications}\n          onChange={handleContactNotificationChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      hasPrivateChatsNotifications: Boolean(global.settings.byKey.hasPrivateChatsNotifications),\n      hasPrivateChatsMessagePreview: Boolean(global.settings.byKey.hasPrivateChatsMessagePreview),\n      hasGroupNotifications: Boolean(global.settings.byKey.hasGroupNotifications),\n      hasGroupMessagePreview: Boolean(global.settings.byKey.hasGroupMessagePreview),\n      hasBroadcastNotifications: Boolean(global.settings.byKey.hasBroadcastNotifications),\n      hasBroadcastMessagePreview: Boolean(global.settings.byKey.hasBroadcastMessagePreview),\n      hasContactJoinedNotifications: Boolean(global.settings.byKey.hasContactJoinedNotifications),\n      hasWebNotifications: global.settings.byKey.hasWebNotifications,\n      hasPushNotifications: global.settings.byKey.hasPushNotifications,\n      notificationSoundVolume: global.settings.byKey.notificationSoundVolume,\n    };\n  },\n)(SettingsNotifications));\n","import React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { AnimationLevel, PerformanceType, PerformanceTypeKey } from '../../../types';\n\nimport {\n  ANIMATION_LEVEL_CUSTOM, ANIMATION_LEVEL_MAX, ANIMATION_LEVEL_MED, ANIMATION_LEVEL_MIN,\n} from '../../../config';\nimport {\n  INITIAL_PERFORMANCE_STATE_MAX,\n  INITIAL_PERFORMANCE_STATE_MID,\n  INITIAL_PERFORMANCE_STATE_MIN,\n} from '../../../global/initialState';\nimport { selectPerformanceSettings } from '../../../global/selectors';\nimport { areDeepEqual } from '../../../util/areDeepEqual';\nimport { IS_BACKDROP_BLUR_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype PerformanceSection = [string, PerformanceOption[]];\ntype PerformanceOption = {\n  key: PerformanceTypeKey;\n  label: string;\n  disabled?: boolean;\n};\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  performanceSettings: PerformanceType;\n};\n\nconst ANIMATION_LEVEL_OPTIONS = [\n  'Power Saving',\n  'Nice and Fast',\n  'Lots of Stuff',\n];\n\nconst ANIMATION_LEVEL_CUSTOM_OPTIONS = [\n  'Power Saving',\n  'Custom',\n  'Lots of Stuff',\n];\n\nconst PERFORMANCE_OPTIONS: PerformanceSection[] = [\n  ['LiteMode.Key.animations.Title', [\n    { key: 'pageTransitions', label: 'Page Transitions' },\n    { key: 'messageSendingAnimations', label: 'Message Sending Animation' },\n    { key: 'mediaViewerAnimations', label: 'Media Viewer Animations' },\n    { key: 'messageComposerAnimations', label: 'Message Composer Animations' },\n    { key: 'contextMenuAnimations', label: 'Context Menu Animation' },\n    { key: 'contextMenuBlur', label: 'Context Menu Blur', disabled: !IS_BACKDROP_BLUR_SUPPORTED },\n    { key: 'rightColumnAnimations', label: 'Right Column Animation' },\n  ]],\n  ['Stickers and Emoji', [\n    { key: 'animatedEmoji', label: 'Allow Animated Emoji' },\n    { key: 'loopAnimatedStickers', label: 'Loop Animated Stickers' },\n    { key: 'reactionEffects', label: 'Reaction Effects' },\n    { key: 'stickerEffects', label: 'Full-Screen Sticker and Emoji Effects' },\n  ]],\n  ['AutoplayMedia', [\n    { key: 'autoplayGifs', label: 'AutoplayGIF' },\n    { key: 'autoplayVideos', label: 'AutoplayVideo' },\n  ]],\n];\n\nfunction SettingsPerformance({\n  isActive,\n  performanceSettings,\n  onReset,\n}: OwnProps & StateProps) {\n  const {\n    setSettingOption,\n    updatePerformanceSettings,\n  } = getActions();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const lang = useLang();\n  const [sectionExpandedStates, setSectionExpandedStates] = useState<Record<number, boolean>>({});\n\n  const sectionCheckedStates = useMemo(() => {\n    return PERFORMANCE_OPTIONS.reduce((acc, [, options], index) => {\n      acc[index] = options.every(({ key }) => performanceSettings[key]);\n\n      return acc;\n    }, {} as Record<number, boolean>);\n  }, [performanceSettings]);\n\n  const animationLevelState = useMemo(() => {\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MAX)) {\n      return ANIMATION_LEVEL_MAX;\n    }\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MIN)) {\n      return ANIMATION_LEVEL_MIN;\n    }\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MID)) {\n      return ANIMATION_LEVEL_MED;\n    }\n\n    return ANIMATION_LEVEL_CUSTOM;\n  }, [performanceSettings]);\n  const animationLevelOptions = animationLevelState === ANIMATION_LEVEL_CUSTOM\n    ? ANIMATION_LEVEL_CUSTOM_OPTIONS\n    : ANIMATION_LEVEL_OPTIONS;\n\n  const handleToggleSection = useCallback((e: React.MouseEvent, index?: string) => {\n    e.preventDefault();\n    const sectionIndex = Number(index);\n\n    setSectionExpandedStates((prev) => ({\n      ...prev,\n      [sectionIndex]: !prev[sectionIndex],\n    }));\n  }, []);\n\n  const handleAnimationLevelChange = useCallback((newLevel: number) => {\n    const performance = newLevel === ANIMATION_LEVEL_MIN\n      ? INITIAL_PERFORMANCE_STATE_MIN\n      : (newLevel === ANIMATION_LEVEL_MED ? INITIAL_PERFORMANCE_STATE_MID : INITIAL_PERFORMANCE_STATE_MAX);\n\n    setSettingOption({ animationLevel: newLevel as AnimationLevel });\n    updatePerformanceSettings(performance);\n  }, [setSettingOption]);\n\n  const handlePropertyGroupChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = e.target;\n    const perfomanceSection = PERFORMANCE_OPTIONS.find(([sectionName]) => sectionName === name);\n    if (!perfomanceSection) {\n      return;\n    }\n\n    const newSettings = perfomanceSection[1].reduce((acc, { key }) => {\n      acc[key] = checked;\n      return acc;\n    }, {} as Partial<PerformanceType>);\n\n    updatePerformanceSettings(newSettings);\n  }, []);\n\n  const handlePropertyChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = e.target;\n\n    updatePerformanceSettings({ [name as PerformanceTypeKey]: checked });\n  }, []);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Animation Level\n        </h4>\n        <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Choose the desired animations amount.\n        </p>\n\n        <RangeSlider\n          options={animationLevelOptions}\n          value={animationLevelState === ANIMATION_LEVEL_CUSTOM ? ANIMATION_LEVEL_MED : animationLevelState}\n          onChange={handleAnimationLevelChange}\n        />\n      </div>\n\n      <div className=\"settings-item-simple settings-item__with-shifted-dropdown\">\n        <h3 className=\"settings-item-header\" dir=\"auto\">Resource-Intensive Processes</h3>\n\n        {PERFORMANCE_OPTIONS.map(([sectionName, options], index) => {\n          return (\n            <div\n              key={sectionName}\n              className=\"settings-dropdown-section\"\n            >\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name={sectionName}\n                  value={index.toString()}\n                  checked={sectionCheckedStates[index]}\n                  label={lang(sectionName)}\n                  rightIcon={sectionExpandedStates[index] ? 'up' : 'down'}\n                  onChange={handlePropertyGroupChange}\n                  onClickLabel={handleToggleSection}\n                />\n              </div>\n              {Boolean(sectionExpandedStates[index]) && (\n                <div className=\"DropdownList DropdownList--open\">\n                  {options.map(({ key, label, disabled }) => (\n                    <Checkbox\n                      key={key}\n                      name={key}\n                      checked={performanceSettings[key]}\n                      label={lang(label)}\n                      disabled={disabled}\n                      onChange={handlePropertyChange}\n                    />\n                  ))}\n                </div>\n              )}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    performanceSettings: selectPerformanceSettings(global),\n  };\n})(SettingsPerformance));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPrivacySettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectCanSetPasscode, selectIsCurrentUserPremium } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  isCurrentUserPremium?: boolean;\n  hasPassword?: boolean;\n  hasPasscode?: boolean;\n  canSetPasscode?: boolean;\n  blockedCount: number;\n  webAuthCount: number;\n  isSensitiveEnabled?: boolean;\n  canChangeSensitive?: boolean;\n  canDisplayAutoarchiveSetting: boolean;\n  shouldArchiveAndMuteNewNonContact?: boolean;\n  canDisplayChatInTitle?: boolean;\n  privacyPhoneNumber?: ApiPrivacySettings;\n  privacyLastSeen?: ApiPrivacySettings;\n  privacyProfilePhoto?: ApiPrivacySettings;\n  privacyForwarding?: ApiPrivacySettings;\n  privacyVoiceMessages?: ApiPrivacySettings;\n  privacyGroupChats?: ApiPrivacySettings;\n  privacyPhoneCall?: ApiPrivacySettings;\n  privacyBio?: ApiPrivacySettings;\n};\n\nconst SettingsPrivacy: FC<OwnProps & StateProps> = ({\n  isActive,\n  isCurrentUserPremium,\n  hasPassword,\n  hasPasscode,\n  blockedCount,\n  webAuthCount,\n  isSensitiveEnabled,\n  canChangeSensitive,\n  canDisplayAutoarchiveSetting,\n  shouldArchiveAndMuteNewNonContact,\n  canDisplayChatInTitle,\n  canSetPasscode,\n  privacyPhoneNumber,\n  privacyLastSeen,\n  privacyProfilePhoto,\n  privacyForwarding,\n  privacyVoiceMessages,\n  privacyGroupChats,\n  privacyPhoneCall,\n  privacyBio,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    loadPrivacySettings,\n    loadBlockedUsers,\n    loadContentSettings,\n    updateContentSettings,\n    loadGlobalPrivacySettings,\n    updateGlobalPrivacySettings,\n    loadWebAuthorizations,\n    showNotification,\n    setSettingOption,\n  } = getActions();\n\n  useEffect(() => {\n    loadBlockedUsers();\n    loadPrivacySettings();\n    loadContentSettings();\n    loadWebAuthorizations();\n  }, []);\n\n  useEffect(() => {\n    if (isActive) {\n      loadGlobalPrivacySettings();\n    }\n  }, [isActive, loadGlobalPrivacySettings]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleArchiveAndMuteChange = useCallback((isEnabled: boolean) => {\n    updateGlobalPrivacySettings({\n      shouldArchiveAndMuteNewNonContact: isEnabled,\n    });\n  }, [updateGlobalPrivacySettings]);\n\n  const handleVoiceMessagesClick = useCallback(() => {\n    if (isCurrentUserPremium) {\n      onScreenSelect(SettingsScreens.PrivacyVoiceMessages);\n    } else {\n      showNotification({\n        message: lang('PrivacyVoiceMessagesPremiumOnly'),\n      });\n    }\n  }, [isCurrentUserPremium, lang, onScreenSelect, showNotification]);\n\n  const handleChatInTitleChange = useCallback((isChecked: boolean) => {\n    setSettingOption({\n      canDisplayChatInTitle: isChecked,\n    });\n  }, []);\n\n  const handleUpdateContentSettings = useCallback((isChecked: boolean) => {\n    updateContentSettings(isChecked);\n  }, [updateContentSettings]);\n\n  function getVisibilityValue(setting?: ApiPrivacySettings) {\n    const { visibility } = setting || {};\n    const blockCount = setting ? setting.blockChatIds.length + setting.blockUserIds.length : 0;\n    const allowCount = setting ? setting.allowChatIds.length + setting.allowUserIds.length : 0;\n    const total = [];\n    if (blockCount) total.push(`-${blockCount}`);\n    if (allowCount) total.push(`+${allowCount}`);\n\n    const exceptionString = total.length ? `(${total.join(',')})` : '';\n\n    switch (visibility) {\n      case 'everybody':\n        return `${lang('P2PEverybody')} ${exceptionString}`;\n\n      case 'contacts':\n        return `${lang('P2PContacts')} ${exceptionString}`;\n\n      case 'nobody':\n        return `${lang('P2PNobody')} ${exceptionString}`;\n    }\n\n    return undefined;\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <ListItem\n          icon=\"delete-user\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBlockedUsers)}\n        >\n          {lang('BlockedUsers')}\n          <span className=\"settings-item__current-value\">{blockedCount || ''}</span>\n        </ListItem>\n        {canSetPasscode && (\n          <ListItem\n            icon=\"key\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(\n              hasPasscode ? SettingsScreens.PasscodeEnabled : SettingsScreens.PasscodeDisabled,\n            )}\n          >\n            <div className=\"multiline-menu-item\">\n              <span className=\"title\">{lang('Passcode')}</span>\n              <span className=\"subtitle\" dir=\"auto\">\n                {lang(hasPasscode ? 'PasswordOn' : 'PasswordOff')}\n              </span>\n            </div>\n          </ListItem>\n        )}\n        <ListItem\n          icon=\"lock\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(\n            hasPassword ? SettingsScreens.TwoFaEnabled : SettingsScreens.TwoFaDisabled,\n          )}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('TwoStepVerification')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {lang(hasPassword ? 'PasswordOn' : 'PasswordOff')}\n            </span>\n          </div>\n        </ListItem>\n        {webAuthCount > 0 && (\n          <ListItem\n            icon=\"web\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(SettingsScreens.ActiveWebsites)}\n          >\n            {lang('PrivacySettings.WebSessions')}\n            <span className=\"settings-item__current-value\">{webAuthCount}</span>\n          </ListItem>\n        )}\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('PrivacyTitle')}</h4>\n\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyPhoneNumber)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyPhoneTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacyPhoneNumber)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyLastSeen)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('LastSeenTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacyLastSeen)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyProfilePhoto)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyProfilePhotoTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacyProfilePhoto)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBio)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyBio')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacyBio)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyForwarding)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyForwardsTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacyForwarding)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyPhoneCall)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('WhoCanCallMe')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacyPhoneCall)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyGroupChats)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('WhoCanAddMe')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacyGroupChats)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          disabled={!isCurrentUserPremium}\n          allowDisabledClick\n          rightElement={!isCurrentUserPremium && <i className=\"icon icon-lock-badge settings-icon-locked\" />}\n          className=\"no-icon\"\n          onClick={handleVoiceMessagesClick}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyVoiceMessagesTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacyVoiceMessages)}\n            </span>\n          </div>\n        </ListItem>\n      </div>\n\n      {canDisplayAutoarchiveSetting && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('NewChatsFromNonContacts')}\n          </h4>\n          <Checkbox\n            label={lang('ArchiveAndMute')}\n            subLabel={lang('ArchiveAndMuteInfo')}\n            checked={Boolean(shouldArchiveAndMuteNewNonContact)}\n            onCheck={handleArchiveAndMuteChange}\n          />\n        </div>\n      )}\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_settings_window_system')}\n        </h4>\n        <Checkbox\n          label={lang('lng_settings_title_chat_name')}\n          checked={Boolean(canDisplayChatInTitle)}\n          onCheck={handleChatInTitleChange}\n        />\n      </div>\n\n      {canChangeSensitive && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('lng_settings_sensitive_title')}\n          </h4>\n          <Checkbox\n            label={lang('lng_settings_sensitive_disable_filtering')}\n            subLabel={lang('lng_settings_sensitive_about')}\n            checked={Boolean(isSensitiveEnabled)}\n            disabled={!canChangeSensitive}\n            onCheck={handleUpdateContentSettings}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      settings: {\n        byKey: {\n          hasPassword, isSensitiveEnabled, canChangeSensitive, shouldArchiveAndMuteNewNonContact,\n          canDisplayChatInTitle,\n        },\n        privacy,\n      },\n      blocked,\n      passcode: {\n        hasPasscode,\n      },\n      appConfig,\n    } = global;\n\n    return {\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      hasPassword,\n      hasPasscode: Boolean(hasPasscode),\n      blockedCount: blocked.totalCount,\n      webAuthCount: global.activeWebSessions.orderedHashes.length,\n      isSensitiveEnabled,\n      canDisplayAutoarchiveSetting: Boolean(appConfig?.canDisplayAutoarchiveSetting),\n      shouldArchiveAndMuteNewNonContact,\n      canChangeSensitive,\n      privacyPhoneNumber: privacy.phoneNumber,\n      privacyLastSeen: privacy.lastSeen,\n      privacyProfilePhoto: privacy.profilePhoto,\n      privacyForwarding: privacy.forwards,\n      privacyVoiceMessages: privacy.voiceMessages,\n      privacyGroupChats: privacy.chatInvite,\n      privacyPhoneCall: privacy.phoneCall,\n      privacyBio: privacy.bio,\n      canDisplayChatInTitle,\n      canSetPasscode: selectCanSetPasscode(global),\n    };\n  },\n)(SettingsPrivacy));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { filterUsersByName, getUserFullName } from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\n\nimport useLang from '../../../hooks/useLang';\n\nimport ChatOrUserPicker from '../../common/ChatOrUserPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  blockedIds: string[];\n  contactIds?: string[];\n  localContactIds?: string[];\n  currentUserId?: string;\n};\n\nconst BlockUserModal: FC<OwnProps & StateProps> = ({\n  usersById,\n  blockedIds,\n  contactIds,\n  localContactIds,\n  currentUserId,\n  isOpen,\n  onClose,\n}) => {\n  const {\n    setUserSearchQuery,\n    blockUser,\n  } = getActions();\n\n  const lang = useLang();\n  const [search, setSearch] = useState('');\n\n  useEffect(() => {\n    setUserSearchQuery({ query: search });\n  }, [search, setUserSearchQuery]);\n\n  const filteredContactIds = useMemo(() => {\n    const availableContactIds = unique([\n      ...(contactIds || []),\n      ...(localContactIds || []),\n    ].filter((contactId) => {\n      return contactId !== currentUserId && !blockedIds.includes(contactId);\n    }));\n\n    return filterUsersByName(availableContactIds, usersById, search)\n      .sort((firstId, secondId) => {\n        const firstName = getUserFullName(usersById[firstId]) || '';\n        const secondName = getUserFullName(usersById[secondId]) || '';\n\n        return firstName.localeCompare(secondName);\n      });\n  }, [blockedIds, contactIds, currentUserId, search, localContactIds, usersById]);\n\n  const handleRemoveUser = useCallback((userId: string) => {\n    blockUser({ userId });\n    onClose();\n  }, [onClose]);\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      chatOrUserIds={filteredContactIds}\n      searchPlaceholder={lang('BlockedUsers.BlockUser')}\n      search={search}\n      onSearchChange={setSearch}\n      onSelectChatOrUser={handleRemoveUser}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      users: {\n        byId: usersById,\n      },\n      blocked: {\n        ids: blockedIds,\n      },\n      contactList,\n      currentUserId,\n    } = global;\n\n    return {\n      usersById,\n      blockedIds,\n      contactIds: contactList?.userIds,\n      localContactIds: selectTabState(global).userSearch.localUserIds,\n      currentUserId,\n    };\n  },\n)(BlockUserModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiCountryCode, ApiUser } from '../../../api/types';\n\nimport { CHAT_HEIGHT_PX } from '../../../config';\nimport { getMainUsername, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport BlockUserModal from './BlockUserModal';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  chatsByIds: Record<string, ApiChat>;\n  usersByIds: Record<string, ApiUser>;\n  blockedIds: string[];\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst SettingsPrivacyBlockedUsers: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  chatsByIds,\n  usersByIds,\n  blockedIds,\n  phoneCodeList,\n}) => {\n  const { unblockUser } = getActions();\n\n  const lang = useLang();\n  const [isBlockUserModalOpen, openBlockUserModal, closeBlockUserModal] = useFlag();\n  const handleUnblockClick = useCallback((userId: string) => {\n    unblockUser({ userId });\n  }, [unblockUser]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const blockedUsernamesById = useMemo(() => {\n    return blockedIds.reduce((acc, userId) => {\n      const isPrivate = isUserId(userId);\n      const user = isPrivate ? usersByIds[userId] : undefined;\n      const mainUsername = user && !user.phoneNumber && getMainUsername(user);\n\n      if (mainUsername) {\n        acc[userId] = mainUsername;\n      }\n\n      return acc;\n    }, {} as Record<string, string>);\n  }, [blockedIds, usersByIds]);\n\n  function renderContact(contactId: string, i: number, viewportOffset: number) {\n    const isPrivate = isUserId(contactId);\n    const user = usersByIds[contactId];\n    const chat = chatsByIds[contactId];\n    const peer = user || chat;\n\n    const className = buildClassName(\n      'Chat chat-item-clickable blocked-list-item small-icon',\n      isPrivate ? 'private' : 'group',\n    );\n\n    const userMainUsername = blockedUsernamesById[contactId];\n\n    return (\n      <ListItem\n        key={`blocked_${contactId}`}\n        className={className}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Unblock',\n          icon: 'unlock',\n          handler: () => {\n            handleUnblockClick(contactId);\n          },\n        }]}\n        style={`top: ${(viewportOffset + i) * CHAT_HEIGHT_PX}px;`}\n      >\n        <Avatar\n          size=\"medium\"\n          peer={peer}\n        />\n        <div className=\"contact-info\" dir=\"auto\">\n          {peer && <FullNameTitle peer={peer} />}\n          {user?.phoneNumber && (\n            <div className=\"contact-phone\" dir=\"auto\">{formatPhoneNumberWithCode(phoneCodeList, user.phoneNumber)}</div>\n          )}\n          {userMainUsername && (<div className=\"contact-username\" dir=\"auto\">@{userMainUsername}</div>)}\n        </div>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content infinite-scroll\">\n        <div className=\"settings-item no-border\">\n          <p className=\"settings-item-description-larger mt-0 mb-2\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('BlockedUsersInfo')}\n          </p>\n        </div>\n\n        <div className=\"chat-list custom-scroll\">\n          {blockedIds?.length ? (\n            <div className=\"scroll-container settings-item\">\n              {blockedIds!.map((contactId, i) => renderContact(contactId, i, 0))}\n            </div>\n          ) : blockedIds && !blockedIds.length ? (\n            <div className=\"no-results\" dir=\"auto\">{lang('NoBlocked')}</div>\n          ) : (\n            <Loading key=\"loading\" />\n          )}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown\n        className=\"block-user-button\"\n        onClick={openBlockUserModal}\n        ariaLabel={lang('BlockContact')}\n      >\n        <i className=\"icon icon-add\" />\n      </FloatingActionButton>\n      <BlockUserModal\n        isOpen={isBlockUserModalOpen}\n        onClose={closeBlockUserModal}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      chats: {\n        byId: chatsByIds,\n      },\n      users: {\n        byId: usersByIds,\n      },\n      blocked: {\n        ids,\n      },\n      countryList: {\n        phoneCodes: phoneCodeList,\n      },\n    } = global;\n\n    return {\n      chatsByIds,\n      usersByIds,\n      blockedIds: ids,\n      phoneCodeList,\n    };\n  },\n)(SettingsPrivacyBlockedUsers));\n","import type { ApiPrivacyKey } from '../../../../types';\nimport { SettingsScreens } from '../../../../types';\n\nexport function getPrivacyKey(screen: SettingsScreens): ApiPrivacyKey | undefined {\n  switch (screen) {\n    case SettingsScreens.PrivacyPhoneNumber:\n    case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n    case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      return 'phoneNumber';\n    case SettingsScreens.PrivacyLastSeen:\n    case SettingsScreens.PrivacyLastSeenAllowedContacts:\n    case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      return 'lastSeen';\n    case SettingsScreens.PrivacyProfilePhoto:\n    case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n    case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      return 'profilePhoto';\n    case SettingsScreens.PrivacyBio:\n    case SettingsScreens.PrivacyBioAllowedContacts:\n    case SettingsScreens.PrivacyBioDeniedContacts:\n      return 'bio';\n    case SettingsScreens.PrivacyForwarding:\n    case SettingsScreens.PrivacyForwardingAllowedContacts:\n    case SettingsScreens.PrivacyForwardingDeniedContacts:\n      return 'forwards';\n    case SettingsScreens.PrivacyVoiceMessages:\n    case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n    case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      return 'voiceMessages';\n    case SettingsScreens.PrivacyGroupChats:\n    case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n    case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n      return 'chatInvite';\n    case SettingsScreens.PrivacyPhoneCall:\n    case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n    case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      return 'phoneCall';\n    case SettingsScreens.PrivacyPhoneP2P:\n    case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n    case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      return 'phoneP2P';\n    case SettingsScreens.PrivacyAddByPhone:\n      return 'addByPhone';\n  }\n\n  return undefined;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"fallback-photo\":\"pqiopoENn7dO3E8DQI3e\",\"fallbackPhoto\":\"pqiopoENn7dO3E8DQI3e\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPhoto } from '../../../api/types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\n\nimport styles from './SettingsPrivacyPublicPhoto.module.scss';\n\ntype OwnProps = {\n  currentUserId: string;\n  hasCurrentUserFullInfo?: boolean;\n  currentUserFallbackPhoto?: ApiPhoto;\n};\n\nconst SettingsPrivacyPublicProfilePhoto: FC<OwnProps> = ({\n  currentUserId,\n  hasCurrentUserFullInfo,\n  currentUserFallbackPhoto,\n}) => {\n  const {\n    loadFullUser, uploadProfilePhoto, deleteProfilePhoto, showNotification,\n  } = getActions();\n\n  const lang = useLang();\n\n  const [isDeleteFallbackPhotoModalOpen, openDeleteFallbackPhotoModal, closeDeleteFallbackPhotoModal] = useFlag(false);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (!hasCurrentUserFullInfo) {\n      loadFullUser({ userId: currentUserId });\n    }\n  }, [hasCurrentUserFullInfo, currentUserId, loadFullUser]);\n\n  const handleSelectFile = useCallback((file: File) => {\n    uploadProfilePhoto({\n      file,\n      isFallback: true,\n    });\n    showNotification({\n      message: lang('Privacy.ProfilePhoto.PublicPhotoSuccess'),\n    });\n  }, [lang, showNotification, uploadProfilePhoto]);\n\n  const handleConfirmDelete = useCallback(() => {\n    closeDeleteFallbackPhotoModal();\n    deleteProfilePhoto({ photo: currentUserFallbackPhoto! });\n  }, [closeDeleteFallbackPhotoModal, deleteProfilePhoto, currentUserFallbackPhoto]);\n\n  const handleOpenFileSelector = useCallback(() => {\n    inputRef.current?.click();\n  }, []);\n\n  return (\n    <div className=\"settings-item\">\n      <ListItem\n        icon=\"camera-add\"\n        onClick={handleOpenFileSelector}\n      >\n        <SelectAvatar\n          onChange={handleSelectFile}\n          inputRef={inputRef}\n        />\n        {lang(currentUserFallbackPhoto\n          ? 'Privacy.ProfilePhoto.UpdatePublicPhoto'\n          : 'Privacy.ProfilePhoto.SetPublicPhoto')}\n      </ListItem>\n      {currentUserFallbackPhoto && (\n        <ListItem\n          leftElement={<Avatar photo={currentUserFallbackPhoto} size=\"mini\" className={styles.fallbackPhoto} />}\n          onClick={openDeleteFallbackPhotoModal}\n          destructive\n        >\n          {lang(currentUserFallbackPhoto.isVideo\n            ? 'Privacy.ProfilePhoto.RemovePublicVideo'\n            : 'Privacy.ProfilePhoto.RemovePublicPhoto')}\n          <ConfirmDialog\n            isOpen={isDeleteFallbackPhotoModalOpen}\n            onClose={closeDeleteFallbackPhotoModal}\n            text={lang('Privacy.ResetPhoto.Confirm')}\n            confirmLabel={lang('Delete')}\n            confirmHandler={handleConfirmDelete}\n            confirmIsDestructive\n          />\n        </ListItem>\n      )}\n      <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {lang('Privacy.ProfilePhoto.PublicPhotoInfo')}\n      </p>\n    </div>\n  );\n};\n\nexport default memo(SettingsPrivacyPublicProfilePhoto);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport type { ApiPrivacySettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectUserFullInfo } from '../../../global/selectors';\nimport { getPrivacyKey } from './helpers/privacy';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport SettingsPrivacyPublicProfilePhoto from './SettingsPrivacyPublicProfilePhoto';\n\ntype OwnProps = {\n  screen: SettingsScreens;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentUserId: string;\n  hasCurrentUserFullInfo?: boolean;\n  currentUserFallbackPhoto?: ApiPhoto;\n  primaryPrivacy?: ApiPrivacySettings;\n  secondaryPrivacy?: ApiPrivacySettings;\n};\n\nconst SettingsPrivacyVisibility: FC<OwnProps & StateProps> = ({\n  screen,\n  isActive,\n  primaryPrivacy,\n  secondaryPrivacy,\n  currentUserId,\n  hasCurrentUserFullInfo,\n  currentUserFallbackPhoto,\n  onScreenSelect,\n  onReset,\n}) => {\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const secondaryScreen = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneP2P;\n      case SettingsScreens.PrivacyPhoneNumber: {\n        return primaryPrivacy?.visibility === 'nobody' ? SettingsScreens.PrivacyAddByPhone : undefined;\n      }\n      default:\n        return undefined;\n    }\n  }, [primaryPrivacy, screen]);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <PrivacySubsection\n        screen={screen}\n        privacy={primaryPrivacy}\n        onScreenSelect={onScreenSelect}\n      />\n      {screen === SettingsScreens.PrivacyProfilePhoto && primaryPrivacy?.visibility !== 'everybody' && (\n        <SettingsPrivacyPublicProfilePhoto\n          currentUserId={currentUserId}\n          hasCurrentUserFullInfo={hasCurrentUserFullInfo}\n          currentUserFallbackPhoto={currentUserFallbackPhoto}\n        />\n      )}\n      {secondaryScreen && (\n        <PrivacySubsection\n          screen={secondaryScreen}\n          privacy={secondaryPrivacy}\n          onScreenSelect={onScreenSelect}\n        />\n      )}\n    </div>\n  );\n};\n\nfunction PrivacySubsection({\n  screen,\n  privacy,\n  onScreenSelect,\n}: {\n  screen: SettingsScreens;\n  privacy?: ApiPrivacySettings;\n  onScreenSelect: (screen: SettingsScreens) => void;\n}) {\n  const { setPrivacyVisibility } = getActions();\n  const lang = useLang();\n\n  const visibilityOptions = useMemo(() => {\n    const hasNobody = screen !== SettingsScreens.PrivacyAddByPhone;\n    const options = [\n      { value: 'everybody', label: lang('P2PEverybody') },\n      { value: 'contacts', label: lang('P2PContacts') },\n    ];\n    if (hasNobody) {\n      options.push({ value: 'nobody', label: lang('P2PNobody') });\n    }\n    return options;\n  }, [lang, screen]);\n\n  const primaryExceptionLists = useMemo(() => {\n    if (screen === SettingsScreens.PrivacyAddByPhone) {\n      return {\n        shouldShowDenied: false,\n        shouldShowAllowed: false,\n      };\n    }\n\n    return {\n      shouldShowDenied: privacy?.visibility !== 'nobody',\n      shouldShowAllowed: privacy?.visibility !== 'everybody',\n    };\n  }, [privacy, screen]);\n\n  const privacyKey = getPrivacyKey(screen);\n\n  const descriptionText = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyLastSeen:\n        return lang('CustomHelp');\n      case SettingsScreens.PrivacyAddByPhone: {\n        return privacy?.visibility === 'everybody' ? lang('PrivacyPhoneInfo') : lang('PrivacyPhoneInfo3');\n      }\n      default:\n        return undefined;\n    }\n  }, [lang, screen, privacy]);\n\n  const headerText = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return lang('PrivacyPhoneTitle');\n      case SettingsScreens.PrivacyAddByPhone:\n        return lang('PrivacyPhoneTitle2');\n      case SettingsScreens.PrivacyLastSeen:\n        return lang('LastSeenTitle');\n      case SettingsScreens.PrivacyProfilePhoto:\n        return lang('PrivacyProfilePhotoTitle');\n      case SettingsScreens.PrivacyBio:\n        return lang('PrivacyBioTitle');\n      case SettingsScreens.PrivacyForwarding:\n        return lang('PrivacyForwardsTitle');\n      case SettingsScreens.PrivacyVoiceMessages:\n        return lang('PrivacyVoiceMessagesTitle');\n      case SettingsScreens.PrivacyGroupChats:\n        return lang('WhoCanAddMe');\n      case SettingsScreens.PrivacyPhoneCall:\n        return lang('WhoCanCallMe');\n      case SettingsScreens.PrivacyPhoneP2P:\n        return lang('PrivacyP2P');\n      default:\n        return undefined;\n    }\n  }, [lang, screen]);\n\n  const prepareSubtitle = useLastCallback((userIds?: string[], chatIds?: string[]) => {\n    const userIdsCount = userIds?.length || 0;\n    const chatIdsCount = chatIds?.length || 0;\n\n    if (!userIdsCount && !chatIdsCount) {\n      return lang('EditAdminAddUsers');\n    }\n\n    const userCountString = userIdsCount > 0 ? lang('Users', userIdsCount) : undefined;\n    const chatCountString = chatIdsCount > 0 ? lang('Chats', chatIdsCount) : undefined;\n\n    return [userCountString, chatCountString].filter(Boolean).join(', ');\n  });\n\n  const allowedString = useMemo(() => {\n    return prepareSubtitle(privacy?.allowUserIds, privacy?.allowChatIds);\n  }, [privacy]);\n\n  const blockString = useMemo(() => {\n    return prepareSubtitle(privacy?.blockUserIds, privacy?.blockChatIds);\n  }, [privacy]);\n\n  const handleVisibilityChange = useCallback((value) => {\n    setPrivacyVisibility({\n      privacyKey: privacyKey!,\n      visibility: value,\n    });\n  }, [privacyKey]);\n\n  const allowedContactsScreen = (() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return SettingsScreens.PrivacyPhoneNumberAllowedContacts;\n      case SettingsScreens.PrivacyLastSeen:\n        return SettingsScreens.PrivacyLastSeenAllowedContacts;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return SettingsScreens.PrivacyProfilePhotoAllowedContacts;\n      case SettingsScreens.PrivacyBio:\n        return SettingsScreens.PrivacyBioAllowedContacts;\n      case SettingsScreens.PrivacyForwarding:\n        return SettingsScreens.PrivacyForwardingAllowedContacts;\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneCallAllowedContacts;\n      case SettingsScreens.PrivacyPhoneP2P:\n        return SettingsScreens.PrivacyPhoneP2PAllowedContacts;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return SettingsScreens.PrivacyVoiceMessagesAllowedContacts;\n      default:\n        return SettingsScreens.PrivacyGroupChatsAllowedContacts;\n    }\n  })();\n\n  const deniedContactsScreen = (() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return SettingsScreens.PrivacyPhoneNumberDeniedContacts;\n      case SettingsScreens.PrivacyLastSeen:\n        return SettingsScreens.PrivacyLastSeenDeniedContacts;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return SettingsScreens.PrivacyProfilePhotoDeniedContacts;\n      case SettingsScreens.PrivacyBio:\n        return SettingsScreens.PrivacyBioDeniedContacts;\n      case SettingsScreens.PrivacyForwarding:\n        return SettingsScreens.PrivacyForwardingDeniedContacts;\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneCallDeniedContacts;\n      case SettingsScreens.PrivacyPhoneP2P:\n        return SettingsScreens.PrivacyPhoneP2PDeniedContacts;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return SettingsScreens.PrivacyVoiceMessagesDeniedContacts;\n      default:\n        return SettingsScreens.PrivacyGroupChatsDeniedContacts;\n    }\n  })();\n\n  return (\n    <>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{headerText}</h4>\n        <RadioGroup\n          name={`visibility-${privacyKey}`}\n          options={visibilityOptions}\n          onChange={handleVisibilityChange}\n          selected={privacy?.visibility}\n        />\n        {descriptionText && (\n          <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>{descriptionText}</p>\n        )}\n      </div>\n      {(primaryExceptionLists.shouldShowAllowed || primaryExceptionLists.shouldShowDenied) && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('PrivacyExceptions')}\n          </h4>\n          {primaryExceptionLists.shouldShowAllowed && (\n            <ListItem\n              narrow\n              icon=\"add-user\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => {\n                onScreenSelect(allowedContactsScreen);\n              }}\n            >\n              <div className=\"multiline-menu-item full-size\">\n                <span className=\"title\">{lang('AlwaysAllow')}</span>\n                <span className=\"subtitle\">{allowedString}</span>\n              </div>\n            </ListItem>\n          )}\n          {primaryExceptionLists.shouldShowDenied && (\n            <ListItem\n              narrow\n              icon=\"delete-user\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => {\n                onScreenSelect(deniedContactsScreen);\n              }}\n            >\n              <div className=\"multiline-menu-item full-size\">\n                <span className=\"title\">{lang('NeverAllow')}</span>\n                <span className=\"subtitle\">{blockString}</span>\n              </div>\n            </ListItem>\n          )}\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { screen }): StateProps => {\n    let primaryPrivacy: ApiPrivacySettings | undefined;\n    let secondaryPrivacy: ApiPrivacySettings | undefined;\n\n    const {\n      currentUserId,\n      settings: { privacy },\n    } = global;\n\n    const currentUserFullInfo = selectUserFullInfo(global, currentUserId!);\n\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        primaryPrivacy = privacy.phoneNumber;\n        secondaryPrivacy = privacy.addByPhone;\n        break;\n\n      case SettingsScreens.PrivacyLastSeen:\n        primaryPrivacy = privacy.lastSeen;\n        break;\n\n      case SettingsScreens.PrivacyProfilePhoto:\n        primaryPrivacy = privacy.profilePhoto;\n        break;\n\n      case SettingsScreens.PrivacyBio:\n        primaryPrivacy = privacy.bio;\n        break;\n\n      case SettingsScreens.PrivacyPhoneP2P:\n      case SettingsScreens.PrivacyPhoneCall:\n        primaryPrivacy = privacy.phoneCall;\n        secondaryPrivacy = privacy.phoneP2P;\n        break;\n\n      case SettingsScreens.PrivacyForwarding:\n        primaryPrivacy = privacy.forwards;\n        break;\n\n      case SettingsScreens.PrivacyVoiceMessages:\n        primaryPrivacy = privacy.voiceMessages;\n        break;\n\n      case SettingsScreens.PrivacyGroupChats:\n        primaryPrivacy = privacy.chatInvite;\n        break;\n    }\n\n    if (!primaryPrivacy) {\n      return {\n        currentUserId: currentUserId!,\n        hasCurrentUserFullInfo: Boolean(currentUserFullInfo),\n        currentUserFallbackPhoto: currentUserFullInfo?.fallbackPhoto,\n      };\n    }\n\n    return {\n      primaryPrivacy,\n      secondaryPrivacy,\n      currentUserId: currentUserId!,\n      hasCurrentUserFullInfo: Boolean(currentUserFullInfo),\n      currentUserFallbackPhoto: currentUserFullInfo?.fallbackPhoto,\n    };\n  },\n)(SettingsPrivacyVisibility));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type { ApiPrivacySettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { ALL_FOLDER_ID, ARCHIVED_FOLDER_ID } from '../../../config';\nimport { filterChatsByName } from '../../../global/helpers';\nimport { unique } from '../../../util/iteratees';\nimport { getPrivacyKey } from './helpers/privacy';\n\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Picker from '../../common/Picker';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nexport type OwnProps = {\n  isAllowList?: boolean;\n  screen: SettingsScreens;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  settings?: ApiPrivacySettings;\n};\n\nconst SettingsPrivacyVisibilityExceptionList: FC<OwnProps & StateProps> = ({\n  isAllowList,\n  screen,\n  isActive,\n  currentUserId,\n  settings,\n  onScreenSelect,\n  onReset,\n}) => {\n  const { setPrivacySettings } = getActions();\n\n  const lang = useLang();\n\n  const selectedContactIds = useMemo(() => {\n    if (!settings) {\n      return [];\n    }\n\n    if (isAllowList) {\n      return [...settings.allowUserIds, ...settings.allowChatIds];\n    } else {\n      return [...settings.blockUserIds, ...settings.blockChatIds];\n    }\n  }, [isAllowList, settings]);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isSubmitShown, setIsSubmitShown] = useState<boolean>(false);\n  const [newSelectedContactIds, setNewSelectedContactIds] = useState<string[]>(selectedContactIds);\n\n  // Reset selected contact ids on change from other client when screen is not active\n  useEffect(() => {\n    if (!isActive) setNewSelectedContactIds(selectedContactIds);\n  }, [isActive, selectedContactIds]);\n\n  const folderAllOrderedIds = useFolderManagerForOrderedIds(ALL_FOLDER_ID);\n  const folderArchivedOrderedIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on chats, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    const chatIds = unique([...folderAllOrderedIds || [], ...folderArchivedOrderedIds || []])\n      .filter((chatId) => chatId !== currentUserId);\n\n    return unique([\n      ...selectedContactIds,\n      ...filterChatsByName(lang, chatIds, chatsById, searchQuery),\n    ]);\n  }, [folderAllOrderedIds, folderArchivedOrderedIds, selectedContactIds, lang, searchQuery, currentUserId]);\n\n  const handleSelectedContactIdsChange = useCallback((value: string[]) => {\n    setNewSelectedContactIds(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSubmit = useCallback(() => {\n    setPrivacySettings({\n      privacyKey: getPrivacyKey(screen)!,\n      isAllowList: Boolean(isAllowList),\n      updatedIds: newSelectedContactIds,\n    });\n\n    onScreenSelect(SettingsScreens.Privacy);\n  }, [isAllowList, newSelectedContactIds, onScreenSelect, screen, setPrivacySettings]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"NewChat-inner step-1\">\n      <Picker\n        itemIds={displayedIds || []}\n        selectedIds={newSelectedContactIds}\n        filterValue={searchQuery}\n        filterPlaceholder={isAllowList ? lang('AlwaysAllowPlaceholder') : lang('NeverAllowPlaceholder')}\n        searchInputId=\"new-group-picker-search\"\n        isSearchable\n        onSelectedIdsChange={handleSelectedContactIdsChange}\n        onFilterChange={setSearchQuery}\n      />\n\n      <FloatingActionButton\n        isShown={isSubmitShown}\n        onClick={handleSubmit}\n        ariaLabel={isAllowList ? lang('AlwaysAllow') : lang('NeverAllow')}\n      >\n        <i className=\"icon icon-check\" />\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nfunction getCurrentPrivacySettings(global: GlobalState, screen: SettingsScreens) {\n  const { privacy } = global.settings;\n  switch (screen) {\n    case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n    case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      return privacy.phoneNumber;\n    case SettingsScreens.PrivacyLastSeenAllowedContacts:\n    case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      return privacy.lastSeen;\n    case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n    case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      return privacy.profilePhoto;\n    case SettingsScreens.PrivacyBioAllowedContacts:\n    case SettingsScreens.PrivacyBioDeniedContacts:\n      return privacy.bio;\n    case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n    case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      return privacy.phoneCall;\n    case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n    case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      return privacy.phoneP2P;\n    case SettingsScreens.PrivacyForwardingAllowedContacts:\n    case SettingsScreens.PrivacyForwardingDeniedContacts:\n      return privacy.forwards;\n    case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n    case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      return privacy.voiceMessages;\n    case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n    case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n      return privacy.chatInvite;\n  }\n\n  return undefined;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { screen }): StateProps => {\n    return {\n      currentUserId: global.currentUserId,\n      settings: getCurrentPrivacySettings(global, screen),\n    };\n  },\n)(SettingsPrivacyVisibilityExceptionList));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiAvailableReaction } from '../../../api/types';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport ReactionStaticEmoji from '../../common/ReactionStaticEmoji';\nimport RadioGroup from '../../ui/RadioGroup';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  availableReactions?: ApiAvailableReaction[];\n  selectedReaction?: string;\n};\n\nconst SettingsQuickReaction: FC<OwnProps & StateProps> = ({\n  isActive,\n  availableReactions,\n  selectedReaction,\n  onReset,\n}) => {\n  const { setDefaultReaction } = getActions();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const options = useMemo(() => (\n    (availableReactions || []).filter((availableReaction) => !availableReaction.isInactive)\n      .map((availableReaction) => ({\n        label: (\n          <>\n            <ReactionStaticEmoji reaction={availableReaction.reaction} availableReactions={availableReactions} />\n            {availableReaction.title}\n          </>\n        ),\n        value: availableReaction.reaction.emoticon,\n      }))\n  ), [availableReactions]);\n\n  const handleChange = useCallback((reaction: string) => {\n    setDefaultReaction({\n      reaction: { emoticon: reaction },\n    });\n  }, [setDefaultReaction]);\n\n  return (\n    <div className=\"settings-content settings-item custom-scroll settings-quick-reaction\">\n      <RadioGroup\n        name=\"quick-reaction-settings\"\n        options={options}\n        selected={selectedReaction}\n        onChange={handleChange}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global) => {\n    const { availableReactions, config } = global;\n\n    return {\n      availableReactions,\n      selectedReaction: config?.defaultReaction,\n    };\n  },\n)(SettingsQuickReaction));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n  ApiSticker,\n  ApiStickerSet,\n} from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport { pick } from '../../../util/iteratees';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\n\nimport ReactionStaticEmoji from '../../common/ReactionStaticEmoji';\nimport StickerSetCard from '../../common/StickerSetCard';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\nconst DEFAULT_REACTION_SIZE = 1.5 * REM;\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps =\n  Pick<ISettings, (\n    'shouldSuggestStickers' | 'shouldUpdateStickerSetOrder'\n  )> & {\n    addedSetIds?: string[];\n    customEmojiSetIds?: string[];\n    stickerSetsById: Record<string, ApiStickerSet>;\n    defaultReaction?: ApiReaction;\n    availableReactions?: ApiAvailableReaction[];\n    canPlayAnimatedEmojis: boolean;\n  };\n\nconst SettingsStickers: FC<OwnProps & StateProps> = ({\n  isActive,\n  addedSetIds,\n  customEmojiSetIds,\n  stickerSetsById,\n  defaultReaction,\n  shouldSuggestStickers,\n  shouldUpdateStickerSetOrder,\n  availableReactions,\n  canPlayAnimatedEmojis,\n  onReset,\n  onScreenSelect,\n}) => {\n  const {\n    setSettingOption,\n    openStickerSet,\n  } = getActions();\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const stickerSettingsRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({ rootRef: stickerSettingsRef });\n\n  const handleStickerSetClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  }, [openStickerSet]);\n\n  const handleSuggestStickerSetOrderChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldUpdateStickerSetOrder: newValue });\n  }, [setSettingOption]);\n\n  const handleSuggestStickersChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldSuggestStickers: newValue });\n  }, [setSettingOption]);\n\n  const stickerSets = useMemo(() => (\n    addedSetIds && Object.values(pick(stickerSetsById, addedSetIds))\n  ), [addedSetIds, stickerSetsById]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <Checkbox\n          label={lang('SuggestStickers')}\n          checked={shouldSuggestStickers}\n          onCheck={handleSuggestStickersChange}\n        />\n        <ListItem\n          className=\"mt-4\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.CustomEmoji)}\n          icon=\"smile\"\n        >\n          {lang('StickersList.EmojiItem')}\n          {customEmojiSetIds && <span className=\"settings-item__current-value\">{customEmojiSetIds.length}</span>}\n        </ListItem>\n        {defaultReaction && (\n          <ListItem\n            className=\"SettingsDefaultReaction\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(SettingsScreens.QuickReaction)}\n          >\n            <ReactionStaticEmoji\n              reaction={defaultReaction}\n              className=\"current-default-reaction\"\n              size={DEFAULT_REACTION_SIZE}\n              availableReactions={availableReactions}\n            />\n            <div className=\"title\">{lang('DoubleTapSetting')}</div>\n          </ListItem>\n        )}\n      </div>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('InstalledStickers.DynamicPackOrder')}\n        </h4>\n        <Checkbox\n          label={lang('InstalledStickers.DynamicPackOrder')}\n          checked={shouldUpdateStickerSetOrder}\n          onCheck={handleSuggestStickerSetOrderChange}\n        />\n        <p className=\"settings-item-description mt-3\" dir=\"auto\">\n          {lang('InstalledStickers.DynamicPackOrderInfo')}\n        </p>\n      </div>\n      {stickerSets && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('ChooseStickerMyStickerSets')}\n          </h4>\n          <div ref={stickerSettingsRef}>\n            {stickerSets.map((stickerSet: ApiStickerSet) => (\n              <StickerSetCard\n                key={stickerSet.id}\n                stickerSet={stickerSet}\n                observeIntersection={observeIntersectionForCovers}\n                onClick={handleStickerSetClick}\n                noPlay={!canPlayAnimatedEmojis}\n              />\n            ))}\n          </div>\n          <p className=\"settings-item-description mt-3\" dir=\"auto\">\n            {renderText(lang('StickersBotInfo'), ['links'])}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      ...pick(global.settings.byKey, [\n        'shouldSuggestStickers',\n        'shouldUpdateStickerSetOrder',\n      ]),\n      addedSetIds: global.stickers.added.setIds,\n      customEmojiSetIds: global.customEmojis.added.setIds,\n      stickerSetsById: global.stickers.setsById,\n      defaultReaction: global.config?.defaultReaction,\n      availableReactions: global.availableReactions,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(SettingsStickers));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { STICKER_SIZE_TWO_FA } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Button from '../../../ui/Button';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaCongratulations: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useLang();\n\n  const handleClick = useCallback(() => {\n    onScreenSelect(SettingsScreens.Privacy);\n  }, [onScreenSelect]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          size={STICKER_SIZE_TWO_FA}\n          tgsUrl={LOCAL_TGS_URLS.Congratulations}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('TwoStepVerificationPasswordSetInfo')}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={handleClick}>{lang('TwoStepVerificationPasswordReturnSettings')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaCongratulations);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\n\nimport { selectAnimatedEmoji } from '../../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport InputText from '../../../ui/InputText';\nimport Loading from '../../../ui/Loading';\n\ntype OwnProps = {\n  isLoading?: boolean;\n  error?: string;\n  clearError: NoneToVoidFunction;\n  onSubmit: (hint: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  animatedEmoji: ApiSticker;\n  codeLength: number;\n};\n\nconst ICON_SIZE = 160;\n\nconst SettingsTwoFaEmailCode: FC<OwnProps & StateProps> = ({\n  animatedEmoji,\n  codeLength,\n  isLoading,\n  error,\n  clearError,\n  onSubmit,\n  isActive,\n  onReset,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const { isMobile } = useAppLayout();\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  const [value, setValue] = useState<string>('');\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      setTimeout(() => {\n        inputRef.current!.focus();\n      }, focusDelayTimeoutMs);\n    }\n  }, [focusDelayTimeoutMs]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (error && clearError) {\n      clearError();\n    }\n\n    const newValue = e.target.value.slice(0, codeLength);\n\n    if (newValue.length === codeLength) {\n      onSubmit(newValue);\n    }\n\n    setValue(newValue);\n    e.target.value = newValue;\n  }, [clearError, codeLength, error, onSubmit]);\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} className=\"settings-content-icon\" />\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <InputText\n          value={value}\n          ref={inputRef}\n          inputMode=\"decimal\"\n          label={lang('YourEmailCode')}\n          error={error}\n          onChange={handleInputChange}\n        />\n        {isLoading && <Loading />}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global) => {\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '💌'),\n    codeLength: global.twoFaSettings.waitingEmailCodeLength,\n  };\n})(SettingsTwoFaEmailCode));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport ListItem from '../../../ui/ListItem';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaEnabled: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {renderText(lang('EnabledPasswordText'), ['br'])}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <ListItem\n          icon=\"edit\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaChangePasswordCurrent)}\n        >\n          {lang('ChangePassword')}\n        </ListItem>\n        <ListItem\n          icon=\"password-off\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaTurnOff)}\n        >\n          {lang('TurnPasswordOff')}\n        </ListItem>\n        <ListItem\n          icon=\"email\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaRecoveryEmailCurrentPassword)}\n        >\n          {lang('SetRecoveryEmail')}\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaEnabled);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\n\nimport { selectAnimatedEmoji } from '../../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../../util/windowEnvironment';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useFlag from '../../../../hooks/useFlag';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport Button from '../../../ui/Button';\nimport InputText from '../../../ui/InputText';\nimport Modal from '../../../ui/Modal';\n\ntype OwnProps = {\n  icon: 'hint' | 'email';\n  type?: 'text' | 'email';\n  isLoading?: boolean;\n  error?: string;\n  placeholder: string;\n  shouldConfirm?: boolean;\n  clearError?: NoneToVoidFunction;\n  onSubmit: (value?: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  animatedEmoji: ApiSticker;\n};\n\nconst ICON_SIZE = 160;\n\nconst SettingsTwoFaSkippableForm: FC<OwnProps & StateProps> = ({\n  animatedEmoji,\n  type = 'text',\n  isLoading,\n  error,\n  placeholder,\n  shouldConfirm,\n  clearError,\n  onSubmit,\n  isActive,\n  onReset,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const { isMobile } = useAppLayout();\n\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n  const [value, setValue] = useState<string>('');\n  const [isConfirmShown, markIsConfirmShown, unmarkIsConfirmShown] = useFlag(false);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      setTimeout(() => {\n        inputRef.current!.focus();\n      }, focusDelayTimeoutMs);\n    }\n  }, [focusDelayTimeoutMs]);\n\n  const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (error && clearError) {\n      clearError();\n    }\n\n    setValue(e.target.value);\n  }, [clearError, error]);\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (!inputRef.current) {\n      return;\n    }\n\n    onSubmit(value);\n  };\n\n  const handleSkip = useCallback(() => {\n    onSubmit();\n  }, [onSubmit]);\n\n  const handleSkipConfirm = useCallback(() => {\n    unmarkIsConfirmShown();\n    onSubmit();\n  }, [onSubmit, unmarkIsConfirmShown]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} className=\"settings-content-icon\" />\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <form action=\"\" onSubmit={handleSubmit}>\n          <InputText\n            ref={inputRef}\n            value={value}\n            inputMode={type}\n            label={placeholder}\n            error={error}\n            onChange={handleInputChange}\n          />\n\n          {value ? (\n            <Button type=\"submit\" isLoading={isLoading} ripple>{lang('Continue')}</Button>\n          ) : (\n            <Button\n              isText\n              isLoading={isLoading}\n              ripple\n              onClick={shouldConfirm ? markIsConfirmShown : handleSkip}\n            >\n              {lang('YourEmailSkip')}\n            </Button>\n          )}\n        </form>\n        {shouldConfirm && (\n          <Modal\n            className=\"narrow\"\n            isOpen={isConfirmShown}\n            title={lang('YourEmailSkipWarning')}\n            onClose={unmarkIsConfirmShown}\n          >\n            {renderText(lang('YourEmailSkipWarningText'), ['br', 'simple_markdown'])}\n            <div className=\"dialog-buttons\">\n              <Button\n                color=\"danger\"\n                ripple\n                isText\n                className=\"confirm-dialog-button\"\n                onClick={handleSkipConfirm}\n              >\n                {lang('YourEmailSkip')}\n              </Button>\n              <Button\n                color=\"primary\"\n                ripple\n                isText\n                className=\"confirm-dialog-button\"\n                onClick={unmarkIsConfirmShown}\n              >\n                {lang('Cancel')}\n              </Button>\n            </div>\n          </Modal>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { icon }) => {\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, icon === 'email' ? '💌' : '💡'),\n  };\n})(SettingsTwoFaSkippableForm));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport Button from '../../../ui/Button';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  onStart: NoneToVoidFunction;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaStart: FC<OwnProps> = ({\n  isActive, onReset, onStart,\n}) => {\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('SetAdditionalPasswordInfo')}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={onStart}>{lang('EditAdminTransferSetPassword')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaStart);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { GlobalState } from '../../../../global/types';\nimport type { TwoFaDispatch, TwoFaState } from '../../../../hooks/reducers/useTwoFaReducer';\nimport { SettingsScreens } from '../../../../types';\n\nimport useLang from '../../../../hooks/useLang';\n\nimport SettingsTwoFaPassword from '../SettingsPasswordForm';\nimport SettingsTwoFaCongratulations from './SettingsTwoFaCongratulations';\nimport SettingsTwoFaEmailCode from './SettingsTwoFaEmailCode';\nimport SettingsTwoFaEnabled from './SettingsTwoFaEnabled';\nimport SettingsTwoFaSkippableForm from './SettingsTwoFaSkippableForm';\nimport SettingsTwoFaStart from './SettingsTwoFaStart';\n\nexport type OwnProps = {\n  state: TwoFaState;\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  dispatch: TwoFaDispatch;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = GlobalState['twoFaSettings'];\n\nconst SettingsTwoFa: FC<OwnProps & StateProps> = ({\n  currentScreen,\n  shownScreen,\n  state,\n  hint,\n  isLoading,\n  error,\n  waitingEmailCodeLength,\n  dispatch,\n  isActive,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    updatePassword,\n    checkPassword,\n    clearTwoFaError,\n    updateRecoveryEmail,\n    provideTwoFaEmailCode,\n    clearPassword,\n  } = getActions();\n\n  useEffect(() => {\n    if (waitingEmailCodeLength) {\n      if (currentScreen === SettingsScreens.TwoFaNewPasswordEmail) {\n        onScreenSelect(SettingsScreens.TwoFaNewPasswordEmailCode);\n      } else if (currentScreen === SettingsScreens.TwoFaRecoveryEmail) {\n        onScreenSelect(SettingsScreens.TwoFaRecoveryEmailCode);\n      }\n    }\n  }, [currentScreen, onScreenSelect, waitingEmailCodeLength]);\n\n  const handleStartWizard = useCallback(() => {\n    dispatch({ type: 'reset' });\n    onScreenSelect(SettingsScreens.TwoFaNewPassword);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPassword = useCallback((value: string) => {\n    dispatch({ type: 'setPassword', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordConfirm);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPasswordConfirm = useCallback(() => {\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordHint);\n  }, [onScreenSelect]);\n\n  const handleNewPasswordHint = useCallback((value?: string) => {\n    dispatch({ type: 'setHint', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordEmail);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPasswordEmail = useCallback((value?: string) => {\n    dispatch({ type: 'setEmail', payload: value });\n    updatePassword({\n      ...state,\n      email: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updatePassword]);\n\n  const handleChangePasswordCurrent = useCallback((value: string) => {\n    dispatch({ type: 'setCurrentPassword', payload: value });\n    checkPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaChangePasswordNew);\n      },\n    });\n  }, [checkPassword, dispatch, onScreenSelect]);\n\n  const handleChangePasswordNew = useCallback((value: string) => {\n    dispatch({ type: 'setPassword', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaChangePasswordConfirm);\n  }, [dispatch, onScreenSelect]);\n\n  const handleChangePasswordConfirm = useCallback(() => {\n    onScreenSelect(SettingsScreens.TwoFaChangePasswordHint);\n  }, [onScreenSelect]);\n\n  const handleChangePasswordHint = useCallback((value?: string) => {\n    dispatch({ type: 'setHint', payload: value });\n    updatePassword({\n      ...state,\n      hint: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updatePassword]);\n\n  const handleTurnOff = useCallback((value: string) => {\n    clearPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.Privacy);\n      },\n    });\n  }, [clearPassword, onScreenSelect]);\n\n  const handleRecoveryEmailCurrentPassword = useCallback((value: string) => {\n    dispatch({ type: 'setCurrentPassword', payload: value });\n    checkPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaRecoveryEmail);\n      },\n    });\n  }, [checkPassword, dispatch, onScreenSelect]);\n\n  const handleRecoveryEmail = useCallback((value?: string) => {\n    dispatch({ type: 'setEmail', payload: value });\n    updateRecoveryEmail({\n      ...state,\n      email: value!,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updateRecoveryEmail]);\n\n  const handleEmailCode = useCallback((code: string) => {\n    provideTwoFaEmailCode({ code });\n  }, [provideTwoFaEmailCode]);\n\n  const lang = useLang();\n\n  switch (currentScreen) {\n    case SettingsScreens.TwoFaDisabled:\n      return (\n        <SettingsTwoFaStart\n          onStart={handleStartWizard}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPassword,\n            SettingsScreens.TwoFaNewPasswordConfirm,\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPassword:\n      return (\n        <SettingsTwoFaPassword\n          placeholder={lang('PleaseEnterPassword')}\n          submitLabel={lang('Continue')}\n          onSubmit={handleNewPassword}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordConfirm,\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordConfirm:\n      return (\n        <SettingsTwoFaPassword\n          expectedPassword={state.password}\n          placeholder={lang('PleaseReEnterPassword')}\n          submitLabel={lang('Continue')}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordHint:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"hint\"\n          placeholder={lang('PasswordHintPlaceholder')}\n          onSubmit={handleNewPasswordHint}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordEmail:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"email\"\n          type=\"email\"\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          placeholder={lang('RecoveryEmailTitle')}\n          shouldConfirm\n          onSubmit={handleNewPasswordEmail}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordEmailCode:\n      return (\n        <SettingsTwoFaEmailCode\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          onSubmit={handleEmailCode}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaCongratulations:\n      return (\n        <SettingsTwoFaCongratulations\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaEnabled:\n      return (\n        <SettingsTwoFaEnabled\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordCurrent,\n            SettingsScreens.TwoFaChangePasswordNew,\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaTurnOff,\n            SettingsScreens.TwoFaRecoveryEmailCurrentPassword,\n            SettingsScreens.TwoFaRecoveryEmail,\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordCurrent:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleChangePasswordCurrent}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordNew,\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordNew:\n      return (\n        <SettingsTwoFaPassword\n          placeholder={lang('PleaseEnterNewFirstPassword')}\n          onSubmit={handleChangePasswordNew}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordConfirm:\n      return (\n        <SettingsTwoFaPassword\n          expectedPassword={state.password}\n          placeholder={lang('PleaseReEnterPassword')}\n          onSubmit={handleChangePasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordHint:\n      return (\n        <SettingsTwoFaSkippableForm\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          icon=\"hint\"\n          placeholder={lang('PasswordHintPlaceholder')}\n          onSubmit={handleChangePasswordHint}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaTurnOff:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleTurnOff}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleRecoveryEmailCurrentPassword}\n          isActive={isActive || [\n            SettingsScreens.TwoFaRecoveryEmail,\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmail:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"email\"\n          type=\"email\"\n          placeholder={lang('RecoveryEmailTitle')}\n          onSubmit={handleRecoveryEmail}\n          isActive={isActive || [\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmailCode:\n      return (\n        <SettingsTwoFaEmailCode\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          onSubmit={handleEmailCode}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => ({ ...global.twoFaSettings }),\n)(SettingsTwoFa));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useState } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { FolderEditDispatch, FoldersState } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { LAYERS_ANIMATION_NAME } from '../../../util/windowEnvironment';\n\nimport useTwoFaReducer from '../../../hooks/reducers/useTwoFaReducer';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Transition from '../../ui/Transition';\nimport SettingsFolders from './folders/SettingsFolders';\nimport SettingsPasscode from './passcode/SettingsPasscode';\nimport SettingsActiveSessions from './SettingsActiveSessions';\nimport SettingsActiveWebsites from './SettingsActiveWebsites';\nimport SettingsCustomEmoji from './SettingsCustomEmoji';\nimport SettingsDataStorage from './SettingsDataStorage';\nimport SettingsDoNotTranslate from './SettingsDoNotTranslate';\nimport SettingsEditProfile from './SettingsEditProfile';\nimport SettingsExperimental from './SettingsExperimental';\nimport SettingsGeneral from './SettingsGeneral';\nimport SettingsGeneralBackground from './SettingsGeneralBackground';\nimport SettingsGeneralBackgroundColor from './SettingsGeneralBackgroundColor';\nimport SettingsHeader from './SettingsHeader';\nimport SettingsLanguage from './SettingsLanguage';\nimport SettingsMain from './SettingsMain';\nimport SettingsNotifications from './SettingsNotifications';\nimport SettingsPerformance from './SettingsPerformance';\nimport SettingsPrivacy from './SettingsPrivacy';\nimport SettingsPrivacyBlockedUsers from './SettingsPrivacyBlockedUsers';\nimport SettingsPrivacyVisibility from './SettingsPrivacyVisibility';\nimport SettingsPrivacyVisibilityExceptionList from './SettingsPrivacyVisibilityExceptionList';\nimport SettingsQuickReaction from './SettingsQuickReaction';\nimport SettingsStickers from './SettingsStickers';\nimport SettingsTwoFa from './twoFa/SettingsTwoFa';\n\nimport './Settings.scss';\n\nconst TRANSITION_RENDER_COUNT = Object.keys(SettingsScreens).length / 2;\nconst TRANSITION_DURATION = 200;\n\nconst TWO_FA_SCREENS = [\n  SettingsScreens.TwoFaDisabled,\n  SettingsScreens.TwoFaNewPassword,\n  SettingsScreens.TwoFaNewPasswordConfirm,\n  SettingsScreens.TwoFaNewPasswordHint,\n  SettingsScreens.TwoFaNewPasswordEmail,\n  SettingsScreens.TwoFaNewPasswordEmailCode,\n  SettingsScreens.TwoFaCongratulations,\n  SettingsScreens.TwoFaEnabled,\n  SettingsScreens.TwoFaChangePasswordCurrent,\n  SettingsScreens.TwoFaChangePasswordNew,\n  SettingsScreens.TwoFaChangePasswordConfirm,\n  SettingsScreens.TwoFaChangePasswordHint,\n  SettingsScreens.TwoFaTurnOff,\n  SettingsScreens.TwoFaRecoveryEmailCurrentPassword,\n  SettingsScreens.TwoFaRecoveryEmail,\n  SettingsScreens.TwoFaRecoveryEmailCode,\n];\n\nconst PASSCODE_SCREENS = [\n  SettingsScreens.PasscodeDisabled,\n  SettingsScreens.PasscodeEnabled,\n];\n\nconst FOLDERS_SCREENS = [\n  SettingsScreens.Folders,\n  SettingsScreens.FoldersCreateFolder,\n  SettingsScreens.FoldersEditFolder,\n  SettingsScreens.FoldersEditFolderFromChatList,\n  SettingsScreens.FoldersEditFolderInvites,\n  SettingsScreens.FoldersIncludedChats,\n  SettingsScreens.FoldersIncludedChatsFromChatList,\n  SettingsScreens.FoldersExcludedChats,\n  SettingsScreens.FoldersExcludedChatsFromChatList,\n  SettingsScreens.FoldersShare,\n];\n\nconst PRIVACY_SCREENS = [\n  SettingsScreens.PrivacyBlockedUsers,\n  SettingsScreens.ActiveWebsites,\n];\n\nconst PRIVACY_PHONE_NUMBER_SCREENS = [\n  SettingsScreens.PrivacyPhoneNumberAllowedContacts,\n  SettingsScreens.PrivacyPhoneNumberDeniedContacts,\n];\n\nconst PRIVACY_LAST_SEEN_PHONE_SCREENS = [\n  SettingsScreens.PrivacyLastSeenAllowedContacts,\n  SettingsScreens.PrivacyLastSeenDeniedContacts,\n];\n\nconst PRIVACY_PROFILE_PHOTO_SCREENS = [\n  SettingsScreens.PrivacyProfilePhotoAllowedContacts,\n  SettingsScreens.PrivacyProfilePhotoDeniedContacts,\n];\n\nconst PRIVACY_BIO_SCREENS = [\n  SettingsScreens.PrivacyBioAllowedContacts,\n  SettingsScreens.PrivacyBioDeniedContacts,\n];\n\nconst PRIVACY_PHONE_CALL_SCREENS = [\n  SettingsScreens.PrivacyPhoneCallAllowedContacts,\n  SettingsScreens.PrivacyPhoneCallDeniedContacts,\n];\n\nconst PRIVACY_PHONE_P2P_SCREENS = [\n  SettingsScreens.PrivacyPhoneP2PAllowedContacts,\n  SettingsScreens.PrivacyPhoneP2PDeniedContacts,\n];\n\nconst PRIVACY_FORWARDING_SCREENS = [\n  SettingsScreens.PrivacyForwardingAllowedContacts,\n  SettingsScreens.PrivacyForwardingDeniedContacts,\n];\n\nconst PRIVACY_VOICE_MESSAGES_SCREENS = [\n  SettingsScreens.PrivacyVoiceMessagesAllowedContacts,\n  SettingsScreens.PrivacyVoiceMessagesDeniedContacts,\n];\n\nconst PRIVACY_GROUP_CHATS_SCREENS = [\n  SettingsScreens.PrivacyGroupChatsAllowedContacts,\n  SettingsScreens.PrivacyGroupChatsDeniedContacts,\n];\n\nexport type OwnProps = {\n  isActive: boolean;\n  currentScreen: SettingsScreens;\n  foldersState: FoldersState;\n  foldersDispatch: FolderEditDispatch;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  shouldSkipTransition?: boolean;\n  onReset: (forceReturnToChatList?: true | Event) => void;\n};\n\nconst Settings: FC<OwnProps> = ({\n  isActive,\n  currentScreen,\n  foldersState,\n  foldersDispatch,\n  onScreenSelect,\n  onReset,\n  shouldSkipTransition,\n}) => {\n  const { closeShareChatFolderModal } = getActions();\n\n  const [twoFaState, twoFaDispatch] = useTwoFaReducer();\n  const [privacyPasscode, setPrivacyPasscode] = useState<string>('');\n\n  const handleReset = useLastCallback((forceReturnToChatList?: true | Event) => {\n    const isFromSettings = selectTabState(getGlobal()).shareFolderScreen?.isFromSettings;\n\n    if (currentScreen === SettingsScreens.FoldersShare) {\n      closeShareChatFolderModal();\n    }\n\n    if (forceReturnToChatList === true || (isFromSettings !== undefined && !isFromSettings)) {\n      onReset(true);\n      return;\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersCreateFolder\n      || currentScreen === SettingsScreens.FoldersEditFolder\n      || currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      || currentScreen === SettingsScreens.FoldersEditFolderInvites\n    ) {\n      setTimeout(() => {\n        foldersDispatch({ type: 'reset' });\n      }, TRANSITION_DURATION);\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersIncludedChats\n      || currentScreen === SettingsScreens.FoldersExcludedChats\n    ) {\n      if (foldersState.mode === 'create') {\n        onScreenSelect(SettingsScreens.FoldersCreateFolder);\n      } else {\n        onScreenSelect(SettingsScreens.FoldersEditFolder);\n      }\n      return;\n    }\n\n    onReset();\n  });\n\n  function renderCurrentSectionContent(isScreenActive: boolean, activeScreen: SettingsScreens) {\n    const privacyAllowScreens: Record<number, boolean> = {\n      [SettingsScreens.PrivacyPhoneNumber]: PRIVACY_PHONE_NUMBER_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyLastSeen]: PRIVACY_LAST_SEEN_PHONE_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyProfilePhoto]: PRIVACY_PROFILE_PHOTO_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyBio]: PRIVACY_BIO_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyPhoneCall]: PRIVACY_PHONE_CALL_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyPhoneP2P]: PRIVACY_PHONE_P2P_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyForwarding]: PRIVACY_FORWARDING_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyVoiceMessages]: PRIVACY_VOICE_MESSAGES_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyGroupChats]: PRIVACY_GROUP_CHATS_SCREENS.includes(activeScreen),\n    };\n\n    const isTwoFaScreen = TWO_FA_SCREENS.includes(activeScreen);\n    const isPasscodeScreen = PASSCODE_SCREENS.includes(activeScreen);\n    const isFoldersScreen = FOLDERS_SCREENS.includes(activeScreen);\n    const isPrivacyScreen = PRIVACY_SCREENS.includes(activeScreen)\n      || isTwoFaScreen\n      || isPasscodeScreen\n      || Object.keys(privacyAllowScreens).map(Number).includes(activeScreen)\n      || Object.values(privacyAllowScreens).includes(true);\n\n    switch (currentScreen) {\n      case SettingsScreens.Main:\n        return (\n          <SettingsMain onScreenSelect={onScreenSelect} isActive={isActive} onReset={handleReset} />\n        );\n      case SettingsScreens.EditProfile:\n        return (\n          <SettingsEditProfile\n            isActive={isActive && isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.General:\n        return (\n          <SettingsGeneral\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive\n              || activeScreen === SettingsScreens.GeneralChatBackgroundColor\n              || activeScreen === SettingsScreens.GeneralChatBackground\n              || activeScreen === SettingsScreens.QuickReaction\n              || activeScreen === SettingsScreens.CustomEmoji\n              || isPrivacyScreen || isFoldersScreen}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.QuickReaction:\n        return (\n          <SettingsQuickReaction isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.CustomEmoji:\n        return (\n          <SettingsCustomEmoji isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Notifications:\n        return (\n          <SettingsNotifications isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.DataStorage:\n        return (\n          <SettingsDataStorage isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Privacy:\n        return (\n          <SettingsPrivacy\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || isPrivacyScreen}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.Language:\n        return (\n          <SettingsLanguage\n            isActive={isScreenActive || activeScreen === SettingsScreens.DoNotTranslate}\n            onReset={handleReset}\n            onScreenSelect={onScreenSelect}\n          />\n        );\n      case SettingsScreens.DoNotTranslate:\n        return (\n          <SettingsDoNotTranslate isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Stickers:\n        return (\n          <SettingsStickers isActive={isScreenActive} onReset={handleReset} onScreenSelect={onScreenSelect} />\n        );\n      case SettingsScreens.Experimental:\n        return (\n          <SettingsExperimental isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.GeneralChatBackground:\n        return (\n          <SettingsGeneralBackground\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || activeScreen === SettingsScreens.GeneralChatBackgroundColor}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.GeneralChatBackgroundColor:\n        return (\n          <SettingsGeneralBackgroundColor\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.ActiveSessions:\n        return (\n          <SettingsActiveSessions\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.ActiveWebsites:\n        return (\n          <SettingsActiveWebsites\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.PrivacyBlockedUsers:\n        return (\n          <SettingsPrivacyBlockedUsers\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.PrivacyPhoneNumber:\n      case SettingsScreens.PrivacyLastSeen:\n      case SettingsScreens.PrivacyProfilePhoto:\n      case SettingsScreens.PrivacyBio:\n      case SettingsScreens.PrivacyPhoneCall:\n      case SettingsScreens.PrivacyForwarding:\n      case SettingsScreens.PrivacyVoiceMessages:\n      case SettingsScreens.PrivacyGroupChats:\n        return (\n          <SettingsPrivacyVisibility\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || privacyAllowScreens[currentScreen]}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n      case SettingsScreens.PrivacyLastSeenAllowedContacts:\n      case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n      case SettingsScreens.PrivacyBioAllowedContacts:\n      case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n      case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n      case SettingsScreens.PrivacyForwardingAllowedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n      case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n        return (\n          <SettingsPrivacyVisibilityExceptionList\n            isAllowList\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || privacyAllowScreens[currentScreen]}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      case SettingsScreens.PrivacyBioDeniedContacts:\n      case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      case SettingsScreens.PrivacyForwardingDeniedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n        return (\n          <SettingsPrivacyVisibilityExceptionList\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.Folders:\n      case SettingsScreens.FoldersCreateFolder:\n      case SettingsScreens.FoldersEditFolder:\n      case SettingsScreens.FoldersEditFolderFromChatList:\n      case SettingsScreens.FoldersEditFolderInvites:\n      case SettingsScreens.FoldersIncludedChats:\n      case SettingsScreens.FoldersIncludedChatsFromChatList:\n      case SettingsScreens.FoldersExcludedChats:\n      case SettingsScreens.FoldersExcludedChatsFromChatList:\n      case SettingsScreens.FoldersShare:\n        return (\n          <SettingsFolders\n            currentScreen={currentScreen}\n            shownScreen={activeScreen}\n            state={foldersState}\n            dispatch={foldersDispatch}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.TwoFaDisabled:\n      case SettingsScreens.TwoFaNewPassword:\n      case SettingsScreens.TwoFaNewPasswordConfirm:\n      case SettingsScreens.TwoFaNewPasswordHint:\n      case SettingsScreens.TwoFaNewPasswordEmail:\n      case SettingsScreens.TwoFaNewPasswordEmailCode:\n      case SettingsScreens.TwoFaCongratulations:\n      case SettingsScreens.TwoFaEnabled:\n      case SettingsScreens.TwoFaChangePasswordCurrent:\n      case SettingsScreens.TwoFaChangePasswordNew:\n      case SettingsScreens.TwoFaChangePasswordConfirm:\n      case SettingsScreens.TwoFaChangePasswordHint:\n      case SettingsScreens.TwoFaTurnOff:\n      case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n      case SettingsScreens.TwoFaRecoveryEmail:\n      case SettingsScreens.TwoFaRecoveryEmailCode:\n        return (\n          <SettingsTwoFa\n            currentScreen={currentScreen}\n            state={twoFaState}\n            dispatch={twoFaDispatch}\n            shownScreen={activeScreen}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PasscodeDisabled:\n      case SettingsScreens.PasscodeNewPasscode:\n      case SettingsScreens.PasscodeNewPasscodeConfirm:\n      case SettingsScreens.PasscodeChangePasscodeCurrent:\n      case SettingsScreens.PasscodeChangePasscodeNew:\n      case SettingsScreens.PasscodeChangePasscodeConfirm:\n      case SettingsScreens.PasscodeCongratulations:\n      case SettingsScreens.PasscodeEnabled:\n      case SettingsScreens.PasscodeTurnOff:\n        return (\n          <SettingsPasscode\n            currentScreen={currentScreen}\n            passcode={privacyPasscode}\n            onSetPasscode={setPrivacyPasscode}\n            shownScreen={activeScreen}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.Performance:\n        return (\n          <SettingsPerformance\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      default:\n        return undefined;\n    }\n  }\n\n  function renderCurrentSection(\n    isScreenActive: boolean,\n    _isFrom: boolean,\n    _currentKey: SettingsScreens,\n    activeKey: SettingsScreens,\n  ) {\n    return (\n      <>\n        <SettingsHeader\n          currentScreen={currentScreen}\n          onReset={handleReset}\n          onScreenSelect={onScreenSelect}\n          editedFolderId={foldersState.folderId}\n        />\n        {renderCurrentSectionContent(isScreenActive, activeKey)}\n      </>\n    );\n  }\n\n  return (\n    <Transition\n      id=\"Settings\"\n      name={shouldSkipTransition ? 'none' : LAYERS_ANIMATION_NAME}\n      activeKey={currentScreen}\n      renderCount={TRANSITION_RENDER_COUNT}\n      shouldWrap\n      withSwipeControl\n    >\n      {renderCurrentSection}\n    </Transition>\n  );\n};\n\nexport default memo(Settings);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { TabState } from '../../global/types';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  requestedAttachBotInChat?: TabState['requestedAttachBotInChat'];\n};\n\nconst AttachBotRecipientPicker: FC<OwnProps> = ({\n  requestedAttachBotInChat,\n}) => {\n  const { cancelAttachBotInChat, callAttachBot } = getActions();\n  const lang = useLang();\n\n  const isOpen = Boolean(requestedAttachBotInChat);\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const { bot, filter, startParam } = requestedAttachBotInChat || {};\n\n  const handlePeerRecipient = useCallback((recipientId: string) => {\n    callAttachBot({ bot: bot!, chatId: recipientId, startParam });\n    cancelAttachBotInChat();\n  }, [bot, callAttachBot, cancelAttachBotInChat, startParam]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      searchPlaceholder={lang('Search')}\n      filter={filter}\n      onSelectRecipient={handlePeerRecipient}\n      onClose={cancelAttachBotInChat}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(AttachBotRecipientPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiUser } from '../../api/types';\n\nimport { getUserFullName } from '../../global/helpers';\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  bot?: ApiUser;\n  type?: 'game' | 'webApp' | 'botApp';\n  shouldRequestWriteAccess?: boolean;\n};\n\nconst BotTrustModal: FC<OwnProps> = ({ bot, type, shouldRequestWriteAccess }) => {\n  const { cancelBotTrustRequest, markBotTrusted } = getActions();\n\n  const [isWriteAllowed, setIsWriteAllowed] = useState(shouldRequestWriteAccess || false);\n\n  const lang = useLang();\n\n  const handleBotTrustAccept = useCallback(() => {\n    markBotTrusted({ botId: bot!.id, isWriteAllowed });\n  }, [markBotTrusted, isWriteAllowed, bot]);\n\n  const handleBotTrustDecline = useCallback(() => {\n    cancelBotTrustRequest();\n  }, []);\n\n  const title = type === 'game' ? lang('AppName') : lang('BotOpenPageTitle');\n  const text = useMemo(() => {\n    switch (type) {\n      case 'game':\n        return lang('BotPermissionGameAlert', getUserFullName(bot));\n      case 'webApp':\n        return lang('BotOpenPageMessage', getUserFullName(bot));\n      case 'botApp':\n      default:\n        return lang('BotWebViewStartPermission');\n    }\n  }, [bot, type, lang]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(bot)}\n      onClose={handleBotTrustDecline}\n      title={title}\n      confirmHandler={handleBotTrustAccept}\n    >\n      {renderText(text, ['simple_markdown'])}\n      {shouldRequestWriteAccess && (\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={isWriteAllowed}\n          label={renderText(\n            lang('WebApp.AddToAttachmentAllowMessages', bot?.firstName),\n            ['simple_markdown'],\n          )}\n          onCheck={setIsWriteAllowed}\n        />\n      )}\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(BotTrustModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\n\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  folder?: ApiChatFolder;\n};\n\nconst DeleteFolderDialog: FC<OwnProps> = ({\n  folder,\n}) => {\n  const { closeDeleteChatFolderModal, deleteChatFolder, openDeleteChatFolderModal } = getActions();\n  const lang = useLang();\n\n  const isOpen = Boolean(folder);\n\n  const renderingFolder = usePrevious(folder) || folder;\n  const isMyChatlist = renderingFolder?.hasMyInvites;\n\n  const handleDeleteFolderMessage = useCallback(() => {\n    closeDeleteChatFolderModal();\n    if (isMyChatlist) {\n      openDeleteChatFolderModal({ folderId: renderingFolder!.id, isConfirmedForChatlist: true });\n    } else {\n      deleteChatFolder({ id: renderingFolder!.id });\n    }\n  }, [isMyChatlist, renderingFolder]);\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={closeDeleteChatFolderModal}\n      text={isMyChatlist ? lang('FilterDeleteAlertLinks') : lang('FilterDeleteAlert')}\n      confirmLabel={lang('Delete')}\n      confirmHandler={handleDeleteFolderMessage}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(DeleteFolderDialog);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiContact, ApiError, ApiInviteInfo, ApiPhoto,\n} from '../../api/types';\nimport type { MessageList } from '../../global/types';\n\nimport { selectCurrentMessageList, selectTabState } from '../../global/selectors';\nimport getReadableErrorText from '../../util/getReadableErrorText';\nimport { pick } from '../../util/iteratees';\nimport renderText from '../common/helpers/renderText';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from '../common/Avatar';\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\ntype StateProps = {\n  currentMessageList?: MessageList;\n  dialogs: (ApiError | ApiInviteInfo | ApiContact)[];\n};\n\nconst Dialogs: FC<StateProps> = ({ dialogs, currentMessageList }) => {\n  const {\n    dismissDialog,\n    acceptInviteConfirmation,\n    sendMessage,\n    showNotification,\n  } = getActions();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const lang = useLang();\n\n  useEffect(() => {\n    if (dialogs.length > 0) {\n      openModal();\n    }\n  }, [dialogs, openModal]);\n\n  if (!dialogs.length) {\n    return undefined;\n  }\n\n  function renderInviteHeader(title: string, photo?: ApiPhoto) {\n    return (\n      <div className=\"modal-header\">\n        {photo && <Avatar size=\"small\" photo={photo} withVideo />}\n        <div className=\"modal-title\">\n          {renderText(title)}\n        </div>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={closeModal}>\n          <i className=\"icon icon-close\" />\n        </Button>\n      </div>\n    );\n  }\n\n  const renderInvite = (invite: ApiInviteInfo) => {\n    const {\n      hash, title, about, participantsCount, isChannel, photo, isRequestNeeded,\n    } = invite;\n\n    const handleJoinClick = () => {\n      acceptInviteConfirmation({\n        hash,\n      });\n      if (isRequestNeeded) {\n        showNotification({\n          message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n        });\n      }\n      closeModal();\n    };\n\n    const participantsText = isChannel\n      ? lang('Subscribers', participantsCount, 'i')\n      : lang('Members', participantsCount, 'i');\n\n    const joinText = isChannel ? lang('ChannelJoin') : lang('JoinGroup');\n    const requestToJoinText = isChannel\n      ? lang('MemberRequests.RequestToJoinChannel') : lang('MemberRequests.RequestToJoinGroup');\n\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        className=\"error\"\n        header={renderInviteHeader(title, photo)}\n        onCloseAnimationEnd={dismissDialog}\n      >\n        {participantsCount !== undefined && <p className=\"modal-help\">{participantsText}</p>}\n        {about && <p className=\"modal-about\">{renderText(about, ['br'])}</p>}\n        {isRequestNeeded && (\n          <p className=\"modal-help\">\n            {isChannel\n              ? lang('MemberRequests.RequestToJoinDescriptionChannel')\n              : lang('MemberRequests.RequestToJoinDescriptionGroup')}\n          </p>\n        )}\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            className=\"confirm-dialog-button\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleJoinClick}\n          >\n            {isRequestNeeded ? requestToJoinText : joinText}\n          </Button>\n          <Button isText className=\"confirm-dialog-button\" onClick={closeModal}>{lang('Cancel')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderContactRequest = (contactRequest: ApiContact) => {\n    const handleConfirm = () => {\n      if (!currentMessageList) {\n        return;\n      }\n\n      sendMessage({\n        contact: pick(contactRequest, ['firstName', 'lastName', 'phoneNumber']),\n        messageList: currentMessageList,\n      });\n      closeModal();\n    };\n\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        className=\"confirm\"\n        title={lang('ShareYouPhoneNumberTitle')}\n        onCloseAnimationEnd={dismissDialog}\n      >\n        {lang('AreYouSureShareMyContactInfoBot')}\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleConfirm}\n          >\n            {lang('OK')}\n          </Button>\n          <Button className=\"confirm-dialog-button\" isText onClick={closeModal}>{lang('Cancel')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderError = (error: ApiError) => {\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        onCloseAnimationEnd={dismissDialog}\n        className=\"error\"\n        title={getErrorHeader(error)}\n      >\n        {error.hasErrorKey ? getReadableErrorText(error)\n          : renderText(error.message!, ['simple_markdown', 'emoji', 'br'])}\n        <div className=\"dialog-buttons mt-2\">\n          <Button isText onClick={closeModal}>{lang('OK')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderDialog = (dialog: ApiError | ApiInviteInfo | ApiContact) => {\n    if ('hash' in dialog) {\n      return renderInvite(dialog);\n    }\n\n    if ('phoneNumber' in dialog) {\n      return renderContactRequest(dialog);\n    }\n\n    return renderError(dialog);\n  };\n\n  return Boolean(dialogs.length) && renderDialog(dialogs[dialogs.length - 1]);\n};\n\nfunction getErrorHeader(error: ApiError) {\n  if (error.isSlowMode) {\n    return 'Slowmode enabled';\n  }\n\n  if (!error.hasErrorKey) {\n    return 'Telegram';\n  }\n\n  return 'Something went wrong';\n}\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      dialogs: selectTabState(global).dialogs,\n      currentMessageList: selectCurrentMessageList(global),\n    };\n  },\n)(Dialogs));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { TabState } from '../../global/types';\nimport type { ThreadId } from '../../types';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  requestedDraft?: TabState['requestedDraft'];\n};\n\nconst DraftRecipientPicker: FC<OwnProps> = ({\n  requestedDraft,\n}) => {\n  const isOpen = Boolean(requestedDraft && !requestedDraft.chatId);\n  const {\n    openChatWithDraft,\n    resetOpenChatWithDraft,\n  } = getActions();\n\n  const lang = useLang();\n\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const handleSelectRecipient = useCallback((recipientId: string, threadId?: ThreadId) => {\n    openChatWithDraft({\n      chatId: recipientId,\n      threadId,\n      text: requestedDraft!.text,\n      files: requestedDraft!.files,\n    });\n  }, [openChatWithDraft, requestedDraft]);\n\n  const handleClose = useCallback(() => {\n    resetOpenChatWithDraft();\n  }, [resetOpenChatWithDraft]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      searchPlaceholder={lang('ForwardTo')}\n      filter={requestedDraft?.filter}\n      onSelectRecipient={handleSelectRecipient}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(DraftRecipientPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ThreadId } from '../../types';\n\nimport { getChatTitle, getUserFirstOrLastName, isUserId } from '../../global/helpers';\nimport { selectChat, selectTabState, selectUser } from '../../global/selectors';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ninterface StateProps {\n  currentUserId?: string;\n  isManyMessages?: boolean;\n  isStory?: boolean;\n}\n\nconst ForwardRecipientPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  isManyMessages,\n  isStory,\n}) => {\n  const {\n    setForwardChatOrTopic,\n    exitForwardMode,\n    forwardToSavedMessages,\n    forwardStory,\n    showNotification,\n  } = getActions();\n\n  const lang = useLang();\n\n  const renderingIsStory = usePrevious(isStory, true);\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const handleSelectRecipient = useCallback((recipientId: string, threadId?: ThreadId) => {\n    const isSelf = recipientId === currentUserId;\n    if (isStory) {\n      forwardStory({ toChatId: recipientId });\n      const global = getGlobal();\n      if (isUserId(recipientId)) {\n        showNotification({\n          message: isSelf\n            ? lang('Conversation.StoryForwardTooltip.SavedMessages.One')\n            : lang(\n              'StorySharedTo',\n              getUserFirstOrLastName(selectUser(global, recipientId)),\n            ),\n        });\n      } else {\n        const chat = selectChat(global, recipientId);\n        if (!chat) return;\n\n        showNotification({\n          message: lang('StorySharedTo', getChatTitle(lang, chat)),\n        });\n      }\n      return;\n    }\n\n    if (isSelf) {\n      const message = lang(\n        isManyMessages\n          ? 'Conversation.ForwardTooltip.SavedMessages.Many'\n          : 'Conversation.ForwardTooltip.SavedMessages.One',\n      );\n\n      forwardToSavedMessages();\n      showNotification({ message });\n    } else {\n      setForwardChatOrTopic({ chatId: recipientId, topicId: Number(threadId) });\n    }\n  }, [currentUserId, isManyMessages, isStory, lang]);\n\n  const handleClose = useCallback(() => {\n    exitForwardMode();\n  }, [exitForwardMode]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      className={renderingIsStory ? 'component-theme-dark' : undefined}\n      searchPlaceholder={lang('ForwardTo')}\n      onSelectRecipient={handleSelectRecipient}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { messageIds, storyId } = selectTabState(global).forwardMessages;\n  return {\n    currentUserId: global.currentUserId,\n    isManyMessages: (messageIds?.length || 0) > 1,\n    isStory: Boolean(storyId),\n  };\n})(ForwardRecipientPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useLang from '../../hooks/useLang';\n\nimport CalendarModal from '../common/CalendarModal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ntype StateProps = {\n  selectedAt?: number;\n};\n\nconst HistoryCalendar: FC<OwnProps & StateProps> = ({\n  isOpen, selectedAt,\n}) => {\n  const { searchMessagesByDate, closeHistoryCalendar } = getActions();\n\n  const handleJumpToDate = useCallback((date: Date) => {\n    searchMessagesByDate({ timestamp: date.valueOf() / 1000 });\n    closeHistoryCalendar();\n  }, [closeHistoryCalendar, searchMessagesByDate]);\n\n  const lang = useLang();\n\n  return (\n    <CalendarModal\n      isOpen={isOpen}\n      selectedAt={selectedAt}\n      isPastMode\n      submitButtonLabel={lang('JumpToDate')}\n      onClose={closeHistoryCalendar}\n      onSubmit={handleJumpToDate}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return { selectedAt: selectTabState(global).historyCalendarSelectedAt };\n  },\n)(HistoryCalendar));\n","// extracted by mini-css-extract-plugin\nexport default {\"contentText\":\"rSporml7GduY_xOM5_K0\",\"userPicker\":\"NRmnv4sdtDAKWzW_yzsf\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback,\n  useEffect,\n  useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport { getUserFullName } from '../../global/helpers';\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Picker from '../common/Picker';\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nimport styles from './InviteViaLinkModal.module.scss';\n\nexport type OwnProps = {\n  chatId?: string;\n  userIds?: string[];\n};\n\nconst InviteViaLinkModal: FC<OwnProps> = ({\n  chatId, userIds,\n}) => {\n  const { sendInviteMessages, closeInviteViaLinkModal } = getActions();\n\n  const lang = useLang();\n  const [selectedMemberIds, setSelectedMemberIds] = useState<string[]>([]);\n\n  useEffect(() => {\n    if (userIds) {\n      setSelectedMemberIds(userIds);\n    }\n  }, [userIds]);\n\n  const handleClose = useLastCallback(() => closeInviteViaLinkModal());\n  const handleSkip = useLastCallback(() => closeInviteViaLinkModal());\n\n  const handleSendInviteLink = useCallback(() => {\n    sendInviteMessages({ chatId: chatId!, userIds: selectedMemberIds! });\n    closeInviteViaLinkModal();\n  }, [selectedMemberIds, chatId]);\n\n  const userNames = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    return userIds?.map((userId) => getUserFullName(usersById[userId])).join(', ');\n  }, [userIds]);\n\n  return (\n    <Modal\n      isOpen={Boolean(userIds && chatId)}\n      title={lang('SendInviteLink.InviteTitle')}\n      onClose={handleClose}\n      isSlim\n    >\n      <p className={styles.contentText}>\n        {renderText(lang('SendInviteLink.TextAvailableSingleUser', userNames), ['simple_markdown'])}\n      </p>\n      <Picker\n        className={styles.userPicker}\n        itemIds={userIds!}\n        selectedIds={selectedMemberIds}\n        onSelectedIdsChange={setSelectedMemberIds}\n        isRoundCheckbox\n      />\n      <div className=\"dialog-buttons\">\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={handleSendInviteLink}\n          disabled={!selectedMemberIds.length}\n        >\n          {lang('SendInviteLink.ActionInvite')}\n        </Button>\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={handleSkip}\n        >\n          {lang('SendInviteLink.ActionSkip')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(InviteViaLinkModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiCountryCode, ApiUser, ApiUserStatus } from '../../api/types';\n\nimport { getUserStatus } from '../../global/helpers';\nimport { selectUser, selectUserStatus } from '../../global/selectors';\nimport { formatPhoneNumberWithCode } from '../../util/phoneNumber';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport renderText from '../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from '../common/Avatar';\nimport Button from '../ui/Button';\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Modal from '../ui/Modal';\n\nimport './NewContactModal.scss';\n\nconst ANIMATION_DURATION = 200;\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  isByPhoneNumber?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst NewContactModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  userId,\n  isByPhoneNumber,\n  user,\n  userStatus,\n  phoneCodeList,\n}) => {\n  const { updateContact, importContact, closeNewContactDialog } = getActions();\n\n  const lang = useLang();\n  const renderingUser = useCurrentOrPrev(user);\n  const renderingIsByPhoneNumber = useCurrentOrPrev(isByPhoneNumber);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  const [firstName, setFirstName] = useState<string>(renderingUser?.firstName ?? '');\n  const [lastName, setLastName] = useState<string>(renderingUser?.lastName ?? '');\n  const [phone, setPhone] = useState<string>(renderingUser?.phoneNumber ?? '');\n  const [shouldSharePhoneNumber, setShouldSharePhoneNumber] = useState<boolean>(true);\n  const canBeSubmitted = Boolean(firstName && (!isByPhoneNumber || phone));\n\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n      setFirstName(renderingUser?.firstName ?? '');\n      setLastName(renderingUser?.lastName ?? '');\n      setPhone(renderingUser?.phoneNumber ?? '');\n      setShouldSharePhoneNumber(true);\n    }\n  }, [isOpen, markIsShown, renderingUser?.firstName, renderingUser?.lastName, renderingUser?.phoneNumber]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV && isShown) {\n      setTimeout(() => { inputRef.current?.focus(); }, ANIMATION_DURATION);\n    }\n  }, [isShown]);\n\n  const handleFirstNameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n  }, []);\n\n  const handlePhoneChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setPhone(formatPhoneNumberWithCode(phoneCodeList, e.target.value));\n  }, [phoneCodeList]);\n\n  const handleLastNameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    closeNewContactDialog();\n    setFirstName('');\n    setLastName('');\n    setPhone('');\n  }, [closeNewContactDialog]);\n\n  const handleSubmit = useCallback(() => {\n    if (isByPhoneNumber || !userId) {\n      importContact({\n        firstName,\n        lastName,\n        phoneNumber: phone,\n      });\n    } else {\n      updateContact({\n        userId,\n        firstName,\n        lastName,\n        shouldSharePhoneNumber,\n      });\n    }\n  }, [firstName, importContact, isByPhoneNumber, lastName, phone, shouldSharePhoneNumber, updateContact, userId]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  function renderAddContact() {\n    return (\n      <>\n        <div className=\"NewContactModal__profile\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Avatar\n            size=\"jumbo\"\n            peer={renderingUser}\n            text={`${firstName} ${lastName}`}\n          />\n          <div className=\"NewContactModal__profile-info\">\n            <p className=\"NewContactModal__phone-number\">\n              {renderingUser?.phoneNumber\n                ? formatPhoneNumberWithCode(phoneCodeList, renderingUser.phoneNumber)\n                : lang('MobileHidden')}\n            </p>\n            <span className=\"NewContactModal__user-status\" dir=\"auto\">\n              {getUserStatus(lang, renderingUser!, userStatus)}\n            </span>\n          </div>\n        </div>\n        <InputText\n          ref={inputRef}\n          value={firstName}\n          label={lang('FirstName')}\n          tabIndex={0}\n          onChange={handleFirstNameChange}\n        />\n        <InputText\n          value={lastName}\n          label={lang('LastName')}\n          tabIndex={0}\n          onChange={handleLastNameChange}\n        />\n        <p className=\"NewContactModal__help-text\">\n          {renderText(\n            lang('NewContact.Phone.Hidden.Text', renderingUser?.firstName || ''),\n            ['emoji', 'simple_markdown'],\n          )}\n        </p>\n        <Checkbox\n          checked={shouldSharePhoneNumber}\n          tabIndex={0}\n          onCheck={setShouldSharePhoneNumber}\n          label={lang('lng_new_contact_share')}\n        />\n        <p className=\"NewContactModal__help-text\">\n          {renderText(lang('AddContact.SharedContactExceptionInfo', renderingUser?.firstName))}\n        </p>\n      </>\n    );\n  }\n\n  function renderCreateContact() {\n    return (\n      <div className=\"NewContactModal__new-contact\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar size=\"jumbo\" text={`${firstName} ${lastName}`} />\n        <div className=\"NewContactModal__new-contact-fieldset\">\n          <InputText\n            ref={inputRef}\n            value={phone}\n            inputMode=\"tel\"\n            label={lang('lng_contact_phone')}\n            tabIndex={0}\n            onChange={handlePhoneChange}\n          />\n          <InputText\n            value={firstName}\n            label={lang('FirstName')}\n            tabIndex={0}\n            onChange={handleFirstNameChange}\n          />\n          <InputText\n            value={lastName}\n            label={lang('LastName')}\n            tabIndex={0}\n            onChange={handleLastNameChange}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className=\"NewContactModal\"\n      title={lang('NewContact')}\n      isOpen={isOpen}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    >\n      {renderingUser && renderAddContact()}\n      {renderingIsByPhoneNumber && renderCreateContact()}\n      <div className=\"dialog-buttons\">\n        <Button\n          isText\n          className=\"confirm-dialog-button\"\n          onClick={handleClose}\n        >\n          {lang('Cancel')}\n        </Button>\n        <Button\n          isText\n          className=\"confirm-dialog-button\"\n          disabled={!canBeSubmitted}\n          onClick={handleSubmit}\n        >\n          {lang('Done')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = userId ? selectUser(global, userId) : undefined;\n    return {\n      user,\n      userStatus: userId ? selectUserStatus(global, userId) : undefined,\n      phoneCodeList: global.countryList.phoneCodes,\n    };\n  },\n)(NewContactModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiNotification } from '../../api/types';\n\nimport { selectTabState } from '../../global/selectors';\nimport { pick } from '../../util/iteratees';\nimport renderText from '../common/helpers/renderText';\n\nimport Notification from '../ui/Notification';\n\ntype StateProps = {\n  notifications: ApiNotification[];\n};\n\nconst Notifications: FC<StateProps> = ({ notifications }) => {\n  const { dismissNotification } = getActions();\n\n  if (!notifications.length) {\n    return undefined;\n  }\n\n  return (\n    <div id=\"Notifications\">\n      {notifications.map(({\n        message, className, localId, action, actionText, title, duration,\n      }) => (\n        <Notification\n          title={title ? renderText(title, ['simple_markdown', 'emoji', 'br', 'links']) : undefined}\n          action={action}\n          actionText={actionText}\n          className={className}\n          duration={duration}\n          message={renderText(message, ['simple_markdown', 'emoji', 'br', 'links'])}\n          // eslint-disable-next-line react/jsx-no-bind\n          onDismiss={() => dismissNotification({ localId })}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => pick(selectTabState(global), ['notifications']),\n)(Notifications));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { ensureProtocol } from '../../util/ensureProtocol';\nimport renderText from '../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useLang from '../../hooks/useLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  url?: string;\n};\n\nconst SafeLinkModal: FC<OwnProps> = ({ url }) => {\n  const { toggleSafeLinkModal } = getActions();\n\n  const lang = useLang();\n\n  const handleOpen = useCallback(() => {\n    window.open(ensureProtocol(url), '_blank', 'noopener');\n    toggleSafeLinkModal({ url: undefined });\n  }, [toggleSafeLinkModal, url]);\n\n  const handleDismiss = useCallback(() => {\n    toggleSafeLinkModal({ url: undefined });\n  }, [toggleSafeLinkModal]);\n\n  const renderingUrl = useCurrentOrPrev(url);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(url)}\n      onClose={handleDismiss}\n      title={lang('OpenUrlTitle')}\n      textParts={renderText(lang('OpenUrlAlert2', renderingUrl), ['links'])}\n      confirmLabel={lang('OpenUrlTitle')}\n      confirmHandler={handleOpen}\n    />\n  );\n};\n\nexport default memo(SafeLinkModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"modalDialog\":\"K80So3B9potKGNvwdtYE\",\"closeButton\":\"dxx424IZDNuP1OLbUIve\",\"avatar\":\"qJgJ7R5NJVmAxBjT5LxT\",\"headerText\":\"eqCNa8zBoMroKcepfXyE\",\"description\":\"MtYhgDChavNfKIUAJPzt\",\"premiumFeatures\":\"J0hST5xsC45ZolfGpbDc\",\"options\":\"HyfHjS1vAds31eFcSpDg\",\"button\":\"sSXm9RjIQSsVFi0D1nEd\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPremiumGiftOption, ApiUser } from '../../../api/types';\n\nimport { getUserFirstOrLastName } from '../../../global/helpers';\nimport {\n  selectTabState,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\nimport Button from '../../ui/Button';\nimport Link from '../../ui/Link';\nimport Modal from '../../ui/Modal';\nimport PremiumSubscriptionOption from './PremiumSubscriptionOption';\n\nimport styles from './GiftPremiumModal.module.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  gifts?: ApiPremiumGiftOption[];\n  monthlyCurrency?: string;\n  monthlyAmount?: number;\n};\n\nconst GiftPremiumModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  user,\n  gifts,\n  monthlyCurrency,\n  monthlyAmount,\n}) => {\n  const { openPremiumModal, closeGiftPremiumModal, openUrl } = getActions();\n\n  const lang = useLang();\n  const renderedUser = useCurrentOrPrev(user, true);\n  const renderedGifts = useCurrentOrPrev(gifts, true);\n  const [selectedOption, setSelectedOption] = useState<number | undefined>();\n  const firstGift = renderedGifts?.[0];\n  const fullMonthlyAmount = useMemo(() => {\n    if (!renderedGifts || renderedGifts.length === 0 || !firstGift) {\n      return undefined;\n    }\n\n    const cheaperGift = renderedGifts.reduce((acc, gift) => {\n      return gift.amount < firstGift?.amount ? gift : firstGift;\n    }, firstGift);\n\n    return cheaperGift.currency === monthlyCurrency && monthlyAmount\n      ? monthlyAmount\n      : Math.floor(cheaperGift.amount / cheaperGift.months);\n  }, [firstGift, renderedGifts, monthlyAmount, monthlyCurrency]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setSelectedOption(firstGift?.months);\n    }\n  }, [firstGift?.months, isOpen]);\n\n  const selectedGift = useMemo(() => {\n    return renderedGifts?.find((gift) => gift.months === selectedOption);\n  }, [renderedGifts, selectedOption]);\n\n  const handleSubmit = useCallback(() => {\n    if (!selectedGift) {\n      return;\n    }\n\n    closeGiftPremiumModal();\n    openUrl({ url: selectedGift.botUrl });\n  }, [closeGiftPremiumModal, openUrl, selectedGift]);\n\n  const handlePremiumClick = useCallback(() => {\n    openPremiumModal();\n  }, [openPremiumModal]);\n\n  function renderPremiumFeaturesLink() {\n    const info = lang('GiftPremiumListFeaturesAndTerms');\n    // Translation hack for rendering component inside string\n    const parts = info.match(/([^*]*)\\*([^*]+)\\*(.*)/);\n\n    if (!parts || parts.length < 4) {\n      return undefined;\n    }\n\n    return (\n      <p className={styles.premiumFeatures}>\n        {parts[1]}\n        <Link isPrimary onClick={handlePremiumClick}>{parts[2]}</Link>\n        {parts[3]}\n      </p>\n    );\n  }\n\n  return (\n    <Modal\n      onClose={closeGiftPremiumModal}\n      isOpen={isOpen}\n      className={styles.modalDialog}\n    >\n      <div className=\"custom-scroll\">\n        <Button\n          round\n          size=\"smaller\"\n          className={styles.closeButton}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => closeGiftPremiumModal()}\n          ariaLabel={lang('Close')}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        <Avatar\n          peer={renderedUser}\n          size=\"jumbo\"\n          className={styles.avatar}\n        />\n        <h2 className={styles.headerText}>\n          {lang('GiftTelegramPremiumTitle')}\n        </h2>\n        <p className={styles.description}>\n          {renderText(\n            lang('GiftTelegramPremiumDescription', getUserFirstOrLastName(renderedUser)),\n            ['emoji', 'simple_markdown'],\n          )}\n        </p>\n\n        <div className={styles.options}>\n          {renderedGifts?.map((gift) => (\n            <PremiumSubscriptionOption\n              key={gift.amount}\n              option={gift}\n              fullMonthlyAmount={fullMonthlyAmount}\n              checked={gift.months === selectedOption}\n              onChange={setSelectedOption}\n            />\n          ))}\n        </div>\n\n        {renderPremiumFeaturesLink()}\n      </div>\n\n      <Button className={styles.button} isShiny disabled={!selectedOption} onClick={handleSubmit}>\n        {lang(\n          'GiftSubscriptionFor',\n          selectedGift && formatCurrency(Number(selectedGift.amount), selectedGift.currency, lang.code),\n        )}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { forUserId, monthlyCurrency, monthlyAmount } = selectTabState(global).giftPremiumModal || {};\n  const user = forUserId ? selectUser(global, forUserId) : undefined;\n  const gifts = user ? selectUserFullInfo(global, user.id)?.premiumGifts : undefined;\n\n  return {\n    user,\n    gifts,\n    monthlyCurrency,\n    monthlyAmount: monthlyAmount ? Number(monthlyAmount) : undefined,\n  };\n})(GiftPremiumModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"PEnE7xWTMwTPGmhubmj6\",\"text\":\"U4UYSH7uHW3k4FlqBefm\",\"header\":\"Jdlm3dtJ8gOIY0x0u2d4\",\"description\":\"cE44My72bdvMJna9mgoc\",\"icon\":\"mxF3NdPgAi_H0ZFgNEtw\",\"font-icon\":\"r6_o8xZKIo11QFFYm2Hv\",\"fontIcon\":\"r6_o8xZKIo11QFFYm2Hv\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { hexToRgb, lerpRgb } from '../../../util/switchTheme';\nimport renderText from '../../common/helpers/renderText';\n\nimport ListItem from '../../ui/ListItem';\n\nimport styles from './PremiumFeatureItem.module.scss';\n\ntype OwnProps = {\n  icon: string;\n  isFontIcon?: boolean;\n  title: string;\n  text: string;\n  index: number;\n  count: number;\n  onClick?: VoidFunction;\n};\n\nconst COLORS = [\n  '#F2862D', '#EB7B4D', '#E46D72', '#DD6091', '#CC5FBA', '#B464E7',\n  '#9873FF', '#768DFF', '#55A5FC', '#52B0C9', '#4FBC93', '#4CC663',\n].map(hexToRgb);\n\nconst PremiumFeatureItem: FC<OwnProps> = ({\n  icon,\n  isFontIcon,\n  title,\n  text,\n  index,\n  count,\n  onClick,\n}) => {\n  const newIndex = (index / count) * COLORS.length;\n  const colorA = COLORS[Math.floor(newIndex)];\n  const colorB = COLORS[Math.ceil(newIndex)] ?? colorA;\n  const { r, g, b } = lerpRgb(colorA, colorB, 0.5);\n\n  return (\n    <ListItem buttonClassName={styles.root} onClick={onClick} inactive={!onClick}>\n      {isFontIcon ? (\n        <i\n          className={buildClassName(styles.fontIcon, `icon icon-${icon}`)}\n          aria-hidden\n          style={`--item-color: rgb(${r},${g},${b})`}\n        />\n      ) : (\n        <img src={icon} className={styles.icon} alt=\"\" style={`--item-color: rgb(${r},${g},${b})`} draggable={false} />\n      )}\n      <div className={styles.text}>\n        <div className={styles.title}>{renderText(title, ['br'])}</div>\n        <div className={styles.description}>{text}</div>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(PremiumFeatureItem);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NtJc4bt94t9fklIWC6wF\",\"arrow\":\"_rzXza87NHdAMH2TDKul\",\"right\":\"J4UYbae0Frt01jIavpB0\",\"arrow-hidden\":\"qd3rvhZma3JJmhdt07Ig\",\"arrowHidden\":\"qd3rvhZma3JJmhdt07Ig\",\"dot\":\"eCgEFkp07vgaUGwymYAQ\",\"medium\":\"AIpVWjJc47egZ8ATaC3n\",\"small\":\"MnRKztu0OZTyIywGLMc6\",\"invisible\":\"boSFbatyzatdw70J7mpu\",\"active\":\"nlCmVncFkKVtsawWqcfw\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport Button from '../ui/Button';\n\nimport styles from './SliderDots.module.scss';\n\ntype OwnProps = {\n  length: number;\n  active: number;\n  onSelectSlide: (index: number) => void;\n};\n\nconst SliderDots: FC<OwnProps> = ({\n  length,\n  active,\n  onSelectSlide,\n}) => {\n  const startFrom = Math.max(0, Math.min(length - 8, active - 4));\n  const isPreLastBatch = startFrom === length - 8 - 1;\n  const isLastBatch = startFrom === length - 8;\n  const isFirstBatch = startFrom === 0;\n  const isPreFirstBatch = startFrom === 1;\n  const shownDotsCount = Math.min(length, 8);\n\n  const handleGoForward = useCallback(() => {\n    onSelectSlide(active + 1);\n  }, [active, onSelectSlide]);\n\n  const handleGoBack = useCallback(() => {\n    onSelectSlide(active - 1);\n  }, [active, onSelectSlide]);\n\n  const count = Math.min(8, length);\n\n  return (\n    <div>\n      {!IS_TOUCH_ENV && (\n        <Button\n          className={buildClassName(styles.arrow, active === 0 && styles.arrowHidden)}\n          color=\"translucent\"\n          disabled={active === 0}\n          round\n          onClick={handleGoBack}\n        >\n          <i className=\"icon icon-previous\" />\n        </Button>\n      )}\n      <div className={styles.root} style={`--start-from: ${startFrom}; --length: ${length}; --count: ${count};`}>\n        {Array(length).fill(undefined).map((_, i) => {\n          const index = i;\n          const isLast = (i === startFrom + shownDotsCount - 1 && !isLastBatch && !isPreLastBatch);\n          const isPreLast = (i === startFrom + shownDotsCount - 2 && !isPreLastBatch && !isLastBatch)\n            || (i === startFrom + shownDotsCount - 1 && isPreLastBatch);\n          const isFirst = (i === startFrom) && !isFirstBatch && !isPreFirstBatch;\n          const isPreFirst = ((i === startFrom + 1) && !isFirstBatch && !isPreFirstBatch)\n            || (i === startFrom && isPreFirstBatch);\n          const isInvisible = i < startFrom || i >= startFrom + shownDotsCount;\n          return (\n            <div\n              onClick={() => onSelectSlide(i)}\n              className={buildClassName(\n                styles.dot,\n                index === active && styles.active,\n                (isPreLast || isPreFirst) && styles.medium,\n                (isLast || isFirst) && styles.small,\n                isInvisible && styles.invisible,\n              )}\n            />\n          );\n        })}\n      </div>\n      {!IS_TOUCH_ENV && (\n        <Button\n          className={buildClassName(styles.arrow, active === length - 1 && styles.arrowHidden, styles.right)}\n          color=\"translucent\"\n          round\n          disabled={active === length - 1}\n          onClick={handleGoForward}\n        >\n          <i className=\"icon icon-next\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SliderDots);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"jeeOV_UYyl50GFLOzjGC\",\"title\":\"SVqE3gr2ekQUWfFT_Mvg\",\"description\":\"mCBNPstzrSlOQsz6rOtE\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../../lib/teact/teact';\n\nimport { lerp } from '../../../../util/math';\n\nimport PremiumLimitsCompare from './PremiumLimitsCompare';\n\nimport styles from './PremiumLimitPreview.module.scss';\n\ntype OwnProps = {\n  title: string;\n  description: string;\n  leftValue?: string;\n  rightValue?: string;\n  colorStepProgress: number;\n};\n\nconst COLOR_START = [91, 160, 255];\nconst COLOR_END = [197, 100, 243];\n\nconst PremiumLimitPreview: FC<OwnProps> = ({\n  title,\n  description,\n  leftValue,\n  rightValue,\n  colorStepProgress,\n}) => {\n  const color = useMemo(() => {\n    return COLOR_START.map((start, i) => lerp(start, COLOR_END[i], colorStepProgress));\n  }, [colorStepProgress]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.title}>{title}</div>\n      <div className={styles.description}>{description}</div>\n      <PremiumLimitsCompare\n        leftValue={leftValue}\n        rightValue={rightValue}\n        rightStyle={`background: rgb(${color.join(',')})`}\n      />\n    </div>\n  );\n};\n\nexport default memo(PremiumLimitPreview);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"dVn5gk50tXn1EiI4kJFJ\",\"sticker\":\"PIYKt4xxOUBpRjRu0b4q\",\"effect-sticker\":\"JLzWnq8to4W24wBGmbyt PIYKt4xxOUBpRjRu0b4q\",\"effectSticker\":\"JLzWnq8to4W24wBGmbyt PIYKt4xxOUBpRjRu0b4q\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { GlobalState } from '../../../../global/types';\n\nimport cycleRestrict from '../../../../util/cycleRestrict';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\n\nimport styles from './PremiumFeaturePreviewStickers.module.scss';\n\ntype OwnProps = {\n  isActive: boolean;\n};\n\ntype StateProps = {\n  stickers: GlobalState['stickers']['premium']['stickers'];\n};\n\nconst EMOJI_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 0.8;\nconst MAX_EMOJIS = 15;\nconst ENDED_DELAY = 150;\n\nconst AnimatedCircleSticker: FC<{\n  size: number;\n  realIndex: number;\n  sticker: ApiSticker;\n  index: number;\n  maxLength: number;\n  onClick: (index: number) => void;\n  onEnded: (index: number) => void;\n  canPlay: boolean;\n}> = ({\n  size, realIndex, canPlay,\n  sticker, index, maxLength, onClick, onEnded,\n}) => {\n  const mediaData = useMedia(`sticker${sticker.id}`);\n  const mediaDataAround = useMedia(`sticker${sticker.id}?size=f`);\n\n  const isActivated = index === 0;\n  const [isAnimated, animate, inanimate] = useFlag(isActivated);\n\n  const circleSize = size - size * EMOJI_SIZE_MULTIPLIER;\n  const width = circleSize * 3;\n  const height = circleSize * 3.2;\n\n  const a = index / maxLength;\n\n  const angle = a * (Math.PI * 2);\n  const scale = isActivated ? 1 : 0.66;\n\n  const x = Math.cos(angle) * width - circleSize * 2.8;\n  const y = Math.sin(angle) * height;\n\n  const handleClick = useLastCallback(() => {\n    onClick(realIndex);\n  });\n\n  const handleEnded = useLastCallback(() => {\n    inanimate();\n    onEnded(realIndex);\n  });\n\n  useEffect(() => {\n    if (isActivated) {\n      animate();\n    }\n  }, [isActivated, animate]);\n\n  return (\n    <>\n      {isActivated && (\n        <AnimatedSticker\n          className={styles.effectSticker}\n          tgsUrl={mediaDataAround}\n          play={canPlay}\n          isLowPriority\n          noLoop\n          size={EFFECT_SIZE_MULTIPLIER * size}\n          style={`--x: calc(${x}px - 10%); --y: ${y}px;`}\n        />\n      )}\n      <AnimatedSticker\n        className={styles.sticker}\n        tgsUrl={mediaData}\n        play={canPlay && isAnimated}\n        noLoop\n        size={EMOJI_SIZE_MULTIPLIER * size}\n        style={`--x: ${x}px; --y: ${y}px; --opacity: ${scale}`}\n        onClick={handleClick}\n        onEnded={handleEnded}\n      />\n    </>\n  );\n};\n\nconst PremiumFeaturePreviewStickers: FC<OwnProps & StateProps> = ({\n  stickers, isActive,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [offset, setOffset] = useState(0);\n  const [size, setSize] = useState(0);\n\n  const renderedStickers = stickers?.slice(0, MAX_EMOJIS);\n\n  const handleClick = useLastCallback((i: number) => {\n    setOffset(-i);\n  });\n\n  const handleEnded = useLastCallback((i: number) => {\n    const displayIndex = cycleRestrict(renderedStickers.length, i + offset);\n    if (displayIndex !== 0) return;\n\n    setTimeout(() => {\n      setOffset((current) => {\n        return cycleRestrict(renderedStickers.length, current + 1);\n      });\n    }, ENDED_DELAY);\n  });\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    setSize(container.closest('.modal-dialog')!.clientWidth);\n  }, []);\n\n  return (\n    <div\n      className={styles.root}\n      ref={containerRef}\n    >\n      {Boolean(size) && renderedStickers?.map((sticker, i) => {\n        return (\n          <AnimatedCircleSticker\n            size={size}\n            sticker={sticker}\n            realIndex={i}\n            index={(i + offset + renderedStickers.length) % renderedStickers.length}\n            maxLength={renderedStickers.length}\n            onClick={handleClick}\n            onEnded={handleEnded}\n            canPlay={isActive}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      stickers: global.stickers.premium.stickers,\n    };\n  },\n)(PremiumFeaturePreviewStickers));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"dfgGrPUU6AC7NazJh8Ut\",\"header\":\"Y9bbyTXeZIKzoa8wtnkn\",\"circle\":\"eTSbeIbZl_YRbAPcqHhQ\",\"title\":\"me5CfUvQ6RleMxtFjIaR\",\"features\":\"ssjliTyWlTUXFLdz5NJd\",\"mobile\":\"ckFVT8AXlwgCejTXWdfQ\",\"scrolled\":\"T0nWA26c2Q0j0Z_PpexK\"};","import React, { memo, useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiUser } from '../../../../api/types';\n\nimport { selectUser } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useLang from '../../../../hooks/useLang';\nimport useScrolledState from '../../../../hooks/useScrolledState';\nimport useDevicePixelRatio from '../../../../hooks/window/useDevicePixelRatio';\n\nimport Avatar from '../../../common/Avatar';\nimport { drawGradientCircle } from '../../../common/AvatarStoryCircle';\nimport PremiumFeatureItem from '../PremiumFeatureItem';\n\nimport styles from './PremiumFeaturePreviewStories.module.scss';\n\ntype StateProps = {\n  currentUser: ApiUser;\n};\n\nconst STORY_FEATURE_TITLES = {\n  stories_order: 'PremiumStoriesPriority',\n  stories_stealth: 'PremiumStoriesStealth',\n  stories_views: 'PremiumStoriesViews',\n  stories_timer: 'lng_premium_stories_subtitle_expiration',\n  stories_save: 'PremiumStoriesSaveToGallery',\n  stories_caption: 'lng_premium_stories_subtitle_caption',\n  stories_link: 'lng_premium_stories_subtitle_links',\n};\n\nconst STORY_FEATURE_DESCRIPTIONS = {\n  stories_order: 'PremiumStoriesPriorityDescription',\n  stories_stealth: 'PremiumStoriesStealthDescription',\n  stories_views: 'PremiumStoriesViewsDescription',\n  stories_timer: 'PremiumStoriesExpirationDescription',\n  stories_save: 'PremiumStoriesSaveToGalleryDescription',\n  stories_caption: 'PremiumStoriesCaptionDescription',\n  stories_link: 'PremiumStoriesFormattingDescription',\n};\n\nconst STORY_FEATURE_ICONS = {\n  stories_order: 'story-priority',\n  stories_stealth: 'eye-closed-outline',\n  stories_views: 'eye-outline',\n  stories_timer: 'timer',\n  stories_save: 'arrow-down-circle',\n  stories_caption: 'story-caption',\n  stories_link: 'link-badge',\n};\n\nconst STORY_FEATURE_ORDER = Object.keys(STORY_FEATURE_TITLES) as (keyof typeof STORY_FEATURE_TITLES)[];\n\nconst CIRCLE_SIZE = 5.25 * REM;\nconst CIRCLE_SEGMENTS = 8;\nconst CIRCLE_READ_SEGMENTS = 0;\n\nconst PremiumFeaturePreviewVideo = ({\n  currentUser,\n}: StateProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const circleRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useLang();\n\n  const dpr = useDevicePixelRatio();\n\n  useLayoutEffect(() => {\n    if (!circleRef.current) {\n      return;\n    }\n\n    drawGradientCircle({\n      canvas: circleRef.current,\n      size: CIRCLE_SIZE * dpr,\n      segmentsCount: CIRCLE_SEGMENTS,\n      color: 'purple',\n      readSegmentsCount: CIRCLE_READ_SEGMENTS,\n      readSegmentColor: 'transparent',\n      dpr,\n    });\n  }, [dpr]);\n\n  const { handleScroll, isAtBeginning } = useScrolledState();\n\n  const maxSize = CIRCLE_SIZE;\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.header}>\n        <Avatar forPremiumPromo peer={currentUser} size=\"giant\" />\n        <canvas className={styles.circle} ref={circleRef} style={`max-width: ${maxSize}px; max-height: ${maxSize}px`} />\n      </div>\n      <div className={styles.title}>{lang('UpgradedStories')}</div>\n      <div\n        className={buildClassName(styles.features, !isAtBeginning && styles.scrolled, 'custom-scroll')}\n        onScroll={handleScroll}\n      >\n        {STORY_FEATURE_ORDER.map((section, index) => {\n          return (\n            <PremiumFeatureItem\n              key={section}\n              title={lang(STORY_FEATURE_TITLES[section])}\n              text={lang(STORY_FEATURE_DESCRIPTIONS[section])}\n              icon={STORY_FEATURE_ICONS[section]}\n              isFontIcon\n              index={index}\n              count={STORY_FEATURE_ORDER.length}\n            />\n          );\n        })}\n        <div className={styles.mobile}>{lang('lng_premium_stories_about_mobile')}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      currentUser: selectUser(global, global.currentUserId!)!,\n    };\n  },\n)(PremiumFeaturePreviewVideo));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"WHiQiGCtWfjSlEysEelB\",\"wrapper\":\"WUpKHfqLbeZmhfYqqiko\",\"down\":\"MiGmL4xqBPkxmLim4Ai0\",\"frame\":\"xuhT9JHpFkVsTcUWeh4L\",\"video\":\"sLLJqCkdSug4bzEQrACs\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiThumbnail } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useCanvasBlur from '../../../../hooks/useCanvasBlur';\nimport useMedia from '../../../../hooks/useMedia';\nimport useMediaTransition from '../../../../hooks/useMediaTransition';\n\nimport OptimizedVideo from '../../../ui/OptimizedVideo';\n\nimport styles from './PremiumFeaturePreviewVideo.module.scss';\n\nimport DeviceFrame from '../../../../assets/premium/DeviceFrame.svg';\n\ntype OwnProps = {\n  videoId: string;\n  isReverseAnimation: boolean;\n  isDown: boolean;\n  videoThumbnail: ApiThumbnail;\n  index: number;\n  isActive: boolean;\n};\n\nconst PremiumFeaturePreviewVideo: FC<OwnProps> = ({\n  videoId,\n  isReverseAnimation,\n  isDown,\n  videoThumbnail,\n  index,\n  isActive,\n}) => {\n  const mediaData = useMedia(`document${videoId}`);\n  const thumbnailRef = useCanvasBlur(videoThumbnail.dataUri);\n  const transitionClassNames = useMediaTransition(mediaData);\n\n  return (\n    <div className={styles.root}>\n      <div\n        className={buildClassName(\n          styles.wrapper,\n          isReverseAnimation && styles.reverse,\n          isDown && styles.down,\n        )}\n        id={`premium_feature_preview_video_${index}`}\n      >\n        <img src={DeviceFrame} alt=\"\" className={styles.frame} draggable={false} />\n        <canvas ref={thumbnailRef} className={styles.video} />\n        <OptimizedVideo\n          canPlay={isActive}\n          className={buildClassName(styles.video, transitionClassNames)}\n          src={mediaData}\n          disablePictureInPicture\n          playsInline\n          muted\n          loop\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumFeaturePreviewVideo);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QfngIllOc1THaTQiJf7h\",\"button\":\"n8tTb600de2uZKGkyw67\",\"button-content\":\"eZLuJy6dL4ekVllaRcCm\",\"buttonContent\":\"eZLuJy6dL4ekVllaRcCm\",\"back-button\":\"ZTIpWD6Zrj1U7rnGvrlD\",\"backButton\":\"ZTIpWD6Zrj1U7rnGvrlD\",\"white-back-button\":\"E42Dy7DFLAxvj8HE4GAD\",\"whiteBackButton\":\"E42Dy7DFLAxvj8HE4GAD\",\"content\":\"JMdhJYW94Mas4JDye486\",\"frame\":\"fEQZ2fyO9g6L1v8QJUCJ\",\"slide\":\"xkC9BFxv7RkSwbPe4RMb\",\"limits\":\"zngeFAwxdlVJZY876fHc\",\"stories\":\"uOZMPO0FyBVTsM6ACXDw\",\"limits-content\":\"le7Qv9QkHlO3qdK0Hs_g\",\"limitsContent\":\"le7Qv9QkHlO3qdK0Hs_g\",\"header\":\"Mw81cOCIGy8KGn9VokFA\",\"no-header-border\":\"tRvcw256KSHRqgSj5uGX\",\"noHeaderBorder\":\"tRvcw256KSHRqgSj5uGX\",\"preview\":\"EXGFQjwHmQxjvMLbYtS9\",\"title\":\"eEYA2lXPy_DUKe8JKHiP\",\"description\":\"TVO7LjkV_yHUGIu5PXCA\",\"footer\":\"EKr_FVmiDSwhUxouhaqB\",\"no-footer-border\":\"H8z5Q6gsuqeCy82HFlyX\",\"noFooterBorder\":\"H8z5Q6gsuqeCy82HFlyX\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiPremiumPromo } from '../../../api/types';\nimport type { ApiLimitType, GlobalState } from '../../../global/types';\n\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport SliderDots from '../../common/SliderDots';\nimport Button from '../../ui/Button';\nimport PremiumLimitPreview from './common/PremiumLimitPreview';\nimport PremiumFeaturePreviewStickers from './previews/PremiumFeaturePreviewStickers';\nimport PremiumFeaturePreviewStories from './previews/PremiumFeaturePreviewStories';\nimport PremiumFeaturePreviewVideo from './previews/PremiumFeaturePreviewVideo';\n\nimport styles from './PremiumFeatureModal.module.scss';\n\nexport const PREMIUM_FEATURE_TITLES: Record<string, string> = {\n  double_limits: 'PremiumPreviewLimits',\n  infinite_reactions: 'PremiumPreviewReactions2',\n  premium_stickers: 'PremiumPreviewStickers',\n  animated_emoji: 'PremiumPreviewEmoji',\n  no_ads: 'PremiumPreviewNoAds',\n  voice_to_text: 'PremiumPreviewVoiceToText',\n  profile_badge: 'PremiumPreviewProfileBadge',\n  faster_download: 'PremiumPreviewDownloadSpeed',\n  more_upload: 'PremiumPreviewUploads',\n  advanced_chat_management: 'PremiumPreviewAdvancedChatManagement',\n  animated_userpics: 'PremiumPreviewAnimatedProfiles',\n  emoji_status: 'PremiumPreviewEmojiStatus',\n  translations: 'PremiumPreviewTranslations',\n  stories: 'PremiumPreviewStories',\n};\n\nexport const PREMIUM_FEATURE_DESCRIPTIONS: Record<string, string> = {\n  double_limits: 'PremiumPreviewLimitsDescription',\n  infinite_reactions: 'PremiumPreviewReactions2Description',\n  premium_stickers: 'PremiumPreviewStickersDescription',\n  no_ads: 'PremiumPreviewNoAdsDescription',\n  animated_emoji: 'PremiumPreviewEmojiDescription',\n  voice_to_text: 'PremiumPreviewVoiceToTextDescription',\n  profile_badge: 'PremiumPreviewProfileBadgeDescription',\n  faster_download: 'PremiumPreviewDownloadSpeedDescription',\n  more_upload: 'PremiumPreviewUploadsDescription',\n  advanced_chat_management: 'PremiumPreviewAdvancedChatManagementDescription',\n  animated_userpics: 'PremiumPreviewAnimatedProfilesDescription',\n  emoji_status: 'PremiumPreviewEmojiStatusDescription',\n  translations: 'PremiumPreviewTranslationsDescription',\n  stories: 'PremiumPreviewStoriesDescription',\n};\n\nexport const PREMIUM_FEATURE_SECTIONS = [\n  'stories',\n  'double_limits',\n  'more_upload',\n  'faster_download',\n  'voice_to_text',\n  'no_ads',\n  'infinite_reactions',\n  'premium_stickers',\n  'animated_emoji',\n  'advanced_chat_management',\n  'profile_badge',\n  'animated_userpics',\n  'emoji_status',\n  'translations',\n];\n\nconst PREMIUM_BOTTOM_VIDEOS: string[] = [\n  'faster_download',\n  'voice_to_text',\n  'advanced_chat_management',\n  'infinite_reactions',\n  'profile_badge',\n  'animated_userpics',\n  'emoji_status',\n  'translations',\n];\n\ntype ApiLimitTypeWithoutUpload = Exclude<ApiLimitType,\n'uploadMaxFileparts' | 'chatlistInvites' | 'chatlistJoined' | 'savedDialogsPinned'\n>;\n\nconst LIMITS_ORDER: ApiLimitTypeWithoutUpload[] = [\n  'channels',\n  'dialogFolderPinned',\n  'channelsPublic',\n  'savedGifs',\n  'stickersFaved',\n  'aboutLength',\n  'captionLength',\n  'dialogFilters',\n  'dialogFiltersChats',\n  'recommendedChannels',\n];\n\nconst LIMITS_TITLES: Record<ApiLimitTypeWithoutUpload, string> = {\n  channels: 'GroupsAndChannelsLimitTitle',\n  dialogFolderPinned: 'PinChatsLimitTitle',\n  channelsPublic: 'PublicLinksLimitTitle',\n  savedGifs: 'SavedGifsLimitTitle',\n  stickersFaved: 'FavoriteStickersLimitTitle',\n  aboutLength: 'BioLimitTitle',\n  captionLength: 'CaptionsLimitTitle',\n  dialogFilters: 'FoldersLimitTitle',\n  dialogFiltersChats: 'ChatPerFolderLimitTitle',\n  recommendedChannels: 'SimilarChannelsLimitTitle',\n};\n\nconst LIMITS_DESCRIPTIONS: Record<ApiLimitTypeWithoutUpload, string> = {\n  channels: 'GroupsAndChannelsLimitSubtitle',\n  dialogFolderPinned: 'PinChatsLimitSubtitle',\n  channelsPublic: 'PublicLinksLimitSubtitle',\n  savedGifs: 'SavedGifsLimitSubtitle',\n  stickersFaved: 'FavoriteStickersLimitSubtitle',\n  aboutLength: 'BioLimitSubtitle',\n  captionLength: 'CaptionsLimitSubtitle',\n  dialogFilters: 'FoldersLimitSubtitle',\n  dialogFiltersChats: 'ChatPerFolderLimitSubtitle',\n  recommendedChannels: 'SimilarChannelsLimitSubtitle',\n};\n\nconst BORDER_THRESHOLD = 20;\n\ntype OwnProps = {\n  initialSection: string;\n  promo: ApiPremiumPromo;\n  isPremium?: boolean;\n  limits?: NonNullable<GlobalState['appConfig']>['limits'];\n  premiumPromoOrder?: string[];\n  onBack: VoidFunction;\n  onClickSubscribe: (startParam?: string) => void;\n};\n\nconst PremiumFeatureModal: FC<OwnProps> = ({\n  promo,\n  initialSection,\n  isPremium,\n  limits,\n  premiumPromoOrder,\n  onBack,\n  onClickSubscribe,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const scrollContainerRef = useRef<HTMLDivElement>(null);\n  const [currentSlideIndex, setCurrentSlideIndex] = useState(PREMIUM_FEATURE_SECTIONS.indexOf(initialSection));\n  const [reverseAnimationSlideIndex, setReverseAnimationSlideIndex] = useState(0);\n  const [isScrolling, startScrolling, stopScrolling] = useFlag();\n\n  const [isScrolledToTop, setIsScrolledToTop] = useState(true);\n  const [isScrolledToBottom, setIsScrolledToBottom] = useState(false);\n\n  const prevInitialSection = usePrevious(initialSection);\n\n  const filteredSections = useMemo(() => {\n    if (!premiumPromoOrder) return PREMIUM_FEATURE_SECTIONS;\n    return premiumPromoOrder.filter((section) => PREMIUM_FEATURE_SECTIONS.includes(section));\n  }, [premiumPromoOrder]);\n\n  function handleClick() {\n    onClickSubscribe(initialSection);\n  }\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { clientWidth, scrollLeft: scrollLeftOriginal } = e.currentTarget;\n\n    const scrollLeft = Math.round(scrollLeftOriginal);\n\n    const left = scrollLeft % (clientWidth);\n    const progress = left / (clientWidth);\n    e.currentTarget.style.setProperty('--scroll-progress', progress.toString());\n    e.currentTarget.style.setProperty('--abs-scroll-progress', Math.abs(progress).toString());\n    const reverseIndex = Math.ceil((scrollLeft + 1) / clientWidth);\n\n    setReverseAnimationSlideIndex(reverseIndex);\n\n    const prevElement = e.currentTarget.querySelector(`#premium_feature_preview_video_${reverseIndex - 1}`);\n    const reverseElement = e.currentTarget.querySelector(`#premium_feature_preview_video_${reverseIndex}`);\n    prevElement?.classList.toggle('reverse', false);\n    reverseElement?.classList.toggle('reverse', true);\n\n    if (isScrolling) return;\n    const slide = Math.round(scrollLeft / clientWidth);\n    setCurrentSlideIndex(slide);\n  }\n\n  function handleLimitsScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop, clientHeight, scrollHeight } = e.currentTarget;\n    setIsScrolledToTop(scrollTop <= BORDER_THRESHOLD);\n    setIsScrolledToBottom(scrollTop >= scrollHeight - clientHeight - BORDER_THRESHOLD);\n  }\n\n  useEffect(() => {\n    const scrollContainer = scrollContainerRef.current;\n    if (!scrollContainer || (prevInitialSection === initialSection)) return;\n\n    const index = filteredSections.indexOf(initialSection);\n    setCurrentSlideIndex(index);\n    startScrolling();\n    animateHorizontalScroll(scrollContainer, scrollContainer.clientWidth * index, 0)\n      .then(stopScrolling);\n  }, [currentSlideIndex, filteredSections, initialSection, prevInitialSection]);\n\n  const handleSelectSlide = useCallback(async (index: number) => {\n    const scrollContainer = scrollContainerRef.current;\n    if (!scrollContainer) return;\n\n    setCurrentSlideIndex(index);\n\n    startScrolling();\n    await animateHorizontalScroll(scrollContainer, scrollContainer.clientWidth * index, 800);\n    stopScrolling();\n  }, []);\n\n  // TODO Support all subscription options\n  const month = promo.options.find((option) => option.months === 1)!;\n\n  return (\n    <div className={styles.root}>\n      <Button\n        round\n        size=\"smaller\"\n        className={buildClassName(styles.backButton, currentSlideIndex !== 0 && styles.whiteBackButton)}\n        color={currentSlideIndex === 0 ? 'translucent' : 'translucent-white'}\n        onClick={onBack}\n        ariaLabel={lang('Back')}\n      >\n        <i className=\"icon icon-arrow-left\" />\n      </Button>\n\n      <div className={styles.preview} />\n\n      <div className={buildClassName(styles.content, 'no-scrollbar')} onScroll={handleScroll} ref={scrollContainerRef}>\n\n        {filteredSections.map((section, index) => {\n          if (section === 'double_limits') {\n            return (\n              <div className={buildClassName(styles.slide, styles.limits)}>\n                <h2 className={buildClassName(styles.header, isScrolledToTop && styles.noHeaderBorder)}>\n                  {lang(PREMIUM_FEATURE_TITLES.double_limits)}\n                </h2>\n                <div className={buildClassName(styles.limitsContent, 'custom-scroll')} onScroll={handleLimitsScroll}>\n                  {LIMITS_ORDER.map((limit, i) => {\n                    const defaultLimit = limits?.[limit][0].toString();\n                    const premiumLimit = limits?.[limit][1].toString();\n                    return (\n                      <PremiumLimitPreview\n                        title={lang(LIMITS_TITLES[limit])}\n                        description={lang(LIMITS_DESCRIPTIONS[limit], premiumLimit)}\n                        leftValue={defaultLimit}\n                        rightValue={premiumLimit}\n                        colorStepProgress={i / (LIMITS_ORDER.length - 1)}\n                      />\n                    );\n                  })}\n                </div>\n              </div>\n            );\n          }\n\n          if (section === 'premium_stickers') {\n            return (\n              <div className={styles.slide}>\n                <div className={styles.frame}>\n                  <PremiumFeaturePreviewStickers isActive={currentSlideIndex === index} />\n                </div>\n                <h1 className={styles.title}>\n                  {lang(PREMIUM_FEATURE_TITLES.premium_stickers)}\n                </h1>\n                <div className={styles.description}>\n                  {renderText(lang(PREMIUM_FEATURE_DESCRIPTIONS.premium_stickers), ['br'])}\n                </div>\n              </div>\n            );\n          }\n\n          if (section === 'stories') {\n            return (\n              <div className={buildClassName(styles.slide, styles.stories)}>\n                <PremiumFeaturePreviewStories />\n              </div>\n            );\n          }\n\n          const i = promo.videoSections.indexOf(section);\n          if (i === -1) return undefined;\n          return (\n            <div className={styles.slide}>\n              <div className={styles.frame}>\n                <PremiumFeaturePreviewVideo\n                  isActive={currentSlideIndex === index}\n                  videoId={promo.videos[i].id!}\n                  videoThumbnail={promo.videos[i].thumbnail!}\n                  isDown={PREMIUM_BOTTOM_VIDEOS.includes(section)}\n                  index={index}\n                  isReverseAnimation={index === reverseAnimationSlideIndex}\n                />\n              </div>\n              <h1 className={styles.title}>\n                {lang(PREMIUM_FEATURE_TITLES[promo.videoSections[i]!])}\n              </h1>\n              <div className={styles.description}>\n                {renderText(lang(PREMIUM_FEATURE_DESCRIPTIONS[promo.videoSections[i]!]), ['br'])}\n              </div>\n            </div>\n          );\n        })}\n\n      </div>\n\n      <div\n        className={buildClassName(\n          styles.footer,\n          (isScrolledToBottom || currentSlideIndex !== 0) && styles.noFooterBorder,\n        )}\n      >\n        <SliderDots\n          length={PREMIUM_FEATURE_SECTIONS.length}\n          active={currentSlideIndex}\n          onSelectSlide={handleSelectSlide}\n        />\n        <Button\n          className={buildClassName(styles.button)}\n          isShiny={!isPremium}\n          withPremiumGradient={!isPremium}\n          onClick={isPremium ? onBack : handleClick}\n        >\n          {isPremium\n            ? lang('OK')\n            : lang('SubscribeToPremium', formatCurrency(Number(month.amount), month.currency, lang.code))}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumFeatureModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"JJNHc_FZuydBNBIHK9xC\",\"transition\":\"Q05gUm0HCMtSoeX2HVGw\",\"button\":\"Fb3VVHNrypZ3lhYfSVI_\",\"main\":\"E9_LJ9RqAHTj8h84EROt\",\"logo\":\"Vaf41aTAoSwl_e_cZhah\",\"status-emoji\":\"ZDQ58Gu2MpISHIigNnCf\",\"statusEmoji\":\"ZDQ58Gu2MpISHIigNnCf\",\"header-text\":\"J2z1gqvfQu5kqV_UP8US\",\"headerText\":\"J2z1gqvfQu5kqV_UP8US\",\"description\":\"PXg8sU2cfdeysJXctlpB\",\"list\":\"LlPAfJpL066su4P2NFmh\",\"no-button\":\"wpPtJKCqTdOGkKoh7KTo\",\"noButton\":\"wpPtJKCqTdOGkKoh7KTo\",\"header\":\"Rwuf1efaEfZ13AD5XbCB\",\"hidden-header\":\"NV7fN3j69oFZEJu7ejG8\",\"hiddenHeader\":\"NV7fN3j69oFZEJu7ejG8\",\"close-button\":\"TyuYAZecpI2K_1i3B5XO\",\"closeButton\":\"TyuYAZecpI2K_1i3B5XO\",\"premium-header-text\":\"jA_DV7G5VJo8xGOe0otF\",\"premiumHeaderText\":\"jA_DV7G5VJo8xGOe0otF\",\"footer-text\":\"yVkdTScCEhH3EQMQiA42\",\"footerText\":\"yVkdTScCEhH3EQMQiA42\",\"primary-footer-text\":\"MQbFSG2o_R8rjKDsqs8R\",\"primaryFooterText\":\"MQbFSG2o_R8rjKDsqs8R\",\"footer\":\"FApXoTPpasib6Np5Uxpt\",\"stickerSetText\":\"CCRIHzjKzzj6y3nYJQKk\",\"stickerSetLink\":\"_G_ogp7ec2JUxZUhoaAi\",\"stickerSetLinkIcon\":\"vJ2GKZFltN22CJDw5Bdu\",\"subscriptionOptions\":\"FSaJ3oNrh9CbS9PCtJo7\",\"subscriptionOption\":\"YHOfi30FIqTv2I5y5aUP\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiPremiumPromo, ApiPremiumSubscriptionOption, ApiSticker, ApiStickerSet, ApiUser,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\n\nimport { TME_LINK_PREFIX } from '../../../config';\nimport { getUserFullName } from '../../../global/helpers';\nimport {\n  selectIsCurrentUserPremium, selectStickerSet,\n  selectTabState, selectUser,\n} from '../../../global/selectors';\nimport { selectPremiumLimit } from '../../../global/selectors/limits';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport CustomEmoji from '../../common/CustomEmoji';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport Transition from '../../ui/Transition';\nimport PremiumFeatureItem from './PremiumFeatureItem';\nimport PremiumFeatureModal, {\n  PREMIUM_FEATURE_DESCRIPTIONS,\n  PREMIUM_FEATURE_SECTIONS,\n  PREMIUM_FEATURE_TITLES,\n} from './PremiumFeatureModal';\nimport PremiumSubscriptionOption from './PremiumSubscriptionOption';\n\nimport styles from './PremiumMainModal.module.scss';\n\nimport PremiumAds from '../../../assets/premium/PremiumAds.svg';\nimport PremiumBadge from '../../../assets/premium/PremiumBadge.svg';\nimport PremiumChats from '../../../assets/premium/PremiumChats.svg';\nimport PremiumEmoji from '../../../assets/premium/PremiumEmoji.svg';\nimport PremiumFile from '../../../assets/premium/PremiumFile.svg';\nimport PremiumLimits from '../../../assets/premium/PremiumLimits.svg';\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\nimport PremiumReactions from '../../../assets/premium/PremiumReactions.svg';\nimport PremiumSpeed from '../../../assets/premium/PremiumSpeed.svg';\nimport PremiumStatus from '../../../assets/premium/PremiumStatus.svg';\nimport PremiumStickers from '../../../assets/premium/PremiumStickers.svg';\nimport PremiumTranslate from '../../../assets/premium/PremiumTranslate.svg';\nimport PremiumVideo from '../../../assets/premium/PremiumVideo.svg';\nimport PremiumVoice from '../../../assets/premium/PremiumVoice.svg';\n\nconst LIMIT_ACCOUNTS = 4;\nconst STATUS_EMOJI_SIZE = 8 * REM;\n\nconst PREMIUM_FEATURE_COLOR_ICONS: Record<string, string> = {\n  stories: PremiumStatus,\n  double_limits: PremiumLimits,\n  infinite_reactions: PremiumReactions,\n  premium_stickers: PremiumStickers,\n  animated_emoji: PremiumEmoji,\n  no_ads: PremiumAds,\n  voice_to_text: PremiumVoice,\n  profile_badge: PremiumBadge,\n  faster_download: PremiumSpeed,\n  more_upload: PremiumFile,\n  advanced_chat_management: PremiumChats,\n  animated_userpics: PremiumVideo,\n  emoji_status: PremiumStatus,\n  translations: PremiumTranslate,\n};\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  promo?: ApiPremiumPromo;\n  isClosing?: boolean;\n  fromUser?: ApiUser;\n  fromUserStatusEmoji?: ApiSticker;\n  fromUserStatusSet?: ApiStickerSet;\n  toUser?: ApiUser;\n  initialSection?: string;\n  isPremium?: boolean;\n  isSuccess?: boolean;\n  isGift?: boolean;\n  monthsAmount?: number;\n  limitChannels: number;\n  limitPins: number;\n  limitLinks: number;\n  limitFolders: number;\n  limits?: NonNullable<GlobalState['appConfig']>['limits'];\n  premiumSlug?: string;\n  premiumBotUsername?: string;\n  premiumPromoOrder?: string[];\n};\n\nconst PremiumMainModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  fromUser,\n  fromUserStatusEmoji,\n  fromUserStatusSet,\n  promo,\n  initialSection,\n  isPremium,\n  limitChannels,\n  limitLinks,\n  limitFolders,\n  limitPins,\n  limits,\n  premiumSlug,\n  premiumBotUsername,\n  isClosing,\n  isSuccess,\n  isGift,\n  toUser,\n  monthsAmount,\n  premiumPromoOrder,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const dialogRef = useRef<HTMLDivElement>(null);\n  const {\n    closePremiumModal, openInvoice, requestConfetti, openTelegramLink, loadStickers, openStickerSet,\n  } = getActions();\n\n  const lang = useLang();\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n  const [currentSection, setCurrentSection] = useState<string | undefined>(initialSection);\n  const [selectedSubscriptionOption, setSubscriptionOption] = useState<ApiPremiumSubscriptionOption>();\n\n  const handleOpen = useCallback((section: string | undefined) => {\n    return () => {\n      setCurrentSection(section);\n    };\n  }, []);\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  const handleClickWithStartParam = useLastCallback((startParam?: string) => {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n\n    if (premiumSlug) {\n      openInvoice({\n        slug: premiumSlug,\n      });\n    } else if (premiumBotUsername) {\n      openTelegramLink({\n        url: `${TME_LINK_PREFIX}${premiumBotUsername}?start=${startParam || 'promo'}`,\n      });\n      closePremiumModal();\n    }\n  });\n\n  const handleClick = useCallback(() => {\n    if (selectedSubscriptionOption) {\n      handleClickWithStartParam(String(selectedSubscriptionOption.months));\n    } else {\n      handleClickWithStartParam();\n    }\n  }, [selectedSubscriptionOption, handleClickWithStartParam]);\n\n  const handleChangeSubscriptionOption = useCallback((months: number) => {\n    const foundOption = promo?.options.find((option) => option.months === months);\n    setSubscriptionOption(foundOption);\n  }, [promo]);\n\n  const showConfetti = useCallback(() => {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n    if (isOpen) {\n      const {\n        top, left, width, height,\n      } = dialog.querySelector('.modal-content')!.getBoundingClientRect();\n      requestConfetti({\n        top,\n        left,\n        width,\n        height,\n      });\n    }\n  }, [isOpen, requestConfetti]);\n\n  useEffect(() => {\n    if (isSuccess) {\n      showConfetti();\n    }\n  }, [isSuccess, showConfetti]);\n\n  useSyncEffect(([prevIsPremium]) => {\n    if (prevIsPremium === isPremium) return;\n\n    showConfetti();\n  }, [isPremium, showConfetti]);\n\n  const filteredSections = useMemo(() => {\n    if (!premiumPromoOrder) return PREMIUM_FEATURE_SECTIONS;\n    return premiumPromoOrder.filter((section) => PREMIUM_FEATURE_SECTIONS.includes(section));\n  }, [premiumPromoOrder]);\n\n  useEffect(() => {\n    if (!fromUserStatusEmoji || fromUserStatusSet) return;\n    loadStickers({\n      stickerSetInfo: fromUserStatusEmoji.stickerSetInfo,\n    });\n  }, [loadStickers, fromUserStatusEmoji, fromUserStatusSet]);\n\n  useEffect(() => {\n    const [defaultOption] = promo?.options ?? [];\n    setSubscriptionOption(defaultOption);\n  }, [promo]);\n\n  const handleOpenStatusSet = useLastCallback(() => {\n    if (!fromUserStatusSet) return;\n\n    openStickerSet({\n      stickerSetInfo: fromUserStatusSet,\n    });\n  });\n\n  const stickerSetTitle = useMemo(() => {\n    if (!fromUserStatusSet || !fromUser) return undefined;\n\n    const template = lang('lng_premium_emoji_status_title').replace('{user}', getUserFullName(fromUser)!);\n    const [first, second] = template.split('{link}');\n\n    const emoji = fromUserStatusSet.thumbCustomEmojiId ? (\n      <CustomEmoji className={styles.stickerSetLinkIcon} documentId={fromUserStatusSet.thumbCustomEmojiId} />\n    ) : undefined;\n    const link = (\n      <span className={styles.stickerSetLink} onClick={handleOpenStatusSet}>\n        {emoji}{renderText(fromUserStatusSet.title)}\n      </span>\n    );\n    return [renderText(first), link, renderText(second)];\n  }, [fromUser, fromUserStatusSet, lang]);\n\n  const fullMonthlyAmount = useMemo(() => {\n    const monthOption = promo?.options.find((option) => option.months === 1);\n    if (!monthOption) {\n      return undefined;\n    }\n    return Number(monthOption.amount);\n  }, [promo]);\n\n  const subscribeButtonText = useMemo(() => {\n    if (!selectedSubscriptionOption) {\n      return undefined;\n    }\n    const { amount, months, currency } = selectedSubscriptionOption;\n    const perMonthPrice = Math.floor(amount / months);\n    return formatCurrency(\n      perMonthPrice,\n      currency,\n      lang.code,\n    );\n  }, [selectedSubscriptionOption, lang.code]);\n\n  if (!promo || (fromUserStatusEmoji && !fromUserStatusSet)) return undefined;\n\n  function getHeaderText() {\n    if (isGift) {\n      return fromUser?.id === currentUserId\n        ? lang('TelegramPremiumUserGiftedPremiumOutboundDialogTitle', [getUserFullName(toUser), monthsAmount])\n        : lang('TelegramPremiumUserGiftedPremiumDialogTitle', [getUserFullName(fromUser), monthsAmount]);\n    }\n\n    return fromUser\n      ? lang('TelegramPremiumUserDialogTitle', getUserFullName(fromUser))\n      : lang(isPremium ? 'TelegramPremiumSubscribedTitle' : 'TelegramPremium');\n  }\n\n  function getHeaderDescription() {\n    if (isGift) {\n      return fromUser?.id === currentUserId\n        ? lang('TelegramPremiumUserGiftedPremiumOutboundDialogSubtitle', getUserFullName(toUser))\n        : lang('TelegramPremiumUserGiftedPremiumDialogSubtitle');\n    }\n\n    if (fromUserStatusSet) {\n      return lang('TelegramPremiumUserStatusDialogSubtitle');\n    }\n\n    return fromUser\n      ? lang('TelegramPremiumUserDialogSubtitle')\n      : lang(isPremium ? 'TelegramPremiumSubscribedSubtitle' : 'TelegramPremiumSubtitle');\n  }\n\n  function renderFooterText() {\n    if (!promo || (isGift && fromUser?.id === currentUserId)) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.footerText} dir={lang.isRtl ? 'rtl' : undefined}>\n        {renderTextWithEntities({\n          text: promo.statusText,\n          entities: promo.statusEntities,\n        })}\n      </div>\n    );\n  }\n\n  function renderSubscriptionOptions() {\n    return (\n      <div className={styles.subscriptionOptions}>\n        {promo?.options\n          .map((option) => (\n            <PremiumSubscriptionOption\n              className={styles.subscriptionOption}\n              key={option.amount}\n              option={option}\n              onChange={handleChangeSubscriptionOption}\n              fullMonthlyAmount={fullMonthlyAmount}\n              checked={selectedSubscriptionOption?.months === option.months}\n            />\n          ))}\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className={styles.root}\n      // eslint-disable-next-line react/jsx-no-bind\n      onCloseAnimationEnd={() => closePremiumModal({ isClosed: true })}\n      onClose={closePremiumModal}\n      isOpen={isOpen && !isClosing}\n      dialogRef={dialogRef}\n    >\n      <Transition name=\"slide\" activeKey={currentSection ? 1 : 0} className={styles.transition}>\n        {!currentSection ? (\n          <div className={buildClassName(styles.main, 'custom-scroll')} onScroll={handleScroll}>\n            <Button\n              round\n              size=\"smaller\"\n              className={styles.closeButton}\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => closePremiumModal()}\n              ariaLabel={lang('Close')}\n            >\n              <i className=\"icon icon-close\" />\n            </Button>\n            {fromUserStatusEmoji ? (\n              <CustomEmoji\n                className={styles.statusEmoji}\n                onClick={handleOpenStatusSet}\n                documentId={fromUserStatusEmoji.id}\n                isBig\n                size={STATUS_EMOJI_SIZE}\n              />\n            ) : (\n              <img className={styles.logo} src={PremiumLogo} alt=\"\" draggable={false} />\n            )}\n            <h2 className={buildClassName(styles.headerText, fromUserStatusSet && styles.stickerSetText)}>\n              {fromUserStatusSet ? stickerSetTitle : renderText(getHeaderText(), ['simple_markdown', 'emoji'])}\n            </h2>\n            <div className={styles.description}>\n              {renderText(getHeaderDescription(), ['simple_markdown', 'emoji'])}\n            </div>\n            {!isPremium && renderSubscriptionOptions()}\n            <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n              <h2 className={styles.premiumHeaderText}>\n                {lang('TelegramPremium')}\n              </h2>\n            </div>\n            <div className={buildClassName(styles.list, isPremium && styles.noButton)}>\n              {filteredSections.map((section, index) => {\n                return (\n                  <PremiumFeatureItem\n                    key={section}\n                    title={lang(PREMIUM_FEATURE_TITLES[section])}\n                    text={section === 'double_limits'\n                      ? lang(PREMIUM_FEATURE_DESCRIPTIONS[section],\n                        [limitChannels, limitFolders, limitPins, limitLinks, LIMIT_ACCOUNTS])\n                      : lang(PREMIUM_FEATURE_DESCRIPTIONS[section])}\n                    icon={PREMIUM_FEATURE_COLOR_ICONS[section]}\n                    index={index}\n                    count={filteredSections.length}\n                    onClick={handleOpen(section)}\n                  />\n                );\n              })}\n              <div\n                className={buildClassName(styles.footerText, styles.primaryFooterText)}\n                dir={lang.isRtl ? 'rtl' : undefined}\n              >\n                <p>\n                  {renderText(lang('AboutPremiumDescription'), ['simple_markdown'])}\n                </p>\n                <p>\n                  {renderText(lang('AboutPremiumDescription2'), ['simple_markdown'])}\n                </p>\n              </div>\n              {renderFooterText()}\n            </div>\n            {!isPremium && selectedSubscriptionOption && (\n              <div className={styles.footer}>\n                <Button className={styles.button} isShiny withPremiumGradient onClick={handleClick}>\n                  {lang('SubscribeToPremium', subscribeButtonText)}\n                </Button>\n              </div>\n            )}\n          </div>\n        ) : (\n          <PremiumFeatureModal\n            initialSection={currentSection}\n            onBack={handleOpen(undefined)}\n            promo={promo}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClickSubscribe={handleClickWithStartParam}\n            isPremium={isPremium}\n            limits={limits}\n            premiumPromoOrder={premiumPromoOrder}\n          />\n        )}\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    premiumModal,\n  } = selectTabState(global);\n\n  const fromUser = premiumModal?.fromUserId ? selectUser(global, premiumModal.fromUserId) : undefined;\n  const fromUserStatusEmoji = fromUser?.emojiStatus ? global.customEmojis.byId[fromUser.emojiStatus.documentId]\n    : undefined;\n  const fromUserStatusSet = fromUserStatusEmoji ? selectStickerSet(global, fromUserStatusEmoji.stickerSetInfo)\n    : undefined;\n\n  return {\n    currentUserId: global.currentUserId,\n    promo: premiumModal?.promo,\n    isClosing: premiumModal?.isClosing,\n    isSuccess: premiumModal?.isSuccess,\n    isGift: premiumModal?.isGift,\n    monthsAmount: premiumModal?.monthsAmount,\n    fromUser,\n    fromUserStatusEmoji,\n    fromUserStatusSet,\n    toUser: premiumModal?.toUserId ? selectUser(global, premiumModal.toUserId) : undefined,\n    initialSection: premiumModal?.initialSection,\n    isPremium: selectIsCurrentUserPremium(global),\n    limitChannels: selectPremiumLimit(global, 'channels'),\n    limitFolders: selectPremiumLimit(global, 'dialogFilters'),\n    limitPins: selectPremiumLimit(global, 'dialogFolderPinned'),\n    limitLinks: selectPremiumLimit(global, 'channelsPublic'),\n    limits: global.appConfig?.limits,\n    premiumSlug: global.appConfig?.premiumInvoiceSlug,\n    premiumBotUsername: global.appConfig?.premiumBotUsername,\n    premiumPromoOrder: global.appConfig?.premiumPromoOrder,\n  };\n})(PremiumMainModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"IXV7SB86VfHeS6sGpbAL\",\"active\":\"Imt9mEl6lbyzuVmm0OiM\",\"input\":\"G5YwjwtcrW31JALkPvrJ\",\"content\":\"z1nlRjQJTzMyE5pygz2A\",\"month\":\"UTefQdcjZLkQS6zJWz6b\",\"perMonth\":\"hw7yeIYEeVfpUmmNowOm\",\"amount\":\"QshOtc5leIs0wAOFsv_1\",\"discount\":\"ypoZi01wnuGOHzz0dn1j\"};","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\n\nimport useLang from '../../../hooks/useLang';\n\nimport styles from './PremiumSubscriptionOption.module.scss';\n\ntype OwnProps = {\n  option: {\n    months: number;\n    currency: string;\n    amount: number;\n  };\n  checked?: boolean;\n  fullMonthlyAmount?: number;\n  className?: string;\n  onChange: (month: number) => void;\n};\n\nconst PremiumSubscriptionOption: FC<OwnProps> = ({\n  option, checked, fullMonthlyAmount, onChange, className,\n}) => {\n  const lang = useLang();\n\n  const { months, amount, currency } = option;\n  const perMonth = Math.floor(amount / months);\n\n  const discount = useMemo(() => {\n    return fullMonthlyAmount && fullMonthlyAmount > perMonth\n      ? Math.ceil(100 - perMonth / (fullMonthlyAmount / 100))\n      : undefined;\n  }, [fullMonthlyAmount, perMonth]);\n\n  const handleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.checked) {\n      onChange(months);\n    }\n  }, [months, onChange]);\n\n  return (\n    <label\n      className={buildClassName(\n        styles.wrapper,\n        checked && styles.active,\n        className,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <input\n        className={styles.input}\n        type=\"radio\"\n        name=\"gift_option\"\n        value={months}\n        checked={checked}\n        onChange={handleChange}\n      />\n      <div className={styles.content}>\n        <div className={styles.month}>{lang('Months', months)}</div>\n        <div className={styles.perMonth}>\n          {lang('PricePerMonth', formatCurrency(perMonth, currency, lang.code))}\n          {Boolean(discount) && (\n            <span className={styles.discount} title={lang('GiftDiscount')}> &minus;{discount}% </span>\n          )}\n        </div>\n        <div className={styles.amount}>{formatCurrency(amount, currency, lang.code)}</div>\n      </div>\n    </label>\n  );\n};\n\nexport default memo(PremiumSubscriptionOption);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"iz5RJvcQyNNDQzKfXQbN\",\"limit-compare\":\"az3lXhmlMfZfIQ_81jog\",\"limitCompare\":\"az3lXhmlMfZfIQ_81jog\",\"limit-badge\":\"womlEQglVV1w8ltVa6PQ\",\"limitBadge\":\"womlEQglVV1w8ltVa6PQ\",\"limit-value\":\"QC8Xe4ShGc_q82s4Tjmg\",\"limitValue\":\"QC8Xe4ShGc_q82s4Tjmg\",\"limit-icon\":\"q8SgjqQqlOVMSofzhdwh\",\"limitIcon\":\"q8SgjqQqlOVMSofzhdwh\",\"dialog-buttons\":\"DgRFl7StCs4fhROb7CKH\",\"dialogButtons\":\"DgRFl7StCs4fhROb7CKH\",\"x2\":\"MeIsw1Fm4WBqIZzbpS10\",\"button-icon\":\"BW05mF5k9uq5qBi_BYzg\",\"buttonIcon\":\"BW05mF5k9uq5qBi_BYzg\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { ApiLimitTypeWithModal } from '../../../../global/types';\nimport type { LangFn } from '../../../../hooks/useLang';\nimport type { IconName } from '../../../../types/icons';\n\nimport { MAX_UPLOAD_FILEPART_SIZE } from '../../../../config';\nimport { selectIsCurrentUserPremium, selectIsPremiumPurchaseBlocked } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatFileSize } from '../../../../util/textFormat';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useLang from '../../../../hooks/useLang';\n\nimport Icon from '../../../common/Icon';\nimport Button from '../../../ui/Button';\nimport Modal from '../../../ui/Modal';\nimport PremiumLimitsCompare from './PremiumLimitsCompare';\n\nimport styles from './PremiumLimitReachedModal.module.scss';\n\nconst LIMIT_DESCRIPTION: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFolders',\n  uploadMaxFileparts: 'LimitReachedFileSize',\n  dialogFilters: 'LimitReachedFolders',\n  dialogFolderPinned: 'LimitReachedPinDialogs',\n  channelsPublic: 'LimitReachedPublicLinks',\n  channels: 'LimitReachedCommunities',\n  chatlistInvites: 'LimitReachedFolderLinks',\n  chatlistJoined: 'LimitReachedSharedFolders',\n  savedDialogsPinned: 'LimitReachedPinSavedDialogs',\n};\n\nconst LIMIT_DESCRIPTION_BLOCKED: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFoldersLocked',\n  uploadMaxFileparts: 'LimitReachedFileSizeLocked',\n  dialogFilters: 'LimitReachedFoldersLocked',\n  dialogFolderPinned: 'LimitReachedPinDialogsLocked',\n  channelsPublic: 'LimitReachedPublicLinksLocked',\n  channels: 'LimitReachedCommunitiesLocked',\n  chatlistInvites: 'LimitReachedFolderLinksLocked',\n  chatlistJoined: 'LimitReachedSharedFoldersLocked',\n  savedDialogsPinned: 'LimitReachedPinSavedDialogsLocked',\n};\n\nconst LIMIT_DESCRIPTION_PREMIUM: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFoldersPremium',\n  uploadMaxFileparts: 'LimitReachedFileSizePremium',\n  dialogFilters: 'LimitReachedFoldersPremium',\n  dialogFolderPinned: 'LimitReachedPinDialogsPremium',\n  channelsPublic: 'LimitReachedPublicLinksPremium',\n  channels: 'LimitReachedCommunitiesPremium',\n  chatlistInvites: 'LimitReachedFolderLinksPremium',\n  chatlistJoined: 'LimitReachedSharedFoldersPremium',\n  savedDialogsPinned: 'LimitReachedPinSavedDialogsPremium',\n};\n\nconst LIMIT_ICON: Record<ApiLimitTypeWithModal, IconName> = {\n  dialogFiltersChats: 'chat-badge',\n  uploadMaxFileparts: 'file-badge',\n  dialogFilters: 'folder-badge',\n  dialogFolderPinned: 'pin-badge',\n  channelsPublic: 'link-badge',\n  channels: 'chats-badge',\n  chatlistInvites: 'link-badge',\n  chatlistJoined: 'folder-badge',\n  savedDialogsPinned: 'pin-badge',\n};\n\nconst LIMIT_VALUE_FORMATTER: Partial<Record<ApiLimitTypeWithModal, (...args: any[]) => string>> = {\n  uploadMaxFileparts: (lang: LangFn, value: number) => {\n    // The real size is not exactly 4gb, so we need to round it\n    if (value === 8000) return lang('FileSize.GB', '4');\n    if (value === 4000) return lang('FileSize.GB', '2');\n    return formatFileSize(lang, value * MAX_UPLOAD_FILEPART_SIZE);\n  },\n};\n\nfunction getLimiterDescription({\n  lang,\n  limitType,\n  isPremium,\n  canBuyPremium,\n  defaultValue,\n  premiumValue,\n  valueFormatter,\n}: {\n  lang: LangFn;\n  limitType?: ApiLimitTypeWithModal;\n  isPremium?: boolean;\n  canBuyPremium?: boolean;\n  defaultValue?: number;\n  premiumValue?: number;\n  valueFormatter?: (...args: any[]) => string;\n}) {\n  if (!limitType) {\n    return undefined;\n  }\n\n  const defaultValueFormatted = valueFormatter ? valueFormatter(lang, defaultValue) : defaultValue;\n  const premiumValueFormatted = valueFormatter ? valueFormatter(lang, premiumValue) : premiumValue;\n\n  if (isPremium) {\n    return lang(LIMIT_DESCRIPTION_PREMIUM[limitType], premiumValueFormatted);\n  }\n\n  return canBuyPremium\n    ? lang(LIMIT_DESCRIPTION[limitType],\n      limitType === 'channelsPublic' ? premiumValueFormatted : [defaultValueFormatted, premiumValueFormatted])\n    : lang(LIMIT_DESCRIPTION_BLOCKED[limitType], defaultValueFormatted);\n}\n\nexport type OwnProps = {\n  limit?: ApiLimitTypeWithModal;\n};\n\ntype StateProps = {\n  defaultValue?: number;\n  premiumValue?: number;\n  isPremium?: boolean;\n  canBuyPremium?: boolean;\n};\n\nconst PremiumLimitReachedModal: FC<OwnProps & StateProps> = ({\n  defaultValue,\n  premiumValue,\n  limit,\n  isPremium,\n  canBuyPremium,\n}) => {\n  const { closeLimitReachedModal, openPremiumModal } = getActions();\n  const lang = useLang();\n\n  const [isClosing, startClosing, stopClosing] = useFlag();\n\n  const handleClick = useCallback(() => {\n    openPremiumModal();\n    startClosing();\n  }, [openPremiumModal, startClosing]);\n\n  useEffect(() => {\n    if (!limit && isClosing) stopClosing();\n  }, [isClosing, limit, stopClosing]);\n\n  const title = lang('LimitReached');\n  const valueFormatter = limit && LIMIT_VALUE_FORMATTER[limit];\n  const description = getLimiterDescription({\n    lang,\n    limitType: limit,\n    isPremium,\n    canBuyPremium,\n    defaultValue,\n    premiumValue,\n    valueFormatter,\n  });\n  const icon = limit && LIMIT_ICON[limit];\n  const canUpgrade = canBuyPremium && !isPremium;\n\n  return (\n    <Modal\n      onClose={startClosing}\n      onCloseAnimationEnd={closeLimitReachedModal}\n      isOpen={Boolean(limit) && !isClosing}\n      title={title}\n      className={styles.root}\n    >\n      {!canUpgrade && (\n        <div className={styles.limitBadge}>\n          <i className={buildClassName(styles.limitIcon, icon, 'icon')} />\n          <div className={styles.limitValue}>{valueFormatter?.(\n            lang, isPremium ? premiumValue : defaultValue,\n          ) || (isPremium ? premiumValue : defaultValue)}\n          </div>\n        </div>\n      )}\n\n      {canUpgrade && (\n        <PremiumLimitsCompare\n          className={styles.limitCompare}\n          leftValue={valueFormatter?.(lang, defaultValue) || defaultValue?.toString()}\n          rightValue={valueFormatter?.(lang, premiumValue) || premiumValue?.toString()}\n          floatingBadgeIcon={icon}\n        />\n      )}\n\n      <div>\n        {renderText(description || '', ['simple_markdown', 'br'])}\n      </div>\n\n      <div className={styles.dialogButtons}>\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={startClosing}\n          color=\"primary\"\n        >\n          {lang(canUpgrade ? 'Cancel' : 'OK')}\n        </Button>\n        {canUpgrade\n      && (\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={handleClick}\n          color=\"primary\"\n        >\n          {lang('IncreaseLimit')}\n          <Icon name=\"double-badge\" className={styles.x2} />\n        </Button>\n      )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { limit }): StateProps => {\n    const { limits } = global.appConfig || {};\n    const isPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      defaultValue: limit ? limits?.[limit][0] : undefined,\n      premiumValue: limit ? limits?.[limit][1] : undefined,\n      canBuyPremium: !selectIsPremiumPurchaseBlocked(global),\n      isPremium,\n    };\n  },\n)(PremiumLimitReachedModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"qiAkShre9E6R3S_XXL9S\",\"floating-badge\":\"gIcOQgrfw3soP3cK9s5Q\",\"floatingBadge\":\"gIcOQgrfw3soP3cK9s5Q\",\"floating-badge-triangle\":\"Ip5PkcvyMOnN0RLpXLXO\",\"floatingBadgeTriangle\":\"Ip5PkcvyMOnN0RLpXLXO\",\"floating-badge-icon\":\"y7T3FpaFXDsnPGk6dPmg\",\"floatingBadgeIcon\":\"y7T3FpaFXDsnPGk6dPmg\",\"text\":\"X0zFAEpRoPWj1yE904xR\",\"floating-badge-value\":\"rQ6ZdKdWi4HVydX6qhWS\",\"floatingBadgeValue\":\"rQ6ZdKdWi4HVydX6qhWS\",\"left-text\":\"kuq7sjJF6mvCc4Y5CXpv X0zFAEpRoPWj1yE904xR X0zFAEpRoPWj1yE904xR\",\"leftText\":\"kuq7sjJF6mvCc4Y5CXpv X0zFAEpRoPWj1yE904xR X0zFAEpRoPWj1yE904xR\",\"right-text\":\"QWqqObtxZyakBzakEoyh X0zFAEpRoPWj1yE904xR X0zFAEpRoPWj1yE904xR\",\"rightText\":\"QWqqObtxZyakBzakEoyh X0zFAEpRoPWj1yE904xR X0zFAEpRoPWj1yE904xR\",\"right-value\":\"TCdcdr_TxlgpCSBV0ePq X0zFAEpRoPWj1yE904xR X0zFAEpRoPWj1yE904xR\",\"rightValue\":\"TCdcdr_TxlgpCSBV0ePq X0zFAEpRoPWj1yE904xR X0zFAEpRoPWj1yE904xR\",\"left-value\":\"FaVxkFCcMpBfLY74WJZv X0zFAEpRoPWj1yE904xR\",\"leftValue\":\"FaVxkFCcMpBfLY74WJZv X0zFAEpRoPWj1yE904xR\",\"line\":\"slESyAvUqizX4_EIX_yg\",\"left\":\"lQi3xqxjvl2Owb4ES2SM\",\"right\":\"Dcv5uphsn2Sxpg3ROS_u\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { IconName } from '../../../../types/icons';\n\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useLang from '../../../../hooks/useLang';\n\nimport styles from './PremiumLimitsCompare.module.scss';\n\ntype OwnProps = {\n  floatingBadgeIcon?: IconName;\n  leftValue?: string;\n  rightValue?: string;\n  className?: string;\n  rightStyle?: string;\n};\n\nconst PremiumLimitsCompare: FC<OwnProps> = ({\n  leftValue,\n  rightValue,\n  className,\n  floatingBadgeIcon,\n  rightStyle,\n}) => {\n  const lang = useLang();\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      {floatingBadgeIcon && (\n        <div className={styles.floatingBadge}>\n          <i className={buildClassName(styles.floatingBadgeIcon, `icon-${floatingBadgeIcon}`, 'icon')} />\n          <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>{leftValue}</div>\n          <div className={styles.floatingBadgeTriangle}>\n            <svg width=\"26\" height=\"9\" viewBox=\"0 0 26 9\" fill=\"none\">\n              <path d=\"M0 0H26H24.4853C22.894 0 21.3679 0.632141 20.2426 1.75736L14.4142 7.58579C13.6332 8.36684 12.3668 8.36683 11.5858 7.58579L5.75736 1.75736C4.63214 0.632139 3.10602 0 1.51472 0H0Z\" fill=\"#7E85FF\" />\n            </svg>\n          </div>\n        </div>\n      )}\n      <div className={buildClassName(styles.line, styles.left)}>\n        <div className={styles.leftText} dir={lang.isRtl ? 'rtl' : undefined}>{lang('LimitFree')}</div>\n        {!floatingBadgeIcon && <div className={styles.leftValue}>{leftValue}</div>}\n      </div>\n      <div className={buildClassName(styles.line, styles.right)} style={rightStyle}>\n        <div className={styles.rightText} dir={lang.isRtl ? 'rtl' : undefined}>{lang('LimitPremium')}</div>\n        <div className={styles.rightValue}>{rightValue}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumLimitsCompare);\n","import type { ApiDimensions, ApiMessage } from '../../../api/types';\nimport { MediaViewerOrigin } from '../../../types';\n\nimport { ANIMATION_END_DELAY, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getMessageHtmlId } from '../../../global/helpers';\nimport { applyStyles } from '../../../util/animation';\nimport { isElementInViewport } from '../../../util/isElementInViewport';\nimport stopEvent from '../../../util/stopEvent';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport windowSize from '../../../util/windowSize';\nimport {\n  calculateDimensions,\n  getMediaViewerAvailableDimensions,\n  MEDIA_VIEWER_MEDIA_QUERY,\n  REM,\n} from '../../common/helpers/mediaDimensions';\n\nconst ANIMATION_DURATION = 200;\n\nexport function animateOpening(\n  hasFooter: boolean,\n  origin: MediaViewerOrigin,\n  bestImageData: string,\n  dimensions: ApiDimensions,\n  isVideo: boolean,\n  message?: ApiMessage,\n) {\n  const { mediaEl: fromImage } = getNodes(origin, message);\n  if (!fromImage) {\n    return;\n  }\n\n  const { width: windowWidth } = windowSize.get();\n  const {\n    width: availableWidth, height: availableHeight,\n  } = getMediaViewerAvailableDimensions(hasFooter, isVideo);\n  const { width: toWidth, height: toHeight } = calculateDimensions(\n    availableWidth, availableHeight, dimensions.width, dimensions.height,\n  );\n  const toLeft = (windowWidth - toWidth) / 2;\n  const toTop = getTopOffset(hasFooter) + (availableHeight - toHeight) / 2;\n\n  let {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n\n  if ([\n    MediaViewerOrigin.SharedMedia,\n    MediaViewerOrigin.Album,\n    MediaViewerOrigin.ScheduledAlbum,\n    MediaViewerOrigin.SearchResult,\n  ].includes(origin)) {\n    const uncovered = uncover(toWidth, toHeight, fromTop, fromLeft, fromWidth, fromHeight);\n    fromTop = uncovered.top;\n    fromLeft = uncovered.left;\n    fromWidth = uncovered.width;\n    fromHeight = uncovered.height;\n  }\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  const fromScaleX = fromWidth / toWidth;\n  const fromScaleY = fromHeight / toHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData || fromImage);\n    applyStyles(ghost, {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    });\n    applyShape(ghost, origin);\n\n    document.body.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      ghost.style.transform = '';\n      clearShape(ghost);\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (document.body.contains(ghost)) {\n            document.body.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nexport function animateClosing(origin: MediaViewerOrigin, bestImageData: string, message?: ApiMessage) {\n  const { container, mediaEl: toImage } = getNodes(origin, message);\n  if (!toImage) {\n    return;\n  }\n\n  const fromImage = document.getElementById('MediaViewer')!.querySelector<HTMLImageElement>(\n    '.MediaViewerSlide--active img, .MediaViewerSlide--active video',\n  );\n  if (!fromImage || !toImage) {\n    return;\n  }\n\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n  const {\n    top: targetTop, left: toLeft, width: toWidth, height: toHeight,\n  } = toImage.getBoundingClientRect();\n\n  let toTop = targetTop;\n  if (!isElementInViewport(container)) {\n    const { height: windowHeight } = windowSize.get();\n    toTop = targetTop < fromTop ? -toHeight : windowHeight;\n  }\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  let fromScaleX = fromWidth / toWidth;\n  let fromScaleY = fromHeight / toHeight;\n\n  const shouldFadeOut = (\n    [MediaViewerOrigin.Inline, MediaViewerOrigin.ScheduledInline].includes(origin)\n    && !isMessageImageFullyVisible(container, toImage)\n  ) || (\n    [MediaViewerOrigin.Album, MediaViewerOrigin.ScheduledAlbum].includes(origin)\n    && !isMessageImageFullyVisible(container, toImage)\n  );\n\n  if ([\n    MediaViewerOrigin.SharedMedia,\n    MediaViewerOrigin.Album,\n    MediaViewerOrigin.ScheduledAlbum,\n    MediaViewerOrigin.SearchResult,\n  ].includes(origin)) {\n    if (fromScaleX > fromScaleY) {\n      fromScaleX = fromScaleY;\n    } else if (fromScaleY > fromScaleX) {\n      fromScaleY = fromScaleX;\n    }\n  }\n\n  const existingGhost = document.getElementsByClassName('ghost')[0] as HTMLDivElement;\n  const ghost = existingGhost || createGhost(bestImageData || toImage, origin);\n\n  let styles: Record<string, string>;\n  if (existingGhost) {\n    const {\n      top, left, width, height,\n    } = existingGhost.getBoundingClientRect();\n    const scaleX = width / toWidth;\n    const scaleY = height / toHeight;\n\n    styles = {\n      transition: 'none',\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      transformOrigin: 'top left',\n      transform: `translate3d(${left - toLeft}px, ${top - toTop}px, 0) scale(${scaleX}, ${scaleY})`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n    };\n  } else {\n    styles = {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    };\n  }\n\n  requestMutation(() => {\n    applyStyles(ghost, styles);\n    if (!existingGhost) document.body.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      if (existingGhost) {\n        existingGhost.style.transition = '';\n      }\n\n      ghost.style.transform = '';\n\n      if (shouldFadeOut) {\n        ghost.style.opacity = '0';\n      }\n\n      applyShape(ghost, origin);\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (document.body.contains(ghost)) {\n            document.body.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nfunction createGhost(source: string | HTMLImageElement | HTMLVideoElement, origin?: MediaViewerOrigin) {\n  const ghost = document.createElement('div');\n  ghost.classList.add('ghost');\n\n  const img = new Image();\n  img.draggable = false;\n  img.oncontextmenu = stopEvent;\n\n  if (typeof source === 'string') {\n    img.src = source;\n  } else if (source instanceof HTMLVideoElement) {\n    img.src = source.poster;\n  } else {\n    img.src = source.src;\n  }\n\n  ghost.appendChild(img);\n\n  if (origin === MediaViewerOrigin.ProfileAvatar || origin === MediaViewerOrigin.SettingsAvatar) {\n    ghost.classList.add('ProfileInfo');\n    if (origin === MediaViewerOrigin.SettingsAvatar) {\n      ghost.classList.add('self');\n    }\n    const profileInfo = document.querySelector(\n      origin === MediaViewerOrigin.ProfileAvatar\n        ? '#RightColumn .ProfileInfo .info'\n        : '#Settings .ProfileInfo .info',\n    );\n    if (profileInfo) {\n      ghost.appendChild(profileInfo.cloneNode(true));\n    }\n  }\n\n  return ghost;\n}\n\nfunction uncover(realWidth: number, realHeight: number, top: number, left: number, width: number, height: number) {\n  if (realWidth === realHeight) {\n    const size = Math.max(width, height) * (realWidth / realHeight);\n    left -= (size - width) / 2;\n    top -= (size - height) / 2;\n    width = size;\n    height = size;\n  } else if (realWidth > realHeight) {\n    const srcWidth = width;\n    width = height * (realWidth / realHeight);\n    left -= (width - srcWidth) / 2;\n  } else if (realHeight > realWidth) {\n    const srcHeight = height;\n    height = width * (realHeight / realWidth);\n    top -= (height - srcHeight) / 2;\n  }\n\n  return {\n    top, left, width, height,\n  };\n}\n\nfunction isMessageImageFullyVisible(container: HTMLElement, imageEl: HTMLElement) {\n  const messageListElement = document.querySelector<HTMLDivElement>('.Transition_slide-active > .MessageList')!;\n  let imgOffsetTop = container.offsetTop + imageEl.closest<HTMLDivElement>('.content-inner, .WebPage')!.offsetTop;\n  if (container.id.includes('album-media-')) {\n    imgOffsetTop += container.parentElement!.offsetTop + container.closest<HTMLDivElement>('.Message')!.offsetTop;\n  }\n\n  return imgOffsetTop > messageListElement.scrollTop\n    && imgOffsetTop + imageEl.offsetHeight < messageListElement.scrollTop + messageListElement.offsetHeight;\n}\n\nfunction getTopOffset(hasFooter: boolean) {\n  const mql = window.matchMedia(MEDIA_VIEWER_MEDIA_QUERY);\n  let topOffsetRem = 4.125;\n  if (hasFooter && !IS_TOUCH_ENV) {\n    topOffsetRem += mql.matches ? 0.875 : 2.125;\n  }\n\n  return topOffsetRem * REM;\n}\n\nfunction getNodes(origin: MediaViewerOrigin, message?: ApiMessage) {\n  let containerSelector;\n  let mediaSelector;\n\n  switch (origin) {\n    case MediaViewerOrigin.Album:\n    case MediaViewerOrigin.ScheduledAlbum:\n      containerSelector = `.Transition_slide-active > .MessageList #album-media-${getMessageHtmlId(message!.id)}`;\n      mediaSelector = '.full-media';\n      break;\n\n    case MediaViewerOrigin.SharedMedia:\n      containerSelector = `#shared-media${getMessageHtmlId(message!.id)}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.SearchResult:\n      containerSelector = `#search-media${getMessageHtmlId(message!.id)}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.MiddleHeaderAvatar:\n      containerSelector = '.MiddleHeader .Transition_slide-active .ChatInfo .Avatar';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.SettingsAvatar:\n      containerSelector = '#Settings .ProfileInfo .Transition_slide-active .ProfilePhoto';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.ProfileAvatar:\n      containerSelector = '#RightColumn .ProfileInfo .Transition_slide-active .ProfilePhoto';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.SuggestedAvatar:\n      containerSelector = `.Transition_slide-active > .MessageList #${getMessageHtmlId(message!.id)}`;\n      mediaSelector = '.Avatar img';\n      break;\n\n    case MediaViewerOrigin.ScheduledInline:\n    case MediaViewerOrigin.Inline:\n    default:\n      containerSelector = `.Transition_slide-active > .MessageList #${getMessageHtmlId(message!.id)}`;\n      mediaSelector = `${MESSAGE_CONTENT_SELECTOR} .full-media,${MESSAGE_CONTENT_SELECTOR} .thumbnail:not(.blurred-bg)`;\n  }\n\n  const container = document.querySelector<HTMLElement>(containerSelector)!;\n  const mediaEls = container && container.querySelectorAll<HTMLImageElement | HTMLVideoElement>(mediaSelector);\n\n  return {\n    container,\n    mediaEl: mediaEls?.[0],\n  };\n}\n\nfunction applyShape(ghost: HTMLDivElement, origin: MediaViewerOrigin) {\n  switch (origin) {\n    case MediaViewerOrigin.Album:\n    case MediaViewerOrigin.ScheduledAlbum:\n    case MediaViewerOrigin.Inline:\n    case MediaViewerOrigin.ScheduledInline:\n      ghost.classList.add('rounded-corners');\n      break;\n\n    case MediaViewerOrigin.SharedMedia:\n    case MediaViewerOrigin.SettingsAvatar:\n    case MediaViewerOrigin.ProfileAvatar:\n    case MediaViewerOrigin.SearchResult:\n      (ghost.firstChild as HTMLElement).style.objectFit = 'cover';\n      break;\n\n    case MediaViewerOrigin.MiddleHeaderAvatar:\n    case MediaViewerOrigin.SuggestedAvatar:\n      ghost.classList.add('circle');\n      if (origin === MediaViewerOrigin.SuggestedAvatar) {\n        ghost.classList.add('transition-circle');\n      }\n      break;\n  }\n}\n\nfunction clearShape(ghost: HTMLDivElement) {\n  (ghost.firstChild as HTMLElement).style.objectFit = 'default';\n  ghost.classList.remove('rounded-corners', 'circle');\n}\n","import { useCallback, useLayoutEffect, useState } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport safePlay, { getIsVideoPlaying } from '../util/safePlay';\nimport { createSignal } from '../util/signals';\nimport { IS_IOS, IS_PWA } from '../util/windowEnvironment';\n\ntype RefType = {\n  current: HTMLVideoElement | null;\n};\n\ntype ReturnType = [boolean, () => void, boolean] | [false];\ntype CallbackType = () => void;\n\nconst signal = createSignal(false);\nconst setIsPictureInPicture = signal[1];\n\nexport function usePictureInPictureSignal() {\n  return signal;\n}\n\nexport default function usePictureInPicture(\n  elRef: RefType,\n  onEnter: CallbackType,\n  onLeave: CallbackType,\n): ReturnType {\n  const [isSupported, setIsSupported] = useState(false);\n  const [isActive, setIsActive] = useState(false);\n\n  useLayoutEffect(() => {\n    // PIP is not supported in PWA on iOS, despite being detected\n    if ((IS_IOS && IS_PWA) || !elRef.current) return undefined;\n    const video = elRef.current;\n    const setMode = getSetPresentationMode(video);\n    const isEnabled = (document.pictureInPictureEnabled && !elRef.current?.disablePictureInPicture)\n      || setMode !== undefined;\n    if (!isEnabled) return undefined;\n    // @ts-ignore\n    video.autoPictureInPicture = true;\n    setIsSupported(true);\n    const onEnterInternal = () => {\n      onEnter();\n      setIsActive(true);\n      setIsPictureInPicture(true);\n    };\n    const onLeaveInternal = () => {\n      setIsPictureInPicture(false);\n      setIsActive(false);\n      onLeave();\n    };\n    video.addEventListener('enterpictureinpicture', onEnterInternal);\n    video.addEventListener('leavepictureinpicture', onLeaveInternal);\n    return () => {\n      video.removeEventListener('enterpictureinpicture', onEnterInternal);\n      video.removeEventListener('leavepictureinpicture', onLeaveInternal);\n    };\n  }, [elRef, onEnter, onLeave]);\n\n  const exitPictureInPicture = useCallback(() => {\n    if (!elRef.current) return;\n    const video = elRef.current;\n    const setMode = getSetPresentationMode(video);\n    if (setMode) {\n      setMode('inline');\n    } else {\n      exitPictureInPictureIfNeeded();\n    }\n  }, [elRef]);\n\n  const enterPictureInPicture = useCallback(() => {\n    if (!elRef.current) return;\n    exitPictureInPicture();\n    const video = elRef.current;\n    const isPlaying = getIsVideoPlaying(video);\n    const setMode = getSetPresentationMode(video);\n    if (setMode) {\n      setMode('picture-in-picture');\n    } else {\n      requestPictureInPicture(video);\n    }\n    // Muted video stops in PiP mode, so we need to play it again\n    if (isPlaying) {\n      safePlay(video);\n    }\n  }, [elRef, exitPictureInPicture]);\n\n  if (!isSupported) {\n    return [false];\n  }\n\n  return [isSupported, enterPictureInPicture, isActive];\n}\n\nfunction getSetPresentationMode(video: HTMLVideoElement) {\n  // @ts-ignore\n  if (video.webkitSupportsPresentationMode && typeof video.webkitSetPresentationMode === 'function') {\n    // @ts-ignore\n    return video.webkitSetPresentationMode.bind(video);\n  }\n  return undefined;\n}\n\nfunction requestPictureInPicture(video: HTMLVideoElement) {\n  if (video.requestPictureInPicture) {\n    try {\n      video.requestPictureInPicture();\n    } catch (err) {\n      if (DEBUG) {\n        // eslint-disable-next-line no-console\n        console.log('[MV] PictureInPicture Error', err);\n      }\n    }\n  }\n}\n\nexport function exitPictureInPictureIfNeeded() {\n  if (document.pictureInPictureElement) {\n    try {\n      document.exitPictureInPicture();\n    } catch (err) {\n      if (DEBUG) {\n        // eslint-disable-next-line no-console\n        console.log('[MV] PictureInPicture Error', err);\n      }\n    }\n  }\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { imgToCanvas } from '../util/files';\nimport useForceUpdate from './useForceUpdate';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\nconst MAX_CACHE_SIZE = 1000;\n\nconst cache = new Map<string, string>();\n\nexport default function useBlur(dataUri?: string, isDisabled = false, delay?: number) {\n  const blurredRef = useRef<string | undefined>(dataUri ? cache.get(dataUri) : undefined);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  if (timeoutRef.current && isDisabled) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useEffect(() => {\n    if (!dataUri || blurredRef.current || isDisabled) {\n      return;\n    }\n\n    const img = new Image();\n\n    img.onload = () => {\n      const canvas = imgToCanvas(img);\n      fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n      const blurredDataUri = canvas.toDataURL();\n\n      blurredRef.current = blurredDataUri;\n      forceUpdate();\n\n      if (cache.size >= MAX_CACHE_SIZE) {\n        cache.clear();\n      }\n      cache.set(dataUri, blurredDataUri);\n    };\n\n    if (delay) {\n      timeoutRef.current = window.setTimeout(() => {\n        img.src = dataUri;\n      }, delay);\n    } else {\n      img.src = dataUri;\n    }\n  }, [dataUri, delay, forceUpdate, isDisabled]);\n\n  return blurredRef.current;\n}\n","import { useMemo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiMessage, ApiPeer,\n} from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { MediaViewerOrigin } from '../../../types';\n\nimport {\n  getChatAvatarHash,\n  getMessageActionPhoto,\n  getMessageDocument,\n  getMessageFileName,\n  getMessageFileSize,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessagePhoto,\n  getMessageVideo,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n  getPhotoFullDimensions,\n  getVideoAvatarMediaHash,\n  getVideoDimensions,\n  isMessageDocumentPhoto,\n  isMessageDocumentVideo,\n} from '../../../global/helpers';\nimport { AVATAR_FULL_DIMENSIONS, VIDEO_AVATAR_FULL_DIMENSIONS } from '../../common/helpers/mediaDimensions';\n\nimport useBlurSync from '../../../hooks/useBlurSync';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\n\ntype UseMediaProps = {\n  mediaId?: number;\n  message?: ApiMessage;\n  avatarOwner?: ApiPeer;\n  origin?: MediaViewerOrigin;\n  delay: number | false;\n};\n\nexport const useMediaProps = ({\n  message,\n  mediaId = 0,\n  avatarOwner,\n  origin,\n  delay,\n}: UseMediaProps) => {\n  const photo = message ? getMessagePhoto(message) : undefined;\n  const actionPhoto = message ? getMessageActionPhoto(message) : undefined;\n  const video = message ? getMessageVideo(message) : undefined;\n  const webPagePhoto = message ? getMessageWebPagePhoto(message) : undefined;\n  const webPageVideo = message ? getMessageWebPageVideo(message) : undefined;\n  const isDocumentPhoto = message ? isMessageDocumentPhoto(message) : false;\n  const isDocumentVideo = message ? isMessageDocumentVideo(message) : false;\n  const videoSize = message ? getMessageFileSize(message) : undefined;\n  const avatarMedia = avatarOwner?.photos?.[mediaId];\n  const isVideoAvatar = Boolean(avatarMedia?.isVideo || actionPhoto?.isVideo);\n  const isVideo = Boolean(video || webPageVideo || isDocumentVideo);\n  const isPhoto = Boolean(!isVideo && (photo || webPagePhoto || isDocumentPhoto || actionPhoto));\n  const { isGif } = video || webPageVideo || {};\n  const isFromSharedMedia = origin === MediaViewerOrigin.SharedMedia;\n  const isFromSearch = origin === MediaViewerOrigin.SearchResult;\n\n  const getMediaHash = useMemo(() => (isFull?: boolean) => {\n    if (avatarOwner) {\n      if (avatarMedia) {\n        if (avatarMedia.isVideo && isFull) {\n          return getVideoAvatarMediaHash(avatarMedia);\n        } else if (mediaId === 0) {\n          // Show preloaded avatar if this is the first media (when user clicks on profile info avatar)\n          return getChatAvatarHash(avatarOwner, isFull ? 'big' : 'normal');\n        } else {\n          return `photo${avatarMedia.id}?size=c`;\n        }\n      } else {\n        return getChatAvatarHash(avatarOwner, isFull ? 'big' : 'normal');\n      }\n    }\n    if (actionPhoto && isVideoAvatar && isFull) {\n      return `videoAvatar${actionPhoto.id}?size=u`;\n    }\n    return message && getMessageMediaHash(message, isFull ? 'full' : 'preview');\n  }, [avatarOwner, actionPhoto, isVideoAvatar, message, avatarMedia, mediaId]);\n\n  const pictogramBlobUrl = useMedia(\n    message\n    // Only use pictogram if it's already loaded\n    && (isFromSharedMedia || isFromSearch || isDocumentPhoto || isDocumentVideo)\n    && getMessageMediaHash(message, 'pictogram'),\n    undefined,\n    ApiMediaFormat.BlobUrl,\n    delay,\n  );\n  const previewMediaHash = getMediaHash();\n  const previewBlobUrl = useMedia(\n    previewMediaHash,\n    undefined,\n    ApiMediaFormat.BlobUrl,\n    delay,\n  );\n  const {\n    mediaData: fullMediaBlobUrl,\n    loadProgress,\n  } = useMediaWithLoadProgress(\n    getMediaHash(true),\n    undefined,\n    message && getMessageMediaFormat(message, 'full'),\n    delay,\n  );\n\n  const localBlobUrl = (photo || video) ? (photo || video)!.blobUrl : undefined;\n  let bestImageData = (!isVideo && (localBlobUrl || fullMediaBlobUrl)) || previewBlobUrl || pictogramBlobUrl;\n  const thumbDataUri = useBlurSync(!bestImageData && message && getMessageMediaThumbDataUri(message));\n  if (!bestImageData && origin !== MediaViewerOrigin.SearchResult) {\n    bestImageData = thumbDataUri;\n  }\n  if (isVideoAvatar && previewBlobUrl) {\n    bestImageData = previewBlobUrl;\n  }\n  const bestData = localBlobUrl || fullMediaBlobUrl || (\n    (!isVideoAvatar && !isVideo) ? (previewBlobUrl || pictogramBlobUrl || bestImageData) : undefined\n  );\n\n  const isLocal = Boolean(localBlobUrl);\n  const fileName = message\n    ? getMessageFileName(message)\n    : avatarOwner\n      ? `avatar${avatarOwner!.id}.${avatarOwner?.hasVideoAvatar ? 'mp4' : 'jpg'}`\n      : undefined;\n\n  const dimensions = useMemo(() => {\n    if (message) {\n      if (isDocumentPhoto || isDocumentVideo) {\n        return getMessageDocument(message)!.mediaSize!;\n      } else if (photo || webPagePhoto || actionPhoto) {\n        return getPhotoFullDimensions((photo || webPagePhoto || actionPhoto)!)!;\n      } else if (video || webPageVideo) {\n        return getVideoDimensions((video || webPageVideo)!)!;\n      }\n    } else {\n      return isVideoAvatar ? VIDEO_AVATAR_FULL_DIMENSIONS : AVATAR_FULL_DIMENSIONS;\n    }\n    return undefined;\n  }, [\n    isDocumentPhoto,\n    isDocumentVideo,\n    isVideoAvatar,\n    message,\n    photo,\n    video,\n    actionPhoto,\n    webPagePhoto,\n    webPageVideo,\n  ]);\n\n  return {\n    getMediaHash,\n    photo,\n    video,\n    webPagePhoto,\n    actionPhoto,\n    webPageVideo,\n    isVideo,\n    isPhoto,\n    isGif,\n    isDocumentPhoto,\n    isDocumentVideo,\n    fileName,\n    bestImageData,\n    bestData,\n    dimensions,\n    isFromSharedMedia,\n    avatarPhoto: avatarMedia,\n    isVideoAvatar,\n    isLocal,\n    loadProgress,\n    videoSize,\n  };\n};\n","import { useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { imgToCanvas } from '../util/files';\nimport useBlur from './useBlur';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useBlurSync(dataUri: string | false | undefined) {\n  const blurredRef = useRef<string>();\n\n  let isChanged = false;\n\n  useSyncEffect(() => {\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n    isChanged = true;\n\n    blurredRef.current = undefined;\n\n    if (!dataUri) {\n      return;\n    }\n\n    const img = new Image();\n    img.src = dataUri;\n    if (!img.width) {\n      return;\n    }\n\n    const canvas = imgToCanvas(img);\n    fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n\n    blurredRef.current = canvas.toDataURL();\n  }, [dataUri]);\n\n  // Sometimes `Image` do not manage to load synchronously,\n  // so we fall back the non-blurred variant and prepare the async one at least for the next time\n  const blurredAsync = useBlur(dataUri || undefined, Boolean(blurredRef.current));\n\n  return blurredRef.current || (!isChanged && blurredAsync) || dataUri || undefined;\n}\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport { createSignal } from '../../../util/signals';\n\nconst [getZoomChange, setZoomChange] = createSignal(1);\n\nexport default function useZoomChange() {\n  useEffect(() => {\n    return () => {\n      setZoomChange(1);\n    };\n  }, []);\n\n  return [getZoomChange, setZoomChange] as const;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto } from '../../api/types';\n\nimport { isUserId } from '../../global/helpers';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  photo: ApiPhoto;\n  profileId: string;\n  onConfirm?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n};\n\nconst DeleteProfilePhotoModal: FC<OwnProps> = ({\n  isOpen,\n  photo,\n  profileId,\n  onClose,\n  onConfirm,\n}) => {\n  const {\n    deleteProfilePhoto,\n    deleteChatPhoto,\n  } = getActions();\n\n  const handleDeletePhoto = useCallback(() => {\n    onConfirm?.();\n    if (isUserId(profileId)) {\n      deleteProfilePhoto({ photo });\n    } else {\n      deleteChatPhoto({\n        photo,\n        chatId: profileId,\n      });\n    }\n    onClose();\n  }, [onConfirm, profileId, onClose, deleteProfilePhoto, photo, deleteChatPhoto]);\n\n  const lang = useLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={handleDeletePhoto}\n      className=\"delete dialog-buttons-column\"\n      title={lang('AreYouSure')}\n    >\n      <div className=\"dialog-buttons mt-2\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeletePhoto}>\n          {lang('Preview.DeletePhoto')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(DeleteProfilePhotoModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiPhoto,\n} from '../../api/types';\nimport type { MessageListType } from '../../global/types';\nimport type { MenuItemProps } from '../ui/MenuItem';\n\nimport { getMessageMediaFormat, getMessageMediaHash, isUserId } from '../../global/helpers';\nimport {\n  selectAllowedMessageActions,\n  selectCurrentMessageList,\n  selectIsChatProtected,\n  selectIsDownloading,\n  selectIsMessageProtected,\n} from '../../global/selectors';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useZoomChange from './hooks/useZoomChangeSignal';\n\nimport DeleteMessageModal from '../common/DeleteMessageModal';\nimport DeleteProfilePhotoModal from '../common/DeleteProfilePhotoModal';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport ProgressSpinner from '../ui/ProgressSpinner';\n\nimport './MediaViewerActions.scss';\n\ntype StateProps = {\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  isChatProtected?: boolean;\n  canDelete?: boolean;\n  canUpdate?: boolean;\n  messageListType?: MessageListType;\n  avatarOwnerId?: string;\n};\n\ntype OwnProps = {\n  mediaData?: string;\n  isVideo: boolean;\n  message?: ApiMessage;\n  canUpdateMedia?: boolean;\n  isSingleMedia?: boolean;\n  avatarPhoto?: ApiPhoto;\n  avatarOwner?: ApiPeer;\n  fileName?: string;\n  canReport?: boolean;\n  selectMedia: (mediaId?: number) => void;\n  onReport: NoneToVoidFunction;\n  onBeforeDelete: NoneToVoidFunction;\n  onCloseMediaViewer: NoneToVoidFunction;\n  onForward: NoneToVoidFunction;\n};\n\nconst MediaViewerActions: FC<OwnProps & StateProps> = ({\n  mediaData,\n  isVideo,\n  message,\n  avatarPhoto,\n  avatarOwnerId,\n  fileName,\n  isChatProtected,\n  isDownloading,\n  isProtected,\n  canReport,\n  canDelete,\n  canUpdate,\n  messageListType,\n  selectMedia,\n  onReport,\n  onCloseMediaViewer,\n  onBeforeDelete,\n  onForward,\n}) => {\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag(false);\n  const [getZoomChange, setZoomChange] = useZoomChange();\n  const { isMobile } = useAppLayout();\n\n  const {\n    downloadMessageMedia,\n    cancelMessageMediaDownload,\n    updateProfilePhoto,\n    updateChatPhoto,\n  } = getActions();\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    message && getMessageMediaHash(message, 'download'),\n    !isDownloading,\n    message && getMessageMediaFormat(message, 'download'),\n  );\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message: message! });\n    } else {\n      downloadMessageMedia({ message: message! });\n    }\n  });\n\n  const handleZoomOut = useLastCallback(() => {\n    const zoomChange = getZoomChange();\n    const change = zoomChange < 0 ? zoomChange : 0;\n    setZoomChange(change - 1);\n  });\n\n  const handleZoomIn = useLastCallback(() => {\n    const zoomChange = getZoomChange();\n    const change = zoomChange > 0 ? zoomChange : 0;\n    setZoomChange(change + 1);\n  });\n\n  const handleUpdate = useLastCallback(() => {\n    if (!avatarPhoto || !avatarOwnerId) return;\n    if (isUserId(avatarOwnerId)) {\n      updateProfilePhoto({ photo: avatarPhoto });\n    } else {\n      updateChatPhoto({ chatId: avatarOwnerId, photo: avatarPhoto });\n    }\n    selectMedia(0);\n  });\n\n  const lang = useLang();\n\n  const MenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : undefined}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, []);\n\n  function renderDeleteModals() {\n    return message\n      ? (\n        <DeleteMessageModal\n          isOpen={isDeleteModalOpen}\n          isSchedule={messageListType === 'scheduled'}\n          onClose={closeDeleteModal}\n          onConfirm={onBeforeDelete}\n          message={message}\n        />\n      )\n      : (avatarOwnerId && avatarPhoto) ? (\n        <DeleteProfilePhotoModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onConfirm={onBeforeDelete}\n          profileId={avatarOwnerId}\n          photo={avatarPhoto}\n        />\n      ) : undefined;\n  }\n\n  function renderDownloadButton() {\n    if (isProtected) {\n      return undefined;\n    }\n\n    return isVideo ? (\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('AccActionDownload')}\n        onClick={handleDownloadClick}\n      >\n        {isDownloading ? (\n          <ProgressSpinner progress={downloadProgress} size=\"s\" onClick={handleDownloadClick} />\n        ) : (\n          <i className=\"icon icon-download\" />\n        )}\n      </Button>\n    ) : (\n      <Button\n        href={mediaData}\n        download={fileName}\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('AccActionDownload')}\n      >\n        <i className=\"icon icon-download\" />\n      </Button>\n    );\n  }\n\n  if (isMobile) {\n    const menuItems: MenuItemProps[] = [];\n    if (message?.isForwardingAllowed && !isChatProtected) {\n      menuItems.push({\n        icon: 'forward',\n        onClick: onForward,\n        children: lang('Forward'),\n      });\n    }\n    if (!isProtected) {\n      if (isVideo) {\n        menuItems.push({\n          icon: isDownloading ? 'close' : 'download',\n          onClick: handleDownloadClick,\n          children: isDownloading ? `${Math.round(downloadProgress * 100)}% Downloading...` : 'Download',\n        });\n      } else {\n        menuItems.push({\n          icon: 'download',\n          href: mediaData,\n          download: fileName,\n          children: lang('AccActionDownload'),\n        });\n      }\n    }\n\n    if (canReport) {\n      menuItems.push({\n        icon: 'flag',\n        onClick: onReport,\n        children: lang('ReportPeer.Report'),\n      });\n    }\n\n    if (canUpdate) {\n      menuItems.push({\n        icon: 'copy-media',\n        onClick: handleUpdate,\n        children: lang('ProfilePhoto.SetMainPhoto'),\n      });\n    }\n\n    if (canDelete) {\n      menuItems.push({\n        icon: 'delete',\n        onClick: openDeleteModal,\n        children: lang('Delete'),\n        destructive: true,\n      });\n    }\n\n    if (menuItems.length === 0) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"MediaViewerActions-mobile\">\n        <DropdownMenu\n          trigger={MenuButton}\n          positionX=\"right\"\n        >\n          {menuItems.map(({\n            icon, onClick, href, download, children, destructive,\n          }) => (\n            <MenuItem\n              key={icon}\n              icon={icon}\n              href={href}\n              download={download}\n              onClick={onClick}\n              destructive={destructive}\n            >\n              {children}\n            </MenuItem>\n          ))}\n        </DropdownMenu>\n        {isDownloading && <ProgressSpinner progress={downloadProgress} size=\"s\" noCross />}\n        {canDelete && renderDeleteModals()}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"MediaViewerActions\">\n      {message?.isForwardingAllowed && !isChatProtected && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('Forward')}\n          onClick={onForward}\n        >\n          <i className=\"icon icon-forward\" />\n        </Button>\n      )}\n      {renderDownloadButton()}\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('MediaZoomOut')}\n        onClick={handleZoomOut}\n      >\n        <i className=\"icon icon-zoom-out\" />\n      </Button>\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('MediaZoomIn')}\n        onClick={handleZoomIn}\n      >\n        <i className=\"icon icon-zoom-in\" />\n      </Button>\n      {canReport && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang(isVideo ? 'PeerInfo.ReportProfileVideo' : 'PeerInfo.ReportProfilePhoto')}\n          onClick={onReport}\n        >\n          <i className=\"icon icon-flag\" />\n        </Button>\n      )}\n      {canUpdate && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('ProfilePhoto.SetMainPhoto')}\n          onClick={handleUpdate}\n        >\n          <i className=\"icon icon-copy-media\" />\n        </Button>\n      )}\n      {canDelete && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('Delete')}\n          onClick={openDeleteModal}\n        >\n          <i className=\"icon icon-delete\" />\n        </Button>\n      )}\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('Close')}\n        onClick={onCloseMediaViewer}\n      >\n        <i className=\"icon icon-close\" />\n      </Button>\n      {canDelete && renderDeleteModals()}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    message, canUpdateMedia, avatarPhoto, avatarOwner,\n  }): StateProps => {\n    const currentMessageList = selectCurrentMessageList(global);\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const isDownloading = message ? selectIsDownloading(global, message) : false;\n    const isProtected = selectIsMessageProtected(global, message);\n    const isChatProtected = message && selectIsChatProtected(global, message?.chatId);\n    const { canDelete: canDeleteMessage } = (threadId\n      && message && selectAllowedMessageActions(global, message, threadId)) || {};\n    const isCurrentAvatar = avatarPhoto && (avatarPhoto.id === avatarOwner?.avatarHash);\n    const canDeleteAvatar = canUpdateMedia && !!avatarPhoto;\n    const canDelete = canDeleteMessage || canDeleteAvatar;\n    const canUpdate = canUpdateMedia && !!avatarPhoto && !isCurrentAvatar;\n    const messageListType = currentMessageList?.type;\n\n    return {\n      isDownloading,\n      isProtected,\n      isChatProtected,\n      canDelete,\n      canUpdate,\n      messageListType,\n      avatarOwnerId: avatarOwner?.id,\n    };\n  },\n)(MediaViewerActions));\n","import { useRef } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport useEffectOnce from './useEffectOnce';\n\n// Allows to use signal value as \"silent\" dependency in hooks (not causing updates)\nexport function useSignalRef<T>(getValue: Signal<T>) {\n  const ref = useRef<T>(getValue());\n\n  useEffectOnce(() => {\n    return getValue.subscribe(() => {\n      ref.current = getValue();\n    });\n  });\n\n  return ref;\n}\n","import { createSignal } from '../../../util/signals';\n\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\n\nconst [getControlsVisible, setControlsVisible] = createSignal(false);\nconst [getIsLocked, setIsLocked] = createSignal(false);\n\nexport default function useControlsSignal() {\n  const getVisible = useDerivedSignal(\n    () => getControlsVisible() && !getIsLocked(),\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n    [getControlsVisible, getIsLocked],\n  );\n\n  return [getVisible, setControlsVisible, setIsLocked] as const;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useEffect, useState } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { throttle } from '../../util/schedulers';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useControlsSignal from './hooks/useControlsSignal';\n\nimport './MediaViewerFooter.scss';\n\nconst RESIZE_THROTTLE_MS = 500;\n\ntype OwnProps = {\n  text: TextPart | TextPart[];\n  onClick: () => void;\n  isForVideo: boolean;\n  isForceMobileVersion?: boolean;\n  isProtected?: boolean;\n};\n\nconst MediaViewerFooter: FC<OwnProps> = ({\n  text = '', isForVideo, onClick, isProtected, isForceMobileVersion,\n}) => {\n  const [isMultiline, setIsMultiline] = useState(false);\n  const { isMobile } = useAppLayout();\n  const [getIsVisible] = useControlsSignal();\n  const isHidden = useDerivedState(() => (IS_TOUCH_ENV ? !getIsVisible() : false), [getIsVisible]);\n\n  useEffect(() => {\n    const footerContent = document.querySelector('.MediaViewerFooter .media-text') as HTMLDivElement | null;\n\n    const checkIsMultiline = () => {\n      const height = footerContent ? footerContent.clientHeight : 0;\n\n      setIsMultiline(height > REM * 2);\n    };\n\n    // First run for initial detection of multiline footer text\n    checkIsMultiline();\n\n    const handleResize = throttle(checkIsMultiline, RESIZE_THROTTLE_MS, true);\n\n    window.addEventListener('resize', handleResize, false);\n\n    return () => {\n      window.removeEventListener('resize', handleResize, false);\n    };\n  }, []);\n\n  function stopEvent(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (text) {\n      e.stopPropagation();\n    }\n  }\n\n  const classNames = buildClassName(\n    'MediaViewerFooter',\n    isForVideo && 'is-for-video',\n    isHidden && 'is-hidden',\n    isProtected && 'is-protected',\n    isForceMobileVersion && 'mobile',\n  );\n\n  return (\n    <div className={classNames} onClick={stopEvent}>\n      {Boolean(text) && (\n        <div className=\"media-viewer-footer-content\" onClick={!isMobile ? onClick : undefined}>\n          <p className={`media-text custom-scroll allow-selection ${isMultiline ? 'multiline' : ''}`} dir=\"auto\">\n            {text}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MediaViewerFooter;\n","import { useEffect } from '../lib/teact/teact';\n\nimport { createSignal } from '../util/signals';\n\nexport const [getCurrentTime, setCurrentTime] = createSignal(0);\n\nexport default function useCurrentTimeSignal() {\n  useEffect(() => {\n    return () => {\n      setCurrentTime(0);\n    };\n  }, []);\n  return [getCurrentTime, setCurrentTime] as const;\n}\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport { createSignal } from '../../../util/signals';\n\nexport const [getIsVideoWaiting, setIsVideoWaiting] = createSignal(false);\n\nexport default function useVideoWaitingSignal() {\n  useEffect(() => {\n    return () => {\n      setIsVideoWaiting(false);\n    };\n  }, []);\n  return [getIsVideoWaiting, setIsVideoWaiting] as const;\n}\n","import { ApiMediaFormat } from '../../api/types';\n\nimport launchMediaWorkers, { MAX_WORKERS } from '../../util/launchMediaWorkers';\nimport { IS_ANDROID, IS_IOS } from '../../util/windowEnvironment';\nimport { callApi } from '../../api/gramjs';\nimport { requestMutation } from '../fasterdom/fasterdom';\n\nconst IS_MOBILE = IS_ANDROID || IS_IOS;\nconst PREVIEW_SIZE_RATIO = (IS_ANDROID || IS_IOS) ? 0.3 : 0.25;\nconst MAX_FRAMES = IS_MOBILE ? 40 : 80;\nconst PREVIEW_MAX_SIDE = 200;\n\nconst connections = launchMediaWorkers();\n\nlet videoPreview: VideoPreview | undefined;\n\nexport class VideoPreview {\n  frames: Map<number, ImageBitmap> = new Map();\n\n  currentTime = 0;\n\n  canvas: HTMLCanvasElement;\n\n  constructor(url: string, canvas: HTMLCanvasElement) {\n    this.canvas = canvas;\n    connections.forEach(({ connector }, index) => {\n      void connector.request({\n        name: 'video-preview:init',\n        args: [\n          url,\n          MAX_FRAMES,\n          index,\n          MAX_WORKERS,\n          this.onFrame.bind(this),\n        ],\n      });\n    });\n  }\n\n  private onFrame(time: number, frame: ImageBitmap) {\n    this.frames.set(time, frame);\n    if (time === this.currentTime) {\n      this.render(time);\n    }\n  }\n\n  private clearCache() {\n    this.frames.forEach((frame) => {\n      frame.close();\n    });\n    this.frames.clear();\n  }\n\n  render(time: number) {\n    this.currentTime = time;\n    const frame = this.frames.get(time);\n    if (!frame) return false;\n    requestMutation(() => {\n      this.canvas.width = frame.width;\n      this.canvas.height = frame.height;\n      const ctx = this.canvas.getContext('2d')!;\n      ctx.drawImage(frame, 0, 0, this.canvas.width, this.canvas.height);\n    });\n    return true;\n  }\n\n  destroy() {\n    this.clearCache();\n    connections.forEach(({ connector }) => {\n      void connector.request({\n        name: 'video-preview:destroy',\n        args: [],\n      });\n    });\n  }\n}\n\nexport function getPreviewDimensions(width: number, height: number) {\n  width = Math.round(width * PREVIEW_SIZE_RATIO);\n  height = Math.round(height * PREVIEW_SIZE_RATIO);\n  const ratio = width / height;\n  if (width > PREVIEW_MAX_SIDE) {\n    width = PREVIEW_MAX_SIDE;\n    height = Math.round(width / ratio);\n  }\n  if (height > PREVIEW_MAX_SIDE) {\n    height = PREVIEW_MAX_SIDE;\n    width = Math.round(height * ratio);\n  }\n  return { width, height };\n}\n\nconnections.forEach(({ worker }) => {\n  worker.addEventListener('message', async (e) => {\n    const { type, messageId, params } = e.data as {\n      type: string;\n      messageId: string;\n      params: { url: string; start: number; end: number };\n    };\n\n    if (type !== 'requestPart') {\n      return;\n    }\n\n    const result = await callApi('downloadMedia', { mediaFormat: ApiMediaFormat.Progressive, ...params });\n    if (!result) {\n      return;\n    }\n\n    const { arrayBuffer } = result;\n\n    worker.postMessage({\n      type: 'partResponse',\n      messageId,\n      result: arrayBuffer,\n    }, [arrayBuffer!]);\n  });\n});\n\nexport function createVideoPreviews(url: string, canvas: HTMLCanvasElement) {\n  if (videoPreview) {\n    videoPreview.destroy();\n  }\n  videoPreview = new VideoPreview(url, canvas);\n  return () => videoPreview?.destroy();\n}\n\nexport function renderVideoPreview(time: number) {\n  if (!videoPreview) return false;\n  return videoPreview.render(time);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"FWH9e05HHn4BJrkuqmgL\",\"preview\":\"PmR9chdfbwrolc8FOkNB\",\"previewCanvas\":\"O7IGkaF5yzopTKVImH2v\",\"previewTime\":\"R85IB61J5InMMYwLQWxU\",\"previewTimeText\":\"QBMgsZDdCiXJzzHzd8rg\",\"track\":\"YiY5CtrarIYsGovxCo1b\",\"buffered\":\"s3rSBAeNFQimTK3eRl8t\",\"played\":\"sQTcQShWx8rMXJFKN2hO\",\"seeking\":\"pNanY7hqtTLHXdRob0qg\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { ApiDimensions } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\n\nimport { createVideoPreviews, getPreviewDimensions, renderVideoPreview } from '../../lib/video-preview/VideoPreview';\nimport { animateNumber } from '../../util/animation';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDuration } from '../../util/dateFormat';\nimport { clamp, round } from '../../util/math';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport { useThrottledSignal } from '../../hooks/useAsyncResolvers';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useSignal from '../../hooks/useSignal';\nimport useVideoWaitingSignal from './hooks/useVideoWaitingSignal';\n\nimport ShowTransition from '../ui/ShowTransition';\n\nimport styles from './SeekLine.module.scss';\n\ntype OwnProps = {\n  url?: string;\n  duration: number;\n  bufferedRanges: BufferedRange[];\n  playbackRate: number;\n  isActive?: boolean;\n  isPlaying?: boolean;\n  isPreviewDisabled?: boolean;\n  isReady: boolean;\n  posterSize?: ApiDimensions;\n  onSeek: (position: number) => void;\n  onSeekStart: () => void;\n};\n\nconst LOCK_TIMEOUT = 250;\nlet cancelAnimation: Function | undefined;\n\nconst SeekLine: FC<OwnProps> = ({\n  duration,\n  bufferedRanges,\n  isReady,\n  posterSize,\n  playbackRate,\n  url,\n  isActive,\n  isPlaying,\n  isPreviewDisabled,\n  onSeek,\n  onSeekStart,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const [getCurrentTimeSignal] = useCurrentTimeSignal();\n  const [getIsWaiting] = useVideoWaitingSignal();\n  const getCurrentTime = useThrottledSignal(getCurrentTimeSignal, LOCK_TIMEOUT);\n  const [getSelectedTime, setSelectedTime] = useSignal(getCurrentTime());\n  const [getPreviewOffset, setPreviewOffset] = useSignal(0);\n  const [getPreviewTime, setPreviewTime] = useSignal(0);\n  const isLockedRef = useRef<boolean>(false);\n  const [isPreviewVisible, setPreviewVisible] = useState(false);\n  const [isSeeking, setIsSeeking] = useState(false);\n  // eslint-disable-next-line no-null/no-null\n  const previewCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const previewRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const progressRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const previewTimeRef = useRef<HTMLDivElement>(null);\n\n  const previewSize = useMemo(() => {\n    return getPreviewDimensions(posterSize?.width || 0, posterSize?.height || 0);\n  }, [posterSize]);\n\n  const setPreview = useLastCallback((time: number) => {\n    time = Math.floor(time);\n    setPreviewTime(time);\n    renderVideoPreview(time);\n  });\n\n  useEffect(() => {\n    if (isPreviewDisabled || !url || !isReady) return undefined;\n    return createVideoPreviews(url, previewCanvasRef.current!);\n  }, [url, isReady, isPreviewDisabled]);\n\n  useEffect(() => {\n    setPreviewVisible(false);\n  }, [isActive]);\n\n  useEffect(() => {\n    if (cancelAnimation) cancelAnimation();\n    cancelAnimation = undefined;\n    if (!isLockedRef.current && !isSeeking) {\n      const time = getCurrentTime();\n      const remaining = duration - time;\n      cancelAnimation = animateNumber({\n        from: time,\n        to: duration,\n        duration: (remaining * 1000) / playbackRate,\n        onUpdate: setSelectedTime,\n      });\n    }\n  }, [getCurrentTime, isSeeking, setSelectedTime, playbackRate, duration]);\n\n  useEffect(() => {\n    if (!isPlaying || getIsWaiting()) {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n    }\n  }, [isPlaying, getSelectedTime, getIsWaiting]);\n\n  useEffect(() => {\n    if (isPlaying) {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n      const time = getCurrentTime();\n      const remaining = duration - time;\n      cancelAnimation = animateNumber({\n        from: time,\n        to: duration,\n        duration: (remaining * 1000) / playbackRate,\n        onUpdate: setSelectedTime,\n      });\n    }\n    // eslint-disable-next-line\n  }, [isPlaying, playbackRate, duration]);\n\n  useLayoutEffect(() => {\n    if (!progressRef.current) return;\n    const progress = round((getSelectedTime() / duration) * 100, 2);\n    progressRef.current.style.width = `${progress}%`;\n  }, [getSelectedTime, duration]);\n\n  useLayoutEffect(() => {\n    if (!previewRef.current) return;\n    previewRef.current.style.left = `${getPreviewOffset()}px`;\n  }, [getPreviewOffset]);\n\n  useLayoutEffect(() => {\n    if (!previewTimeRef.current) return;\n    previewTimeRef.current.innerText = formatMediaDuration(getPreviewTime());\n  }, [getPreviewTime]);\n\n  useEffect(() => {\n    if (!seekerRef.current || !isActive) return undefined;\n    const seeker = seekerRef.current;\n    let seekerSize = seeker.getBoundingClientRect();\n\n    let time = 0;\n    let offset = 0;\n\n    const getPreviewProps = (e: MouseEvent | TouchEvent) => {\n      const pageX = e instanceof MouseEvent ? e.pageX : e.touches[0].pageX;\n      const t = clamp(duration * ((pageX - seekerSize.left) / seekerSize.width), 0, duration);\n      if (isPreviewDisabled) return [t, 0];\n      if (!seekerSize.width) seekerSize = seeker.getBoundingClientRect();\n      const preview = previewRef.current!;\n      const o = clamp(\n        pageX - seekerSize.left - preview.clientWidth / 2, -4, seekerSize.width - preview.clientWidth + 4,\n      );\n      return [t, o];\n    };\n\n    const stopAnimation = () => {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n    };\n\n    const handleSeek = (e: MouseEvent | TouchEvent) => {\n      stopAnimation();\n      setPreviewVisible(true);\n      ([time, offset] = getPreviewProps(e));\n      void setPreview(time);\n      setPreviewOffset(offset);\n      setSelectedTime(time);\n    };\n\n    const handleStartSeek = () => {\n      stopAnimation();\n      setPreviewVisible(true);\n      setIsSeeking(true);\n      onSeekStart();\n    };\n\n    const handleStopSeek = () => {\n      stopAnimation();\n      isLockedRef.current = true;\n      setPreviewVisible(false);\n      setIsSeeking(false);\n      setSelectedTime(time);\n      onSeek(time);\n      // Prevent current time updates from overriding the selected time\n      setTimeout(() => {\n        isLockedRef.current = false;\n      }, LOCK_TIMEOUT);\n    };\n\n    const cleanup = captureEvents(seeker, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n\n    if (IS_TOUCH_ENV || isPreviewDisabled) {\n      return cleanup;\n    }\n\n    const handleSeekMouseMove = (e: MouseEvent) => {\n      setPreviewVisible(true);\n      ([time, offset] = getPreviewProps(e));\n      setPreviewOffset(offset);\n      void setPreview(time);\n    };\n\n    const handleSeekMouseLeave = () => {\n      setPreviewVisible(false);\n    };\n\n    seeker.addEventListener('mousemove', handleSeekMouseMove);\n    seeker.addEventListener('mouseenter', handleSeekMouseMove);\n    seeker.addEventListener('mouseleave', handleSeekMouseLeave);\n\n    return () => {\n      cleanup();\n      seeker.removeEventListener('mousemove', handleSeekMouseMove);\n      seeker.removeEventListener('mouseenter', handleSeekMouseMove);\n      seeker.removeEventListener('mouseleave', handleSeekMouseLeave);\n    };\n  }, [\n    duration,\n    setPreview,\n    isActive,\n    onSeek,\n    onSeekStart,\n    setPreviewOffset,\n    setSelectedTime,\n    setIsSeeking,\n    isPreviewDisabled,\n    playbackRate,\n  ]);\n\n  return (\n    <div className={styles.container} ref={seekerRef}>\n      {!isPreviewDisabled && (\n        <ShowTransition\n          isOpen\n          isHidden={!isPreviewVisible}\n          className={styles.preview}\n          style={`width: ${previewSize.width}px; height: ${previewSize.height}px`}\n          ref={previewRef}\n        >\n          <canvas className={styles.previewCanvas} ref={previewCanvasRef} />\n          <div className={styles.previewTime}>\n            <span className={styles.previewTimeText} ref={previewTimeRef} />\n          </div>\n        </ShowTransition>\n      )}\n      <div className={styles.track}>\n        {bufferedRanges.map(({\n          start,\n          end,\n        }) => (\n          <div\n            key={`${start}-${end}`}\n            className={styles.buffered}\n            // @ts-ignore\n            style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n          />\n        ))}\n      </div>\n      <div className={styles.track}>\n        <div\n          ref={progressRef}\n          className={buildClassName(styles.played, isSeeking && styles.seeking)}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SeekLine);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo,\n} from '../../lib/teact/teact';\n\nimport type { ApiDimensions } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dateFormat';\nimport { formatFileSize } from '../../util/textFormat';\nimport { IS_IOS, IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useSignal from '../../hooks/useSignal';\nimport useControlsSignal from './hooks/useControlsSignal';\n\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport RangeSlider from '../ui/RangeSlider';\nimport SeekLine from './SeekLine';\n\nimport './VideoPlayerControls.scss';\n\ntype OwnProps = {\n  url?: string;\n  bufferedRanges: BufferedRange[];\n  bufferedProgress: number;\n  duration: number;\n  isReady: boolean;\n  fileSize: number;\n  isForceMobileVersion?: boolean;\n  isPlaying: boolean;\n  isFullscreenSupported: boolean;\n  isPictureInPictureSupported: boolean;\n  isFullscreen: boolean;\n  isPreviewDisabled?: boolean;\n  isBuffered: boolean;\n  volume: number;\n  isMuted: boolean;\n  playbackRate: number;\n  posterSize?: ApiDimensions;\n  onChangeFullscreen: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  onPictureInPictureChange?: () => void;\n  onVolumeClick: () => void;\n  onVolumeChange: (volume: number) => void;\n  onPlaybackRateChange: (playbackRate: number) => void;\n  onPlayPause: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  onSeek: (position: number) => void;\n};\n\nconst stopEvent = (e: React.MouseEvent<HTMLElement>) => {\n  e.stopPropagation();\n};\n\nconst PLAYBACK_RATES = [\n  0.5,\n  1,\n  1.5,\n  2,\n];\n\nconst HIDE_CONTROLS_TIMEOUT_MS = 3000;\n\nconst VideoPlayerControls: FC<OwnProps> = ({\n  url,\n  bufferedRanges,\n  bufferedProgress,\n  duration,\n  isReady,\n  fileSize,\n  isForceMobileVersion,\n  isPlaying,\n  isFullscreenSupported,\n  isFullscreen,\n  isBuffered,\n  isPreviewDisabled,\n  volume,\n  isMuted,\n  playbackRate,\n  posterSize,\n  onChangeFullscreen,\n  onVolumeClick,\n  onVolumeChange,\n  onPlaybackRateChange,\n  isPictureInPictureSupported,\n  onPictureInPictureChange,\n  onPlayPause,\n  onSeek,\n}) => {\n  const [isPlaybackMenuOpen, openPlaybackMenu, closePlaybackMenu] = useFlag();\n  const [getCurrentTime] = useCurrentTimeSignal();\n  const currentTime = useDerivedState(() => Math.trunc(getCurrentTime()), [getCurrentTime]);\n  const [getIsSeeking, setIsSeeking] = useSignal(false);\n\n  const { isMobile } = useAppLayout();\n  const [getIsVisible, setVisibility] = useControlsSignal();\n  const isVisible = useDerivedState(getIsVisible);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV && !isForceMobileVersion) return undefined;\n    let timeout: number | undefined;\n    if (!isVisible || !isPlaying || isPlaybackMenuOpen || getIsSeeking()) {\n      if (timeout) window.clearTimeout(timeout);\n      return undefined;\n    }\n    timeout = window.setTimeout(() => {\n      setVisibility(false);\n    }, HIDE_CONTROLS_TIMEOUT_MS);\n    return () => {\n      if (timeout) window.clearTimeout(timeout);\n    };\n  }, [isPlaying, isVisible, setVisibility, isPlaybackMenuOpen, getIsSeeking, isForceMobileVersion]);\n\n  useLayoutEffect(() => {\n    if (isVisible) {\n      document.body.classList.add('video-controls-visible');\n    } else {\n      document.body.classList.remove('video-controls-visible');\n    }\n    return () => {\n      document.body.classList.remove('video-controls-visible');\n    };\n  }, [isVisible]);\n\n  useEffect(() => {\n    if (!isVisible) {\n      closePlaybackMenu();\n    }\n  }, [closePlaybackMenu, isVisible]);\n\n  const lang = useLang();\n\n  const handleSeek = useLastCallback((position: number) => {\n    setIsSeeking(false);\n    onSeek(position);\n  });\n\n  const handleSeekStart = useLastCallback(() => {\n    setIsSeeking(true);\n  });\n\n  const volumeIcon = useMemo(() => {\n    if (volume === 0 || isMuted) return 'icon-muted';\n    if (volume < 0.3) return 'icon-volume-1';\n    if (volume < 0.6) return 'icon-volume-2';\n    return 'icon-volume-3';\n  }, [volume, isMuted]);\n\n  return (\n    <div\n      className={buildClassName('VideoPlayerControls', isForceMobileVersion && 'mobile', isVisible && 'active')}\n      onClick={stopEvent}\n    >\n      <SeekLine\n        url={url}\n        duration={duration}\n        isReady={isReady}\n        isPlaying={isPlaying}\n        isPreviewDisabled={isPreviewDisabled}\n        posterSize={posterSize}\n        bufferedRanges={bufferedRanges}\n        playbackRate={playbackRate}\n        onSeek={handleSeek}\n        onSeekStart={handleSeekStart}\n        isActive={isVisible}\n      />\n      <div className=\"buttons\">\n        <Button\n          ariaLabel={lang('AccActionPlay')}\n          size=\"tiny\"\n          ripple={!isMobile}\n          color=\"translucent-white\"\n          className=\"play\"\n          round\n          onClick={onPlayPause}\n        >\n          <i className={buildClassName('icon', isPlaying ? 'icon-pause' : 'icon-play')} />\n        </Button>\n        <Button\n          ariaLabel=\"Volume\"\n          size=\"tiny\"\n          color=\"translucent-white\"\n          className=\"volume\"\n          round\n          onClick={onVolumeClick}\n        >\n          <i className={buildClassName('icon', volumeIcon)} />\n        </Button>\n        {!IS_IOS && (\n          <RangeSlider bold className=\"volume-slider\" value={isMuted ? 0 : volume * 100} onChange={onVolumeChange} />\n        )}\n        {renderTime(currentTime, duration)}\n        {!isBuffered && (\n          <div className=\"player-file-size\">\n            {`${formatFileSize(lang, fileSize * bufferedProgress)} / ${formatFileSize(lang, fileSize)}`}\n          </div>\n        )}\n        <div className=\"spacer\" />\n        <Button\n          ariaLabel=\"Playback rate\"\n          size=\"tiny\"\n          color=\"translucent-white\"\n          className=\"playback-rate\"\n          round\n          onClick={openPlaybackMenu}\n        >\n          {`${playbackRate}x`}\n        </Button>\n        {isPictureInPictureSupported && (\n          <Button\n            ariaLabel=\"Picture in picture\"\n            size=\"tiny\"\n            color=\"translucent-white\"\n            className=\"fullscreen\"\n            round\n            onClick={onPictureInPictureChange}\n          >\n            <i className=\"icon icon-pip\" />\n          </Button>\n        )}\n        {isFullscreenSupported && (\n          <Button\n            ariaLabel=\"Fullscreen\"\n            size=\"tiny\"\n            color=\"translucent-white\"\n            className=\"fullscreen\"\n            round\n            onClick={onChangeFullscreen}\n          >\n            <i className={buildClassName('icon ', isFullscreen ? 'icon-smallscreen' : 'icon-fullscreen')} />\n          </Button>\n        )}\n      </div>\n      <Menu\n        isOpen={isPlaybackMenuOpen}\n        className={buildClassName(\n          'playback-rate-menu',\n          !isFullscreenSupported && 'no-fullscreen',\n          !isPictureInPictureSupported && 'no-pip',\n        )}\n        positionX=\"right\"\n        positionY=\"bottom\"\n        autoClose\n        onClose={closePlaybackMenu}\n      >\n        {PLAYBACK_RATES.map((rate) => (\n          // eslint-disable-next-line react/jsx-no-bind\n          <MenuItem disabled={playbackRate === rate} onClick={() => onPlaybackRateChange(rate)}>\n            {`${rate}x`}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nfunction renderTime(currentTime: number, duration: number) {\n  return (\n    <div className=\"player-time\">\n      {`${formatMediaDuration(currentTime)} / ${formatMediaDuration(duration)}`}\n    </div>\n  );\n}\n\nexport default memo(VideoPlayerControls);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiDimensions } from '../../api/types';\n\nimport { clamp } from '../../util/math';\nimport safePlay from '../../util/safePlay';\nimport stopEvent from '../../util/stopEvent';\nimport { IS_IOS, IS_TOUCH_ENV, IS_YA_BROWSER } from '../../util/windowEnvironment';\n\nimport useUnsupportedMedia from '../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useBuffering from '../../hooks/useBuffering';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePictureInPicture from '../../hooks/usePictureInPicture';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useVideoCleanup from '../../hooks/useVideoCleanup';\nimport useFullscreen from '../../hooks/window/useFullscreen';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport useVideoWaitingSignal from './hooks/useVideoWaitingSignal';\n\nimport Button from '../ui/Button';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport VideoPlayerControls from './VideoPlayerControls';\n\nimport './VideoPlayer.scss';\n\ntype OwnProps = {\n  url?: string;\n  isGif?: boolean;\n  posterData?: string;\n  posterSize?: ApiDimensions;\n  loadProgress?: number;\n  fileSize: number;\n  isPreviewDisabled?: boolean;\n  isMediaViewerOpen?: boolean;\n  noPlay?: boolean;\n  volume: number;\n  isMuted: boolean;\n  isHidden?: boolean;\n  playbackRate: number;\n  isProtected?: boolean;\n  shouldCloseOnClick?: boolean;\n  isForceMobileVersion?: boolean;\n  onClose: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n  isClickDisabled?: boolean;\n};\n\nconst MAX_LOOP_DURATION = 30; // Seconds\nconst MIN_READY_STATE = 4;\nconst REWIND_STEP = 5; // Seconds\n\nconst VideoPlayer: FC<OwnProps> = ({\n  url,\n  isGif,\n  posterData,\n  posterSize,\n  loadProgress,\n  fileSize,\n  isMediaViewerOpen,\n  noPlay,\n  volume,\n  isMuted,\n  playbackRate,\n  onClose,\n  isForceMobileVersion,\n  shouldCloseOnClick,\n  isProtected,\n  isClickDisabled,\n  isPreviewDisabled,\n}) => {\n  const {\n    setMediaViewerVolume,\n    setMediaViewerMuted,\n    setMediaViewerPlaybackRate,\n    setMediaViewerHidden,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const [isPlaying, setIsPlaying] = useState(!IS_TOUCH_ENV || !IS_IOS);\n  const [isFullscreen, setFullscreen, exitFullscreen] = useFullscreen(videoRef, setIsPlaying);\n  const { isMobile } = useAppLayout();\n  const duration = videoRef.current?.duration || 0;\n  const isLooped = isGif || duration <= MAX_LOOP_DURATION;\n\n  const handleEnterFullscreen = useLastCallback(() => {\n    // Yandex browser doesn't support PIP when video is hidden\n    if (IS_YA_BROWSER) return;\n    setMediaViewerHidden({ isHidden: true });\n  });\n\n  const handleLeaveFullscreen = useLastCallback(() => {\n    if (IS_YA_BROWSER) return;\n    setMediaViewerHidden({ isHidden: false });\n  });\n\n  const [\n    isPictureInPictureSupported,\n    enterPictureInPicture,\n    isInPictureInPicture,\n  ] = usePictureInPicture(videoRef, handleEnterFullscreen, handleLeaveFullscreen);\n\n  const [, toggleControls, lockControls] = useControlsSignal();\n\n  const handleVideoMove = useLastCallback(() => {\n    toggleControls(true);\n  });\n\n  const handleVideoLeave = useLastCallback((e) => {\n    const bounds = videoRef.current?.getBoundingClientRect();\n    if (!bounds) return;\n    if (e.clientX < bounds.left || e.clientX > bounds.right || e.clientY < bounds.top || e.clientY > bounds.bottom) {\n      toggleControls(false);\n    }\n  });\n\n  const {\n    isReady, isBuffered, bufferedRanges, bufferingHandlers, bufferedProgress,\n  } = useBuffering();\n  const isUnsupported = useUnsupportedMedia(videoRef, undefined, !url);\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(!isBuffered && !isUnsupported, undefined, undefined, 'slow');\n  const {\n    shouldRender: shouldRenderPlayButton,\n    transitionClassNames: playButtonClassNames,\n  } = useShowTransition(IS_IOS && !isPlaying && !shouldRenderSpinner && !isUnsupported, undefined, undefined, 'slow');\n\n  useEffect(() => {\n    lockControls(shouldRenderSpinner);\n  }, [lockControls, shouldRenderSpinner]);\n\n  useEffect(() => {\n    if (noPlay || !isMediaViewerOpen || isUnsupported) {\n      videoRef.current!.pause();\n    } else if (url && !IS_TOUCH_ENV) {\n      // Chrome does not automatically start playing when `url` becomes available (even with `autoPlay`),\n      // so we force it here. Contrary, iOS does not allow to call `play` without mouse event,\n      // so we need to use `autoPlay` instead to allow pre-buffering.\n      safePlay(videoRef.current!);\n    }\n  }, [noPlay, isMediaViewerOpen, url, setMediaViewerMuted, isUnsupported]);\n\n  useEffect(() => {\n    videoRef.current!.volume = volume;\n  }, [volume]);\n\n  useEffect(() => {\n    videoRef.current!.playbackRate = playbackRate;\n  }, [playbackRate]);\n\n  const togglePlayState = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent> | KeyboardEvent) => {\n    e.stopPropagation();\n    if (isPlaying) {\n      videoRef.current!.pause();\n      setIsPlaying(false);\n    } else {\n      safePlay(videoRef.current!);\n      setIsPlaying(true);\n    }\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLVideoElement, MouseEvent>) => {\n    if (isClickDisabled) {\n      return;\n    }\n    if (shouldCloseOnClick) {\n      onClose(e);\n    } else {\n      togglePlayState(e);\n    }\n  });\n\n  useVideoCleanup(videoRef, []);\n  const [, setCurrentTime] = useCurrentTimeSignal();\n  const [, setIsVideoWaiting] = useVideoWaitingSignal();\n\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    const video = e.currentTarget;\n    if (video.readyState >= MIN_READY_STATE) {\n      setIsVideoWaiting(false);\n      setCurrentTime(video.currentTime);\n    }\n    if (!isLooped && video.currentTime === video.duration) {\n      setCurrentTime(0);\n      setIsPlaying(false);\n    }\n  });\n\n  const handleEnded = useLastCallback(() => {\n    if (isLooped) return;\n    setCurrentTime(0);\n    setIsPlaying(false);\n    toggleControls(true);\n  });\n\n  const handleFullscreenChange = useLastCallback(() => {\n    if (isFullscreen && exitFullscreen) {\n      exitFullscreen();\n    } else if (!isFullscreen && setFullscreen) {\n      setFullscreen();\n    }\n  });\n\n  const handleSeek = useLastCallback((position: number) => {\n    videoRef.current!.currentTime = position;\n  });\n\n  const handleVolumeChange = useLastCallback((newVolume: number) => {\n    setMediaViewerVolume({ volume: newVolume / 100 });\n  });\n\n  const handleVolumeMuted = useLastCallback(() => {\n    // Browser requires explicit user interaction to keep video playing after unmuting\n    videoRef.current!.muted = !videoRef.current!.muted;\n    setMediaViewerMuted({ isMuted: !isMuted });\n  });\n\n  const handlePlaybackRateChange = useLastCallback((newPlaybackRate: number) => {\n    setMediaViewerPlaybackRate({ playbackRate: newPlaybackRate });\n  });\n\n  useEffect(() => {\n    if (!isMediaViewerOpen) return undefined;\n    const rewind = (dir: number) => {\n      if (!isFullscreen) return;\n      const video = videoRef.current!;\n      const newTime = clamp(video.currentTime + dir * REWIND_STEP, 0, video.duration);\n      if (Number.isFinite(newTime)) {\n        video.currentTime = newTime;\n      }\n    };\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (isInPictureInPicture) return;\n      switch (e.key) {\n        case ' ':\n        case 'Enter':\n          e.preventDefault();\n          togglePlayState(e);\n          break;\n        case 'Left': // IE/Edge specific value\n        case 'ArrowLeft':\n          e.preventDefault();\n          rewind(-1);\n          break;\n        case 'Right': // IE/Edge specific value\n        case 'ArrowRight':\n          e.preventDefault();\n          rewind(1);\n          break;\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown, false);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown, false);\n    };\n  }, [togglePlayState, isMediaViewerOpen, isFullscreen, isInPictureInPicture]);\n\n  const wrapperStyle = posterSize && `width: ${posterSize.width}px; height: ${posterSize.height}px`;\n  const videoStyle = `background-image: url(${posterData})`;\n  const shouldToggleControls = !IS_TOUCH_ENV && !isForceMobileVersion;\n\n  return (\n    // eslint-disable-next-line jsx-a11y/mouse-events-have-key-events\n    <div\n      className=\"VideoPlayer\"\n      onMouseMove={shouldToggleControls ? handleVideoMove : undefined}\n      onMouseOut={shouldToggleControls ? handleVideoLeave : undefined}\n    >\n      <div\n        style={wrapperStyle}\n      >\n        {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n        {isProtected && (\n          <div\n            onContextMenu={stopEvent}\n            onDoubleClick={!IS_TOUCH_ENV ? handleFullscreenChange : undefined}\n            onClick={!isMobile ? togglePlayState : undefined}\n            className=\"protector\"\n          />\n        )}\n        <video\n          ref={videoRef}\n          autoPlay={IS_TOUCH_ENV}\n          controlsList=\"nodownload\"\n          playsInline\n          loop={isLooped}\n          // This is to force autoplaying on mobiles\n          muted={isGif || isMuted}\n          id=\"media-viewer-video\"\n          style={videoStyle}\n          onWaiting={() => setIsVideoWaiting(true)}\n          onPlay={() => setIsPlaying(true)}\n          onEnded={handleEnded}\n          onClick={!isMobile && !isFullscreen ? handleClick : undefined}\n          onDoubleClick={!IS_TOUCH_ENV ? handleFullscreenChange : undefined}\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...bufferingHandlers}\n          onPause={(e) => {\n            setIsPlaying(false);\n            bufferingHandlers.onPause(e);\n          }}\n          onTimeUpdate={handleTimeUpdate}\n          src={url}\n        />\n      </div>\n      {shouldRenderPlayButton && (\n        <Button round className={`play-button ${playButtonClassNames}`} onClick={togglePlayState}>\n          <i className=\"icon icon-play\" />\n        </Button>\n      )}\n      {shouldRenderSpinner && (\n        <div className={['spinner-container', spinnerClassNames].join(' ')}>\n          {!isBuffered && <div className=\"buffering\">Buffering...</div>}\n          <ProgressSpinner\n            size=\"xl\"\n            progress={isBuffered ? 1 : loadProgress}\n            square\n            onClick={onClose}\n          />\n        </div>\n      )}\n      {!isGif && !isUnsupported && (\n        <VideoPlayerControls\n          url={url}\n          isPlaying={isPlaying}\n          bufferedRanges={bufferedRanges}\n          bufferedProgress={bufferedProgress}\n          isBuffered={isBuffered}\n          isFullscreenSupported={Boolean(setFullscreen)}\n          isPictureInPictureSupported={isPictureInPictureSupported}\n          isFullscreen={isFullscreen}\n          isPreviewDisabled={isPreviewDisabled}\n          fileSize={fileSize}\n          duration={duration}\n          isReady={isReady}\n          posterSize={posterSize}\n          isForceMobileVersion={isForceMobileVersion}\n          onSeek={handleSeek}\n          onChangeFullscreen={handleFullscreenChange}\n          onPictureInPictureChange={enterPictureInPicture}\n          onPlayPause={togglePlayState}\n          volume={volume}\n          playbackRate={playbackRate}\n          isMuted={isMuted}\n          onVolumeClick={handleVolumeMuted}\n          onVolumeChange={handleVolumeChange}\n          onPlaybackRateChange={handlePlaybackRateChange}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(VideoPlayer);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type {\n  ApiDimensions, ApiMessage, ApiPeer,\n} from '../../api/types';\nimport { MediaViewerOrigin, type ThreadId } from '../../types';\n\nimport {\n  selectChat, selectChatMessage, selectIsMessageProtected, selectScheduledMessage, selectTabState, selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport { ARE_WEBCODECS_SUPPORTED, IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { calculateMediaViewerDimensions } from '../common/helpers/mediaDimensions';\nimport { renderMessageText } from '../common/helpers/renderMessageText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport { useMediaProps } from './hooks/useMediaProps';\n\nimport Spinner from '../ui/Spinner';\nimport MediaViewerFooter from './MediaViewerFooter';\nimport VideoPlayer from './VideoPlayer';\n\nimport './MediaViewerContent.scss';\n\ntype OwnProps = {\n  mediaId?: number;\n  chatId?: string;\n  threadId?: ThreadId;\n  avatarOwnerId?: string;\n  origin?: MediaViewerOrigin;\n  isActive?: boolean;\n  withAnimation?: boolean;\n  onClose: () => void;\n  onFooterClick: () => void;\n  isMoving?: boolean;\n};\n\ntype StateProps = {\n  chatId?: string;\n  mediaId?: number;\n  senderId?: string;\n  threadId?: ThreadId;\n  avatarOwner?: ApiPeer;\n  message?: ApiMessage;\n  origin?: MediaViewerOrigin;\n  isProtected?: boolean;\n  volume: number;\n  isMuted: boolean;\n  isHidden?: boolean;\n  playbackRate: number;\n};\n\nconst ANIMATION_DURATION = 350;\nconst MOBILE_VERSION_CONTROL_WIDTH = 350;\n\nconst MediaViewerContent: FC<OwnProps & StateProps> = (props) => {\n  const {\n    mediaId,\n    isActive,\n    avatarOwner,\n    chatId,\n    message,\n    origin,\n    withAnimation,\n    isProtected,\n    volume,\n    playbackRate,\n    isMuted,\n    isHidden,\n    onClose,\n    onFooterClick,\n    isMoving,\n  } = props;\n\n  const lang = useLang();\n\n  const {\n    isVideo,\n    isPhoto,\n    actionPhoto,\n    bestImageData,\n    bestData,\n    dimensions,\n    isGif,\n    isLocal,\n    isVideoAvatar,\n    videoSize,\n    loadProgress,\n  } = useMediaProps({\n    message, avatarOwner, mediaId, origin, delay: withAnimation ? ANIMATION_DURATION : false,\n  });\n\n  const [, toggleControls] = useControlsSignal();\n\n  const isOpen = Boolean(avatarOwner || mediaId);\n  const { isMobile } = useAppLayout();\n\n  const toggleControlsOnMove = useLastCallback(() => {\n    toggleControls(true);\n  });\n\n  if (avatarOwner || actionPhoto) {\n    if (!isVideoAvatar) {\n      return (\n        <div key={chatId} className=\"MediaViewerContent\">\n          {renderPhoto(\n            bestData,\n            calculateMediaViewerDimensions(dimensions!, false),\n            !isMobile && !isProtected,\n            isProtected,\n          )}\n        </div>\n      );\n    } else {\n      return (\n        <div key={chatId} className=\"MediaViewerContent\">\n          <VideoPlayer\n            key={mediaId}\n            url={bestData}\n            isGif\n            posterData={bestImageData}\n            posterSize={calculateMediaViewerDimensions(dimensions!, false, true)}\n            loadProgress={loadProgress}\n            fileSize={videoSize!}\n            isMediaViewerOpen={isOpen && isActive}\n            isProtected={isProtected}\n            isPreviewDisabled={!ARE_WEBCODECS_SUPPORTED || isLocal}\n            noPlay={!isActive}\n            onClose={onClose}\n            isMuted\n            shouldCloseOnClick\n            volume={0}\n            isClickDisabled={isMoving}\n            playbackRate={1}\n          />\n        </div>\n      );\n    }\n  }\n\n  if (!message) return undefined;\n  const textParts = message.content.action?.type === 'suggestProfilePhoto'\n    ? lang('Conversation.SuggestedPhotoTitle')\n    : renderMessageText({ message, forcePlayback: true, isForMediaViewer: true });\n\n  const hasFooter = Boolean(textParts);\n  const posterSize = message && calculateMediaViewerDimensions(dimensions!, hasFooter, isVideo);\n  const isForceMobileVersion = isMobile || shouldForceMobileVersion(posterSize);\n\n  return (\n    <div\n      className={buildClassName('MediaViewerContent', hasFooter && 'has-footer')}\n      onMouseMove={isForceMobileVersion && !IS_TOUCH_ENV ? toggleControlsOnMove : undefined}\n    >\n      {isPhoto && renderPhoto(\n        bestData,\n        posterSize,\n        !isMobile && !isProtected,\n        isProtected,\n      )}\n      {isVideo && (!isActive ? renderVideoPreview(\n        bestImageData,\n        posterSize,\n        !isMobile && !isProtected,\n        isProtected,\n      ) : (\n        <VideoPlayer\n          key={mediaId}\n          url={bestData}\n          isGif={isGif}\n          posterData={bestImageData}\n          posterSize={posterSize}\n          loadProgress={loadProgress}\n          fileSize={videoSize!}\n          isMediaViewerOpen={isOpen && isActive}\n          noPlay={!isActive}\n          isPreviewDisabled={!ARE_WEBCODECS_SUPPORTED || isLocal}\n          onClose={onClose}\n          isMuted={isMuted}\n          isHidden={isHidden}\n          isForceMobileVersion={isForceMobileVersion}\n          isProtected={isProtected}\n          volume={volume}\n          isClickDisabled={isMoving}\n          playbackRate={playbackRate}\n        />\n      ))}\n      {textParts && (\n        <MediaViewerFooter\n          text={textParts}\n          onClick={onFooterClick}\n          isProtected={isProtected}\n          isForceMobileVersion={isForceMobileVersion}\n          isForVideo={isVideo && !isGif}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, ownProps): StateProps => {\n    const {\n      chatId,\n      threadId,\n      mediaId,\n      avatarOwnerId,\n      origin,\n    } = ownProps;\n\n    const {\n      volume,\n      isMuted,\n      playbackRate,\n      isHidden,\n    } = selectTabState(global).mediaViewer;\n\n    if (origin === MediaViewerOrigin.SearchResult) {\n      if (!(chatId && mediaId)) {\n        return { volume, isMuted, playbackRate };\n      }\n\n      const message = selectChatMessage(global, chatId, mediaId);\n      if (!message) {\n        return { volume, isMuted, playbackRate };\n      }\n\n      return {\n        chatId,\n        mediaId,\n        senderId: message.senderId,\n        origin,\n        message,\n        isProtected: selectIsMessageProtected(global, message),\n        volume,\n        isMuted,\n        isHidden,\n        playbackRate,\n      };\n    }\n\n    if (avatarOwnerId) {\n      const sender = selectUser(global, avatarOwnerId) || selectChat(global, avatarOwnerId);\n\n      return {\n        mediaId,\n        senderId: avatarOwnerId,\n        avatarOwner: sender,\n        origin,\n        volume,\n        isMuted,\n        isHidden,\n        playbackRate,\n      };\n    }\n\n    if (!(chatId && threadId && mediaId)) {\n      return { volume, isMuted, playbackRate };\n    }\n\n    let message: ApiMessage | undefined;\n    if (origin && [MediaViewerOrigin.ScheduledAlbum, MediaViewerOrigin.ScheduledInline].includes(origin)) {\n      message = selectScheduledMessage(global, chatId, mediaId);\n    } else {\n      message = selectChatMessage(global, chatId, mediaId);\n    }\n\n    if (!message) {\n      return { volume, isMuted, playbackRate };\n    }\n\n    return {\n      chatId,\n      threadId,\n      mediaId,\n      senderId: message.senderId,\n      origin,\n      message,\n      isProtected: selectIsMessageProtected(global, message),\n      volume,\n      isMuted,\n      isHidden,\n      playbackRate,\n    };\n  },\n)(MediaViewerContent));\n\nfunction renderPhoto(blobUrl?: string, imageSize?: ApiDimensions, canDrag?: boolean, isProtected?: boolean) {\n  return blobUrl\n    ? (\n      <div style=\"position: relative;\">\n        {isProtected && <div onContextMenu={stopEvent} className=\"protector\" />}\n        <img\n          src={blobUrl}\n          alt=\"\"\n          className={buildClassName(isProtected && 'is-protected')}\n          style={imageSize ? `width: ${imageSize.width}px` : ''}\n          draggable={Boolean(canDrag)}\n        />\n      </div>\n    )\n    : (\n      <div\n        className=\"spinner-wrapper\"\n        style={imageSize ? `width: ${imageSize.width}px` : ''}\n      >\n        <Spinner color=\"white\" />\n      </div>\n    );\n}\n\nfunction renderVideoPreview(blobUrl?: string, imageSize?: ApiDimensions, canDrag?: boolean, isProtected?: boolean) {\n  const wrapperStyle = imageSize && `width: ${imageSize.width}px; height: ${imageSize.height}px`;\n  const videoStyle = `background-image: url(${blobUrl})`;\n  return blobUrl\n    ? (\n      <div\n        className=\"VideoPlayer\"\n      >\n        {isProtected && <div onContextMenu={stopEvent} className=\"protector\" />}\n        <div\n          style={wrapperStyle}\n        >\n          {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n          <video\n            style={videoStyle}\n            className={buildClassName(isProtected && 'is-protected')}\n            draggable={Boolean(canDrag)}\n          />\n        </div>\n      </div>\n    )\n    : (\n      <div\n        className=\"spinner-wrapper\"\n        style={imageSize ? `width: ${imageSize.width}px` : ''}\n      >\n        <Spinner color=\"white\" />\n      </div>\n    );\n}\n\nfunction shouldForceMobileVersion(posterSize?: { width: number; height: number }) {\n  if (!posterSize) return false;\n  return posterSize.width < MOBILE_VERSION_CONTROL_WIDTH;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { MediaViewerOrigin, ThreadId } from '../../types';\nimport type { RealTouchEvent } from '../../util/captureEvents';\n\nimport { animateNumber, timingFunctions } from '../../util/animation';\nimport buildClassName from '../../util/buildClassName';\nimport {\n  captureEvents,\n  IOS_SCREEN_EDGE_THRESHOLD,\n  SWIPE_DIRECTION_THRESHOLD,\n  SWIPE_DIRECTION_TOLERANCE,\n} from '../../util/captureEvents';\nimport { clamp, isBetween, round } from '../../util/math';\nimport { debounce } from '../../util/schedulers';\nimport { IS_IOS, IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useDebouncedCallback from '../../hooks/useDebouncedCallback';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useSignal from '../../hooks/useSignal';\nimport { useSignalRef } from '../../hooks/useSignalRef';\nimport useTimeout from '../../hooks/useTimeout';\nimport { useFullscreenStatus } from '../../hooks/window/useFullscreen';\nimport useWindowSize from '../../hooks/window/useWindowSize';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport useZoomChange from './hooks/useZoomChangeSignal';\n\nimport MediaViewerContent from './MediaViewerContent';\n\nimport './MediaViewerSlides.scss';\n\nconst { easeOutCubic, easeOutQuart } = timingFunctions;\n\ntype OwnProps = {\n  mediaId?: number;\n  getMediaId: (fromId?: number, direction?: number) => number | undefined;\n  isVideo?: boolean;\n  isGif?: boolean;\n  isPhoto?: boolean;\n  isOpen?: boolean;\n  selectMedia: (id?: number) => void;\n  chatId?: string;\n  threadId?: ThreadId;\n  avatarOwnerId?: string;\n  origin?: MediaViewerOrigin;\n  withAnimation?: boolean;\n  onClose: () => void;\n  isHidden?: boolean;\n  hasFooter?: boolean;\n  onFooterClick: () => void;\n};\n\nconst SWIPE_X_THRESHOLD = 50;\nconst SWIPE_Y_THRESHOLD = 50;\nconst SLIDES_GAP = IS_TOUCH_ENV ? 40 : 0;\nconst ANIMATION_DURATION = 350;\nconst DEBOUNCE_SELECT_MEDIA = 350;\nconst DEBOUNCE_SWIPE = 500;\nconst DEBOUNCE_ACTIVE = 800;\nconst DOUBLE_TAP_ZOOM = 3;\nconst CLICK_Y_THRESHOLD = 80;\nconst HEADER_HEIGHT = 60;\nconst MAX_ZOOM = 4;\nconst MIN_ZOOM = 1;\nlet cancelAnimation: Function | undefined;\nlet cancelZoomAnimation: Function | undefined;\n\ntype Transform = {\n  x: number;\n  y: number;\n  scale: number;\n};\n\nenum SwipeDirection {\n  Horizontal,\n  Vertical,\n}\n\nconst MediaViewerSlides: FC<OwnProps> = ({\n  mediaId,\n  getMediaId,\n  selectMedia,\n  isVideo,\n  isGif,\n  isOpen,\n  withAnimation,\n  isHidden,\n  ...rest\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const activeSlideRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const leftSlideRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const rightSlideRef = useRef<HTMLDivElement>(null);\n  const lastTransformRef = useRef<Transform>({ x: 0, y: 0, scale: 1 });\n  const swipeDirectionRef = useRef<SwipeDirection | undefined>(undefined);\n  const initialContentRectRef = useRef<DOMRect | undefined>(undefined);\n  const isReleasedRef = useRef(false);\n  const [isActive, setIsActive] = useState(true);\n  const [getZoomChange] = useZoomChange();\n  const prevZoomChangeRef = useRef(getZoomChange());\n  const isFullscreen = useFullscreenStatus();\n  const [isMouseDown, setIsMouseDown] = useState(false);\n  const [getTransform, setTransform] = useSignal<Transform>({ x: 0, y: 0, scale: 1 });\n  const transformRef = useSignalRef(getTransform);\n  const [getActiveMediaId, setActiveMediaId] = useSignal<number | undefined>(mediaId);\n  const activeMediaIdRef = useSignalRef(getActiveMediaId);\n  const isScaled = useDerivedState(() => getTransform().scale !== 1, [getTransform]);\n  const activeMediaId = useDerivedState(getActiveMediaId);\n  const { height: windowHeight, width: windowWidth, isResizing } = useWindowSize();\n  const [getControlsVisible, setControlsVisible, lockControls] = useControlsSignal();\n  const { onClose } = rest;\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n    shouldBeReplaced: true,\n  });\n\n  const selectMediaDebounced = useDebouncedCallback(selectMedia, [selectMedia], DEBOUNCE_SELECT_MEDIA, true);\n  const clearSwipeDirectionDebounced = useDebouncedCallback(() => {\n    swipeDirectionRef.current = undefined;\n  }, [], DEBOUNCE_SWIPE, true);\n\n  const setIsActiveDebounced = useDebouncedCallback((value) => setIsActive(value), [], DEBOUNCE_ACTIVE, true);\n\n  const shouldCloseOnVideo = Boolean(isGif && !IS_IOS);\n  const clickXThreshold = IS_TOUCH_ENV ? 40 : windowWidth / 10;\n\n  const handleControlsVisibility = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (!IS_TOUCH_ENV) return;\n    const isFooter = windowHeight - e.pageY < CLICK_Y_THRESHOLD;\n    if (!isFooter && e.pageX < clickXThreshold) return;\n    if (!isFooter && e.pageX > windowWidth - clickXThreshold) return;\n    setControlsVisible(!getControlsVisible());\n  });\n\n  useTimeout(() => setControlsVisible(true), ANIMATION_DURATION);\n\n  useEffect(() => {\n    const { scale, x, y } = transformRef.current;\n    // Only update active media if slide is in default position\n    if (x === 0 && y === 0 && scale === 1) {\n      setActiveMediaId(mediaId);\n    }\n  }, [mediaId, setActiveMediaId, transformRef]);\n\n  useLayoutEffect(() => {\n    const { x, y, scale } = getTransform();\n    lockControls(scale !== 1);\n    if (leftSlideRef.current) {\n      leftSlideRef.current.style.transform = getTransformStyle(-windowWidth + x - SLIDES_GAP);\n    }\n    if (activeSlideRef.current) {\n      activeSlideRef.current.style.transform = getTransformStyle(x, y, scale);\n    }\n    if (rightSlideRef.current) {\n      rightSlideRef.current.style.transform = getTransformStyle(windowWidth + x + SLIDES_GAP);\n    }\n  }, [getTransform, lockControls, windowWidth]);\n\n  useEffect(() => {\n    if (!containerRef.current || activeMediaIdRef.current === undefined || isHidden || isFullscreen) {\n      return undefined;\n    }\n    let lastTransform = lastTransformRef.current;\n    const lastDragOffset = {\n      x: 0,\n      y: 0,\n    };\n    const lastZoomCenter = {\n      x: 0,\n      y: 0,\n    };\n    const panDelta = {\n      x: 0,\n      y: 0,\n    };\n    let lastGestureTime = Date.now();\n    let content: HTMLElement | null;\n    const setLastGestureTime = debounce(() => {\n      lastGestureTime = Date.now();\n    }, 500, false, true);\n\n    const changeSlide = (direction: number) => {\n      const mId = getMediaId(activeMediaIdRef.current, direction);\n      if (mId !== undefined) {\n        const offset = (windowWidth + SLIDES_GAP) * direction;\n        const transform = transformRef.current;\n        const x = transform.x + offset;\n        setIsActive(false);\n        setActiveMediaId(mId);\n        selectMediaDebounced(mId);\n        setIsActiveDebounced(true);\n        lastTransform = { x: 0, y: 0, scale: 1 };\n        if (!withAnimation) {\n          setTransform(lastTransform);\n          return true;\n        }\n        cancelAnimation = animateNumber({\n          from: x,\n          to: 0,\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            y: 0,\n            x: value,\n            scale: 1,\n          }),\n        });\n        return true;\n      }\n      return false;\n    };\n\n    const changeSlideOnClick = (e: MouseEvent): [boolean, boolean] => {\n      const { scale } = transformRef.current;\n      if (scale !== 1) return [false, false];\n      if ((e.target as HTMLElement).closest('div.VideoPlayerControls')) {\n        return [false, false];\n      }\n      let direction = 0;\n      if (windowHeight - e.pageY < CLICK_Y_THRESHOLD) {\n        return [false, false];\n      }\n      if (e.pageX < clickXThreshold) {\n        direction = -1;\n      } else if (e.pageX > windowWidth - clickXThreshold) {\n        direction = 1;\n      }\n      const hasNextSlide = changeSlide(direction);\n      const isInThreshold = direction !== 0;\n      return [isInThreshold, hasNextSlide];\n    };\n\n    const handleKeyDown = (e: KeyboardEvent) => {\n      const { scale } = transformRef.current;\n      if (scale !== 1) return;\n      switch (e.key) {\n        case 'Left': // IE/Edge specific value\n        case 'ArrowLeft':\n          changeSlide(-1);\n          break;\n\n        case 'Right': // IE/Edge specific value\n        case 'ArrowRight':\n          changeSlide(1);\n          break;\n      }\n    };\n\n    const calculateOffsetBoundaries = (\n      { x, y, scale }: Transform,\n      offsetTop = 0,\n    ): [Transform, boolean, boolean] => {\n      const initialContentRect = initialContentRectRef.current;\n      if (!initialContentRect) return [{ x, y, scale }, true, true];\n      // Get current content boundaries\n      let inBoundsX = true;\n      let inBoundsY = true;\n\n      const centerX = (windowWidth - windowWidth * scale) / 2;\n      const centerY = (windowHeight - windowHeight * scale) / 2;\n\n      // If content is outside window we calculate offset boundaries\n      // based on initial content rect and current scale\n      const minOffsetX = Math.max(-initialContentRect.left * scale, centerX);\n      const maxOffsetX = windowWidth - initialContentRect.right * scale;\n      inBoundsX = isBetween(x, maxOffsetX, minOffsetX);\n      x = clamp(x, maxOffsetX, minOffsetX);\n\n      const minOffsetY = Math.max(-initialContentRect.top * scale + offsetTop, centerY);\n      const maxOffsetY = windowHeight - initialContentRect.bottom * scale;\n      inBoundsY = isBetween(y, maxOffsetY, minOffsetY);\n      y = clamp(y, maxOffsetY, minOffsetY);\n\n      return [{ x, y, scale }, inBoundsX, inBoundsY];\n    };\n\n    const onRelease = (e: MouseEvent | RealTouchEvent | WheelEvent) => {\n      // This allows to prevent onRelease triggered by debounced wheel event\n      // after onRelease was triggered manually in onDrag\n      if (isReleasedRef.current) {\n        isReleasedRef.current = false;\n        return;\n      }\n      if (e.type === 'mouseup') {\n        setIsMouseDown(false);\n      }\n      const transform = transformRef.current;\n      const { y, scale } = transform;\n      let x = transform.x;\n      const absX = Math.abs(x);\n      const absY = Math.abs(y);\n\n      clearSwipeDirectionDebounced();\n      setIsActiveDebounced(true);\n\n      // If scale is less than 1 we need to bounce back\n      if (scale < 1) {\n        lastTransform = { x: 0, y: 0, scale: 1 };\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [0, 0, 1],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: value[0],\n            y: value[1],\n            scale: value[2],\n          }),\n        });\n        return;\n      }\n      if (scale > 1) {\n        // Get current content boundaries\n        const s1 = Math.min(scale, MAX_ZOOM);\n        const scaleFactor = s1 / scale;\n\n        // Calculate new position based on the last zoom center to keep the zoom center\n        // at the same position when bouncing back from max zoom\n        let x1 = x * scaleFactor + (lastZoomCenter.x - scaleFactor * lastZoomCenter.x);\n        let y1 = y * scaleFactor + (lastZoomCenter.y - scaleFactor * lastZoomCenter.y);\n\n        // Arbitrary pan velocity coefficient\n        const k = 0.15;\n\n        // If scale didn't change, we need to add inertia to pan gesture\n        if (e.type !== 'wheel' && lastTransform.scale === scale) {\n          // Calculate user gesture velocity\n          const Vx = Math.abs(lastDragOffset.x) / (Date.now() - lastGestureTime);\n          const Vy = Math.abs(lastDragOffset.y) / (Date.now() - lastGestureTime);\n\n          // Add extra distance based on gesture velocity and last pan delta\n          x1 -= Math.abs(lastDragOffset.x) * Vx * k * panDelta.x;\n          y1 -= Math.abs(lastDragOffset.y) * Vy * k * panDelta.y;\n        }\n\n        [lastTransform] = calculateOffsetBoundaries({ x: x1, y: y1, scale: s1 }, HEADER_HEIGHT);\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [lastTransform.x, lastTransform.y, lastTransform.scale],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: value[0],\n            y: value[1],\n            scale: value[2],\n          }),\n        });\n        return;\n      }\n      lastTransform = {\n        x,\n        y,\n        scale,\n      };\n      if (absY >= SWIPE_Y_THRESHOLD) {\n        onClose();\n        return;\n      }\n      // Bounce back if vertical swipe is below threshold\n      if (absY > 0) {\n        cancelAnimation = animateNumber({\n          from: y,\n          to: 0,\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: 0,\n            y: value,\n            scale,\n          }),\n        });\n        return;\n      }\n      // Get horizontal swipe direction\n      const direction = x < 0 ? 1 : -1;\n      const mId = getMediaId(activeMediaIdRef.current, x < 0 ? 1 : -1);\n      // Get the direction of the last pan gesture.\n      // Could be different from the total horizontal swipe direction\n      // if user starts a swipe in one direction and then changes the direction\n      // we need to cancel slide transition\n      const dirX = panDelta.x < 0 ? -1 : 1;\n      if (mId !== undefined && absX >= SWIPE_X_THRESHOLD && direction === dirX) {\n        const offset = (windowWidth + SLIDES_GAP) * direction;\n        // If image is shifted by more than SWIPE_X_THRESHOLD,\n        // We shift everything by one screen width and then set new active message id\n        x += offset;\n        setActiveMediaId(mId);\n        selectMediaDebounced(mId);\n      }\n      // Then we always return to the original position\n      cancelAnimation = animateNumber({\n        from: x,\n        to: 0,\n        duration: ANIMATION_DURATION,\n        timing: easeOutCubic,\n        onUpdate: (value) => setTransform({\n          y: 0,\n          x: value,\n          scale: scale ?? 1,\n        }),\n      });\n    };\n\n    const cleanup = captureEvents(containerRef.current, {\n      isNotPassive: true,\n      withNativeDrag: true,\n      excludedClosestSelector: '.MediaViewerFooter, .ZoomControls, .VideoPlayerControls',\n      minZoom: MIN_ZOOM,\n      maxZoom: MAX_ZOOM,\n      doubleTapZoom: DOUBLE_TAP_ZOOM,\n      withWheelDrag: true,\n      onCapture: (e) => {\n        if (checkIfControlTarget(e)) return;\n        const { x, y, scale } = transformRef.current;\n        if (e.type === 'mousedown') {\n          setIsMouseDown(true);\n          if (scale !== 1) {\n            e.preventDefault();\n            return;\n          }\n        }\n        lastGestureTime = Date.now();\n        if (x === 0 && y === 0 && scale === 1) {\n          if (!activeSlideRef.current) return;\n          content = activeSlideRef.current.querySelector('img, video');\n          if (!content) return;\n          // Store initial content rect, without transformations\n          initialContentRectRef.current = content.getBoundingClientRect();\n        }\n      },\n      onDrag: (event, captureEvent, {\n        dragOffsetX,\n        dragOffsetY,\n      }, cancelDrag) => {\n        if (isReleasedRef.current || checkIfControlTarget(event)) return;\n        // Avoid conflicts with swipe-to-back gestures\n        if (IS_IOS && captureEvent.type === 'touchstart') {\n          const { pageX } = (captureEvent as RealTouchEvent).touches[0];\n          if (pageX <= IOS_SCREEN_EDGE_THRESHOLD || pageX >= windowWidth - IOS_SCREEN_EDGE_THRESHOLD) {\n            return;\n          }\n        }\n        if (cancelAnimation) {\n          cancelAnimation();\n          cancelAnimation = undefined;\n        }\n        panDelta.x = lastDragOffset.x - dragOffsetX;\n        panDelta.y = lastDragOffset.y - dragOffsetY;\n        lastDragOffset.x = dragOffsetX;\n        lastDragOffset.y = dragOffsetY;\n        const absOffsetX = Math.abs(dragOffsetX);\n        const absOffsetY = Math.abs(dragOffsetY);\n        const { x, y, scale } = transformRef.current;\n\n        // If user is inactive but is still touching the screen\n        // we reset last gesture time\n        setLastGestureTime();\n\n        // If image is scaled we just need to pan it\n        if (scale !== 1) {\n          const x1 = lastTransform.x + dragOffsetX;\n          const y1 = lastTransform.y + dragOffsetY;\n          if (['wheel', 'mousemove'].includes(event.type)) {\n            const [transform, inBoundsX, inBoundsY] = calculateOffsetBoundaries({ x: x1, y: y1, scale }, HEADER_HEIGHT);\n            if (cancelDrag) cancelDrag(!inBoundsX, !inBoundsY);\n            setTransform(transform);\n            return;\n          }\n          if ('touches' in event && event.touches.length === 1) {\n            setTransform({\n              x: x1,\n              y: y1,\n              scale,\n            });\n          }\n          return;\n        }\n        if (event.type === 'mousemove') return;\n        if (swipeDirectionRef.current !== SwipeDirection.Vertical) {\n          // If user is swiping horizontally or horizontal shift is dominant\n          // we change only horizontal position\n          if (swipeDirectionRef.current === SwipeDirection.Horizontal\n            || Math.abs(x) > SWIPE_DIRECTION_THRESHOLD || absOffsetX / absOffsetY > SWIPE_DIRECTION_TOLERANCE) {\n            swipeDirectionRef.current = SwipeDirection.Horizontal;\n            setIsActive(false);\n            const limit = windowWidth + SLIDES_GAP;\n            const x1 = clamp(dragOffsetX, -limit, limit);\n            setTransform({\n              x: x1,\n              y: 0,\n              scale,\n            });\n            // We know that at this point onRelease will trigger slide change,\n            // We can trigger onRelease directly instead of waiting for the debounced callback\n            // to avoid a delay\n            if (event.type === 'wheel' && Math.abs(x1) > SWIPE_X_THRESHOLD * 2) {\n              onRelease(event);\n              isReleasedRef.current = true;\n            }\n            return;\n          }\n        }\n        // If vertical shift is dominant we change only vertical position\n        if (swipeDirectionRef.current === SwipeDirection.Vertical\n          || Math.abs(y) > SWIPE_DIRECTION_THRESHOLD || absOffsetY / absOffsetX > SWIPE_DIRECTION_TOLERANCE) {\n          swipeDirectionRef.current = SwipeDirection.Vertical;\n          const limit = windowHeight;\n          const y1 = clamp(dragOffsetY, -limit, limit);\n          setTransform({\n            x: 0,\n            y: y1,\n            scale,\n          });\n          if (event.type === 'wheel' && Math.abs(y1) > SWIPE_Y_THRESHOLD * 2) {\n            onRelease(event);\n            isReleasedRef.current = true;\n          }\n        }\n      },\n      onZoom: (e, {\n        zoom,\n        zoomFactor,\n        initialCenterX,\n        initialCenterY,\n        dragOffsetX,\n        dragOffsetY,\n        currentCenterX,\n        currentCenterY,\n      }) => {\n        if (cancelAnimation) cancelAnimation();\n        initialCenterX = initialCenterX || windowWidth / 2;\n        initialCenterY = initialCenterY || windowHeight / 2;\n        currentCenterX = currentCenterX || windowWidth / 2;\n        currentCenterY = currentCenterY || windowHeight / 2;\n\n        // Calculate current scale based on zoom factor and limits, add zoom margin for bounce back effect\n        const scale = zoom ?? clamp(lastTransform.scale * zoomFactor!, MIN_ZOOM * 0.5, MAX_ZOOM * 3);\n        const scaleFactor = scale / lastTransform.scale;\n        const offsetX = Math.abs(Math.min(lastTransform.x, 0));\n        const offsetY = Math.abs(Math.min(lastTransform.y, 0));\n\n        // Save last zoom center for bounce back effect\n        lastZoomCenter.x = currentCenterX;\n        lastZoomCenter.y = currentCenterY;\n\n        // Calculate new center relative to the shifted image\n        const scaledCenterX = offsetX + initialCenterX;\n        const scaledCenterY = offsetY + initialCenterY;\n\n        // Calculate how much we need to shift the image to keep the zoom center at the same position\n        const scaleOffsetX = (scaledCenterX - scaleFactor * scaledCenterX);\n        const scaleOffsetY = (scaledCenterY - scaleFactor * scaledCenterY);\n\n        const [transform] = calculateOffsetBoundaries({\n          x: lastTransform.x + scaleOffsetX + dragOffsetX,\n          y: lastTransform.y + scaleOffsetY + dragOffsetY,\n          scale,\n        });\n\n        setTransform(transform);\n      },\n      onClick(e) {\n        setIsMouseDown(false);\n        const [isInThreshold, hasNextSlide] = changeSlideOnClick(e as MouseEvent);\n        if (isInThreshold) {\n          e.preventDefault();\n          e.stopPropagation();\n          if (IS_TOUCH_ENV) return;\n          if (!hasNextSlide) onClose();\n          return;\n        }\n        if (lastTransform.scale !== 1 || IS_TOUCH_ENV) return;\n        if (shouldCloseOnVideo || !checkIfInsideSelector(e.target as HTMLElement, '.VideoPlayer')) {\n          onClose();\n        }\n      },\n      onDoubleClick(e, {\n        centerX,\n        centerY,\n      }) {\n        const [isInThreshold] = changeSlideOnClick(e as MouseEvent);\n        if (isInThreshold) {\n          e.preventDefault();\n          e.stopPropagation();\n          return;\n        }\n        if (!IS_TOUCH_ENV && e.type !== 'wheel') return;\n        const { x, y, scale } = transformRef.current;\n        // Calculate how much we need to shift the image to keep the zoom center at the same position\n        const scaleOffsetX = (centerX - DOUBLE_TAP_ZOOM * centerX);\n        const scaleOffsetY = (centerY - DOUBLE_TAP_ZOOM * centerY);\n        if (scale === 1) {\n          if (x !== 0 || y !== 0) return;\n          lastTransform = calculateOffsetBoundaries({\n            x: scaleOffsetX,\n            y: scaleOffsetY,\n            scale: DOUBLE_TAP_ZOOM,\n          })[0];\n        } else {\n          lastTransform = {\n            x: 0,\n            y: 0,\n            scale: 1,\n          };\n        }\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [lastTransform.x, lastTransform.y, lastTransform.scale],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => {\n            const transform = {\n              x: value[0],\n              y: value[1],\n              scale: value[2],\n            };\n            setTransform(transform);\n          },\n        });\n      },\n      onRelease,\n    });\n    document.addEventListener('keydown', handleKeyDown, false);\n    return () => {\n      cleanup();\n      document.removeEventListener('keydown', handleKeyDown, false);\n    };\n  },\n  [\n    onClose,\n    setTransform,\n    getMediaId,\n    windowWidth,\n    windowHeight,\n    clickXThreshold,\n    shouldCloseOnVideo,\n    selectMediaDebounced,\n    setIsActiveDebounced,\n    clearSwipeDirectionDebounced,\n    withAnimation,\n    setIsMouseDown,\n    setIsActive,\n    isHidden,\n    isFullscreen,\n    transformRef,\n    setActiveMediaId,\n    activeMediaIdRef,\n  ]);\n\n  useEffect(() => {\n    const zoomChange = getZoomChange();\n    const hasZoomChanged = prevZoomChangeRef.current !== undefined\n      && prevZoomChangeRef.current !== zoomChange;\n    if (!containerRef.current || !hasZoomChanged || isHidden || isFullscreen) return;\n    prevZoomChangeRef.current = zoomChange;\n    const { scale } = transformRef.current;\n    const dir = zoomChange > 0 ? -1 : +1;\n    const minZoom = MIN_ZOOM * 0.6;\n    const maxZoom = MAX_ZOOM * 3;\n    let steps = 100;\n    let prevValue = 0;\n    if (scale <= minZoom && dir > 0) return;\n    if (scale >= maxZoom && dir < 0) return;\n    if (scale === 1 && dir > 0) steps = 20;\n    if (cancelZoomAnimation) cancelZoomAnimation();\n    cancelZoomAnimation = animateNumber({\n      from: dir,\n      to: dir * steps,\n      duration: ANIMATION_DURATION,\n      timing: easeOutQuart,\n      onUpdate: (value) => {\n        if (!containerRef.current) return;\n        const delta = round(value - prevValue, 2);\n        prevValue = value;\n        // To reuse existing logic we trigger wheel event for zoom buttons\n        const wheelEvent = new WheelEvent('wheel', {\n          deltaY: delta,\n          ctrlKey: true,\n        });\n        containerRef.current.dispatchEvent(wheelEvent);\n      },\n    });\n  }, [getZoomChange, isHidden, isFullscreen, transformRef]);\n\n  if (activeMediaId === undefined) return undefined;\n\n  const nextMediaId = getMediaId(activeMediaId, 1);\n  const prevMediaId = getMediaId(activeMediaId, -1);\n  const hasPrev = prevMediaId !== undefined;\n  const hasNext = nextMediaId !== undefined;\n  const isMoving = isMouseDown && isScaled;\n\n  return (\n    <div className=\"MediaViewerSlides\" ref={containerRef}>\n      <div className=\"MediaViewerSlide\" ref={leftSlideRef}>\n        {hasPrev && !isScaled && !isResizing && (\n          <MediaViewerContent\n            /* eslint-disable-next-line react/jsx-props-no-spreading */\n            {...rest}\n            withAnimation={withAnimation}\n            isMoving={isMoving}\n            mediaId={prevMediaId}\n          />\n        )}\n      </div>\n      <div\n        className={buildClassName(\n          'MediaViewerSlide',\n          'MediaViewerSlide--active',\n          isMoving && 'MediaViewerSlide--moving',\n        )}\n        onClick={handleControlsVisibility}\n        ref={activeSlideRef}\n      >\n        <MediaViewerContent\n          /* eslint-disable-next-line react/jsx-props-no-spreading */\n          {...rest}\n          mediaId={activeMediaId}\n          withAnimation={withAnimation}\n          isActive={isActive}\n          isMoving={isMoving}\n        />\n      </div>\n      <div className=\"MediaViewerSlide\" ref={rightSlideRef}>\n        {hasNext && !isScaled && !isResizing && (\n          <MediaViewerContent\n            /* eslint-disable-next-line react/jsx-props-no-spreading */\n            {...rest}\n            withAnimation={withAnimation}\n            isMoving={isMoving}\n            mediaId={nextMediaId}\n          />\n        )}\n      </div>\n      {hasPrev && !isScaled && !IS_TOUCH_ENV && (\n        <button\n          type=\"button\"\n          className={`navigation prev ${isVideo && !isGif && 'inline'}`}\n          aria-label={lang('AccDescrPrevious')}\n          dir={lang.isRtl ? 'rtl' : undefined}\n        />\n      )}\n      {hasNext && !isScaled && !IS_TOUCH_ENV && (\n        <button\n          type=\"button\"\n          className={`navigation next ${isVideo && !isGif && 'inline'}`}\n          aria-label={lang('Next')}\n          dir={lang.isRtl ? 'rtl' : undefined}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaViewerSlides);\n\nfunction getTransformStyle(x = 0, y = 0, scale = 1) {\n  return `translate3d(${x.toFixed(3)}px, ${y.toFixed(3)}px, 0px) scale(${scale.toFixed(3)})`;\n}\n\nfunction checkIfInsideSelector(element: HTMLElement, selector: string) {\n  if (!element) return false;\n  if (element.matches(selector)) return true;\n  return Boolean(element.closest(selector));\n}\n\nfunction checkIfControlTarget(e: TouchEvent | MouseEvent) {\n  const target = e.target as HTMLElement;\n  if (checkIfInsideSelector(target, '.VideoPlayerControls')) {\n    if (checkIfInsideSelector(\n      target,\n      '.play, .fullscreen, .volume, .volume-slider, .playback-rate, .playback-rate-menu, .SeekLine',\n    )) {\n      return true;\n    }\n    e.preventDefault();\n    return true;\n  }\n  return false;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiMessage, ApiPeer } from '../../api/types';\n\nimport { getSenderTitle } from '../../global/helpers';\nimport {\n  selectChatMessage,\n  selectPeer,\n  selectSender,\n} from '../../global/selectors';\nimport { formatMediaDateTime } from '../../util/dateFormat';\nimport renderText from '../common/helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Avatar from '../common/Avatar';\n\nimport './SenderInfo.scss';\n\ntype OwnProps = {\n  chatId?: string;\n  messageId?: number;\n  isAvatar?: boolean;\n  isFallbackAvatar?: boolean;\n};\n\ntype StateProps = {\n  sender?: ApiPeer;\n  message?: ApiMessage;\n};\n\nconst ANIMATION_DURATION = 350;\n\nconst SenderInfo: FC<OwnProps & StateProps> = ({\n  chatId,\n  messageId,\n  sender,\n  isFallbackAvatar,\n  isAvatar,\n  message,\n}) => {\n  const {\n    closeMediaViewer,\n    focusMessage,\n    toggleChatInfo,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const handleFocusMessage = useLastCallback(() => {\n    closeMediaViewer();\n\n    if (!chatId || !messageId) return;\n\n    if (isMobile) {\n      setTimeout(() => {\n        toggleChatInfo({ force: false }, { forceSyncOnIOs: true });\n        focusMessage({ chatId, messageId });\n      }, ANIMATION_DURATION);\n    } else {\n      focusMessage({ chatId, messageId });\n    }\n  });\n\n  const lang = useLang();\n\n  if (!sender || (!message && !isAvatar)) {\n    return undefined;\n  }\n\n  const senderTitle = getSenderTitle(lang, sender);\n\n  return (\n    <div className=\"SenderInfo\" onClick={handleFocusMessage}>\n      <Avatar key={sender.id} size=\"medium\" peer={sender} />\n      <div className=\"meta\">\n        <div className=\"title\" dir=\"auto\">\n          {senderTitle && renderText(senderTitle)}\n        </div>\n        <div className=\"date\" dir=\"auto\">\n          {isAvatar\n            ? lang(isFallbackAvatar ? 'lng_mediaview_profile_public_photo' : 'lng_mediaview_profile_photo')\n            : formatMediaDateTime(lang, message!.date * 1000, true)}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withGlobal<OwnProps>(\n  (global, { chatId, messageId, isAvatar }): StateProps => {\n    if (isAvatar && chatId) {\n      return {\n        sender: selectPeer(global, chatId),\n      };\n    }\n\n    if (!messageId || !chatId) {\n      return {};\n    }\n\n    const message = selectChatMessage(global, chatId, messageId);\n\n    return {\n      message,\n      sender: message && selectSender(global, message),\n    };\n  },\n)(SenderInfo);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiPhoto, ApiUser,\n} from '../../api/types';\nimport { MediaViewerOrigin, type ThreadId } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport { getChatMediaMessageIds, isChatAdmin, isUserId } from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessage,\n  selectChatMessages,\n  selectChatScheduledMessages,\n  selectCurrentMediaSearch, selectIsChatWithSelf,\n  selectListedIds,\n  selectOutlyingListByMessageId,\n  selectPerformanceSettingsValue,\n  selectScheduledMessage,\n  selectTabState,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { stopCurrentAudio } from '../../util/audioPlayer';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport { MEDIA_VIEWER_MEDIA_QUERY } from '../common/helpers/mediaDimensions';\nimport { renderMessageText } from '../common/helpers/renderMessageText';\nimport { animateClosing, animateOpening } from './helpers/ghostAnimation';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useElectronDrag from '../../hooks/useElectronDrag';\nimport useFlag from '../../hooks/useFlag';\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport { exitPictureInPictureIfNeeded, usePictureInPictureSignal } from '../../hooks/usePictureInPicture';\nimport usePrevious from '../../hooks/usePrevious';\nimport { dispatchPriorityPlaybackEvent } from '../../hooks/usePriorityPlaybackCheck';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport { useMediaProps } from './hooks/useMediaProps';\n\nimport ReportModal from '../common/ReportModal';\nimport Button from '../ui/Button';\nimport ShowTransition from '../ui/ShowTransition';\nimport Transition from '../ui/Transition';\nimport MediaViewerActions from './MediaViewerActions';\nimport MediaViewerSlides from './MediaViewerSlides';\nimport SenderInfo from './SenderInfo';\n\nimport './MediaViewer.scss';\n\ntype StateProps = {\n  chatId?: string;\n  threadId?: ThreadId;\n  mediaId?: number;\n  senderId?: string;\n  isChatWithSelf?: boolean;\n  canUpdateMedia?: boolean;\n  origin?: MediaViewerOrigin;\n  avatarOwner?: ApiPeer;\n  avatarOwnerFallbackPhoto?: ApiPhoto;\n  message?: ApiMessage;\n  chatMessages?: Record<number, ApiMessage>;\n  collectionIds?: number[];\n  isHidden?: boolean;\n  withAnimation?: boolean;\n  shouldSkipHistoryAnimations?: boolean;\n};\n\nconst ANIMATION_DURATION = 250;\n\nconst MediaViewer: FC<StateProps> = ({\n  chatId,\n  threadId,\n  mediaId,\n  senderId,\n  isChatWithSelf,\n  canUpdateMedia,\n  origin,\n  avatarOwner,\n  avatarOwnerFallbackPhoto,\n  message,\n  chatMessages,\n  collectionIds,\n  withAnimation,\n  isHidden,\n  shouldSkipHistoryAnimations,\n}) => {\n  const {\n    openMediaViewer,\n    closeMediaViewer,\n    openForwardMenu,\n    focusMessage,\n    toggleChatInfo,\n  } = getActions();\n\n  const isOpen = Boolean(avatarOwner || mediaId);\n  const { isMobile } = useAppLayout();\n\n  /* Animation */\n  const animationKey = useRef<number>();\n  const prevSenderId = usePrevious<string | undefined>(senderId);\n  const headerAnimation = withAnimation ? 'slideFade' : 'none';\n  const isGhostAnimation = Boolean(withAnimation && !shouldSkipHistoryAnimations);\n\n  /* Controls */\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n\n  const {\n    webPagePhoto,\n    webPageVideo,\n    isVideo,\n    actionPhoto,\n    isPhoto,\n    bestImageData,\n    bestData,\n    dimensions,\n    isGif,\n    isFromSharedMedia,\n    avatarPhoto,\n    fileName,\n  } = useMediaProps({\n    message, avatarOwner, mediaId, origin, delay: isGhostAnimation && ANIMATION_DURATION,\n  });\n\n  const canReport = !!avatarPhoto && !isChatWithSelf;\n  const isVisible = !isHidden && isOpen;\n\n  /* Navigation */\n  const singleMediaId = webPagePhoto || webPageVideo || actionPhoto ? mediaId : undefined;\n\n  const mediaIds = useMemo(() => {\n    if (singleMediaId) {\n      return [singleMediaId];\n    } else if (avatarOwner) {\n      return avatarOwner.photos?.map((p, i) => i) || [];\n    } else {\n      return getChatMediaMessageIds(chatMessages || {}, collectionIds || [], isFromSharedMedia);\n    }\n  }, [singleMediaId, avatarOwner, chatMessages, collectionIds, isFromSharedMedia]);\n\n  const selectedMediaIndex = mediaId ? mediaIds.indexOf(mediaId) : -1;\n\n  if (isOpen && (!prevSenderId || prevSenderId !== senderId || !animationKey.current)) {\n    animationKey.current = selectedMediaIndex;\n  }\n\n  const [getIsPictureInPicture] = usePictureInPictureSignal();\n\n  useEffect(() => {\n    if (!isOpen || getIsPictureInPicture()) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n    const stopPriorityPlayback = dispatchPriorityPlaybackEvent();\n\n    return () => {\n      stopPriorityPlayback();\n      enableDirectTextInput();\n    };\n  }, [isOpen, getIsPictureInPicture]);\n\n  useEffect(() => {\n    if (isVisible) {\n      exitPictureInPictureIfNeeded();\n    }\n  }, [isVisible]);\n\n  useEffect(() => {\n    if (isMobile) {\n      document.body.classList.toggle('is-media-viewer-open', isOpen);\n    }\n  }, [isMobile, isOpen]);\n\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  useElectronDrag(headerRef);\n\n  const forceUpdate = useForceUpdate();\n  useEffect(() => {\n    const mql = window.matchMedia(MEDIA_VIEWER_MEDIA_QUERY);\n    mql.addEventListener('change', forceUpdate);\n\n    return () => {\n      mql.removeEventListener('change', forceUpdate);\n    };\n  }, [forceUpdate]);\n\n  const prevMessage = usePrevious<ApiMessage | undefined>(message);\n  const prevIsHidden = usePrevious<boolean | undefined>(isHidden);\n  const prevOrigin = usePrevious(origin);\n  const prevMediaId = usePrevious(mediaId);\n  const prevAvatarOwner = usePrevious<ApiPeer | undefined>(avatarOwner);\n  const prevBestImageData = usePrevious(bestImageData);\n  const textParts = message ? renderMessageText({ message, forcePlayback: true, isForMediaViewer: true }) : undefined;\n  const hasFooter = Boolean(textParts);\n  const shouldAnimateOpening = prevIsHidden && prevMediaId !== mediaId;\n\n  useEffect(() => {\n    if (isGhostAnimation && isOpen && (!prevMessage || shouldAnimateOpening) && !prevAvatarOwner) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(hasFooter, origin!, bestImageData!, dimensions!, isVideo, message);\n    }\n\n    if (isGhostAnimation && !isOpen && (prevMessage || prevAvatarOwner)) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(prevOrigin!, prevBestImageData!, prevMessage || undefined);\n    }\n  }, [\n    isGhostAnimation, isOpen, shouldAnimateOpening, origin, prevOrigin, message, prevMessage, prevAvatarOwner,\n    bestImageData, prevBestImageData, dimensions, isVideo, hasFooter,\n  ]);\n\n  const handleClose = useLastCallback(() => closeMediaViewer());\n\n  const mediaIdRef = useStateRef(mediaId);\n  const handleFooterClick = useLastCallback(() => {\n    handleClose();\n\n    const currentMediaId = mediaIdRef.current;\n\n    if (!chatId || !currentMediaId) return;\n\n    if (isMobile) {\n      setTimeout(() => {\n        toggleChatInfo({ force: false }, { forceSyncOnIOs: true });\n        focusMessage({ chatId, threadId, messageId: currentMediaId });\n      }, ANIMATION_DURATION);\n    } else {\n      focusMessage({ chatId, threadId, messageId: currentMediaId });\n    }\n  });\n\n  const handleForward = useLastCallback(() => {\n    openForwardMenu({\n      fromChatId: chatId!,\n      messageIds: [mediaId!],\n    });\n  });\n\n  const selectMedia = useLastCallback((id?: number) => {\n    openMediaViewer({\n      chatId,\n      threadId,\n      mediaId: id,\n      avatarOwnerId: avatarOwner?.id,\n      origin: origin!,\n    }, {\n      forceOnHeavyAnimation: true,\n    });\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(() => {\n    handleClose();\n  }) : undefined), [handleClose, isOpen]);\n\n  useEffect(() => {\n    if (isVideo && !isGif) {\n      stopCurrentAudio();\n    }\n  }, [isGif, isVideo]);\n\n  const mediaIdsRef = useStateRef(mediaIds);\n\n  const getMediaId = useLastCallback((fromId?: number, direction?: number): number | undefined => {\n    if (fromId === undefined) return undefined;\n    const mIds = mediaIdsRef.current;\n    const index = mIds.indexOf(fromId);\n    if ((direction === -1 && index > 0) || (direction === 1 && index < mIds.length - 1)) {\n      return mIds[index + direction];\n    }\n    return undefined;\n  });\n\n  const handleBeforeDelete = useLastCallback(() => {\n    if (mediaIds.length <= 1) {\n      handleClose();\n      return;\n    }\n    let index = mediaId ? mediaIds.indexOf(mediaId) : -1;\n    // Before deleting, select previous media or the first one\n    index = index > 0 ? index - 1 : 0;\n    selectMedia(mediaIds[index]);\n  });\n\n  const lang = useLang();\n\n  function renderSenderInfo() {\n    return avatarOwner ? (\n      <SenderInfo\n        key={mediaId}\n        chatId={avatarOwner.id}\n        isAvatar\n        isFallbackAvatar={isUserId(avatarOwner.id)\n          && (avatarOwner as ApiUser).photos?.[mediaId!]?.id === avatarOwnerFallbackPhoto?.id}\n      />\n    ) : (\n      <SenderInfo\n        key={mediaId}\n        chatId={chatId}\n        messageId={mediaId}\n      />\n    );\n  }\n\n  return (\n    <ShowTransition\n      id=\"MediaViewer\"\n      isOpen={isOpen}\n      isHidden={isHidden}\n      shouldAnimateFirstRender\n      noCloseTransition={shouldSkipHistoryAnimations}\n    >\n      <div className=\"media-viewer-head\" dir={lang.isRtl ? 'rtl' : undefined} ref={headerRef}>\n        {isMobile && (\n          <Button\n            className=\"media-viewer-close\"\n            round\n            size=\"smaller\"\n            color=\"translucent-white\"\n            ariaLabel={lang('Close')}\n            onClick={handleClose}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n        )}\n        <Transition activeKey={animationKey.current!} name={headerAnimation}>\n          {renderSenderInfo()}\n        </Transition>\n        <MediaViewerActions\n          mediaData={bestData}\n          isVideo={isVideo}\n          message={message}\n          canUpdateMedia={canUpdateMedia}\n          avatarPhoto={avatarPhoto}\n          avatarOwner={avatarOwner}\n          fileName={fileName}\n          canReport={canReport}\n          selectMedia={selectMedia}\n          onBeforeDelete={handleBeforeDelete}\n          onReport={openReportModal}\n          onCloseMediaViewer={handleClose}\n          onForward={handleForward}\n        />\n        <ReportModal\n          isOpen={isReportModalOpen}\n          onClose={closeReportModal}\n          subject=\"media\"\n          photo={avatarPhoto}\n          peerId={avatarOwner?.id}\n        />\n      </div>\n      <MediaViewerSlides\n        mediaId={mediaId}\n        getMediaId={getMediaId}\n        chatId={chatId}\n        isPhoto={isPhoto}\n        isGif={isGif}\n        threadId={threadId}\n        avatarOwnerId={avatarOwner?.id}\n        origin={origin}\n        isOpen={isOpen}\n        hasFooter={hasFooter}\n        isVideo={isVideo}\n        withAnimation={withAnimation}\n        onClose={handleClose}\n        selectMedia={selectMedia}\n        isHidden={isHidden}\n        onFooterClick={handleFooterClick}\n      />\n    </ShowTransition>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { mediaViewer, shouldSkipHistoryAnimations } = selectTabState(global);\n    const {\n      chatId,\n      threadId,\n      mediaId,\n      avatarOwnerId,\n      origin,\n      isHidden,\n    } = mediaViewer;\n    const withAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n    const { currentUserId } = global;\n    let isChatWithSelf = !!chatId && selectIsChatWithSelf(global, chatId);\n\n    if (origin === MediaViewerOrigin.SearchResult) {\n      if (!(chatId && mediaId)) {\n        return { withAnimation, shouldSkipHistoryAnimations };\n      }\n\n      const message = selectChatMessage(global, chatId, mediaId);\n      if (!message) {\n        return { withAnimation, shouldSkipHistoryAnimations };\n      }\n\n      return {\n        chatId,\n        mediaId,\n        senderId: message.senderId,\n        isChatWithSelf,\n        origin,\n        message,\n        withAnimation,\n        isHidden,\n        shouldSkipHistoryAnimations,\n      };\n    }\n\n    if (avatarOwnerId) {\n      const user = selectUser(global, avatarOwnerId);\n      const chat = selectChat(global, avatarOwnerId);\n      let canUpdateMedia = false;\n      if (user) {\n        canUpdateMedia = avatarOwnerId === currentUserId;\n      } else if (chat) {\n        canUpdateMedia = isChatAdmin(chat);\n      }\n\n      isChatWithSelf = selectIsChatWithSelf(global, avatarOwnerId);\n\n      return {\n        mediaId,\n        senderId: avatarOwnerId,\n        avatarOwner: user || chat,\n        avatarOwnerFallbackPhoto: user ? selectUserFullInfo(global, avatarOwnerId)?.fallbackPhoto : undefined,\n        isChatWithSelf,\n        canUpdateMedia,\n        withAnimation,\n        origin,\n        shouldSkipHistoryAnimations,\n        isHidden,\n      };\n    }\n\n    if (!(chatId && threadId && mediaId)) {\n      return { withAnimation, shouldSkipHistoryAnimations };\n    }\n\n    let message: ApiMessage | undefined;\n    if (origin && [MediaViewerOrigin.ScheduledAlbum, MediaViewerOrigin.ScheduledInline].includes(origin)) {\n      message = selectScheduledMessage(global, chatId, mediaId);\n    } else {\n      message = selectChatMessage(global, chatId, mediaId);\n    }\n\n    if (!message) {\n      return { withAnimation, shouldSkipHistoryAnimations };\n    }\n\n    let chatMessages: Record<number, ApiMessage> | undefined;\n\n    if (origin && [MediaViewerOrigin.ScheduledAlbum, MediaViewerOrigin.ScheduledInline].includes(origin)) {\n      chatMessages = selectChatScheduledMessages(global, chatId);\n    } else {\n      chatMessages = selectChatMessages(global, chatId);\n    }\n    let collectionIds: number[] | undefined;\n\n    if (origin === MediaViewerOrigin.Inline\n      || origin === MediaViewerOrigin.Album) {\n      collectionIds = selectOutlyingListByMessageId(global, chatId, threadId, message.id)\n        || selectListedIds(global, chatId, threadId);\n    } else if (origin === MediaViewerOrigin.SharedMedia) {\n      const currentSearch = selectCurrentMediaSearch(global);\n      const { foundIds } = (currentSearch && currentSearch.resultsByType && currentSearch.resultsByType.media) || {};\n      collectionIds = foundIds;\n    }\n\n    return {\n      chatId,\n      threadId,\n      mediaId,\n      senderId: message.senderId,\n      isChatWithSelf,\n      origin,\n      message,\n      chatMessages,\n      collectionIds,\n      withAnimation,\n      isHidden,\n      shouldSkipHistoryAnimations,\n    };\n  },\n)(MediaViewer));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"syvgWO0b6lIEPd3iu1TA\",\"list-item\":\"_nKqEo7SgYwpaclSSCIx\",\"listItem\":\"_nKqEo7SgYwpaclSSCIx\",\"title\":\"R7LNh8TMqiktRuTuESsf\",\"subtitle\":\"so4259O2hcdGOxENXdqc\",\"languages\":\"DiSTH_4CZnPK8Dh8Tpfq\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { SUPPORTED_TRANSLATION_LANGUAGES } from '../../config';\nimport {\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\n\nimport styles from './ChatLanguageModal.module.scss';\n\ntype LanguageItem = {\n  langCode: string;\n  translatedName: string;\n  originalName: string;\n};\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  chatId?: string;\n  messageId?: number;\n  activeTranslationLanguage?: string;\n  currentLanguageCode: string;\n};\n\nconst ChatLanguageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chatId,\n  messageId,\n  activeTranslationLanguage,\n  currentLanguageCode,\n}) => {\n  const {\n    requestMessageTranslation,\n    closeChatLanguageModal,\n    setSettingOption,\n    requestChatTranslation,\n  } = getActions();\n\n  const [search, setSearch] = useState('');\n  const lang = useLang();\n\n  const handleSelect = useLastCallback((langCode: string) => {\n    if (!chatId) return;\n\n    if (messageId) {\n      requestMessageTranslation({ chatId, id: messageId, toLanguageCode: langCode });\n    } else {\n      setSettingOption({ translationLanguage: langCode });\n      requestChatTranslation({ chatId, toLanguageCode: langCode });\n    }\n\n    closeChatLanguageModal();\n  });\n\n  const handleSearch = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearch(e.target.value);\n  });\n\n  const translateLanguages = useMemo(() => SUPPORTED_TRANSLATION_LANGUAGES.map((langCode: string) => {\n    const translatedNames = new Intl.DisplayNames([currentLanguageCode], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n\n    const originalNames = new Intl.DisplayNames([langCode], { type: 'language' });\n    const originalName = originalNames.of(langCode)!;\n\n    return {\n      langCode,\n      translatedName,\n      originalName,\n    } satisfies LanguageItem;\n  }), [currentLanguageCode]);\n\n  useEffect(() => {\n    if (!isOpen) setSearch('');\n  }, [isOpen]);\n\n  const filteredDisplayedLanguages = useMemo(() => {\n    if (!search.trim()) {\n      return translateLanguages;\n    }\n\n    return translateLanguages.filter(({ langCode, translatedName, originalName }) => (\n      translatedName.toLowerCase().includes(search.toLowerCase())\n      || originalName.toLowerCase().includes(search.toLowerCase())\n      || langCode.toLowerCase().includes(search.toLowerCase())\n    ));\n  }, [translateLanguages, search]);\n\n  return (\n    <Modal\n      className={styles.root}\n      isSlim\n      isOpen={isOpen}\n      hasCloseButton\n      title={lang('Language')}\n      onClose={closeChatLanguageModal}\n    >\n      <InputText\n        key=\"search\"\n        value={search}\n        onChange={handleSearch}\n        placeholder={lang('Search')}\n        teactExperimentControlled\n      />\n      <div className={buildClassName(styles.languages, 'custom-scroll')}>\n        {filteredDisplayedLanguages.map(({ langCode, originalName, translatedName }) => (\n          <ListItem\n            key={langCode}\n            className={buildClassName(styles.listItem, 'no-icon')}\n            secondaryIcon={activeTranslationLanguage === langCode ? 'check' : undefined}\n            disabled={activeTranslationLanguage === langCode}\n            multiline\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleSelect(langCode)}\n          >\n            <span className={buildClassName('title', styles.title)}>\n              {renderText(originalName, ['highlight'], { highlight: search })}\n            </span>\n            <span className={buildClassName('subtitle', styles.subtitle)}>\n              {renderText(translatedName, ['highlight'], { highlight: search })}\n            </span>\n          </ListItem>\n        ))}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).chatLanguageModal || {};\n\n    const currentLanguageCode = selectLanguageCode(global);\n    const activeTranslationLanguage = chatId\n      ? messageId\n        ? selectRequestedMessageTranslationLanguage(global, chatId, messageId)\n        : selectRequestedChatTranslationLanguage(global, chatId)\n      : undefined;\n\n    return {\n      chatId,\n      messageId,\n      activeTranslationLanguage,\n      currentLanguageCode,\n    };\n  },\n)(ChatLanguageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ActiveEmojiInteraction } from '../../global/types';\n\nimport {\n  selectAnimatedEmojiEffect,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { IS_ANDROID } from '../../util/windowEnvironment';\n\nimport useFlag from '../../hooks/useFlag';\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedSticker from '../common/AnimatedSticker';\n\nimport './EmojiInteractionAnimation.scss';\n\nexport type OwnProps = {\n  activeEmojiInteraction: ActiveEmojiInteraction;\n};\n\ntype StateProps = {\n  effectAnimationId?: string;\n};\n\nconst HIDE_ANIMATION_DURATION = 250;\nconst PLAYING_DURATION = 3000;\nconst EFFECT_SIZE = 309;\n\nconst EmojiInteractionAnimation: FC<OwnProps & StateProps> = ({\n  effectAnimationId,\n  activeEmojiInteraction,\n}) => {\n  const { stopActiveEmojiInteraction } = getActions();\n\n  const [isHiding, startHiding] = useFlag(false);\n  const [isPlaying, startPlaying] = useFlag(false);\n  const timeoutRef = useRef<NodeJS.Timeout>();\n\n  const stop = useLastCallback(() => {\n    startHiding();\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n    setTimeout(() => {\n      stopActiveEmojiInteraction({ id: activeEmojiInteraction.id });\n    }, HIDE_ANIMATION_DURATION);\n  });\n\n  const handleCancelAnimation = useLastCallback((e: UIEvent) => {\n    if (!(e.target as HTMLElement)?.closest('.AnimatedEmoji')) {\n      stop();\n    }\n  });\n\n  useEffect(() => {\n    document.addEventListener('touchstart', handleCancelAnimation);\n    document.addEventListener('touchmove', handleCancelAnimation);\n    document.addEventListener('mousedown', handleCancelAnimation);\n    document.addEventListener('wheel', handleCancelAnimation);\n\n    return () => {\n      document.removeEventListener('touchstart', handleCancelAnimation);\n      document.removeEventListener('touchmove', handleCancelAnimation);\n      document.removeEventListener('mousedown', handleCancelAnimation);\n      document.removeEventListener('wheel', handleCancelAnimation);\n    };\n  }, [handleCancelAnimation]);\n\n  useLayoutEffect(() => {\n    const dispatchHeavyAnimationStop = dispatchHeavyAnimationEvent();\n\n    timeoutRef.current = setTimeout(() => {\n      stop();\n      dispatchHeavyAnimationStop();\n    }, PLAYING_DURATION);\n  }, [stop]);\n\n  const effectHash = effectAnimationId && `sticker${effectAnimationId}`;\n  const effectTgsUrl = useMedia(effectHash, !effectAnimationId);\n\n  if (!activeEmojiInteraction.startSize) {\n    return undefined;\n  }\n\n  const scale = (activeEmojiInteraction.startSize || 0) / EFFECT_SIZE;\n\n  return (\n    <div\n      className={buildClassName(\n        'EmojiInteractionAnimation',\n        isHiding && 'hiding',\n        isPlaying && 'playing',\n        activeEmojiInteraction.isReversed && 'reversed',\n      )}\n      style={`--scale: ${scale}; --start-x: ${activeEmojiInteraction.x}px; --start-y: ${activeEmojiInteraction.y}px;`}\n    >\n      <AnimatedSticker\n        key={`effect_${effectAnimationId}`}\n        size={EFFECT_SIZE}\n        tgsUrl={effectTgsUrl}\n        play\n        quality={IS_ANDROID ? 0.5 : undefined}\n        forceAlways\n        noLoop\n        onLoad={startPlaying}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { activeEmojiInteraction }): StateProps => {\n    const animatedEffect = activeEmojiInteraction.animatedEffect !== undefined\n      && selectAnimatedEmojiEffect(global, activeEmojiInteraction.animatedEffect);\n    return {\n      effectAnimationId: animatedEffect ? animatedEffect.id : undefined,\n    };\n  },\n)(EmojiInteractionAnimation));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiBotCommand, ApiChat } from '../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { REPLIES_USER_ID } from '../../config';\nimport {\n  getCanAddContact,\n  getCanDeleteChat,\n  getCanManageTopic,\n  getHasAdminRight,\n  getIsSavedDialog,\n  isChatChannel,\n  isChatGroup,\n  isUserId,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanManage, selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsPremiumPurchaseBlocked,\n  selectIsRightColumnShown, selectNotifyExceptions,\n  selectNotifySettings,\n  selectTabState,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { disableScrolling, enableScrolling } from '../../util/scrollLock';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport DeleteChatModal from '../common/DeleteChatModal';\nimport ReportModal from '../common/ReportModal';\nimport MuteChatModal from '../left/MuteChatModal.async';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport Portal from '../ui/Portal';\n\nimport './HeaderMenuContainer.scss';\n\nconst BOT_BUTTONS: Record<string, { icon: IconName; label: string }> = {\n  settings: {\n    icon: 'bots',\n    label: 'BotSettings',\n  },\n  privacy: {\n    icon: 'info',\n    label: 'Privacy',\n  },\n  help: {\n    icon: 'help',\n    label: 'BotHelp',\n  },\n};\n\nexport type OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  isOpen: boolean;\n  withExtraActions: boolean;\n  anchor: IAnchorPosition;\n  isChannel?: boolean;\n  canStartBot?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewBoosts?: boolean;\n  withForumActions?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  canTranslate?: boolean;\n  onSubscribeChannel: () => void;\n  onSearchClick: () => void;\n  onAsMessagesClick: () => void;\n  onClose: () => void;\n  onCloseAnimationEnd: () => void;\n  onJoinRequestsClick?: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  botCommands?: ApiBotCommand[];\n  isPrivate?: boolean;\n  isMuted?: boolean;\n  isTopic?: boolean;\n  isForum?: boolean;\n  isForumAsMessages?: true;\n  canAddContact?: boolean;\n  canReportChat?: boolean;\n  canDeleteChat?: boolean;\n  canGiftPremium?: boolean;\n  canCreateTopic?: boolean;\n  canEditTopic?: boolean;\n  hasLinkedChat?: boolean;\n  isChatInfoShown?: boolean;\n  isRightColumnShown?: boolean;\n  canManage?: boolean;\n  canTranslate?: boolean;\n  isBlocked?: boolean;\n  isBot?: boolean;\n  isChatWithSelf?: boolean;\n  savedDialog?: ApiChat;\n};\n\nconst CLOSE_MENU_ANIMATION_DURATION = 200;\n\nconst HeaderMenuContainer: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  withExtraActions,\n  anchor,\n  isChannel,\n  botCommands,\n  withForumActions,\n  isTopic,\n  isForum,\n  isForumAsMessages,\n  isChatInfoShown,\n  canStartBot,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewBoosts,\n  pendingJoinRequests,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  chat,\n  isPrivate,\n  isMuted,\n  canReportChat,\n  canDeleteChat,\n  canGiftPremium,\n  hasLinkedChat,\n  canAddContact,\n  canCreateTopic,\n  canEditTopic,\n  canManage,\n  isRightColumnShown,\n  canTranslate,\n  isBlocked,\n  isBot,\n  isChatWithSelf,\n  savedDialog,\n  onJoinRequestsClick,\n  onSubscribeChannel,\n  onSearchClick,\n  onAsMessagesClick,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    updateChatMutedState,\n    enterMessageSelectMode,\n    sendBotCommand,\n    restartBot,\n    requestMasterAndJoinGroupCall,\n    createGroupCall,\n    openLinkedChat,\n    openAddContactDialog,\n    requestMasterAndRequestCall,\n    toggleStatistics,\n    openBoostStatistics,\n    openGiftPremiumModal,\n    openThreadWithInfo,\n    openCreateTopicPanel,\n    openEditTopicPanel,\n    openChat,\n    toggleManagement,\n    togglePeerTranslations,\n    blockUser,\n    unblockUser,\n    setViewForumAsMessages,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isMenuOpen, setIsMenuOpen] = useState(true);\n  const [shouldCloseFast, setShouldCloseFast] = useState(false);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isReportModalOpen, setIsReportModalOpen] = useState(false);\n  const [isMuteModalOpen, setIsMuteModalOpen] = useState(false);\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const { x, y } = anchor;\n\n  useShowTransition(isOpen, onCloseAnimationEnd, undefined, false);\n  const isViewGroupInfoShown = usePrevDuringAnimation(\n    (!isChatInfoShown && isForum) ? true : undefined, CLOSE_MENU_ANIMATION_DURATION,\n  );\n\n  const handleReport = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsReportModalOpen(true);\n  });\n\n  const closeReportModal = useLastCallback(() => {\n    setIsReportModalOpen(false);\n    onClose();\n  });\n\n  const closeMuteModal = useLastCallback(() => {\n    setIsMuteModalOpen(false);\n    onClose();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsDeleteModalOpen(true);\n  });\n\n  const closeMenu = useLastCallback(() => {\n    setIsMenuOpen(false);\n    onClose();\n  });\n\n  const handleViewGroupInfo = useLastCallback(() => {\n    openThreadWithInfo({ chatId, threadId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const closeDeleteModal = useLastCallback(() => {\n    setIsDeleteModalOpen(false);\n    onClose();\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnmuteClick = useLastCallback(() => {\n    updateChatMutedState({ chatId, isMuted: false });\n    closeMenu();\n  });\n\n  const handleMuteClick = useLastCallback(() => {\n    markRenderMuteModal();\n    setIsMuteModalOpen(true);\n    setIsMenuOpen(false);\n  });\n\n  const handleCreateTopicClick = useLastCallback(() => {\n    openCreateTopicPanel({ chatId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleEditClick = useLastCallback(() => {\n    toggleManagement({ force: true });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleEditTopicClick = useLastCallback(() => {\n    openEditTopicPanel({ chatId, topicId: Number(threadId) });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleViewAsTopicsClick = useLastCallback(() => {\n    openChat({ id: undefined });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n    closeMenu();\n  });\n\n  const handleEnterVoiceChatClick = useLastCallback(() => {\n    if (canCreateVoiceChat) {\n      // TODO Show popup to schedule\n      createGroupCall({\n        chatId,\n      });\n    } else {\n      requestMasterAndJoinGroupCall({\n        chatId,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleLinkedChatClick = useLastCallback(() => {\n    openLinkedChat({ id: chatId });\n    closeMenu();\n  });\n\n  const handleGiftPremiumClick = useLastCallback(() => {\n    openGiftPremiumModal({ forUserId: chatId });\n    closeMenu();\n  });\n\n  const handleAddContactClick = useLastCallback(() => {\n    openAddContactDialog({ userId: chatId });\n    closeMenu();\n  });\n\n  const handleSubscribe = useLastCallback(() => {\n    onSubscribeChannel();\n    closeMenu();\n  });\n\n  const handleVideoCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId, isVideo: true });\n    closeMenu();\n  });\n\n  const handleCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId });\n    closeMenu();\n  });\n\n  const handleSearch = useLastCallback(() => {\n    onSearchClick();\n    closeMenu();\n  });\n\n  const handleStatisticsClick = useLastCallback(() => {\n    toggleStatistics();\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleBoostClick = useLastCallback(() => {\n    openBoostStatistics({ chatId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleEnableTranslations = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: true });\n    closeMenu();\n  });\n\n  const handleSelectMessages = useLastCallback(() => {\n    enterMessageSelectMode();\n    closeMenu();\n  });\n\n  const handleOpenAsMessages = useLastCallback(() => {\n    onAsMessagesClick();\n    closeMenu();\n  });\n\n  const handleBlock = useLastCallback(() => {\n    blockUser({ userId: chatId });\n    closeMenu();\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n    closeMenu();\n  });\n\n  useEffect(() => {\n    disableScrolling();\n\n    return enableScrolling;\n  }, []);\n\n  const lang = useLang();\n\n  const botButtons = useMemo(() => {\n    return botCommands?.map(({ command }) => {\n      const cmd = BOT_BUTTONS[command];\n      if (!cmd) return undefined;\n      const handleClick = () => {\n        sendBotCommand({ command: `/${command}` });\n        closeMenu();\n      };\n\n      return (\n        <MenuItem\n          key={command}\n          icon={cmd.icon}\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={handleClick}\n        >\n          {lang(cmd.label)}\n        </MenuItem>\n      );\n    });\n  }, [botCommands, closeMenu, lang, sendBotCommand]);\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (isPrivate || savedDialog) {\n      return lang('DeleteChatUser');\n    }\n\n    if (canDeleteChat) {\n      return lang('GroupInfo.DeleteAndExit');\n    }\n\n    if (isChannel) {\n      return lang('LeaveChannel');\n    }\n\n    return lang('Group.LeaveGroup');\n  }, [canDeleteChat, chat, isChannel, isPrivate, savedDialog, lang]);\n\n  return (\n    <Portal>\n      <div className=\"HeaderMenuContainer\">\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${x}px;top: ${y}px;`}\n          onClose={closeMenu}\n          shouldCloseFast={shouldCloseFast}\n        >\n          {isMobile && canSearch && (\n            <MenuItem\n              icon=\"search\"\n              onClick={handleSearch}\n            >\n              {lang('Search')}\n            </MenuItem>\n          )}\n          {withForumActions && canCreateTopic && (\n            <>\n              <MenuItem\n                icon=\"comments\"\n                onClick={handleCreateTopicClick}\n              >\n                {lang('lng_forum_create_topic')}\n              </MenuItem>\n              <MenuSeparator />\n            </>\n          )}\n          {isViewGroupInfoShown && (\n            <MenuItem\n              icon=\"info\"\n              onClick={handleViewGroupInfo}\n            >\n              {isTopic ? lang('lng_context_view_topic') : lang('lng_context_view_group')}\n            </MenuItem>\n          )}\n          {canManage && !canEditTopic && (\n            <MenuItem\n              icon=\"edit\"\n              onClick={handleEditClick}\n            >\n              {lang('Edit')}\n            </MenuItem>\n          )}\n          {canEditTopic && (\n            <MenuItem\n              icon=\"edit\"\n              onClick={handleEditTopicClick}\n            >\n              {lang('lng_forum_topic_edit')}\n            </MenuItem>\n          )}\n          {isMobile && !withForumActions && isForum && !isTopic && (\n            <MenuItem\n              icon=\"forums\"\n              onClick={handleViewAsTopicsClick}\n            >\n              {lang('Chat.ContextViewAsTopics')}\n            </MenuItem>\n          )}\n          {withForumActions && Boolean(pendingJoinRequests) && (\n            <MenuItem\n              icon=\"user\"\n              onClick={onJoinRequestsClick}\n            >\n              {isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n              <div className=\"right-badge\">{pendingJoinRequests}</div>\n            </MenuItem>\n          )}\n          {withForumActions && !isTopic && !isForumAsMessages && (\n            <MenuItem\n              icon=\"message\"\n              onClick={handleOpenAsMessages}\n            >\n              {lang('lng_forum_view_as_messages')}\n            </MenuItem>\n          )}\n          {withExtraActions && canStartBot && (\n            <MenuItem\n              icon=\"bots\"\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </MenuItem>\n          )}\n          {withExtraActions && canSubscribe && (\n            <MenuItem\n              icon={isChannel ? 'channel' : 'group'}\n              onClick={handleSubscribe}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </MenuItem>\n          )}\n          {canAddContact && (\n            <MenuItem\n              icon=\"add-user\"\n              onClick={handleAddContactClick}\n            >\n              {lang('AddContact')}\n            </MenuItem>\n          )}\n          {isMobile && canCall && (\n            <MenuItem\n              icon=\"phone\"\n              onClick={handleCall}\n            >\n              {lang('Call')}\n            </MenuItem>\n          )}\n          {canCall && (\n            <MenuItem\n              icon=\"video-outlined\"\n              onClick={handleVideoCall}\n            >\n              {lang('VideoCall')}\n            </MenuItem>\n          )}\n          {canMute && (isMuted ? (\n            <MenuItem\n              icon=\"unmute\"\n              onClick={handleUnmuteClick}\n            >\n              {lang('ChatsUnmute')}\n            </MenuItem>\n          )\n            : (\n              <MenuItem\n                icon=\"mute\"\n                onClick={handleMuteClick}\n              >\n                {lang('ChatsMute')}...\n              </MenuItem>\n            )\n          )}\n          {(canEnterVoiceChat || canCreateVoiceChat) && (\n            <MenuItem\n              icon=\"voice-chat\"\n              onClick={handleEnterVoiceChatClick}\n            >\n              {lang(canCreateVoiceChat ? 'StartVoipChat' : 'VoipGroupJoinCall')}\n            </MenuItem>\n          )}\n          {hasLinkedChat && (\n            <MenuItem\n              icon={isChannel ? 'comments' : 'channel'}\n              onClick={handleLinkedChatClick}\n            >\n              {lang(isChannel ? 'ViewDiscussion' : 'lng_profile_view_channel')}\n            </MenuItem>\n          )}\n          {!withForumActions && (\n            <MenuItem\n              icon=\"select\"\n              onClick={handleSelectMessages}\n            >\n              {lang('ReportSelectMessages')}\n            </MenuItem>\n          )}\n          {canViewBoosts && (\n            <MenuItem\n              icon=\"boost\"\n              onClick={handleBoostClick}\n            >\n              {lang('Boosts')}\n            </MenuItem>\n          )}\n          {canViewStatistics && (\n            <MenuItem\n              icon=\"stats\"\n              onClick={handleStatisticsClick}\n            >\n              {lang('Statistics')}\n            </MenuItem>\n          )}\n          {canTranslate && (\n            <MenuItem\n              icon=\"language\"\n              onClick={handleEnableTranslations}\n            >\n              {lang('lng_context_translate')}\n            </MenuItem>\n          )}\n          {canReportChat && (\n            <MenuItem\n              icon=\"flag\"\n              onClick={handleReport}\n            >\n              {lang('ReportPeer.Report')}\n            </MenuItem>\n          )}\n          {botButtons}\n          {canGiftPremium && (\n            <MenuItem\n              icon=\"gift\"\n              onClick={handleGiftPremiumClick}\n            >\n              {lang('GiftPremium')}\n            </MenuItem>\n          )}\n          {isBot && (\n            <MenuItem\n              icon={isBlocked ? 'bots' : 'hand-stop'}\n              onClick={isBlocked ? handleRestartBot : handleBlock}\n            >\n              {isBlocked ? lang('BotRestart') : lang('Bot.Stop')}\n            </MenuItem>\n          )}\n          {isPrivate && !isChatWithSelf && !isBot && (\n            <MenuItem\n              icon={isBlocked ? 'user' : 'hand-stop'}\n              onClick={isBlocked ? handleUnblock : handleBlock}\n            >\n              {isBlocked ? lang('Unblock') : lang('BlockUser')}\n            </MenuItem>\n          )}\n          {canLeave && (\n            <>\n              <MenuSeparator />\n              <MenuItem\n                destructive\n                icon=\"delete\"\n                onClick={handleDelete}\n              >\n                {deleteTitle}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n        {chat && (\n          <DeleteChatModal\n            isOpen={isDeleteModalOpen}\n            onClose={closeDeleteModal}\n            chat={savedDialog || chat}\n            isSavedDialog={Boolean(savedDialog)}\n          />\n        )}\n        {canMute && shouldRenderMuteModal && chat?.id && (\n          <MuteChatModal\n            isOpen={isMuteModalOpen}\n            onClose={closeMuteModal}\n            onCloseAnimationEnd={unmarkRenderMuteModal}\n            chatId={chat.id}\n          />\n        )}\n        {canReportChat && chat?.id && (\n          <ReportModal\n            isOpen={isReportModalOpen}\n            onClose={closeReportModal}\n            subject=\"peer\"\n            peerId={chat.id}\n          />\n        )}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat || chat.isRestricted) {\n      return {};\n    }\n    const isPrivate = isUserId(chat.id);\n    const user = isPrivate ? selectUser(global, chatId) : undefined;\n    const canAddContact = user && getCanAddContact(user);\n    const isMainThread = threadId === MAIN_THREAD_ID;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const canReportChat = isMainThread && (isChatChannel(chat) || isChatGroup(chat) || (user && !user.isSelf));\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    const chatBot = chatId !== REPLIES_USER_ID ? selectBot(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const fullInfo = userFullInfo || chatFullInfo;\n    const canGiftPremium = Boolean(\n      userFullInfo?.premiumGifts?.length\n      && !selectIsPremiumPurchaseBlocked(global),\n    );\n\n    const topic = chat?.topics?.[threadId];\n    const canCreateTopic = chat.isForum && (\n      chat.isCreator || !isUserRightBanned(chat, 'manageTopics') || getHasAdminRight(chat, 'manageTopics')\n    );\n    const canEditTopic = topic && getCanManageTopic(chat, topic);\n    const canManage = selectCanManage(global, chatId);\n    // Context menu item should only be displayed if user hid translation panel\n    const canTranslate = selectCanTranslateChat(global, chatId) && fullInfo?.isTranslationDisabled;\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n    const savedDialog = isSavedDialog ? selectChat(global, String(threadId)) : undefined;\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      isPrivate,\n      isTopic: chat?.isForum && !isMainThread,\n      isForum: chat?.isForum,\n      isForumAsMessages: chat?.isForumAsMessages,\n      canAddContact,\n      canReportChat,\n      canDeleteChat: getCanDeleteChat(chat),\n      canGiftPremium,\n      hasLinkedChat: Boolean(chatFullInfo?.linkedChatId),\n      botCommands: chatBot ? userFullInfo?.botInfo?.commands : undefined,\n      isChatInfoShown: selectTabState(global).isChatInfoShown\n        && currentChatId === chatId && currentThreadId === threadId,\n      canCreateTopic,\n      canEditTopic,\n      canManage,\n      isRightColumnShown: selectIsRightColumnShown(global),\n      canTranslate,\n      isBlocked: userFullInfo?.isBlocked,\n      isBot: Boolean(chatBot),\n      isChatWithSelf,\n      savedDialog,\n    };\n  },\n)(HeaderMenuContainer));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport {\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectCanDeleteSelectedMessages, selectCurrentChat, selectTabState, selectUser,\n} from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  isSchedule: boolean;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  selectedMessageIds?: number[];\n  canDeleteForAll?: boolean;\n  contactName?: string;\n  willDeleteForCurrentUserOnly?: boolean;\n  willDeleteForAll?: boolean;\n};\n\nconst DeleteSelectedMessageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  isSchedule,\n  selectedMessageIds,\n  canDeleteForAll,\n  contactName,\n  willDeleteForCurrentUserOnly,\n  willDeleteForAll,\n  onClose,\n}) => {\n  const {\n    deleteMessages,\n    deleteScheduledMessages,\n    exitMessageSelectMode,\n  } = getActions();\n\n  const prevIsOpen = usePrevious(isOpen);\n\n  const handleDeleteMessageForAll = useLastCallback(() => {\n    onClose();\n    deleteMessages({ messageIds: selectedMessageIds!, shouldDeleteForAll: true });\n  });\n\n  const handleDeleteMessageForSelf = useLastCallback(() => {\n    if (isSchedule) {\n      deleteScheduledMessages({ messageIds: selectedMessageIds! });\n    } else {\n      deleteMessages({ messageIds: selectedMessageIds!, shouldDeleteForAll: false });\n    }\n\n    onClose();\n  });\n\n  const lang = useLang();\n\n  // Returning `undefined` from FC instead of `<Modal>` doesn't trigger useHistoryBack\n  useEffect(() => {\n    if (!isOpen && prevIsOpen) {\n      exitMessageSelectMode();\n    }\n  }, [exitMessageSelectMode, isOpen, prevIsOpen]);\n\n  if (!selectedMessageIds) {\n    return undefined;\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={canDeleteForAll ? undefined : handleDeleteMessageForSelf}\n      className=\"delete\"\n      title={lang('Conversation.DeleteManyMessages')}\n    >\n      <p>{lang('AreYouSureDeleteFewMessages')}</p>\n      {willDeleteForCurrentUserOnly && (\n        <p>This will delete them just for you, not for other participants in the chat.</p>\n      )}\n      {willDeleteForAll && (\n        <p>This will delete them for everyone in this chat.</p>\n      )}\n      <div className={canDeleteForAll ? 'dialog-buttons-column' : 'dialog-buttons'}>\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForAll}>\n            {contactName\n              ? renderText(lang('ChatList.DeleteForEveryone', contactName))\n              : lang('Conversation.DeleteMessagesForEveryone')}\n          </Button>\n        )}\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForSelf}>\n          {lang(canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isSchedule }): StateProps => {\n    const { messageIds: selectedMessageIds } = selectTabState(global).selectedMessages || {};\n    const { canDeleteForAll } = selectCanDeleteSelectedMessages(global);\n    const chat = selectCurrentChat(global);\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    const willDeleteForCurrentUserOnly = chat && isChatBasicGroup(chat) && !canDeleteForAll;\n    const willDeleteForAll = chat && isChatSuperGroup(chat);\n\n    return {\n      selectedMessageIds,\n      canDeleteForAll: !isSchedule && canDeleteForAll,\n      contactName,\n      willDeleteForCurrentUserOnly,\n      willDeleteForAll,\n    };\n  },\n)(DeleteSelectedMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { MessageListType } from '../../global/types';\nimport type { IconName } from '../../types/icons';\n\nimport {\n  selectCanDeleteSelectedMessages,\n  selectCanDownloadSelectedMessages,\n  selectCanForwardMessages,\n  selectCanReportSelectedMessages,\n  selectCurrentMessageList, selectHasProtectedMessage,\n  selectSelectedMessagesCount,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePrevious from '../../hooks/usePrevious';\nimport useCopySelectedMessages from './hooks/useCopySelectedMessages';\n\nimport ReportModal from '../common/ReportModal';\nimport Button from '../ui/Button';\nimport DeleteSelectedMessageModal from './DeleteSelectedMessageModal';\n\nimport './MessageSelectToolbar.scss';\n\nexport type OwnProps = {\n  isActive?: boolean;\n  canPost?: boolean;\n  messageListType?: MessageListType;\n};\n\ntype StateProps = {\n  isSchedule: boolean;\n  selectedMessagesCount?: number;\n  canDeleteMessages?: boolean;\n  canReportMessages?: boolean;\n  canDownloadMessages?: boolean;\n  canForwardMessages?: boolean;\n  hasProtectedMessage?: boolean;\n  isAnyModalOpen?: boolean;\n  selectedMessageIds?: number[];\n};\n\nconst MessageSelectToolbar: FC<OwnProps & StateProps> = ({\n  canPost,\n  isActive,\n  messageListType,\n  isSchedule,\n  selectedMessagesCount,\n  canDeleteMessages,\n  canReportMessages,\n  canDownloadMessages,\n  canForwardMessages,\n  hasProtectedMessage,\n  isAnyModalOpen,\n  selectedMessageIds,\n}) => {\n  const {\n    exitMessageSelectMode,\n    openForwardMenuForSelectedMessages,\n    downloadSelectedMessages,\n    copySelectedMessages,\n    showNotification,\n  } = getActions();\n  const lang = useLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n\n  useCopySelectedMessages(isActive);\n\n  const handleExitMessageSelectMode = useLastCallback(() => {\n    exitMessageSelectMode();\n  });\n\n  useEffect(() => {\n    return isActive && !isDeleteModalOpen && !isReportModalOpen && !isAnyModalOpen\n      ? captureKeyboardListeners({\n        onBackspace: canDeleteMessages ? openDeleteModal : undefined,\n        onDelete: canDeleteMessages ? openDeleteModal : undefined,\n        onEsc: handleExitMessageSelectMode,\n      })\n      : undefined;\n  }, [\n    isActive, isDeleteModalOpen, isReportModalOpen, openDeleteModal, handleExitMessageSelectMode, isAnyModalOpen,\n    canDeleteMessages,\n  ]);\n\n  const handleCopy = useLastCallback(() => {\n    copySelectedMessages();\n    showNotification({\n      message: lang('Share.Link.Copied'),\n    });\n    exitMessageSelectMode();\n  });\n\n  const handleDownload = useLastCallback(() => {\n    downloadSelectedMessages();\n    exitMessageSelectMode();\n  });\n\n  const prevSelectedMessagesCount = usePrevious(selectedMessagesCount || undefined, true);\n  const renderingSelectedMessagesCount = isActive ? selectedMessagesCount : prevSelectedMessagesCount;\n\n  const formattedMessagesCount = lang('VoiceOver.Chat.MessagesSelected', renderingSelectedMessagesCount, 'i');\n\n  const className = buildClassName(\n    'MessageSelectToolbar',\n    canPost && 'with-composer',\n    isActive && 'shown',\n  );\n\n  const renderButton = (\n    icon: IconName, label: string, onClick: AnyToVoidFunction, destructive?: boolean,\n  ) => {\n    return (\n      <div\n        role=\"button\"\n        tabIndex={0}\n        className={buildClassName(\n          'div-button',\n          'item',\n          destructive && 'destructive',\n        )}\n        onClick={onClick}\n        title={label}\n        aria-label={label}\n      >\n        <i className={buildClassName('icon', `icon-${icon}`)} />\n      </div>\n    );\n  };\n\n  return (\n    <div className={className}>\n      <div className=\"MessageSelectToolbar-inner\">\n        <Button\n          color=\"translucent\"\n          round\n          onClick={handleExitMessageSelectMode}\n          ariaLabel=\"Exit select mode\"\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        <span className=\"MessageSelectToolbar-count\" title={formattedMessagesCount}>\n          {formattedMessagesCount}\n        </span>\n\n        {Boolean(selectedMessagesCount) && (\n          <div className=\"MessageSelectToolbar-actions\">\n            {messageListType !== 'scheduled' && canForwardMessages && (\n              renderButton(\n                'forward', lang('Chat.ForwardActionHeader'), openForwardMenuForSelectedMessages,\n              )\n            )}\n            {canReportMessages && (\n              renderButton('flag', lang('Conversation.ReportMessages'), openReportModal)\n            )}\n            {canDownloadMessages && !hasProtectedMessage && (\n              renderButton('download', lang('lng_media_download'), handleDownload)\n            )}\n            {!hasProtectedMessage && (\n              renderButton('copy', lang('lng_context_copy_selected_items'), handleCopy)\n            )}\n            {canDeleteMessages && (\n              renderButton('delete', lang('EditAdminGroupDeleteMessages'), openDeleteModal, true)\n            )}\n          </div>\n        )}\n      </div>\n      <DeleteSelectedMessageModal\n        isOpen={isDeleteModalOpen}\n        isSchedule={isSchedule}\n        onClose={closeDeleteModal}\n      />\n      <ReportModal\n        isOpen={isReportModalOpen}\n        onClose={closeReportModal}\n        messageIds={selectedMessageIds}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const tabState = selectTabState(global);\n    const { type: messageListType, chatId } = selectCurrentMessageList(global) || {};\n    const isSchedule = messageListType === 'scheduled';\n    const { canDelete } = selectCanDeleteSelectedMessages(global);\n    const canReport = Boolean(!isSchedule && selectCanReportSelectedMessages(global));\n    const canDownload = selectCanDownloadSelectedMessages(global);\n    const { messageIds: selectedMessageIds } = tabState.selectedMessages || {};\n    const hasProtectedMessage = chatId ? selectHasProtectedMessage(global, chatId, selectedMessageIds) : false;\n    const canForward = !isSchedule && chatId ? selectCanForwardMessages(global, chatId, selectedMessageIds) : false;\n    const isForwardModalOpen = tabState.forwardMessages.isModalShown;\n    const isAnyModalOpen = Boolean(isForwardModalOpen || tabState.requestedDraft\n      || tabState.requestedAttachBotInChat || tabState.requestedAttachBotInstall);\n\n    return {\n      isSchedule,\n      selectedMessagesCount: selectSelectedMessagesCount(global),\n      canDeleteMessages: canDelete,\n      canReportMessages: canReport,\n      canDownloadMessages: canDownload,\n      canForwardMessages: canForward,\n      selectedMessageIds,\n      hasProtectedMessage,\n      isAnyModalOpen,\n    };\n  },\n)(MessageSelectToolbar));\n","import { getActions } from '../../../global';\n\nimport { useHotkeys } from '../../../hooks/useHotkeys';\n\nconst useCopySelectedMessages = (isActive?: boolean) => {\n  function handleCopy(e: KeyboardEvent) {\n    e.preventDefault();\n    getActions().copySelectedMessages();\n  }\n\n  useHotkeys(isActive ? { 'Mod+C': handleCopy } : undefined);\n};\n\nexport default useCopySelectedMessages;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\nimport type { ThreadId } from '../../types';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  selectCurrentChat,\n  selectCurrentMessageList,\n  selectCurrentTextSearch,\n  selectTabState,\n} from '../../global/selectors';\nimport { getDayStartAt } from '../../util/dateFormat';\nimport { debounce } from '../../util/schedulers';\nimport { IS_IOS } from '../../util/windowEnvironment';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport SearchInput from '../ui/SearchInput';\n\nimport './MobileSearch.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n};\n\ntype StateProps = {\n  isActive?: boolean;\n  chat?: ApiChat;\n  threadId?: ThreadId;\n  query?: string;\n  totalCount?: number;\n  foundIds?: number[];\n  isHistoryCalendarOpen?: boolean;\n};\n\nconst runDebouncedForSearch = debounce((cb) => cb(), 200, false);\n\nconst MobileSearchFooter: FC<StateProps> = ({\n  isActive,\n  chat,\n  threadId,\n  query,\n  totalCount,\n  foundIds,\n  isHistoryCalendarOpen,\n}) => {\n  const {\n    setLocalTextSearchQuery,\n    searchTextMessagesLocal,\n    focusMessage,\n    closeLocalTextSearch,\n    openHistoryCalendar,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [focusedIndex, setFocusedIndex] = useState(0);\n\n  // Fix for iOS keyboard\n  useEffect(() => {\n    const { visualViewport } = window as any;\n    if (!visualViewport) {\n      return undefined;\n    }\n\n    const mainEl = document.getElementById('Main') as HTMLDivElement;\n    const handleResize = () => {\n      const { activeElement } = document;\n      if (activeElement && (activeElement === inputRef.current)) {\n        const { pageTop, height } = visualViewport;\n\n        requestMutation(() => {\n          mainEl.style.transform = `translateY(${pageTop}px)`;\n          mainEl.style.height = `${height}px`;\n          document.documentElement.scrollTop = pageTop;\n        });\n      } else {\n        requestMutation(() => {\n          mainEl.style.transform = '';\n          mainEl.style.height = '';\n        });\n      }\n    };\n\n    visualViewport.addEventListener('resize', handleResize);\n\n    return () => {\n      visualViewport.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  // Focus message\n  useEffect(() => {\n    if (chat?.id && foundIds?.length) {\n      focusMessage({ chatId: chat.id, messageId: foundIds[0], threadId });\n      setFocusedIndex(0);\n    } else {\n      setFocusedIndex(-1);\n    }\n  }, [chat?.id, focusMessage, foundIds, threadId]);\n\n  // Disable native up/down buttons on iOS\n  useLayoutEffect(() => {\n    if (!IS_IOS) return;\n\n    Array.from(document.querySelectorAll<HTMLInputElement>('input')).forEach((input) => {\n      input.disabled = Boolean(isActive && input !== inputRef.current);\n    });\n  }, [isActive]);\n\n  // Blur on exit\n  useEffect(() => {\n    if (!isActive) {\n      inputRef.current!.blur();\n    }\n  }, [isActive]);\n\n  useEffect(() => {\n    const searchInput = document.querySelector<HTMLInputElement>('#MobileSearch input')!;\n    searchInput.blur();\n  }, [isHistoryCalendarOpen]);\n\n  const handleMessageSearchQueryChange = useLastCallback((newQuery: string) => {\n    setLocalTextSearchQuery({ query: newQuery });\n\n    if (newQuery.length) {\n      runDebouncedForSearch(searchTextMessagesLocal);\n    }\n  });\n\n  const handleUp = useLastCallback(() => {\n    if (chat && foundIds) {\n      const newFocusIndex = focusedIndex + 1;\n      focusMessage({ chatId: chat.id, messageId: foundIds[newFocusIndex], threadId });\n      setFocusedIndex(newFocusIndex);\n    }\n  });\n\n  const handleDown = useLastCallback(() => {\n    if (chat && foundIds) {\n      const newFocusIndex = focusedIndex - 1;\n      focusMessage({ chatId: chat.id, messageId: foundIds[newFocusIndex], threadId });\n      setFocusedIndex(newFocusIndex);\n    }\n  });\n\n  const handleCloseLocalTextSearch = useLastCallback(() => {\n    closeLocalTextSearch();\n  });\n\n  return (\n    <div id=\"MobileSearch\" className={isActive ? 'active' : ''}>\n      <div className=\"header\">\n        <Button\n          size=\"smaller\"\n          round\n          color=\"translucent\"\n          onClick={handleCloseLocalTextSearch}\n        >\n          <i className=\"icon icon-arrow-left\" />\n        </Button>\n        <SearchInput\n          ref={inputRef}\n          value={query}\n          onChange={handleMessageSearchQueryChange}\n        />\n      </div>\n      <div className=\"footer\">\n        <div className=\"counter\">\n          {query ? (\n            foundIds?.length ? (\n              `${focusedIndex + 1} of ${totalCount}`\n            ) : foundIds && !foundIds.length ? (\n              'No results'\n            ) : (\n              ''\n            )\n          ) : (\n            <Button\n              round\n              size=\"smaller\"\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => openHistoryCalendar({ selectedAt: getDayStartAt(Date.now()) })}\n              ariaLabel=\"Search messages by date\"\n            >\n              <i className=\"icon icon-calendar\" />\n            </Button>\n          )}\n        </div>\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleUp}\n          disabled={!foundIds || !foundIds.length || focusedIndex === foundIds.length - 1}\n        >\n          <i className=\"icon icon-up\" />\n        </Button>\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleDown}\n          disabled={!foundIds || !foundIds.length || focusedIndex === 0}\n        >\n          <i className=\"icon icon-down\" />\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const chat = selectCurrentChat(global);\n    if (!chat) {\n      return {};\n    }\n\n    const { query, results } = selectCurrentTextSearch(global) || {};\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const { totalCount, foundIds } = results || {};\n\n    return {\n      chat,\n      query,\n      totalCount,\n      threadId,\n      foundIds,\n      isHistoryCalendarOpen: Boolean(selectTabState(global).historyCalendarSelectedAt),\n    };\n  },\n)(MobileSearchFooter));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiAvailableReaction, ApiMessage, ApiReaction } from '../../api/types';\nimport { LoadMoreDirection } from '../../types';\n\nimport { getReactionUniqueKey, isSameReaction } from '../../global/helpers';\nimport {\n  selectChatMessage,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dateFormat';\nimport { unique } from '../../util/iteratees';\nimport { formatIntegerCompact } from '../../util/textFormat';\n\nimport useFlag from '../../hooks/useFlag';\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Avatar from '../common/Avatar';\nimport FullNameTitle from '../common/FullNameTitle';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ReactionStaticEmoji from '../common/ReactionStaticEmoji';\nimport Button from '../ui/Button';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport Modal from '../ui/Modal';\n\nimport './ReactorListModal.scss';\n\nconst MIN_REACTIONS_COUNT_FOR_FILTERS = 10;\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\nexport type StateProps = Pick<ApiMessage, 'reactors' | 'reactions' | 'seenByDates'> & {\n  chatId?: string;\n  messageId?: number;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst ReactorListModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  reactors,\n  reactions,\n  chatId,\n  messageId,\n  seenByDates,\n  availableReactions,\n}) => {\n  const {\n    loadReactors,\n    closeReactorListModal,\n    openChat,\n  } = getActions();\n\n  // No need for expensive global updates on chats or users, so we avoid them\n  const chatsById = getGlobal().chats.byId;\n  const usersById = getGlobal().users.byId;\n\n  const lang = useLang();\n  const [isClosing, startClosing, stopClosing] = useFlag(false);\n  const [chosenTab, setChosenTab] = useState<ApiReaction | undefined>(undefined);\n  const canShowFilters = reactors && reactions && reactors.count >= MIN_REACTIONS_COUNT_FOR_FILTERS\n    && reactions.results.length > 1;\n  const chatIdRef = useRef<string>();\n\n  useEffect(() => {\n    if (isOpen && !isClosing) {\n      chatIdRef.current = undefined;\n    }\n\n    if (isClosing && !isOpen) {\n      stopClosing();\n      setChosenTab(undefined);\n    }\n  }, [isClosing, isOpen, stopClosing]);\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    if (chatIdRef.current) {\n      openChat({ id: chatIdRef.current });\n    }\n    closeReactorListModal();\n  });\n\n  const handleClose = useLastCallback(() => {\n    startClosing();\n  });\n\n  const handleClick = useLastCallback((userId: string) => {\n    chatIdRef.current = userId;\n    handleClose();\n  });\n\n  const handleLoadMore = useLastCallback(() => {\n    loadReactors({\n      chatId: chatId!,\n      messageId: messageId!,\n    });\n  });\n\n  const allReactions = useMemo(() => {\n    const uniqueReactions: ApiReaction[] = [];\n    reactors?.reactions?.forEach(({ reaction }) => {\n      if (!uniqueReactions.some((r) => isSameReaction(r, reaction))) {\n        uniqueReactions.push(reaction);\n      }\n    });\n    return uniqueReactions;\n  }, [reactors]);\n\n  const peerIds = useMemo(() => {\n    if (chosenTab) {\n      return reactors?.reactions\n        .filter(({ reaction }) => isSameReaction(reaction, chosenTab))\n        .map(({ peerId }) => peerId);\n    }\n\n    const seenByUserIds = Object.keys(seenByDates || {});\n\n    return unique(reactors?.reactions.map(({ peerId }) => peerId).concat(seenByUserIds || []) || []);\n  }, [chosenTab, reactors, seenByDates]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    handleLoadMore, peerIds, reactors && reactors.nextOffset === undefined,\n  );\n\n  useEffect(() => {\n    getMore?.({ direction: LoadMoreDirection.Backwards });\n  }, [getMore]);\n\n  return (\n    <Modal\n      isOpen={isOpen && !isClosing}\n      onClose={handleClose}\n      className=\"ReactorListModal narrow\"\n      title={lang('Reactions')}\n      onCloseAnimationEnd={handleCloseAnimationEnd}\n    >\n      {canShowFilters && (\n        <div className=\"Reactions\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button\n            className={buildClassName(!chosenTab && 'chosen')}\n            size=\"tiny\"\n            ripple\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setChosenTab(undefined)}\n          >\n            <i className=\"icon icon-heart\" />\n            {Boolean(reactors?.count) && formatIntegerCompact(reactors.count)}\n          </Button>\n          {allReactions.map((reaction) => {\n            const count = reactions?.results\n              .find((reactionsCount) => isSameReaction(reactionsCount.reaction, reaction))?.count;\n            return (\n              <Button\n                key={getReactionUniqueKey(reaction)}\n                className={buildClassName(isSameReaction(chosenTab, reaction) && 'chosen')}\n                size=\"tiny\"\n                ripple\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => setChosenTab(reaction)}\n              >\n                <ReactionStaticEmoji\n                  reaction={reaction}\n                  className=\"reaction-filter-emoji\"\n                  availableReactions={availableReactions}\n                />\n                {Boolean(count) && formatIntegerCompact(count)}\n              </Button>\n            );\n          })}\n        </div>\n      )}\n\n      <div dir={lang.isRtl ? 'rtl' : undefined} className=\"reactor-list-wrapper\">\n        {viewportIds?.length ? (\n          <InfiniteScroll\n            className=\"reactor-list custom-scroll\"\n            items={viewportIds}\n            onLoadMore={getMore}\n          >\n            {viewportIds?.flatMap(\n              (peerId) => {\n                const peer = usersById[peerId] || chatsById[peerId];\n\n                const peerReactions = reactors?.reactions.filter((reactor) => reactor.peerId === peerId);\n                const items: React.ReactNode[] = [];\n                const seenByUser = seenByDates?.[peerId];\n\n                peerReactions?.forEach((r) => {\n                  if (chosenTab && !isSameReaction(r.reaction, chosenTab)) return;\n\n                  items.push(\n                    <ListItem\n                      key={`${peerId}-${getReactionUniqueKey(r.reaction)}`}\n                      className=\"chat-item-clickable reactors-list-item\"\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => handleClick(peerId)}\n                    >\n                      <Avatar peer={peer} size=\"medium\" />\n                      <div className=\"info\">\n                        <FullNameTitle peer={peer} withEmojiStatus />\n                        <span className=\"status\" dir=\"auto\">\n                          <i className=\"icon icon-heart-outline status-icon\" />\n                          {formatDateAtTime(lang, r.addedDate * 1000)}\n                        </span>\n                      </div>\n                      {r.reaction && (\n                        <ReactionStaticEmoji\n                          className=\"reactors-list-emoji\"\n                          reaction={r.reaction}\n                          availableReactions={availableReactions}\n                        />\n                      )}\n                    </ListItem>,\n                  );\n                });\n\n                if (!chosenTab && !peerReactions?.length) {\n                  items.push(\n                    <ListItem\n                      key={`${peerId}-seen-by`}\n                      className=\"chat-item-clickable scroll-item small-icon\"\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => handleClick(peerId)}\n                    >\n                      <PrivateChatInfo\n                        userId={peerId}\n                        noStatusOrTyping\n                        avatarSize=\"medium\"\n                        status={seenByUser ? formatDateAtTime(lang, seenByUser * 1000) : undefined}\n                        statusIcon=\"message-read\"\n                      />\n                    </ListItem>,\n                  );\n                }\n                return items;\n              },\n            )}\n          </InfiniteScroll>\n        ) : <Loading />}\n      </div>\n      <Button\n        className=\"confirm-dialog-button\"\n        isText\n        onClick={handleClose}\n      >\n        {lang('Close')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).reactorModal || {};\n    const message = chatId && messageId ? selectChatMessage(global, chatId, messageId) : undefined;\n\n    return {\n      chatId,\n      messageId,\n      reactions: message?.reactions,\n      reactors: message?.reactors,\n      seenByDates: message?.seenByDates,\n      availableReactions: global.availableReactions,\n    };\n  },\n)(ReactorListModal));\n","import { fixImageContent } from '../../../../util/parseHtmlAsFormattedText';\n\nconst div = document.createElement('div');\n\nexport function getHtmlTextLength(html: string) {\n  div.innerHTML = html;\n  fixImageContent(div);\n  div.querySelectorAll('br').forEach((br) => {\n    br.replaceWith('\\n');\n  });\n  return div.textContent?.trim().length || 0;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ZqafRENXro3B4A2UTp9s\",\"preview\":\"FfTpBGrctDEiFLXC4aqP\",\"duration\":\"Igo3Vsou5areTsmh2Ng3\",\"single\":\"ZJNnn8HUzq8cC3WwTzY0\",\"no-grouping\":\"Aj1qc6z4t_pSWrsXi0qf\",\"noGrouping\":\"Aj1qc6z4t_pSWrsXi0qf\",\"file\":\"QAlzNLWBYdWR4UMMaiGm\",\"overlay\":\"YOoQRXIFINVsu3FFIKR0\",\"action-item\":\"y5JLmIFtCzK05l40rdHJ\",\"actionItem\":\"y5JLmIFtCzK05l40rdHJ\",\"delete-file\":\"Qqp72_dWGSui9ORCN3MT\",\"deleteFile\":\"Qqp72_dWGSui9ORCN3MT\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiAttachment } from '../../../api/types';\n\nimport { GIF_MIME_TYPE, SUPPORTED_IMAGE_CONTENT_TYPES, SUPPORTED_VIDEO_CONTENT_TYPES } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dateFormat';\nimport { getFileExtension } from '../../common/helpers/documentInfo';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport File from '../../common/File';\nimport MediaSpoiler from '../../common/MediaSpoiler';\n\nimport styles from './AttachmentModalItem.module.scss';\n\ntype OwnProps = {\n  attachment: ApiAttachment;\n  className?: string;\n  shouldDisplayCompressed?: boolean;\n  shouldDisplayGrouped?: boolean;\n  isSingle?: boolean;\n  index: number;\n  onDelete?: (index: number) => void;\n  onToggleSpoiler?: (index: number) => void;\n};\n\nconst BLUR_CANVAS_SIZE = 15 * REM;\n\nconst AttachmentModalItem: FC<OwnProps> = ({\n  attachment,\n  className,\n  isSingle,\n  shouldDisplayCompressed,\n  shouldDisplayGrouped,\n  index,\n  onDelete,\n  onToggleSpoiler,\n}) => {\n  const displayType = getDisplayType(attachment, shouldDisplayCompressed);\n\n  const handleSpoilerClick = useLastCallback(() => {\n    onToggleSpoiler?.(index);\n  });\n\n  const content = useMemo(() => {\n    switch (displayType) {\n      case 'image':\n        return (\n          <img\n            className={styles.preview}\n            src={attachment.blobUrl}\n            alt=\"\"\n            draggable={false}\n          />\n        );\n      case 'video':\n        return (\n          <>\n            {Boolean(attachment.quick?.duration) && (\n              <div className={styles.duration}>{formatMediaDuration(attachment.quick!.duration)}</div>\n            )}\n            <video\n              className={styles.preview}\n              src={attachment.blobUrl}\n              autoPlay\n              muted\n              loop\n              disablePictureInPicture\n            />\n          </>\n        );\n      default:\n        return (\n          <>\n            <File\n              className={styles.file}\n              name={attachment.filename}\n              extension={getFileExtension(attachment.filename, attachment.mimeType)}\n              previewData={attachment.previewBlobUrl}\n              size={attachment.size}\n              smaller\n            />\n            {onDelete && (\n              <i\n                className={buildClassName('icon', 'icon-delete', styles.actionItem, styles.deleteFile)}\n                onClick={() => onDelete(index)}\n              />\n            )}\n          </>\n        );\n    }\n  }, [attachment, displayType, index, onDelete]);\n\n  const shouldSkipGrouping = displayType === 'file' || !shouldDisplayGrouped;\n  const canDisplaySpoilerButton = attachment.mimeType !== GIF_MIME_TYPE;\n  const shouldDisplaySpoiler = Boolean(displayType !== 'file' && canDisplaySpoilerButton\n    && attachment.shouldSendAsSpoiler);\n  const shouldRenderOverlay = displayType !== 'file';\n\n  const rootClassName = buildClassName(\n    className, styles.root, isSingle && styles.single, shouldSkipGrouping && styles.noGrouping,\n  );\n\n  return (\n    <div className={rootClassName}>\n      {content}\n      <MediaSpoiler\n        isVisible={shouldDisplaySpoiler}\n        thumbDataUri={attachment.previewBlobUrl || attachment.blobUrl}\n        width={BLUR_CANVAS_SIZE}\n        height={BLUR_CANVAS_SIZE}\n      />\n      {shouldRenderOverlay && (\n        <div className={styles.overlay}>\n          {canDisplaySpoilerButton && (\n            <i\n              className={buildClassName(\n                'icon',\n                attachment.shouldSendAsSpoiler ? 'icon-spoiler-disable' : 'icon-spoiler',\n                styles.actionItem,\n              )}\n              onClick={handleSpoilerClick}\n            />\n          )}\n          {onDelete && (\n            <i\n              className={buildClassName('icon', 'icon-delete', styles.actionItem)}\n              onClick={() => onDelete(index)}\n            />\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nfunction getDisplayType(attachment: ApiAttachment, shouldDisplayCompressed?: boolean) {\n  if (shouldDisplayCompressed && attachment.quick) {\n    if (SUPPORTED_IMAGE_CONTENT_TYPES.has(attachment.mimeType)) {\n      return 'image';\n    }\n    if (SUPPORTED_VIDEO_CONTENT_TYPES.has(attachment.mimeType)) {\n      return 'video';\n    }\n  }\n  return 'file';\n}\n\nexport default memo(AttachmentModalItem);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"VncEpkgqABgA8MUCarxh\",\"mobile\":\"EBYYWwiG6Uj4Aqt4DKGy\",\"symbolMenuOpen\":\"eVLBe8iLKwjR6B31YwJj\",\"header-border\":\"u08mL9ikB7S0oRZKxvsA\",\"headerBorder\":\"u08mL9ikB7S0oRZKxvsA\",\"attachments\":\"d_uMaJ26HlkCfSn5XiQp\",\"attachments-bottom-padding\":\"DUGHCuTKi7H5d_1_vYqj\",\"attachmentsBottomPadding\":\"DUGHCuTKi7H5d_1_vYqj\",\"caption-wrapper\":\"BKyeut4mBbq_uw8uGfSU\",\"captionWrapper\":\"BKyeut4mBbq_uw8uGfSU\",\"caption-top-border\":\"UrYInfws7roRktEiMxvT\",\"captionTopBorder\":\"UrYInfws7roRktEiMxvT\",\"caption\":\"c4dyk1Emgpla8BvDJMAz\",\"drop-target\":\"iWmxxlUXOjTzbvJzWF8g\",\"dropTarget\":\"iWmxxlUXOjTzbvJzWF8g\",\"hovered\":\"B5wzgwCPupbnO1XB5Rwc\",\"send-wrapper\":\"z4wF5bBjL74eNUj_UYeu\",\"sendWrapper\":\"z4wF5bBjL74eNUj_UYeu\",\"send\":\"eFD46lVH5GCILXEOx9BO\",\"is-pointer-env\":\"Os76p3jpmhB2IWYxXigi\",\"isPointerEnv\":\"Os76p3jpmhB2IWYxXigi\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAttachment, ApiChatMember, ApiSticker,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  EDITABLE_INPUT_MODAL_ID,\n  GIF_MIME_TYPE,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { isUserId } from '../../../global/helpers';\nimport { selectChatFullInfo, selectIsChatWithSelf } from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { validateFiles } from '../../../util/files';\nimport { removeAllSelections } from '../../../util/selection';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\nimport { getHtmlTextLength } from './helpers/getHtmlTextLength';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useGetSelectionRange from '../../../hooks/useGetSelectionRange';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useCustomEmojiTooltip from './hooks/useCustomEmojiTooltip';\nimport useEmojiTooltip from './hooks/useEmojiTooltip';\nimport useMentionTooltip from './hooks/useMentionTooltip';\n\nimport Button from '../../ui/Button';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\nimport Modal from '../../ui/Modal';\nimport AttachmentModalItem from './AttachmentModalItem';\nimport CustomEmojiTooltip from './CustomEmojiTooltip.async';\nimport CustomSendMenu from './CustomSendMenu.async';\nimport EmojiTooltip from './EmojiTooltip.async';\nimport MentionTooltip from './MentionTooltip';\nimport MessageInput from './MessageInput';\nimport SymbolMenuButton from './SymbolMenuButton';\n\nimport styles from './AttachmentModal.module.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  attachments: ApiAttachment[];\n  getHtml: Signal<string>;\n  canShowCustomSendMenu?: boolean;\n  isReady: boolean;\n  isForMessage?: boolean;\n  shouldSchedule?: boolean;\n  shouldSuggestCompression?: boolean;\n  shouldForceCompression?: boolean;\n  shouldForceAsFile?: boolean;\n  isForCurrentMessageList?: boolean;\n  forceDarkTheme?: boolean;\n  onCaptionUpdate: (html: string) => void;\n  onSend: (sendCompressed: boolean, sendGrouped: boolean) => void;\n  onFileAppend: (files: File[], isSpoiler?: boolean) => void;\n  onAttachmentsUpdate: (attachments: ApiAttachment[]) => void;\n  onClear: NoneToVoidFunction;\n  onSendSilent: (sendCompressed: boolean, sendGrouped: boolean) => void;\n  onSendScheduled: (sendCompressed: boolean, sendGrouped: boolean) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n};\n\ntype StateProps = {\n  isChatWithSelf?: boolean;\n  currentUserId?: string;\n  groupChatMembers?: ApiChatMember[];\n  recentEmojis: string[];\n  baseEmojiKeywords?: Record<string, string[]>;\n  emojiKeywords?: Record<string, string[]>;\n  shouldSuggestCustomEmoji?: boolean;\n  customEmojiForEmoji?: ApiSticker[];\n  captionLimit: number;\n  attachmentSettings: GlobalState['attachmentSettings'];\n};\n\nconst ATTACHMENT_MODAL_INPUT_ID = 'caption-input-text';\nconst DROP_LEAVE_TIMEOUT_MS = 150;\nconst MAX_LEFT_CHARS_TO_SHOW = 100;\n\nconst AttachmentModal: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  attachments,\n  getHtml,\n  canShowCustomSendMenu,\n  captionLimit,\n  isReady,\n  isChatWithSelf,\n  currentUserId,\n  groupChatMembers,\n  recentEmojis,\n  baseEmojiKeywords,\n  emojiKeywords,\n  isForMessage,\n  shouldSchedule,\n  shouldSuggestCustomEmoji,\n  customEmojiForEmoji,\n  attachmentSettings,\n  shouldSuggestCompression,\n  shouldForceCompression,\n  shouldForceAsFile,\n  isForCurrentMessageList,\n  forceDarkTheme,\n  onAttachmentsUpdate,\n  onCaptionUpdate,\n  onSend,\n  onFileAppend,\n  onClear,\n  onSendSilent,\n  onSendScheduled,\n  onCustomEmojiSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n}) => {\n  const { addRecentCustomEmoji, addRecentEmoji, updateAttachmentSettings } = getActions();\n\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const mainButtonRef = useRef<HTMLButtonElement | null>(null);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n\n  const hideTimeoutRef = useRef<number>();\n  const prevAttachments = usePrevious(attachments);\n  const renderingAttachments = attachments.length ? attachments : prevAttachments;\n  const { isMobile } = useAppLayout();\n\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n\n  const [shouldSendCompressed, setShouldSendCompressed] = useState(\n    shouldSuggestCompression ?? attachmentSettings.shouldCompress,\n  );\n  const isSendingCompressed = Boolean((shouldSendCompressed || shouldForceCompression) && !shouldForceAsFile);\n  const [shouldSendGrouped, setShouldSendGrouped] = useState(attachmentSettings.shouldSendGrouped);\n\n  const {\n    handleScroll: handleAttachmentsScroll,\n    isAtBeginning: areAttachmentsNotScrolled,\n    isAtEnd: areAttachmentsScrolledToBottom,\n  } = useScrolledState();\n\n  const { handleScroll: handleCaptionScroll, isAtBeginning: isCaptionNotScrolled } = useScrolledState();\n\n  const isOpen = Boolean(attachments.length);\n  const renderingIsOpen = Boolean(renderingAttachments?.length);\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  useEffect(() => {\n    if (!isOpen) {\n      closeSymbolMenu();\n    }\n  }, [closeSymbolMenu, isOpen]);\n\n  const [hasMedia, hasOnlyMedia] = useMemo(() => {\n    const onlyMedia = Boolean(renderingAttachments?.every((a) => a.quick || a.audio));\n    if (onlyMedia) return [true, true];\n    const oneMedia = Boolean(renderingAttachments?.some((a) => a.quick || a.audio));\n    return [oneMedia, false];\n  }, [renderingAttachments]);\n\n  const [hasSpoiler, isEverySpoiler] = useMemo(() => {\n    const areAllSpoilers = Boolean(renderingAttachments?.every((a) => a.shouldSendAsSpoiler));\n    if (areAllSpoilers) return [true, true];\n    const hasOneSpoiler = Boolean(renderingAttachments?.some((a) => a.shouldSendAsSpoiler));\n    return [hasOneSpoiler, false];\n  }, [renderingAttachments]);\n\n  const getSelectionRange = useGetSelectionRange(`#${EDITABLE_INPUT_MODAL_ID}`);\n\n  const {\n    isEmojiTooltipOpen,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n    closeEmojiTooltip,\n  } = useEmojiTooltip(\n    Boolean(isReady && (isForCurrentMessageList || !isForMessage) && renderingIsOpen),\n    getHtml,\n    onCaptionUpdate,\n    EDITABLE_INPUT_MODAL_ID,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    insertCustomEmoji,\n    closeCustomEmojiTooltip,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && (isForCurrentMessageList || !isForMessage) && renderingIsOpen && shouldSuggestCustomEmoji),\n    getHtml,\n    onCaptionUpdate,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isReady && isForCurrentMessageList && renderingIsOpen),\n    getHtml,\n    onCaptionUpdate,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    undefined,\n    currentUserId,\n  );\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClear) : undefined), [isOpen, onClear]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setShouldSendCompressed(shouldSuggestCompression ?? attachmentSettings.shouldCompress);\n      setShouldSendGrouped(attachmentSettings.shouldSendGrouped);\n    }\n  }, [attachmentSettings, isOpen, shouldSuggestCompression]);\n\n  useEffect(() => {\n    if (isOpen && isMobile) {\n      removeAllSelections();\n    }\n  }, [isMobile, isOpen]);\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !canShowCustomSendMenu || !isOpen);\n\n  const sendAttachments = useLastCallback((isSilent?: boolean, shouldSendScheduled?: boolean) => {\n    if (isOpen) {\n      const send = ((shouldSchedule || shouldSendScheduled) && isForMessage) ? onSendScheduled\n        : isSilent ? onSendSilent : onSend;\n      send(isSendingCompressed, shouldSendGrouped);\n      updateAttachmentSettings({\n        shouldCompress: shouldSuggestCompression === undefined ? isSendingCompressed : undefined,\n        shouldSendGrouped,\n      });\n    }\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendAttachments(true);\n  });\n\n  const handleSendClick = useLastCallback(() => {\n    sendAttachments();\n  });\n\n  const handleScheduleClick = useLastCallback(() => {\n    sendAttachments(false, true);\n  });\n\n  const handleDragLeave = (e: React.DragEvent<HTMLElement>) => {\n    const { relatedTarget: toTarget, target: fromTarget } = e;\n\n    // Esc button pressed during drag event\n    if ((fromTarget as HTMLDivElement).matches(`.${styles.dropTarget}`) && !toTarget) {\n      hideTimeoutRef.current = window.setTimeout(unmarkHovered, DROP_LEAVE_TIMEOUT_MS);\n    }\n\n    // Prevent DragLeave event from firing when the pointer moves inside the AttachmentModal drop target\n    if (fromTarget && (fromTarget as HTMLElement).closest(`.${styles.hovered}`)) {\n      return;\n    }\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    unmarkHovered();\n\n    const { dataTransfer } = e;\n\n    const files = await getFilesFromDataTransferItems(dataTransfer.items);\n    if (files?.length) {\n      onFileAppend(files, isEverySpoiler);\n    }\n  });\n\n  function handleDragOver(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.preventDefault();\n\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n      hideTimeoutRef.current = undefined;\n    }\n  }\n\n  const handleFileSelect = useLastCallback((e: Event) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileAppend(validatedFiles, isEverySpoiler);\n    }\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog('*', (e) => handleFileSelect(e));\n  });\n\n  const handleDelete = useLastCallback((index: number) => {\n    onAttachmentsUpdate(attachments.filter((a, i) => i !== index));\n  });\n\n  const handleEnableSpoilers = useLastCallback(() => {\n    onAttachmentsUpdate(attachments.map((a) => ({\n      ...a,\n      shouldSendAsSpoiler: a.mimeType !== GIF_MIME_TYPE ? true : undefined,\n    })));\n  });\n\n  const handleDisableSpoilers = useLastCallback(() => {\n    onAttachmentsUpdate(attachments.map((a) => ({ ...a, shouldSendAsSpoiler: undefined })));\n  });\n\n  const handleToggleSpoiler = useLastCallback((index: number) => {\n    onAttachmentsUpdate(attachments.map((attachment, i) => {\n      if (i === index) {\n        return {\n          ...attachment,\n          shouldSendAsSpoiler: !attachment.shouldSendAsSpoiler || undefined,\n        };\n      }\n\n      return attachment;\n    }));\n  });\n\n  useEffect(() => {\n    const mainButton = mainButtonRef.current;\n    const input = document.getElementById(ATTACHMENT_MODAL_INPUT_ID);\n\n    if (!mainButton || !input) return;\n\n    const { width } = mainButton.getBoundingClientRect();\n\n    requestMutation(() => {\n      input.style.setProperty('--margin-for-scrollbar', `${width}px`);\n    });\n  }, [lang, isOpen]);\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isMenuOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  const leftChars = useDerivedState(() => {\n    if (!renderingIsOpen) return undefined;\n\n    const leftCharsBeforeLimit = captionLimit - getHtmlTextLength(getHtml());\n    return leftCharsBeforeLimit <= MAX_LEFT_CHARS_TO_SHOW ? leftCharsBeforeLimit : undefined;\n  }, [captionLimit, getHtml, renderingIsOpen]);\n\n  const isQuickGallery = isSendingCompressed && hasOnlyMedia;\n\n  const [areAllPhotos, areAllVideos, areAllAudios] = useMemo(() => {\n    if (!isQuickGallery || !renderingAttachments) return [false, false, false];\n    const everyPhoto = renderingAttachments.every((a) => SUPPORTED_IMAGE_CONTENT_TYPES.has(a.mimeType));\n    const everyVideo = renderingAttachments.every((a) => SUPPORTED_VIDEO_CONTENT_TYPES.has(a.mimeType));\n    const everyAudio = renderingAttachments.every((a) => SUPPORTED_AUDIO_CONTENT_TYPES.has(a.mimeType));\n    return [everyPhoto, everyVideo, everyAudio];\n  }, [renderingAttachments, isQuickGallery]);\n\n  const hasAnySpoilerable = useMemo(() => {\n    if (!renderingAttachments) return false;\n    return renderingAttachments.some((a) => a.mimeType !== GIF_MIME_TYPE\n      && !SUPPORTED_AUDIO_CONTENT_TYPES.has(a.mimeType));\n  }, [renderingAttachments]);\n\n  if (!renderingAttachments) {\n    return undefined;\n  }\n\n  const isMultiple = renderingAttachments.length > 1;\n\n  let title = '';\n  if (areAllPhotos) {\n    title = lang('PreviewSender.SendPhoto', renderingAttachments.length, 'i');\n  } else if (areAllVideos) {\n    title = lang('PreviewSender.SendVideo', renderingAttachments.length, 'i');\n  } else if (areAllAudios) {\n    title = lang('PreviewSender.SendAudio', renderingAttachments.length, 'i');\n  } else {\n    title = lang('PreviewSender.SendFile', renderingAttachments.length, 'i');\n  }\n\n  function renderHeader() {\n    if (!renderingAttachments) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel=\"Cancel attachments\" onClick={onClear}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{title}</div>\n        <DropdownMenu\n          className=\"attachment-modal-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"add\" onClick={handleDocumentSelect}>{lang('Add')}</MenuItem>\n          {hasMedia && (\n            <>\n              {\n                !shouldForceAsFile && !shouldForceCompression && (isSendingCompressed ? (\n                  // eslint-disable-next-line react/jsx-no-bind\n                  <MenuItem icon=\"document\" onClick={() => setShouldSendCompressed(false)}>\n                    {lang(isMultiple ? 'Attachment.SendAsFiles' : 'Attachment.SendAsFile')}\n                  </MenuItem>\n                ) : (\n                  // eslint-disable-next-line react/jsx-no-bind\n                  <MenuItem icon=\"photo\" onClick={() => setShouldSendCompressed(true)}>\n                    {isMultiple ? 'Send All as Media' : 'Send as Media'}\n                  </MenuItem>\n                ))\n              }\n              {isSendingCompressed && hasAnySpoilerable && (\n                hasSpoiler ? (\n                  <MenuItem icon=\"spoiler-disable\" onClick={handleDisableSpoilers}>\n                    {lang('Attachment.DisableSpoiler')}\n                  </MenuItem>\n                ) : (\n                  <MenuItem icon=\"spoiler\" onClick={handleEnableSpoilers}>\n                    {lang('Attachment.EnableSpoiler')}\n                  </MenuItem>\n                )\n              )}\n            </>\n          )}\n          {isMultiple && (\n            shouldSendGrouped ? (\n              <MenuItem\n                icon=\"grouped-disable\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => setShouldSendGrouped(false)}\n              >\n                Ungroup All Media\n              </MenuItem>\n            ) : (\n              // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"grouped\" onClick={() => setShouldSendGrouped(true)}>\n                Group All Media\n              </MenuItem>\n            )\n          )}\n        </DropdownMenu>\n      </div>\n    );\n  }\n\n  const isBottomDividerShown = !areAttachmentsScrolledToBottom || !isCaptionNotScrolled;\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClear}\n      header={renderHeader()}\n      className={buildClassName(\n        styles.root,\n        isHovered && styles.hovered,\n        !areAttachmentsNotScrolled && styles.headerBorder,\n        isMobile && styles.mobile,\n        isSymbolMenuOpen && styles.symbolMenuOpen,\n        forceDarkTheme && 'component-theme-dark',\n      )}\n      noBackdropClose\n    >\n      <div\n        className={styles.dropTarget}\n        onDragEnter={markHovered}\n        onDrop={handleFilesDrop}\n        onDragOver={handleDragOver}\n        onDragLeave={handleDragLeave}\n        onClick={unmarkHovered}\n        data-attach-description={lang('Preview.Dragging.AddItems', 10)}\n        data-dropzone\n      >\n        <div\n          className={buildClassName(\n            styles.attachments,\n            'custom-scroll',\n            isBottomDividerShown && styles.attachmentsBottomPadding,\n          )}\n          onScroll={handleAttachmentsScroll}\n        >\n          {renderingAttachments.map((attachment, i) => (\n            <AttachmentModalItem\n              attachment={attachment}\n              shouldDisplayCompressed={isSendingCompressed}\n              shouldDisplayGrouped={shouldSendGrouped}\n              isSingle={renderingAttachments.length === 1}\n              index={i}\n              key={attachment.uniqueId || i}\n              onDelete={handleDelete}\n              onToggleSpoiler={handleToggleSpoiler}\n            />\n          ))}\n        </div>\n        <div\n          className={buildClassName(\n            styles.captionWrapper,\n            isBottomDividerShown && styles.captionTopBorder,\n          )}\n        >\n          <MentionTooltip\n            isOpen={isMentionTooltipOpen}\n            filteredUsers={mentionFilteredUsers}\n            onInsertUserName={insertMention}\n            onClose={closeMentionTooltip}\n          />\n          <EmojiTooltip\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n          <CustomEmojiTooltip\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onCustomEmojiSelect={insertCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <div className={styles.caption}>\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              onCustomEmojiSelect={onCustomEmojiSelect}\n              onRemoveSymbol={onRemoveSymbol}\n              onEmojiSelect={onEmojiSelect}\n              isAttachmentModal\n              canSendPlainText\n              className=\"attachment-modal-symbol-menu with-menu-transitions\"\n              idPrefix=\"attachment\"\n              forceDarkTheme={forceDarkTheme}\n            />\n            <MessageInput\n              ref={inputRef}\n              id={ATTACHMENT_MODAL_INPUT_ID}\n              chatId={chatId}\n              threadId={threadId}\n              isAttachmentModalInput\n              customEmojiPrefix=\"attachment\"\n              isReady={isReady}\n              isActive={isOpen}\n              getHtml={getHtml}\n              editableInputId={EDITABLE_INPUT_MODAL_ID}\n              placeholder={lang('AddCaption')}\n              onUpdate={onCaptionUpdate}\n              onSend={handleSendClick}\n              onScroll={handleCaptionScroll}\n              canAutoFocus={Boolean(isReady && isForCurrentMessageList && attachments.length)}\n              captionLimit={leftChars}\n              shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n              onSuppressedFocus={closeSymbolMenu}\n            />\n            <div className={styles.sendWrapper}>\n              <Button\n                ref={mainButtonRef}\n                className={styles.send}\n                onClick={handleSendClick}\n                onContextMenu={canShowCustomSendMenu ? handleContextMenu : undefined}\n              >\n                {shouldSchedule ? lang('Next') : lang('Send')}\n              </Button>\n              {canShowCustomSendMenu && (\n                <CustomSendMenu\n                  isOpen={isCustomSendMenuOpen}\n                  canSchedule={isForMessage}\n                  onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n                  onSendSchedule={handleScheduleClick}\n                  onClose={handleContextMenuClose}\n                  onCloseAnimationEnd={handleContextMenuHide}\n                  isSavedMessages={isChatWithSelf}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const {\n      currentUserId,\n      recentEmojis,\n      customEmojis,\n      attachmentSettings,\n    } = global;\n\n    const chatFullInfo = !isUserId(chatId) ? selectChatFullInfo(global, chatId) : undefined;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const { language, shouldSuggestCustomEmoji } = global.settings.byKey;\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n\n    return {\n      isChatWithSelf,\n      currentUserId,\n      groupChatMembers: chatFullInfo?.members,\n      recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      shouldSuggestCustomEmoji,\n      customEmojiForEmoji: customEmojis.forEmoji.stickers,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      attachmentSettings,\n    };\n  },\n)(AttachmentModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiBotCommand, ApiUser } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport Avatar from '../../common/Avatar';\nimport ListItem from '../../ui/ListItem';\n\nimport './BotCommand.scss';\n\ntype OwnProps = {\n  botCommand: ApiBotCommand;\n  bot?: ApiUser;\n  withAvatar?: boolean;\n  focus?: boolean;\n  onClick: (botCommand: ApiBotCommand) => void;\n};\n\nconst BotCommand: FC<OwnProps> = ({\n  withAvatar,\n  focus,\n  botCommand,\n  bot,\n  onClick,\n}) => {\n  return (\n    <ListItem\n      key={botCommand.command}\n      className={buildClassName('BotCommand chat-item-clickable scroll-item', withAvatar && 'with-avatar')}\n      multiline\n      // eslint-disable-next-line react/jsx-no-bind\n      onClick={() => onClick(botCommand)}\n      focus={focus}\n    >\n      {withAvatar && (\n        <Avatar size=\"small\" peer={bot} />\n      )}\n      <div className=\"content-inner\">\n        <span className=\"title\">/{botCommand.command}</span>\n        <span className=\"subtitle\">{renderText(botCommand.description)}</span>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(BotCommand);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiBotCommand } from '../../../api/types';\n\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\n\nimport Menu from '../../ui/Menu';\nimport BotCommand from './BotCommand';\n\nimport './BotCommandMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  botCommands: ApiBotCommand[];\n  onClose: NoneToVoidFunction;\n};\n\nconst BotCommandMenu: FC<OwnProps> = ({\n  isOpen, botCommands, onClose,\n}) => {\n  const { sendBotCommand } = getActions();\n  const { isMobile } = useAppLayout();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose, undefined, isMobile);\n\n  const handleClick = useLastCallback((botCommand: ApiBotCommand) => {\n    sendBotCommand({\n      command: `/${botCommand.command}`,\n    });\n    onClose();\n  });\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      positionX=\"left\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotCommandMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n    >\n      {botCommands.map((botCommand) => (\n        <BotCommand\n          key={botCommand.command}\n          botCommand={botCommand}\n          onClick={handleClick}\n        />\n      ))}\n    </Menu>\n  );\n};\n\nexport default memo(BotCommandMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiBotCommand } from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport BotCommand from './BotCommand';\n\nimport './BotCommandTooltip.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withUsername?: boolean;\n  botCommands?: ApiBotCommand[];\n  getHtml: Signal<string>;\n  onClick: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n};\n\nconst BotCommandTooltip: FC<OwnProps> = ({\n  isOpen,\n  withUsername,\n  botCommands,\n  getHtml,\n  onClick,\n  onClose,\n}) => {\n  const { sendBotCommand } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n\n  const handleSendCommand = useLastCallback(({ botId, command }: ApiBotCommand) => {\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const bot = usersById[botId];\n\n    sendBotCommand({\n      command: `/${command}${withUsername && bot ? `@${bot.usernames![0].username}` : ''}`,\n    });\n    onClick();\n  });\n\n  const handleSelect = useLastCallback((botCommand: ApiBotCommand) => {\n    // We need an additional check because tooltip is updated with throttling\n    if (!botCommand.command.startsWith(getHtml().slice(1))) {\n      return false;\n    }\n\n    handleSendCommand(botCommand);\n    return true;\n  });\n\n  const selectedCommandIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: botCommands,\n    onSelect: handleSelect,\n    onClose,\n  });\n\n  useEffect(() => {\n    if (botCommands && !botCommands.length) {\n      onClose();\n    }\n  }, [botCommands, onClose]);\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedCommandIndex, containerRef);\n  }, [selectedCommandIndex]);\n\n  const prevCommands = usePrevious(botCommands && botCommands.length ? botCommands : undefined, shouldRender);\n  const renderedCommands = botCommands && !botCommands.length ? prevCommands : botCommands;\n\n  if (!shouldRender || (renderedCommands && !renderedCommands.length)) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'BotCommandTooltip composer-tooltip custom-scroll',\n    transitionClassNames,\n  );\n\n  return (\n    <div className={className} ref={containerRef}>\n      {renderedCommands && renderedCommands.map((chatBotCommand, index) => (\n        <BotCommand\n          key={`${chatBotCommand.botId}_${chatBotCommand.command}`}\n          botCommand={chatBotCommand}\n          // No need for expensive global updates on users and chats, so we avoid them\n          bot={getGlobal().users.byId[chatBotCommand.botId]}\n          withAvatar\n          onClick={handleSendCommand}\n          focus={selectedCommandIndex === index}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(BotCommandTooltip);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"o7fHB9vMHP_k5l9rZC2R\",\"emojiButton\":\"LzdBMbvLbmND0s2zfaff\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { GlobalActions } from '../../../global';\n\nimport { COMPOSER_EMOJI_SIZE_PICKER } from '../../../config';\nimport { selectIsChatWithSelf, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport StickerButton from '../../common/StickerButton';\nimport Loading from '../../ui/Loading';\n\nimport styles from './CustomEmojiTooltip.module.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  isOpen: boolean;\n  addRecentCustomEmoji: GlobalActions['addRecentCustomEmoji'];\n  onCustomEmojiSelect: (customEmoji: ApiSticker) => void;\n  onClose: NoneToVoidFunction;\n  noPlay?: boolean;\n};\n\ntype StateProps = {\n  customEmoji?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst CustomEmojiTooltip: FC<OwnProps & StateProps> = ({\n  isOpen,\n  addRecentCustomEmoji,\n  onCustomEmojiSelect,\n  onClose,\n  customEmoji,\n  isSavedMessages,\n  isCurrentUserPremium,\n  noPlay,\n}) => {\n  const { clearCustomEmojiForEmoji } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n  const prevStickers = usePrevious(customEmoji, true);\n  const displayedStickers = customEmoji || prevStickers;\n\n  useHorizontalScroll(containerRef);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n\n  const handleCustomEmojiSelect = useLastCallback((ce: ApiSticker) => {\n    if (!isOpen) return;\n    onCustomEmojiSelect(ce);\n    addRecentCustomEmoji({\n      documentId: ce.id,\n    });\n    clearCustomEmojiForEmoji();\n  });\n\n  const className = buildClassName(\n    styles.root,\n    'composer-tooltip custom-scroll-x',\n    transitionClassNames,\n    !displayedStickers?.length && styles.hidden,\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n    >\n      {shouldRender && displayedStickers ? (\n        displayedStickers.map((sticker) => (\n          <StickerButton\n            key={sticker.id}\n            sticker={sticker}\n            className={styles.emojiButton}\n            size={COMPOSER_EMOJI_SIZE_PICKER}\n            observeIntersection={observeIntersection}\n            onClick={handleCustomEmojiSelect}\n            clickArg={sticker}\n            isSavedMessages={isSavedMessages}\n            canViewSet\n            isCurrentUserPremium={isCurrentUserPremium}\n            noPlay={noPlay}\n          />\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { stickers: customEmoji } = global.customEmojis.forEmoji;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return { customEmoji, isSavedMessages, isCurrentUserPremium };\n  },\n)(CustomEmojiTooltip));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useState } from '../../../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../../hooks/useLang';\nimport useMouseInside from '../../../hooks/useMouseInside';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\n\nimport './CustomSendMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  isOpenToBottom?: boolean;\n  isSavedMessages?: boolean;\n  canSchedule?: boolean;\n  canScheduleUntilOnline?: boolean;\n  onSendSilent?: NoneToVoidFunction;\n  onSendSchedule?: NoneToVoidFunction;\n  onSendWhenOnline?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n};\n\nconst CustomSendMenu: FC<OwnProps> = ({\n  isOpen,\n  isOpenToBottom = false,\n  isSavedMessages,\n  canSchedule,\n  canScheduleUntilOnline,\n  onSendSilent,\n  onSendSchedule,\n  onSendWhenOnline,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const [displayScheduleUntilOnline, setDisplayScheduleUntilOnline] = useState(false);\n\n  const lang = useLang();\n\n  useEffectWithPrevDeps(([prevIsOpen]) => {\n    // Avoid context menu item shuffling when opened\n    if (isOpen && !prevIsOpen) {\n      setDisplayScheduleUntilOnline(Boolean(canScheduleUntilOnline));\n    }\n  }, [isOpen, canScheduleUntilOnline]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose\n      positionX=\"right\"\n      positionY={isOpenToBottom ? 'top' : 'bottom'}\n      className=\"CustomSendMenu with-menu-transitions\"\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n    >\n      {onSendSilent && <MenuItem icon=\"mute\" onClick={onSendSilent}>{lang('SendWithoutSound')}</MenuItem>}\n      {canSchedule && onSendSchedule && (\n        <MenuItem icon=\"schedule\" onClick={onSendSchedule}>\n          {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n        </MenuItem>\n      )}\n      {canSchedule && onSendSchedule && displayScheduleUntilOnline && (\n        <MenuItem icon=\"user-online\" onClick={onSendWhenOnline}>\n          {lang('SendWhenOnline')}\n        </MenuItem>\n      )}\n    </Menu>\n  );\n};\n\nexport default memo(CustomSendMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport { BASE_URL, IS_PACKAGED_ELECTRON } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { handleEmojiLoad, LOADED_EMOJIS } from '../../../util/emoji';\nimport { IS_EMOJI_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport './EmojiButton.scss';\n\ntype OwnProps = {\n  emoji: Emoji;\n  focus?: boolean;\n  onClick: (emoji: string, name: string) => void;\n};\n\nconst EmojiButton: FC<OwnProps> = ({\n  emoji, focus, onClick,\n}) => {\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    // Preventing safari from losing focus on Composer MessageInput\n    e.preventDefault();\n\n    onClick(emoji.native, emoji.id);\n  });\n\n  const className = buildClassName(\n    'EmojiButton',\n    focus && 'focus',\n  );\n\n  const src = `${IS_PACKAGED_ELECTRON ? BASE_URL : '.'}/img-apple-64/${emoji.image}.png`;\n  const isLoaded = LOADED_EMOJIS.has(src);\n\n  return (\n    <div\n      className={className}\n      onMouseDown={handleClick}\n      title={`:${emoji.names[0]}:`}\n    >\n      {IS_EMOJI_SUPPORTED ? emoji.native : (\n        <img\n          src={src}\n          className={!isLoaded ? 'opacity-transition shown' : undefined}\n          alt={emoji.native}\n          loading=\"lazy\"\n          data-path={src}\n          onLoad={!isLoaded ? handleEmojiLoad : undefined}\n          draggable={false}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(EmojiButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport './EmojiButton.scss';\n\nconst CUSTOM_EMOJI_SIZE = 32;\n\ntype OwnProps = {\n  emoji: ApiSticker;\n  focus?: boolean;\n  onClick?: (emoji: ApiSticker) => void;\n  observeIntersection?: ObserveFn;\n};\n\nconst CustomEmojiButton: FC<OwnProps> = ({\n  emoji, focus, onClick, observeIntersection,\n}) => {\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    // Preventing safari from losing focus on Composer MessageInput\n    e.preventDefault();\n\n    onClick?.(emoji);\n  });\n\n  const className = buildClassName(\n    'EmojiButton',\n    focus && 'focus',\n  );\n\n  return (\n    <div\n      className={className}\n      onMouseDown={handleClick}\n      title={emoji.emoji}\n    >\n      <CustomEmoji\n        documentId={emoji.id}\n        size={CUSTOM_EMOJI_SIZE}\n        withSharedAnimation\n        shouldPreloadPreview\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport findInViewport from '../../../util/findInViewport';\nimport isFullyVisible from '../../../util/isFullyVisible';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevDuringAnimation from '../../../hooks/usePrevDuringAnimation';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport Loading from '../../ui/Loading';\nimport CustomEmojiButton from './CustomEmojiButton';\nimport EmojiButton from './EmojiButton';\n\nimport './EmojiTooltip.scss';\n\nconst VIEWPORT_MARGIN = 8;\nconst EMOJI_BUTTON_WIDTH = 44;\nconst CLOSE_DURATION = 350;\n\nfunction setItemVisible(index: number, containerRef: Record<string, any>) {\n  const container = containerRef.current!;\n  if (!container) {\n    return;\n  }\n\n  const { visibleIndexes, allElements } = findInViewport(\n    container,\n    '.EmojiButton',\n    VIEWPORT_MARGIN,\n    true,\n    true,\n    true,\n  );\n\n  if (!allElements.length || !allElements[index]) {\n    return;\n  }\n  const first = visibleIndexes[0];\n  if (!visibleIndexes.includes(index)\n    || (index === first && !isFullyVisible(container, allElements[first], true))) {\n    const position = index > visibleIndexes[visibleIndexes.length - 1] ? 'start' : 'end';\n    const newLeft = position === 'start' ? index * EMOJI_BUTTON_WIDTH : 0;\n\n    animateHorizontalScroll(container, newLeft);\n  }\n}\n\nexport type OwnProps = {\n  isOpen: boolean;\n  emojis: Emoji[];\n  customEmojis: ApiSticker[];\n  onEmojiSelect: (text: string) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onClose: NoneToVoidFunction;\n  addRecentEmoji: ({ emoji }: { emoji: string }) => void;\n  addRecentCustomEmoji: ({ documentId }: { documentId: string }) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst EmojiTooltip: FC<OwnProps> = ({\n  isOpen,\n  emojis,\n  customEmojis,\n  onClose,\n  onEmojiSelect,\n  onCustomEmojiSelect,\n  addRecentEmoji,\n  addRecentCustomEmoji,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n  const listEmojis: (Emoji | ApiSticker)[] = usePrevDuringAnimation(\n    emojis.length ? [...customEmojis, ...emojis] : undefined, CLOSE_DURATION,\n  ) || [];\n\n  useHorizontalScroll(containerRef);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  const handleSelectEmoji = useLastCallback((emoji: Emoji) => {\n    onEmojiSelect(emoji.native);\n    addRecentEmoji({ emoji: emoji.id });\n  });\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n    addRecentCustomEmoji({ documentId: emoji.id });\n  });\n\n  const handleSelect = useLastCallback((emoji: Emoji | ApiSticker) => {\n    if ('native' in emoji) {\n      handleSelectEmoji(emoji);\n    } else {\n      handleCustomEmojiSelect(emoji);\n    }\n  });\n\n  const handleClick = useLastCallback((native: string, id: string) => {\n    onEmojiSelect(native);\n    addRecentEmoji({ emoji: id });\n  });\n\n  const handleCustomEmojiClick = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n    addRecentCustomEmoji({ documentId: emoji.id });\n  });\n\n  const selectedIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    isHorizontal: true,\n    items: listEmojis,\n    shouldRemoveSelectionOnReset: true,\n    onSelect: handleSelect,\n    onClose,\n  });\n\n  useEffectWithPrevDeps(([prevSelectedIndex]) => {\n    if (prevSelectedIndex === undefined || prevSelectedIndex === -1) {\n      return;\n    }\n\n    setItemVisible(selectedIndex, containerRef);\n  }, [selectedIndex]);\n\n  const className = buildClassName(\n    'EmojiTooltip composer-tooltip custom-scroll-x',\n    transitionClassNames,\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n    >\n      {shouldRender && listEmojis ? (\n        listEmojis.map((emoji, index) => (\n          'native' in emoji ? (\n            <EmojiButton\n              key={emoji.id}\n              emoji={emoji}\n              focus={selectedIndex === index}\n              onClick={handleClick}\n            />\n          ) : (\n            <CustomEmojiButton\n              key={emoji.id}\n              emoji={emoji}\n              focus={selectedIndex === index}\n              onClick={handleCustomEmojiClick}\n              observeIntersection={observeIntersection}\n            />\n          )\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(EmojiTooltip);\n","import type { FC, TeactNode } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiWebDocument } from '../../../../api/types';\n\nimport { getFirstLetters } from '../../../../util/textFormat';\nimport renderText from '../../../common/helpers/renderText';\nimport { preventMessageInputBlurWithBubbling } from '../../helpers/preventMessageInputBlur';\n\nimport useMedia from '../../../../hooks/useMedia';\n\nimport ListItem from '../../../ui/ListItem';\n\nimport './BaseResult.scss';\n\nexport type OwnProps = {\n  focus?: boolean;\n  thumbnail?: ApiWebDocument;\n  thumbUrl?: string;\n  title?: string;\n  description?: string;\n  transitionClassNames?: string;\n  onClick: NoneToVoidFunction;\n};\n\nconst BaseResult: FC<OwnProps> = ({\n  title,\n  description,\n  thumbnail,\n  thumbUrl,\n  focus,\n  transitionClassNames = '',\n  onClick,\n}) => {\n  let content: TeactNode | undefined;\n\n  const thumbnailDataUrl = useMedia(thumbnail ? `webDocument:${thumbnail.url}` : undefined);\n  thumbUrl = thumbUrl || thumbnailDataUrl;\n\n  if (thumbUrl) {\n    content = (\n      <img src={thumbUrl} className={transitionClassNames} alt=\"\" decoding=\"async\" draggable={false} />\n    );\n  } else if (title) {\n    content = getFirstLetters(title, 1);\n  }\n\n  return (\n    <ListItem\n      focus={focus}\n      className=\"BaseResult chat-item-clickable\"\n      onMouseDown={preventMessageInputBlurWithBubbling}\n      onClick={onClick}\n    >\n      <span className=\"thumb\">\n        {typeof content === 'string' ? renderText(content) : content}\n      </span>\n      <div className=\"content-inner\">\n        {title && (<div className=\"title\">{title}</div>)}\n        {description && (<div className=\"description\">{description}</div>)}\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(BaseResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineResult } from '../../../../api/types';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport BaseResult from './BaseResult';\n\nexport type OwnProps = {\n  focus?: boolean;\n  inlineResult: ApiBotInlineResult;\n  onClick: (result: ApiBotInlineResult) => void;\n};\n\nconst ArticleResult: FC<OwnProps> = ({ focus, inlineResult, onClick }) => {\n  const {\n    title, url, description, webThumbnail,\n  } = inlineResult;\n\n  const handleClick = useLastCallback(() => {\n    onClick(inlineResult);\n  });\n\n  return (\n    <BaseResult\n      focus={focus}\n      thumbnail={webThumbnail}\n      title={title || url}\n      description={description}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(ArticleResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineMediaResult, ApiBotInlineResult, ApiVideo } from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport GifButton from '../../../common/GifButton';\n\ntype OwnProps = {\n  inlineResult: ApiBotInlineMediaResult;\n  isSavedMessages?: boolean;\n  canSendGifs?: boolean;\n  observeIntersection: ObserveFn;\n  onClick: (result: ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean) => void;\n};\n\nconst GifResult: FC<OwnProps> = ({\n  inlineResult, isSavedMessages, canSendGifs, observeIntersection, onClick,\n}) => {\n  const { gif } = inlineResult;\n\n  const handleClick = useLastCallback((_gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => {\n    onClick(inlineResult, isSilent, shouldSchedule);\n  });\n\n  if (!gif) {\n    return undefined;\n  }\n\n  return (\n    <GifButton\n      gif={gif}\n      observeIntersection={observeIntersection}\n      className=\"chat-item-clickable\"\n      onClick={canSendGifs ? handleClick : undefined}\n      isSavedMessages={isSavedMessages}\n    />\n  );\n};\n\nexport default memo(GifResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type {\n  ApiBotInlineMediaResult, ApiBotInlineResult, ApiPhoto, ApiThumbnail, ApiWebDocument,\n} from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useMedia from '../../../../hooks/useMedia';\nimport useMediaTransition from '../../../../hooks/useMediaTransition';\n\nimport BaseResult from './BaseResult';\n\nimport './MediaResult.scss';\n\nexport type OwnProps = {\n  focus?: boolean;\n  isForGallery?: boolean;\n  inlineResult: ApiBotInlineMediaResult | ApiBotInlineResult;\n  onClick: (result: ApiBotInlineResult) => void;\n};\n\nconst MediaResult: FC<OwnProps> = ({\n  focus, isForGallery, inlineResult, onClick,\n}) => {\n  let photo: ApiPhoto | undefined;\n  let thumbnail: ApiThumbnail | undefined;\n  let webThumbnail: ApiWebDocument | undefined;\n\n  if ('photo' in inlineResult) {\n    photo = inlineResult.photo;\n  }\n  // For results with type=video (for example @stikstokbot)\n  if ('thumbnail' in inlineResult) {\n    thumbnail = inlineResult.thumbnail;\n  }\n  if ('webThumbnail' in inlineResult && isForGallery) {\n    webThumbnail = inlineResult.webThumbnail;\n  }\n\n  const thumbnailDataUrl = useMedia(webThumbnail ? `webDocument:${webThumbnail.url}` : undefined);\n  const mediaBlobUrl = useMedia(photo && `photo${photo.id}?size=m`);\n  const transitionClassNames = useMediaTransition(mediaBlobUrl);\n\n  const handleClick = useLastCallback(() => {\n    onClick(inlineResult);\n  });\n\n  if (isForGallery) {\n    return (\n      <div className=\"MediaResult chat-item-clickable\" onClick={handleClick}>\n        <img src={(photo?.thumbnail?.dataUri) || thumbnailDataUrl} alt=\"\" draggable={false} />\n        <img\n          src={mediaBlobUrl}\n          className={buildClassName('full-media', transitionClassNames)}\n          alt=\"\"\n          draggable={false}\n        />\n      </div>\n    );\n  }\n\n  const { title, description } = inlineResult;\n\n  return (\n    <BaseResult\n      focus={focus}\n      thumbUrl={mediaBlobUrl || (thumbnail?.dataUri || thumbnailDataUrl)}\n      transitionClassNames={transitionClassNames}\n      title={title}\n      description={description}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(MediaResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineMediaResult, ApiBotInlineResult } from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_INLINE_BOT_RESULT } from '../../../../config';\n\nimport StickerButton from '../../../common/StickerButton';\n\ntype OwnProps = {\n  inlineResult: ApiBotInlineMediaResult;\n  isSavedMessages?: boolean;\n  observeIntersection: ObserveFn;\n  onClick: (result: ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  isCurrentUserPremium?: boolean;\n};\n\nconst StickerResult: FC<OwnProps> = ({\n  inlineResult,\n  isSavedMessages,\n  observeIntersection,\n  onClick,\n  isCurrentUserPremium,\n}) => {\n  const { sticker } = inlineResult;\n\n  if (!sticker) {\n    return undefined;\n  }\n\n  return (\n    <StickerButton\n      sticker={sticker}\n      size={STICKER_SIZE_INLINE_BOT_RESULT}\n      observeIntersection={observeIntersection}\n      title={sticker.emoji}\n      className=\"chat-item-clickable\"\n      onClick={onClick}\n      clickArg={inlineResult}\n      isSavedMessages={isSavedMessages}\n      canViewSet\n      noShowPremium\n      isCurrentUserPremium={isCurrentUserPremium}\n    />\n  );\n};\n\nexport default memo(StickerResult);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiBotInlineMediaResult, ApiBotInlineResult, ApiBotInlineSwitchPm, ApiBotInlineSwitchWebview,\n} from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ListItem from '../../ui/ListItem';\nimport ArticleResult from './inlineResults/ArticleResult';\nimport GifResult from './inlineResults/GifResult';\nimport MediaResult from './inlineResults/MediaResult';\nimport StickerResult from './inlineResults/StickerResult';\n\nimport './InlineBotTooltip.scss';\n\nconst INTERSECTION_DEBOUNCE_MS = 200;\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nexport type OwnProps = {\n  isOpen: boolean;\n  botId?: string;\n  isGallery?: boolean;\n  inlineBotResults?: (ApiBotInlineResult | ApiBotInlineMediaResult)[];\n  switchPm?: ApiBotInlineSwitchPm;\n  switchWebview?: ApiBotInlineSwitchWebview;\n  isSavedMessages?: boolean;\n  canSendGifs?: boolean;\n  onSelectResult: (\n    inlineResult: ApiBotInlineMediaResult | ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean,\n  ) => void;\n  loadMore: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  isCurrentUserPremium?: boolean;\n};\n\nconst InlineBotTooltip: FC<OwnProps> = ({\n  isOpen,\n  botId,\n  isGallery,\n  inlineBotResults,\n  switchPm,\n  switchWebview,\n  isSavedMessages,\n  canSendGifs,\n  loadMore,\n  onClose,\n  onSelectResult,\n  isCurrentUserPremium,\n}) => {\n  const {\n    openChat,\n    startBot,\n    requestSimpleWebView,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n  const renderedIsGallery = useCurrentOrPrev(isGallery, shouldRender);\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    debounceMs: INTERSECTION_DEBOUNCE_MS,\n    isDisabled: !isOpen,\n  });\n\n  const handleLoadMore = useLastCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(loadMore);\n    }\n  });\n\n  const selectedIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    shouldRemoveSelectionOnReset: renderedIsGallery,\n    noArrowNavigation: renderedIsGallery,\n    items: inlineBotResults,\n    onSelect: onSelectResult,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedIndex, containerRef);\n  }, [selectedIndex]);\n\n  const handleSendPm = useLastCallback(() => {\n    openChat({ id: botId });\n    startBot({ botId: botId!, param: switchPm!.startParam });\n  });\n\n  const handleOpenWebview = useLastCallback(() => {\n    const theme = extractCurrentThemeParams();\n\n    requestSimpleWebView({\n      botId: botId!,\n      url: switchWebview!.url,\n      buttonText: switchWebview!.text,\n      theme,\n      isFromSwitchWebView: true,\n    });\n  });\n\n  const prevInlineBotResults = usePrevious(\n    inlineBotResults?.length\n      ? inlineBotResults\n      : undefined,\n    shouldRender,\n  );\n  const renderedInlineBotResults = inlineBotResults?.length ? inlineBotResults : prevInlineBotResults;\n\n  if (!shouldRender || !(renderedInlineBotResults?.length || switchPm)) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'InlineBotTooltip composer-tooltip',\n    IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n    renderedIsGallery && 'gallery',\n    transitionClassNames,\n  );\n\n  function renderSwitchPm() {\n    return (\n      <ListItem ripple className=\"switch-pm scroll-item\" onClick={handleSendPm}>\n        <span className=\"title\">{switchPm!.text}</span>\n      </ListItem>\n    );\n  }\n\n  function renderSwitchWebview() {\n    return (\n      <ListItem ripple className=\"switch-pm scroll-item\" onClick={handleOpenWebview}>\n        <span className=\"title\">{switchWebview!.text}</span>\n      </ListItem>\n    );\n  }\n\n  function renderContent() {\n    return renderedInlineBotResults!.map((inlineBotResult, index) => {\n      switch (inlineBotResult.type) {\n        case 'gif':\n          return (\n            <GifResult\n              key={inlineBotResult.id}\n              inlineResult={inlineBotResult}\n              observeIntersection={observeIntersection}\n              onClick={onSelectResult}\n              isSavedMessages={isSavedMessages}\n              canSendGifs={canSendGifs}\n            />\n          );\n\n        case 'photo':\n          return (\n            <MediaResult\n              key={inlineBotResult.id}\n              isForGallery={renderedIsGallery}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n\n        case 'sticker':\n          return (\n            <StickerResult\n              key={inlineBotResult.id}\n              inlineResult={inlineBotResult}\n              observeIntersection={observeIntersection}\n              onClick={onSelectResult}\n              isSavedMessages={isSavedMessages}\n              isCurrentUserPremium={isCurrentUserPremium}\n            />\n          );\n\n        case 'video':\n        case 'file':\n        case 'game':\n          return (\n            <MediaResult\n              key={inlineBotResult.id}\n              focus={selectedIndex === index}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n        case 'article':\n        case 'audio':\n        case 'voice':\n          return (\n            <ArticleResult\n              key={inlineBotResult.id}\n              focus={selectedIndex === index}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n\n        default:\n          return undefined;\n      }\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      ref={containerRef}\n      className={className}\n      items={renderedInlineBotResults}\n      itemSelector=\".chat-item-clickable\"\n      noFastList\n      onLoadMore={handleLoadMore}\n      sensitiveArea={160}\n    >\n      {switchPm && renderSwitchPm()}\n      {switchWebview && renderSwitchWebview()}\n      {Boolean(renderedInlineBotResults?.length) && renderContent()}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(InlineBotTooltip);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\n\nimport './MentionTooltip.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onInsertUserName: (user: ApiUser, forceFocus?: boolean) => void;\n  filteredUsers?: ApiUser[];\n};\n\nconst MentionTooltip: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  onInsertUserName,\n  filteredUsers,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n\n  const handleUserSelect = useLastCallback((userId: string, forceFocus = false) => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const user = usersById[userId];\n    if (!user) {\n      return;\n    }\n\n    onInsertUserName(user, forceFocus);\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent, id: string) => {\n    e.preventDefault();\n\n    handleUserSelect(id);\n  });\n\n  const handleSelectMention = useLastCallback((member: ApiUser) => {\n    handleUserSelect(member.id, true);\n  });\n\n  const selectedMentionIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: filteredUsers,\n    onSelect: handleSelectMention,\n    shouldSelectOnTab: true,\n    shouldSaveSelectionOnUpdateItems: true,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedMentionIndex, containerRef);\n  }, [selectedMentionIndex]);\n\n  useEffect(() => {\n    if (filteredUsers && !filteredUsers.length) {\n      onClose();\n    }\n  }, [filteredUsers, onClose]);\n\n  const prevChatMembers = usePrevious(\n    filteredUsers?.length\n      ? filteredUsers\n      : undefined,\n    shouldRender,\n  );\n  const renderedChatMembers = filteredUsers && !filteredUsers.length\n    ? prevChatMembers\n    : filteredUsers;\n\n  if (!shouldRender || (renderedChatMembers && !renderedChatMembers.length)) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'MentionTooltip composer-tooltip custom-scroll',\n    transitionClassNames,\n  );\n\n  return (\n    <div className={className} ref={containerRef}>\n      {renderedChatMembers?.map(({ id }, index) => (\n        <ListItem\n          key={id}\n          className=\"chat-item-clickable scroll-item smaller-icon\"\n          onClick={handleClick}\n          clickArg={id}\n          focus={selectedMentionIndex === index}\n        >\n          <PrivateChatInfo\n            userId={id}\n            avatarSize=\"small\"\n            withUsername\n          />\n        </ListItem>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(MentionTooltip);\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiNewPoll } from '../../../api/types';\n\nimport { requestMeasure, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport parseHtmlAsFormattedText from '../../../util/parseHtmlAsFormattedText';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Button from '../../ui/Button';\nimport Checkbox from '../../ui/Checkbox';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\nimport RadioGroup from '../../ui/RadioGroup';\nimport TextArea from '../../ui/TextArea';\n\nimport './PollModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  shouldBeAnonymous?: boolean;\n  isQuiz?: boolean;\n  onSend: (pollSummary: ApiNewPoll) => void;\n  onClear: () => void;\n};\n\nconst MAX_LIST_HEIGHT = 320;\nconst MAX_OPTIONS_COUNT = 10;\nconst MAX_OPTION_LENGTH = 100;\nconst MAX_QUESTION_LENGTH = 255;\nconst MAX_SOLUTION_LENGTH = 200;\n\nconst PollModal: FC<OwnProps> = ({\n  isOpen, isQuiz, shouldBeAnonymous, onSend, onClear,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const questionInputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const optionsListRef = useRef<HTMLDivElement>(null);\n\n  const [question, setQuestion] = useState<string>('');\n  const [options, setOptions] = useState<string[]>(['']);\n  const [isAnonymous, setIsAnonymous] = useState(true);\n  const [isMultipleAnswers, setIsMultipleAnswers] = useState(false);\n  const [isQuizMode, setIsQuizMode] = useState(isQuiz || false);\n  const [solution, setSolution] = useState<string>('');\n  const [correctOption, setCorrectOption] = useState<number | undefined>();\n  const [hasErrors, setHasErrors] = useState<boolean>(false);\n\n  const lang = useLang();\n\n  const handleSolutionChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setSolution(e.target.value);\n  });\n\n  const focusInput = useLastCallback((ref: RefObject<HTMLInputElement>) => {\n    if (isOpen && ref.current) {\n      ref.current.focus();\n    }\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClear) : undefined), [isOpen, onClear]);\n  useEffect(() => {\n    if (!isOpen) {\n      setQuestion('');\n      setOptions(['']);\n      setIsAnonymous(true);\n      setIsMultipleAnswers(false);\n      setIsQuizMode(isQuiz || false);\n      setSolution('');\n      setCorrectOption(undefined);\n      setHasErrors(false);\n    }\n  }, [isQuiz, isOpen]);\n\n  useEffect(() => focusInput(questionInputRef), [focusInput, isOpen]);\n\n  const addNewOption = useLastCallback((newOptions: string[] = []) => {\n    setOptions([...newOptions, '']);\n\n    requestNextMutation(() => {\n      const list = optionsListRef.current;\n      if (!list) {\n        return;\n      }\n\n      requestMeasure(() => {\n        list.scrollTo({ top: list.scrollHeight, behavior: 'smooth' });\n      });\n    });\n  });\n\n  const handleCreate = useLastCallback(() => {\n    setHasErrors(false);\n    if (!isOpen) {\n      return;\n    }\n\n    const isNoCorrectOptionError = isQuizMode && (correctOption === undefined || !options[correctOption].trim());\n\n    const answers = options\n      .map((text, index) => {\n        text = text.trim();\n\n        if (!text) return undefined;\n\n        return {\n          text,\n          option: String(index),\n          ...(index === correctOption && { correct: true }),\n        };\n      }).filter(Boolean);\n\n    const questionTrimmed = question.trim().substring(0, MAX_QUESTION_LENGTH);\n    if (!questionTrimmed || answers.length < 2) {\n      setQuestion(questionTrimmed);\n      if (answers.length) {\n        const optionsTrimmed = options.map((o) => o.trim().substring(0, MAX_OPTION_LENGTH)).filter(Boolean);\n        if (optionsTrimmed.length < 2) {\n          addNewOption(optionsTrimmed);\n        } else {\n          setOptions(optionsTrimmed);\n        }\n      } else {\n        addNewOption();\n      }\n      setHasErrors(true);\n      return;\n    }\n\n    if (isNoCorrectOptionError) {\n      setHasErrors(true);\n      return;\n    }\n\n    const payload: ApiNewPoll = {\n      summary: {\n        question: questionTrimmed,\n        answers,\n        ...(!isAnonymous && { isPublic: true }),\n        ...(isMultipleAnswers && { multipleChoice: true }),\n        ...(isQuizMode && { quiz: true }),\n      },\n    };\n\n    if (isQuizMode) {\n      const { text, entities } = (solution && parseHtmlAsFormattedText(solution.substring(0, MAX_SOLUTION_LENGTH)))\n        || {};\n\n      payload.quiz = {\n        correctAnswers: [String(correctOption)],\n        ...(text && { solution: text }),\n        ...(entities && { solutionEntities: entities }),\n      };\n    }\n\n    onSend(payload);\n  });\n\n  const updateOption = useLastCallback((index: number, text: string) => {\n    const newOptions = [...options];\n    newOptions[index] = text;\n    if (newOptions[newOptions.length - 1].trim().length && newOptions.length < MAX_OPTIONS_COUNT) {\n      addNewOption(newOptions);\n    } else {\n      setOptions(newOptions);\n    }\n  });\n\n  const removeOption = useLastCallback((index: number) => {\n    const newOptions = [...options];\n    newOptions.splice(index, 1);\n    setOptions(newOptions);\n\n    if (correctOption !== undefined) {\n      if (correctOption === index) {\n        setCorrectOption(undefined);\n      } else if (index < correctOption) {\n        setCorrectOption(correctOption - 1);\n      }\n    }\n\n    requestNextMutation(() => {\n      if (!optionsListRef.current) {\n        return;\n      }\n\n      optionsListRef.current.classList.toggle('overflown', optionsListRef.current.scrollHeight > MAX_LIST_HEIGHT);\n    });\n  });\n\n  const handleCorrectOptionChange = useLastCallback((newValue: string) => {\n    setCorrectOption(Number(newValue));\n  });\n\n  const handleIsAnonymousChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsAnonymous(e.target.checked);\n  });\n\n  const handleMultipleAnswersChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsMultipleAnswers(e.target.checked);\n  });\n\n  const handleQuizModeChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsQuizMode(e.target.checked);\n  });\n\n  const handleKeyPress = useLastCallback((e: React.KeyboardEvent<HTMLDivElement>) => {\n    if (e.keyCode === 13) {\n      handleCreate();\n    }\n  });\n\n  const handleQuestionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setQuestion(e.target.value);\n  });\n\n  const getQuestionError = useLastCallback(() => {\n    if (hasErrors && !question.trim().length) {\n      return lang('lng_polls_choose_question');\n    }\n\n    return undefined;\n  });\n\n  const getOptionsError = useLastCallback((index: number) => {\n    const optionsTrimmed = options.map((o) => o.trim()).filter((o) => o.length);\n    if (hasErrors && optionsTrimmed.length < 2 && !options[index].trim().length) {\n      return lang('lng_polls_choose_answers');\n    }\n    return undefined;\n  });\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\">\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel=\"Cancel poll creation\" onClick={onClear}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('NewPoll')}</div>\n        <Button\n          color=\"primary\"\n          size=\"smaller\"\n          className=\"modal-action-button\"\n          onClick={handleCreate}\n        >\n          {lang('Create')}\n        </Button>\n      </div>\n    );\n  }\n\n  function renderOptions() {\n    return options.map((option, index) => (\n      <div className=\"option-wrapper\">\n        <InputText\n          label={index !== options.length - 1 || options.length === MAX_OPTIONS_COUNT\n            ? lang('OptionHint')\n            : lang('CreatePoll.AddOption')}\n          error={getOptionsError(index)}\n          value={option}\n          // eslint-disable-next-line react/jsx-no-bind\n          onChange={(e) => updateOption(index, e.currentTarget.value)}\n          onKeyPress={handleKeyPress}\n        />\n        {index !== options.length - 1 && (\n          <Button\n            className=\"option-remove-button\"\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Delete')}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => removeOption(index)}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n        )}\n      </div>\n    ));\n  }\n\n  function renderRadioOptions() {\n    return renderOptions()\n      .map((label, index) => ({ value: String(index), label, hidden: !options[index].trim() }));\n  }\n\n  function renderQuizNoOptionError() {\n    const optionsTrimmed = options.map((o) => o.trim()).filter((o) => o.length);\n\n    return isQuizMode && (correctOption === undefined || !optionsTrimmed[correctOption]) && (\n      <p className=\"poll-error\">{lang('lng_polls_choose_correct')}</p>\n    );\n  }\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClear} header={renderHeader()} className=\"PollModal\">\n      <InputText\n        ref={questionInputRef}\n        label={lang('AskAQuestion')}\n        value={question}\n        error={getQuestionError()}\n        onChange={handleQuestionChange}\n        onKeyPress={handleKeyPress}\n      />\n      <div className=\"options-divider\" />\n\n      <div className=\"options-list custom-scroll\" ref={optionsListRef}>\n        <h3 className=\"options-header\">{lang('PollOptions')}</h3>\n\n        {hasErrors && renderQuizNoOptionError()}\n        {isQuizMode ? (\n          <RadioGroup\n            name=\"correctOption\"\n            options={renderRadioOptions()}\n            selected={String(correctOption)}\n            onChange={handleCorrectOptionChange}\n          />\n        ) : (\n          renderOptions()\n        )}\n\n      </div>\n\n      <div className=\"options-divider\" />\n\n      <div className=\"quiz-mode\">\n        {!shouldBeAnonymous && (\n          <Checkbox\n            label={lang('PollAnonymous')}\n            checked={isAnonymous}\n            onChange={handleIsAnonymousChange}\n          />\n        )}\n        <Checkbox\n          label={lang('PollMultiple')}\n          checked={isMultipleAnswers}\n          disabled={isQuizMode}\n          onChange={handleMultipleAnswersChange}\n        />\n        <Checkbox\n          label={lang('PollQuiz')}\n          checked={isQuizMode}\n          disabled={isMultipleAnswers || isQuiz !== undefined}\n          onChange={handleQuizModeChange}\n        />\n        {isQuizMode && (\n          <>\n            <h3 className=\"options-header\">{lang('lng_polls_solution_title')}</h3>\n            <TextArea\n              value={solution}\n              onChange={handleSolutionChange}\n              noReplaceNewlines\n            />\n            <div className=\"note\">{lang('CreatePoll.ExplanationInfo')}</div>\n          </>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PollModal);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiSendAsPeerId } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport ListItem from '../../ui/ListItem';\nimport Menu from '../../ui/Menu';\n\nimport './SendAsMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId?: string;\n  selectedSendAsId?: string;\n  sendAsPeerIds?: ApiSendAsPeerId[];\n  isCurrentUserPremium?: boolean;\n  onClose: () => void;\n};\n\nconst SendAsMenu: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  selectedSendAsId,\n  sendAsPeerIds,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { saveDefaultSendAs, showNotification } = getActions();\n\n  // No need for expensive global updates on users and chats, so we avoid them\n  const usersById = getGlobal().users.byId;\n  const chatsById = getGlobal().chats.byId;\n\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isOpen, onClose, undefined);\n\n  useEffect(() => {\n    if (isOpen) {\n      markMouseInside();\n    }\n  }, [isOpen, markMouseInside]);\n\n  const handleUserSelect = useLastCallback((id: string) => {\n    onClose();\n    saveDefaultSendAs({ chatId: chatId!, sendAsId: id });\n  });\n\n  const selectedSendAsIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: sendAsPeerIds,\n    onSelect: handleUserSelect,\n    shouldSelectOnTab: true,\n    shouldSaveSelectionOnUpdateItems: true,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedSendAsIndex, containerRef);\n  }, [selectedSendAsIndex]);\n\n  useEffect(() => {\n    if (sendAsPeerIds && !sendAsPeerIds.length) {\n      onClose();\n    }\n  }, [sendAsPeerIds, onClose]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      positionX=\"left\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"SendAsMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n    >\n      <div className=\"send-as-title\" dir=\"auto\">{lang('SendMessageAsTitle')}</div>\n      {usersById && chatsById && sendAsPeerIds?.map(({ id, isPremium }, index) => {\n        const user = usersById[id];\n        const chat = chatsById[id];\n        const peer = user || chat;\n\n        const handleClick = () => {\n          if (!isPremium || isCurrentUserPremium) {\n            handleUserSelect(id);\n          } else {\n            showNotification({\n              message: lang('SelectSendAsPeerPremiumHint'),\n              actionText: lang('Open'),\n              action: {\n                action: 'openPremiumModal',\n                payload: {},\n              },\n            });\n          }\n        };\n\n        const avatarClassName = buildClassName(selectedSendAsId === id && 'selected');\n\n        return (\n          <ListItem\n            key={id}\n            className=\"SendAsItem chat-item-clickable scroll-item with-avatar\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleClick}\n            focus={selectedSendAsIndex === index}\n            rightElement={!isCurrentUserPremium && isPremium\n              && <i className=\"icon icon-lock-badge send-as-icon-locked\" />}\n          >\n            <Avatar\n              size=\"small\"\n              peer={peer}\n              className={avatarClassName}\n            />\n            <div className=\"info\">\n              {peer && <FullNameTitle peer={peer} noFake />}\n              <span className=\"subtitle\">{user\n                ? lang('VoipGroupPersonalAccount')\n                : lang('Subscribers', chat?.membersCount, 'i')}\n              </span>\n            </div>\n          </ListItem>\n        );\n      })}\n    </Menu>\n  );\n};\n\nexport default memo(SendAsMenu);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"z2hl3sxq0tzStr0JpMxi\",\"video\":\"h6jE3TEaqlzbs0ro0J2_\",\"image\":\"ivo3DVINrp81Kb9ho9kA\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiStickerSet } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_PICKER_HEADER } from '../../../config';\nimport { getStickerPreviewHash } from '../../../global/helpers';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getFirstLetters } from '../../../util/textFormat';\nimport { IS_WEBM_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useColorFilter from '../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useCoordsInSharedCanvas from '../../../hooks/useCoordsInSharedCanvas';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useCustomEmoji from '../../common/hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\n\nimport styles from './StickerSetCover.module.scss';\n\ntype OwnProps = {\n  stickerSet: ApiStickerSet;\n  size?: number;\n  noPlay?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection: ObserveFn;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n};\n\nconst StickerSetCover: FC<OwnProps> = ({\n  stickerSet,\n  size = STICKER_SIZE_PICKER_HEADER,\n  noPlay,\n  forcePlayback,\n  observeIntersection,\n  sharedCanvasRef,\n}) => {\n  const { loadStickers } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const {\n    hasThumbnail, thumbCustomEmojiId, isLottie, isVideos: isVideo,\n  } = stickerSet;\n\n  const { customEmoji } = useCustomEmoji(thumbCustomEmojiId);\n  const hasCustomColor = customEmoji?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(containerRef, !hasCustomColor);\n  const colorFilter = useColorFilter(customColor);\n\n  const isIntersecting = useIsIntersecting(containerRef, observeIntersection);\n  const shouldPlay = isIntersecting && !noPlay;\n\n  const shouldFallbackToStatic = stickerSet.stickers && isVideo && !IS_WEBM_SUPPORTED;\n  const staticHash = shouldFallbackToStatic && getStickerPreviewHash(stickerSet.stickers![0].id);\n  const staticMediaData = useMedia(staticHash, !isIntersecting);\n\n  const mediaHash = ((hasThumbnail && !shouldFallbackToStatic) || isLottie) && `stickerSet${stickerSet.id}`;\n  const mediaData = useMedia(mediaHash, !isIntersecting);\n  const isReady = mediaData || staticMediaData;\n  const transitionClassNames = useMediaTransition(isReady);\n\n  const coords = useCoordsInSharedCanvas(containerRef, sharedCanvasRef);\n\n  useEffect(() => {\n    if (isIntersecting && !stickerSet.stickers?.length) {\n      loadStickers({\n        stickerSetInfo: {\n          id: stickerSet.id,\n          accessHash: stickerSet.accessHash,\n        },\n      });\n    }\n  }, [isIntersecting, loadStickers, stickerSet]);\n\n  return (\n    <div ref={containerRef} className={buildClassName(styles.root, 'sticker-set-cover')}>\n      {isReady ? (\n        isLottie ? (\n          <AnimatedSticker\n            className={transitionClassNames}\n            tgsUrl={mediaData}\n            size={size}\n            play={shouldPlay}\n            isLowPriority={!selectIsAlwaysHighPriorityEmoji(getGlobal(), stickerSet)}\n            sharedCanvas={sharedCanvasRef?.current || undefined}\n            sharedCanvasCoords={coords}\n            forceAlways={forcePlayback}\n          />\n        ) : (isVideo && !shouldFallbackToStatic) ? (\n          <OptimizedVideo\n            className={buildClassName(styles.video, transitionClassNames)}\n            src={mediaData}\n            canPlay={shouldPlay}\n            style={colorFilter}\n            isPriority={forcePlayback}\n            loop\n            disablePictureInPicture\n          />\n        ) : (\n          <img\n            src={mediaData || staticMediaData}\n            style={colorFilter}\n            className={buildClassName(styles.image, transitionClassNames)}\n            alt=\"\"\n            draggable={false}\n          />\n        )\n      ) : (\n        getFirstLetters(stickerSet.title, 2)\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerSetCover);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ThreadId } from '../../../types';\n\nimport { STICKER_SIZE_PICKER } from '../../../config';\nimport { selectIsChatWithSelf, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useSendMessageAction from '../../../hooks/useSendMessageAction';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport StickerButton from '../../common/StickerButton';\nimport Loading from '../../ui/Loading';\n\nimport './StickerTooltip.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isOpen: boolean;\n  onStickerSelect: (sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  stickers?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst StickerTooltip: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  onStickerSelect,\n  onClose,\n  stickers,\n  isSavedMessages,\n  isCurrentUserPremium,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n  const prevStickers = usePrevious(stickers, true);\n  const displayedStickers = stickers || prevStickers;\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n\n  const handleMouseMove = () => {\n    sendMessageAction({ type: 'chooseSticker' });\n  };\n\n  const className = buildClassName(\n    'StickerTooltip composer-tooltip custom-scroll',\n    transitionClassNames,\n    !(displayedStickers?.length) && 'hidden',\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      onMouseMove={handleMouseMove}\n    >\n      {shouldRender && displayedStickers ? (\n        displayedStickers.map((sticker) => (\n          <StickerButton\n            key={sticker.id}\n            sticker={sticker}\n            size={STICKER_SIZE_PICKER}\n            observeIntersection={observeIntersection}\n            onClick={isOpen ? onStickerSelect : undefined}\n            clickArg={sticker}\n            isSavedMessages={isSavedMessages}\n            canViewSet\n            isCurrentUserPremium={isCurrentUserPremium}\n          />\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { stickers } = global.stickers.forEmoji;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n    return { stickers, isSavedMessages, isCurrentUserPremium };\n  },\n)(StickerTooltip));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { EMOJI_SIZE_PICKER, RECENT_SYMBOL_SET_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport windowSize from '../../../util/windowSize';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport { useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\n\nimport EmojiButton from './EmojiButton';\n\nconst EMOJIS_PER_ROW_ON_DESKTOP = 8;\nconst EMOJI_MARGIN = 0.625 * REM;\nconst EMOJI_VERTICAL_MARGIN = 0.25 * REM;\nconst EMOJI_VERTICAL_MARGIN_MOBILE = 0.5 * REM;\nconst MOBILE_CONTAINER_PADDING = 0.5 * REM;\n\ntype OwnProps = {\n  category: EmojiCategory;\n  index: number;\n  allEmojis: AllEmojis;\n  observeIntersection: ObserveFn;\n  shouldRender: boolean;\n  onEmojiSelect: (emoji: string, name: string) => void;\n};\n\nconst EmojiCategory: FC<OwnProps> = ({\n  category, index, allEmojis, observeIntersection, shouldRender, onEmojiSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useOnIntersect(ref, observeIntersection);\n\n  const transitionClassNames = useMediaTransition(shouldRender);\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const emojisPerRow = isMobile\n    ? Math.floor(\n      (windowSize.get().width - MOBILE_CONTAINER_PADDING + EMOJI_MARGIN) / (EMOJI_SIZE_PICKER + EMOJI_MARGIN),\n    )\n    : EMOJIS_PER_ROW_ON_DESKTOP;\n  const height = Math.ceil(category.emojis.length / emojisPerRow)\n    * (EMOJI_SIZE_PICKER + (isMobile ? EMOJI_VERTICAL_MARGIN_MOBILE : EMOJI_VERTICAL_MARGIN));\n\n  return (\n    <div\n      ref={ref}\n      key={category.id}\n      id={`emoji-category-${index}`}\n      className=\"symbol-set\"\n    >\n      <div className=\"symbol-set-header\">\n        <p className=\"symbol-set-name\" dir=\"auto\">\n          {lang(category.id === RECENT_SYMBOL_SET_ID ? 'RecentStickers' : `Emoji${index}`)}\n        </p>\n      </div>\n      <div\n        className={buildClassName('symbol-set-container', transitionClassNames)}\n        style={`height: ${height}px;`}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldRender && category.emojis.map((name) => {\n          const emoji = allEmojis[name];\n          // Recent emojis may contain emoticons that are no longer in the list\n          if (!emoji) {\n            return undefined;\n          }\n          // Some emojis have multiple skins and are represented as an Object with emojis for all skins.\n          // For now, we select only the first emoji with 'neutral' skin.\n          const displayedEmoji = 'id' in emoji ? emoji : emoji[1];\n\n          return (\n            <EmojiButton\n              key={displayedEmoji.id}\n              emoji={displayedEmoji}\n              onClick={onEmojiSelect}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(EmojiCategory);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type {\n  EmojiData,\n  EmojiModule,\n  EmojiRawData,\n} from '../../../util/emoji';\n\nimport { MENU_TRANSITION_DURATION, RECENT_SYMBOL_SET_ID } from '../../../config';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport animateScroll from '../../../util/animateScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport { uncompressEmoji } from '../../../util/emoji';\nimport { pick } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Button from '../../ui/Button';\nimport Loading from '../../ui/Loading';\nimport EmojiCategory from './EmojiCategory';\n\nimport './EmojiPicker.scss';\n\ntype OwnProps = {\n  className?: string;\n  onEmojiSelect: (emoji: string, name: string) => void;\n};\n\ntype StateProps = Pick<GlobalState, 'recentEmojis'>;\n\ntype EmojiCategoryData = { id: string; name: string; emojis: string[] };\n\nconst ICONS_BY_CATEGORY: Record<string, string> = {\n  recent: 'icon-recent',\n  people: 'icon-smile',\n  nature: 'icon-animals',\n  foods: 'icon-eats',\n  activity: 'icon-sport',\n  places: 'icon-car',\n  objects: 'icon-lamp',\n  symbols: 'icon-language',\n  flags: 'icon-flag',\n};\n\nconst OPEN_ANIMATION_DELAY = 200;\nconst SMOOTH_SCROLL_DISTANCE = 100;\nconst FOCUS_MARGIN = 3.25 * REM;\nconst HEADER_BUTTON_WIDTH = 2.625 * REM; // Includes margins\nconst INTERSECTION_THROTTLE = 200;\n\nconst categoryIntersections: boolean[] = [];\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nconst EmojiPicker: FC<OwnProps & StateProps> = ({\n  className,\n  recentEmojis,\n  onEmojiSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n\n  const [categories, setCategories] = useState<EmojiCategoryData[]>();\n  const [emojis, setEmojis] = useState<AllEmojis>();\n  const [activeCategoryIndex, setActiveCategoryIndex] = useState(0);\n  const { isMobile } = useAppLayout();\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const { observe: observeIntersection } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  }, (entries) => {\n    entries.forEach((entry) => {\n      const { id } = entry.target as HTMLDivElement;\n      if (!id || !id.startsWith('emoji-category-')) {\n        return;\n      }\n\n      const index = Number(id.replace('emoji-category-', ''));\n      categoryIntersections[index] = entry.isIntersecting;\n    });\n\n    const minIntersectingIndex = categoryIntersections.reduce((lowestIndex, isIntersecting, index) => {\n      return isIntersecting && index < lowestIndex ? index : lowestIndex;\n    }, Infinity);\n\n    if (minIntersectingIndex === Infinity) {\n      return;\n    }\n\n    setActiveCategoryIndex(minIntersectingIndex);\n  });\n\n  const canRenderContents = useAsyncRendering([], MENU_TRANSITION_DURATION);\n  const shouldRenderContent = emojis && canRenderContents;\n\n  useHorizontalScroll(headerRef, !(isMobile && shouldRenderContent));\n\n  // Scroll header when active set updates\n  useEffect(() => {\n    if (!categories) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeCategoryIndex * HEADER_BUTTON_WIDTH - header.offsetWidth / 2 + HEADER_BUTTON_WIDTH / 2;\n\n    animateHorizontalScroll(header, newLeft);\n  }, [categories, activeCategoryIndex]);\n\n  const lang = useLang();\n\n  const allCategories = useMemo(() => {\n    if (!categories) {\n      return MEMO_EMPTY_ARRAY;\n    }\n    const themeCategories = [...categories];\n    if (recentEmojis?.length) {\n      themeCategories.unshift({\n        id: RECENT_SYMBOL_SET_ID,\n        name: lang('RecentStickers'),\n        emojis: recentEmojis,\n      });\n    }\n\n    return themeCategories;\n  }, [categories, lang, recentEmojis]);\n\n  // Initialize data on first render.\n  useEffect(() => {\n    setTimeout(() => {\n      const exec = () => {\n        setCategories(emojiData.categories);\n\n        setEmojis(emojiData.emojis as AllEmojis);\n      };\n\n      if (emojiData) {\n        exec();\n      } else {\n        ensureEmojiData()\n          .then(exec);\n      }\n    }, OPEN_ANIMATION_DELAY);\n  }, []);\n\n  const selectCategory = useLastCallback((index: number) => {\n    setActiveCategoryIndex(index);\n    const categoryEl = containerRef.current!.closest<HTMLElement>('.SymbolMenu-main')!\n      .querySelector(`#emoji-category-${index}`)! as HTMLElement;\n    animateScroll(containerRef.current!, categoryEl, 'start', FOCUS_MARGIN, SMOOTH_SCROLL_DISTANCE);\n  });\n\n  const handleEmojiSelect = useLastCallback((emoji: string, name: string) => {\n    onEmojiSelect(emoji, name);\n  });\n\n  function renderCategoryButton(category: EmojiCategoryData, index: number) {\n    const icon = ICONS_BY_CATEGORY[category.id];\n\n    return icon && (\n      <Button\n        className={`symbol-set-button ${index === activeCategoryIndex ? 'activated' : ''}`}\n        round\n        faded\n        color=\"translucent\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => selectCategory(index)}\n        ariaLabel={category.name}\n      >\n        <i className={buildClassName('icon', icon)} />\n      </Button>\n    );\n  }\n\n  const containerClassName = buildClassName('EmojiPicker', className);\n\n  if (!shouldRenderContent) {\n    return (\n      <div className={containerClassName}>\n        <Loading />\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    'EmojiPicker-header',\n    !shouldHideTopBorder && 'with-top-border',\n  );\n\n  return (\n    <div className={containerClassName}>\n      <div\n        ref={headerRef}\n        className={headerClassName}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {allCategories.map(renderCategoryButton)}\n      </div>\n      <div\n        ref={containerRef}\n        onScroll={handleContentScroll}\n        className={buildClassName('EmojiPicker-main', IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll')}\n      >\n        {allCategories.map((category, i) => (\n          <EmojiCategory\n            category={category}\n            index={i}\n            allEmojis={emojis}\n            observeIntersection={observeIntersection}\n            shouldRender={activeCategoryIndex >= i - 1 && activeCategoryIndex <= i + 1}\n            onEmojiSelect={handleEmojiSelect}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => pick(global, ['recentEmojis']),\n)(EmojiPicker));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiVideo } from '../../../api/types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { selectCurrentMessageList, selectIsChatWithSelf } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport GifButton from '../../common/GifButton';\nimport Loading from '../../ui/Loading';\n\nimport './GifPicker.scss';\n\ntype OwnProps = {\n  className: string;\n  loadAndPlay: boolean;\n  canSendGifs?: boolean;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n};\n\ntype StateProps = {\n  savedGifs?: ApiVideo[];\n  isSavedMessages?: boolean;\n};\n\nconst INTERSECTION_DEBOUNCE = 300;\n\nconst GifPicker: FC<OwnProps & StateProps> = ({\n  className,\n  loadAndPlay,\n  canSendGifs,\n  savedGifs,\n  isSavedMessages,\n  onGifSelect,\n}) => {\n  const { loadSavedGifs, saveGif } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, debounceMs: INTERSECTION_DEBOUNCE });\n\n  useEffect(() => {\n    if (loadAndPlay) {\n      loadSavedGifs();\n    }\n  }, [loadAndPlay, loadSavedGifs]);\n\n  const handleUnsaveClick = useLastCallback((gif: ApiVideo) => {\n    saveGif({ gif, shouldUnsave: true });\n  });\n\n  const canRenderContents = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n\n  return (\n    <div>\n      <div\n        ref={containerRef}\n        className={buildClassName('GifPicker', className, IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll')}\n      >\n        {!canSendGifs ? (\n          <div className=\"picker-disabled\">Sending GIFs is not allowed in this chat.</div>\n        ) : canRenderContents && savedGifs && savedGifs.length ? (\n          savedGifs.map((gif) => (\n            <GifButton\n              key={gif.id}\n              gif={gif}\n              observeIntersection={observeIntersection}\n              isDisabled={!loadAndPlay}\n              onClick={canSendGifs ? onGifSelect : undefined}\n              onUnsaveClick={handleUnsaveClick}\n              isSavedMessages={isSavedMessages}\n            />\n          ))\n        ) : canRenderContents && savedGifs ? (\n          <div className=\"picker-disabled\">No saved GIFs.</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n    return {\n      savedGifs: global.gifs.saved.gifs,\n      isSavedMessages,\n    };\n  },\n)(GifPicker));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiSticker, ApiStickerSet } from '../../../api/types';\nimport type { StickerSetOrReactionsSetOrRecent, ThreadId } from '../../../types';\n\nimport {\n  CHAT_STICKER_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  PREMIUM_STICKER_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  SLIDE_TRANSITION_DURATION,\n  STICKER_PICKER_MAX_SHARED_COVERS,\n  STICKER_SIZE_PICKER_HEADER,\n} from '../../../config';\nimport { isUserId } from '../../../global/helpers';\nimport {\n  selectChat, selectChatFullInfo, selectIsChatWithSelf, selectIsCurrentUserPremium, selectShouldLoopStickers,\n} from '../../../global/selectors';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport { pickTruthy, uniqueByField } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useSendMessageAction from '../../../hooks/useSendMessageAction';\nimport { useStickerPickerObservers } from '../../common/hooks/useStickerPickerObservers';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Avatar from '../../common/Avatar';\nimport PremiumIcon from '../../common/PremiumIcon';\nimport StickerButton from '../../common/StickerButton';\nimport StickerSet from '../../common/StickerSet';\nimport Button from '../../ui/Button';\nimport Loading from '../../ui/Loading';\nimport StickerSetCover from './StickerSetCover';\n\nimport styles from './StickerPicker.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className: string;\n  isHidden?: boolean;\n  isTranslucent?: boolean;\n  loadAndPlay: boolean;\n  canSendStickers?: boolean;\n  noContextMenus?: boolean;\n  idPrefix: string;\n  onStickerSelect: (\n    sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean, canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  recentStickers: ApiSticker[];\n  favoriteStickers: ApiSticker[];\n  premiumStickers: ApiSticker[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  chatStickerSetId?: string;\n  addedSetIds?: string[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst HEADER_BUTTON_WIDTH = 2.5 * REM; // px (including margin)\n\nconst StickerPicker: FC<OwnProps & StateProps> = ({\n  chat,\n  threadId,\n  className,\n  isHidden,\n  isTranslucent,\n  loadAndPlay,\n  canSendStickers,\n  recentStickers,\n  favoriteStickers,\n  premiumStickers,\n  addedSetIds,\n  stickerSetsById,\n  chatStickerSetId,\n  canAnimate,\n  isSavedMessages,\n  isCurrentUserPremium,\n  noContextMenus,\n  idPrefix,\n  onStickerSelect,\n}) => {\n  const {\n    loadRecentStickers,\n    addRecentSticker,\n    unfaveSticker,\n    faveSticker,\n    removeRecentSticker,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const sendMessageAction = useSendMessageAction(chat!.id, threadId);\n\n  const prefix = `${idPrefix}-sticker-set`;\n  const {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForShowingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  } = useStickerPickerObservers(containerRef, headerRef, prefix, isHidden);\n\n  const lang = useLang();\n\n  const areAddedLoaded = Boolean(addedSetIds);\n\n  const allSets = useMemo(() => {\n    if (!addedSetIds) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    const defaultSets = [];\n\n    const existingAddedSetIds = Object.values(pickTruthy(stickerSetsById, addedSetIds));\n\n    if (favoriteStickers.length) {\n      defaultSets.push({\n        id: FAVORITE_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('FavoriteStickers'),\n        stickers: favoriteStickers,\n        count: favoriteStickers.length,\n      });\n    }\n\n    if (recentStickers.length) {\n      defaultSets.push({\n        id: RECENT_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('RecentStickers'),\n        stickers: recentStickers,\n        count: recentStickers.length,\n      });\n    }\n\n    if (isCurrentUserPremium) {\n      const addedPremiumStickers = existingAddedSetIds\n        .map(({ stickers }) => stickers?.filter((sticker) => sticker.hasEffect))\n        .flat()\n        .filter(Boolean);\n\n      const totalPremiumStickers = uniqueByField([...addedPremiumStickers, ...premiumStickers], 'id');\n\n      if (totalPremiumStickers.length) {\n        defaultSets.push({\n          id: PREMIUM_STICKER_SET_ID,\n          accessHash: '0',\n          title: lang('PremiumStickers'),\n          stickers: totalPremiumStickers,\n          count: totalPremiumStickers.length,\n        });\n      }\n    }\n\n    if (chatStickerSetId) {\n      const fullSet = stickerSetsById[chatStickerSetId];\n      if (fullSet) {\n        defaultSets.push({\n          id: CHAT_STICKER_SET_ID,\n          accessHash: fullSet.accessHash,\n          title: lang('GroupStickers'),\n          stickers: fullSet.stickers,\n          count: fullSet.stickers!.length,\n        });\n      }\n    }\n\n    return [\n      ...defaultSets,\n      ...existingAddedSetIds,\n    ];\n  }, [\n    addedSetIds, stickerSetsById, favoriteStickers, recentStickers, isCurrentUserPremium, chatStickerSetId, lang,\n    premiumStickers,\n  ]);\n\n  const noPopulatedSets = useMemo(() => (\n    areAddedLoaded\n    && allSets.filter((set) => set.stickers?.length).length === 0\n  ), [allSets, areAddedLoaded]);\n\n  useEffect(() => {\n    if (!loadAndPlay) return;\n    loadRecentStickers();\n    if (!canSendStickers) return;\n    sendMessageAction({ type: 'chooseSticker' });\n  }, [canSendStickers, loadAndPlay, loadRecentStickers, sendMessageAction]);\n\n  const canRenderContents = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n  const shouldRenderContents = areAddedLoaded && canRenderContents && !noPopulatedSets && canSendStickers;\n\n  useHorizontalScroll(headerRef, !shouldRenderContents || !headerRef.current);\n\n  // Scroll container and header when active set changes\n  useEffect(() => {\n    if (!areAddedLoaded) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeSetIndex * HEADER_BUTTON_WIDTH - (header.offsetWidth / 2 - HEADER_BUTTON_WIDTH / 2);\n\n    animateHorizontalScroll(header, newLeft);\n  }, [areAddedLoaded, activeSetIndex]);\n\n  const handleStickerSelect = useLastCallback((sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => {\n    onStickerSelect(sticker, isSilent, shouldSchedule, true);\n    addRecentSticker({ sticker });\n  });\n\n  const handleStickerUnfave = useLastCallback((sticker: ApiSticker) => {\n    unfaveSticker({ sticker });\n  });\n\n  const handleStickerFave = useLastCallback((sticker: ApiSticker) => {\n    faveSticker({ sticker });\n  });\n\n  const handleMouseMove = useLastCallback(() => {\n    if (!canSendStickers) return;\n    sendMessageAction({ type: 'chooseSticker' });\n  });\n\n  const handleRemoveRecentSticker = useLastCallback((sticker: ApiSticker) => {\n    removeRecentSticker({ sticker });\n  });\n\n  function renderCover(stickerSet: StickerSetOrReactionsSetOrRecent, index: number) {\n    const firstSticker = stickerSet.stickers?.[0];\n    const buttonClassName = buildClassName(styles.stickerCover, index === activeSetIndex && styles.activated);\n    const withSharedCanvas = index < STICKER_PICKER_MAX_SHARED_COVERS;\n\n    if (stickerSet.id === RECENT_SYMBOL_SET_ID\n      || stickerSet.id === FAVORITE_SYMBOL_SET_ID\n      || stickerSet.id === CHAT_STICKER_SET_ID\n      || stickerSet.id === PREMIUM_STICKER_SET_ID\n      || stickerSet.hasThumbnail\n      || !firstSticker\n    ) {\n      return (\n        <Button\n          key={stickerSet.id}\n          className={buttonClassName}\n          ariaLabel={stickerSet.title}\n          round\n          faded={stickerSet.id === RECENT_SYMBOL_SET_ID || stickerSet.id === FAVORITE_SYMBOL_SET_ID}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => selectStickerSet(index)}\n        >\n          {stickerSet.id === PREMIUM_STICKER_SET_ID ? (\n            <PremiumIcon withGradient big />\n          ) : stickerSet.id === RECENT_SYMBOL_SET_ID ? (\n            <i className=\"icon icon-recent\" />\n          ) : stickerSet.id === FAVORITE_SYMBOL_SET_ID ? (\n            <i className=\"icon icon-favorite\" />\n          ) : stickerSet.id === CHAT_STICKER_SET_ID ? (\n            <Avatar peer={chat} size=\"small\" />\n          ) : (\n            <StickerSetCover\n              stickerSet={stickerSet as ApiStickerSet}\n              noPlay={!canAnimate || !loadAndPlay}\n              observeIntersection={observeIntersectionForCovers}\n              sharedCanvasRef={withSharedCanvas ? sharedCanvasRef : undefined}\n              forcePlayback\n            />\n          )}\n        </Button>\n      );\n    } else {\n      return (\n        <StickerButton\n          key={stickerSet.id}\n          sticker={firstSticker}\n          size={STICKER_SIZE_PICKER_HEADER}\n          title={stickerSet.title}\n          className={buttonClassName}\n          noPlay={!canAnimate || !loadAndPlay}\n          observeIntersection={observeIntersectionForCovers}\n          noContextMenu\n          isCurrentUserPremium\n          sharedCanvasRef={withSharedCanvas ? sharedCanvasRef : undefined}\n          withTranslucentThumb={isTranslucent}\n          onClick={selectStickerSet}\n          clickArg={index}\n          forcePlayback\n        />\n      );\n    }\n  }\n\n  const fullClassName = buildClassName(styles.root, className);\n\n  if (!shouldRenderContents) {\n    return (\n      <div className={fullClassName}>\n        {!canSendStickers ? (\n          <div className={styles.pickerDisabled}>{lang('ErrorSendRestrictedStickersAll')}</div>\n        ) : noPopulatedSets ? (\n          <div className={styles.pickerDisabled}>{lang('NoStickers')}</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    styles.header,\n    'no-scrollbar',\n    !shouldHideTopBorder && styles.headerWithBorder,\n  );\n\n  return (\n    <div className={fullClassName}>\n      <div ref={headerRef} className={headerClassName}>\n        <div className=\"shared-canvas-container\">\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          {allSets.map(renderCover)}\n        </div>\n      </div>\n      <div\n        ref={containerRef}\n        onMouseMove={handleMouseMove}\n        onScroll={handleContentScroll}\n        className={buildClassName(styles.main, IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll')}\n      >\n        {allSets.map((stickerSet, i) => (\n          <StickerSet\n            key={stickerSet.id}\n            stickerSet={stickerSet}\n            loadAndPlay={Boolean(canAnimate && loadAndPlay)}\n            noContextMenus={noContextMenus}\n            index={i}\n            idPrefix={prefix}\n            observeIntersection={observeIntersectionForSet}\n            observeIntersectionForPlayingItems={observeIntersectionForPlayingItems}\n            observeIntersectionForShowingItems={observeIntersectionForShowingItems}\n            isNearActive={activeSetIndex >= i - 1 && activeSetIndex <= i + 1}\n            favoriteStickers={favoriteStickers}\n            isSavedMessages={isSavedMessages}\n            isCurrentUserPremium={isCurrentUserPremium}\n            isTranslucent={isTranslucent}\n            onStickerSelect={handleStickerSelect}\n            onStickerUnfave={handleStickerUnfave}\n            onStickerFave={handleStickerFave}\n            onStickerRemoveRecent={handleRemoveRecentSticker}\n            forcePlayback\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const {\n      setsById,\n      added,\n      recent,\n      favorite,\n      premiumSet,\n    } = global.stickers;\n\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const chat = selectChat(global, chatId);\n    const chatStickerSetId = !isUserId(chatId) ? selectChatFullInfo(global, chatId)?.stickerSet?.id : undefined;\n\n    return {\n      chat,\n      recentStickers: recent.stickers,\n      favoriteStickers: favorite.stickers,\n      premiumStickers: premiumSet.stickers,\n      stickerSetsById: setsById,\n      addedSetIds: added.setIds,\n      canAnimate: selectShouldLoopStickers(global),\n      isSavedMessages,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      chatStickerSetId,\n    };\n  },\n)(StickerPicker));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  activeTab: SymbolMenuTabs;\n  onSwitchTab: (tab: SymbolMenuTabs) => void;\n  onRemoveSymbol: () => void;\n  onSearchOpen: (type: 'stickers' | 'gifs') => void;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  canSearch?: boolean;\n};\n\nexport enum SymbolMenuTabs {\n  'Emoji',\n  'CustomEmoji',\n  'Stickers',\n  'GIFs',\n}\n\nexport const SYMBOL_MENU_TAB_TITLES: Record<SymbolMenuTabs, string> = {\n  [SymbolMenuTabs.Emoji]: 'Emoji',\n  [SymbolMenuTabs.CustomEmoji]: 'StickersList.EmojiItem',\n  [SymbolMenuTabs.Stickers]: 'AccDescrStickers',\n  [SymbolMenuTabs.GIFs]: 'GifsTab',\n};\n\nconst SYMBOL_MENU_TAB_ICONS = {\n  [SymbolMenuTabs.Emoji]: 'icon-smile',\n  [SymbolMenuTabs.CustomEmoji]: 'icon-favorite',\n  [SymbolMenuTabs.Stickers]: 'icon-stickers',\n  [SymbolMenuTabs.GIFs]: 'icon-gifs',\n};\n\nconst SymbolMenuFooter: FC<OwnProps> = ({\n  activeTab, onSwitchTab, onRemoveSymbol, onSearchOpen, isAttachmentModal,\n  canSendPlainText, canSearch,\n}) => {\n  const lang = useLang();\n\n  function renderTabButton(tab: SymbolMenuTabs) {\n    return (\n      <Button\n        className={`symbol-tab-button ${activeTab === tab ? 'activated' : ''}`}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => onSwitchTab(tab)}\n        ariaLabel={lang(SYMBOL_MENU_TAB_TITLES[tab])}\n        round\n        faded\n        color=\"translucent\"\n      >\n        <i className={buildClassName('icon', SYMBOL_MENU_TAB_ICONS[tab])} />\n      </Button>\n    );\n  }\n\n  const handleSearchOpen = useLastCallback(() => {\n    onSearchOpen(activeTab === SymbolMenuTabs.Stickers ? 'stickers' : 'gifs');\n  });\n\n  function stopPropagation(event: any) {\n    event.stopPropagation();\n  }\n\n  return (\n    <div className=\"SymbolMenu-footer\" onClick={stopPropagation} dir={lang.isRtl ? 'rtl' : undefined}>\n      {activeTab !== SymbolMenuTabs.Emoji && activeTab !== SymbolMenuTabs.CustomEmoji && canSearch && (\n        <Button\n          className=\"symbol-search-button\"\n          ariaLabel={activeTab === SymbolMenuTabs.Stickers ? 'Search Stickers' : 'Search GIFs'}\n          round\n          faded\n          color=\"translucent\"\n          onClick={handleSearchOpen}\n        >\n          <i className=\"icon icon-search\" />\n        </Button>\n      )}\n\n      {canSendPlainText && renderTabButton(SymbolMenuTabs.Emoji)}\n      {canSendPlainText && renderTabButton(SymbolMenuTabs.CustomEmoji)}\n      {!isAttachmentModal && renderTabButton(SymbolMenuTabs.Stickers)}\n      {!isAttachmentModal && renderTabButton(SymbolMenuTabs.GIFs)}\n\n      {(activeTab === SymbolMenuTabs.Emoji || activeTab === SymbolMenuTabs.CustomEmoji) && (\n        <Button\n          className=\"symbol-delete-button\"\n          onClick={onRemoveSymbol}\n          ariaLabel=\"Remove Symbol\"\n          round\n          faded\n          color=\"translucent\"\n        >\n          <i className=\"icon icon-delete-left\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SymbolMenuFooter);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { GlobalActions } from '../../../global';\nimport type { ThreadId } from '../../../types';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectIsContextMenuTranslucent, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport CustomEmojiPicker from '../../common/CustomEmojiPicker';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport Portal from '../../ui/Portal';\nimport Transition from '../../ui/Transition';\nimport EmojiPicker from './EmojiPicker';\nimport GifPicker from './GifPicker';\nimport StickerPicker from './StickerPicker';\nimport SymbolMenuFooter, { SYMBOL_MENU_TAB_TITLES, SymbolMenuTabs } from './SymbolMenuFooter';\n\nimport './SymbolMenu.scss';\n\nconst ANIMATION_DURATION = 350;\nconst STICKERS_TAB_INDEX = 2;\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isOpen: boolean;\n  canSendStickers?: boolean;\n  canSendGifs?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  onLoad: () => void;\n  onClose: () => void;\n  onEmojiSelect: (emoji: string) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: () => void;\n  onSearchOpen: (type: 'stickers' | 'gifs') => void;\n  addRecentEmoji: GlobalActions['addRecentEmoji'];\n  addRecentCustomEmoji: GlobalActions['addRecentCustomEmoji'];\n  className?: string;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  positionX?: 'left' | 'right';\n  positionY?: 'top' | 'bottom';\n  transformOriginX?: number;\n  transformOriginY?: number;\n  style?: string;\n};\n\ntype StateProps = {\n  isLeftColumnShown: boolean;\n  isBackgroundTranslucent?: boolean;\n};\n\nlet isActivated = false;\n\nconst SymbolMenu: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  canSendStickers,\n  canSendGifs,\n  isMessageComposer,\n  isLeftColumnShown,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  className,\n  positionX,\n  positionY,\n  transformOriginX,\n  transformOriginY,\n  style,\n  isBackgroundTranslucent,\n  onLoad,\n  onClose,\n  onEmojiSelect,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onSearchOpen,\n  addRecentEmoji,\n  addRecentCustomEmoji,\n}) => {\n  const [activeTab, setActiveTab] = useState<number>(0);\n  const [recentEmojis, setRecentEmojis] = useState<string[]>([]);\n  const [recentCustomEmojis, setRecentCustomEmojis] = useState<string[]>([]);\n  const { isMobile } = useAppLayout();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose, undefined, isMobile);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, onClose, false, false);\n\n  const lang = useLang();\n\n  if (!isActivated && isOpen) {\n    isActivated = true;\n  }\n\n  useEffect(() => {\n    onLoad();\n  }, [onLoad]);\n\n  // If we can't send plain text, we should always show the stickers tab\n  useEffect(() => {\n    if (canSendPlainText) return;\n    setActiveTab(STICKERS_TAB_INDEX);\n  }, [canSendPlainText]);\n\n  useLayoutEffect(() => {\n    if (!isMobile || !isOpen || isAttachmentModal) {\n      return undefined;\n    }\n\n    document.body.classList.add('enable-symbol-menu-transforms');\n    document.body.classList.add('is-symbol-menu-open');\n\n    return () => {\n      document.body.classList.remove('is-symbol-menu-open');\n\n      setTimeout(() => {\n        requestMutation(() => {\n          document.body.classList.remove('enable-symbol-menu-transforms');\n        });\n      }, ANIMATION_DURATION);\n    };\n  }, [isAttachmentModal, isMobile, isOpen]);\n\n  const recentEmojisRef = useRef(recentEmojis);\n  recentEmojisRef.current = recentEmojis;\n  useEffect(() => {\n    if (!recentEmojisRef.current.length || isOpen) {\n      return;\n    }\n\n    recentEmojisRef.current.forEach((name) => {\n      addRecentEmoji({ emoji: name });\n    });\n\n    setRecentEmojis([]);\n  }, [isOpen, addRecentEmoji]);\n\n  const handleEmojiSelect = useLastCallback((emoji: string, name: string) => {\n    setRecentEmojis((emojis) => [...emojis, name]);\n\n    onEmojiSelect(emoji);\n  });\n\n  const recentCustomEmojisRef = useRef(recentCustomEmojis);\n  recentCustomEmojisRef.current = recentCustomEmojis;\n  useEffect(() => {\n    if (!recentCustomEmojisRef.current.length || isOpen) {\n      return;\n    }\n\n    recentCustomEmojisRef.current.forEach((documentId) => {\n      addRecentCustomEmoji({\n        documentId,\n      });\n    });\n\n    setRecentEmojis([]);\n  }, [isOpen, addRecentCustomEmoji]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    setRecentCustomEmojis((ids) => [...ids, emoji.id]);\n\n    onCustomEmojiSelect(emoji);\n  });\n\n  const handleSearch = useLastCallback((type: 'stickers' | 'gifs') => {\n    onClose();\n    onSearchOpen(type);\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean, canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    onStickerSelect?.(sticker, isSilent, shouldSchedule, true, canUpdateStickerSetsOrder);\n  });\n\n  function renderContent(isActive: boolean, isFrom: boolean) {\n    switch (activeTab) {\n      case SymbolMenuTabs.Emoji:\n        return (\n          <EmojiPicker\n            className=\"picker-tab\"\n            onEmojiSelect={handleEmojiSelect}\n          />\n        );\n      case SymbolMenuTabs.CustomEmoji:\n        return (\n          <CustomEmojiPicker\n            className=\"picker-tab\"\n            isHidden={!isOpen || !isActive}\n            idPrefix={idPrefix}\n            loadAndPlay={isOpen && (isActive || isFrom)}\n            chatId={chatId}\n            isTranslucent={!isMobile && isBackgroundTranslucent}\n            onCustomEmojiSelect={handleCustomEmojiSelect}\n          />\n        );\n      case SymbolMenuTabs.Stickers:\n        return (\n          <StickerPicker\n            className=\"picker-tab\"\n            isHidden={!isOpen || !isActive}\n            loadAndPlay={canSendStickers ? isOpen && (isActive || isFrom) : false}\n            idPrefix={idPrefix}\n            canSendStickers={canSendStickers}\n            noContextMenus={!isMessageComposer}\n            chatId={chatId}\n            threadId={threadId}\n            isTranslucent={!isMobile && isBackgroundTranslucent}\n            onStickerSelect={handleStickerSelect}\n          />\n        );\n      case SymbolMenuTabs.GIFs:\n        return (\n          <GifPicker\n            className=\"picker-tab\"\n            loadAndPlay={canSendGifs ? isOpen && (isActive || isFrom) : false}\n            canSendGifs={canSendGifs}\n            onGifSelect={onGifSelect}\n          />\n        );\n    }\n\n    return undefined;\n  }\n\n  function stopPropagation(event: any) {\n    event.stopPropagation();\n  }\n\n  const content = (\n    <>\n      <div className=\"SymbolMenu-main\" onClick={stopPropagation}>\n        {isActivated && (\n          <Transition\n            name=\"slide\"\n            activeKey={activeTab}\n            renderCount={Object.values(SYMBOL_MENU_TAB_TITLES).length}\n          >\n            {renderContent}\n          </Transition>\n        )}\n      </div>\n      {isMobile && (\n        <Button\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={lang('Close')}\n          className=\"symbol-close-button\"\n          size=\"tiny\"\n          onClick={onClose}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n      )}\n      <SymbolMenuFooter\n        activeTab={activeTab}\n        onSwitchTab={setActiveTab}\n        onRemoveSymbol={onRemoveSymbol}\n        canSearch={isMessageComposer}\n        onSearchOpen={handleSearch}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n      />\n    </>\n  );\n\n  if (isMobile) {\n    if (!shouldRender) {\n      return undefined;\n    }\n\n    const mobileClassName = buildClassName(\n      'SymbolMenu mobile-menu',\n      transitionClassNames,\n      isLeftColumnShown && 'left-column-open',\n      isAttachmentModal && 'in-attachment-modal',\n      isMessageComposer && 'in-middle-column',\n    );\n\n    if (isAttachmentModal) {\n      return (\n        <div className={mobileClassName}>\n          {content}\n        </div>\n      );\n    }\n\n    return (\n      <Portal>\n        <div className={mobileClassName}>\n          {content}\n        </div>\n      </Portal>\n    );\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      positionX={isAttachmentModal ? positionX : 'left'}\n      positionY={isAttachmentModal ? positionY : 'bottom'}\n      onClose={onClose}\n      withPortal={isAttachmentModal}\n      className={buildClassName('SymbolMenu', className)}\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n      transformOriginX={transformOriginX}\n      transformOriginY={transformOriginY}\n      style={style}\n    >\n      {content}\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      isLeftColumnShown: selectTabState(global).isLeftColumnShown,\n      isBackgroundTranslucent: selectIsContextMenuTranslucent(global),\n    };\n  },\n)(SymbolMenu));\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport captureKeyboardListeners from '../../../../util/captureKeyboardListeners';\nimport cycleRestrict from '../../../../util/cycleRestrict';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport function useKeyboardNavigation({\n  isActive,\n  isHorizontal,\n  shouldSaveSelectionOnUpdateItems,\n  shouldRemoveSelectionOnReset,\n  noArrowNavigation,\n  items,\n  shouldSelectOnTab,\n  onSelect,\n  onClose,\n}: {\n  isActive: boolean;\n  isHorizontal?: boolean;\n  shouldSaveSelectionOnUpdateItems?: boolean;\n  shouldRemoveSelectionOnReset?: boolean;\n  noArrowNavigation?: boolean;\n  items?: any[];\n  shouldSelectOnTab?: boolean;\n  onSelect: (item: any) => void | boolean;\n  onClose: NoneToVoidFunction;\n}) {\n  const [selectedItemIndex, setSelectedItemIndex] = useState(-1);\n\n  const getSelectedIndex = useLastCallback((newIndex: number) => {\n    if (!items) {\n      return -1;\n    }\n\n    return cycleRestrict(items.length, newIndex);\n  });\n\n  const handleArrowKey = useLastCallback((value: number, e: KeyboardEvent) => {\n    e.preventDefault();\n    setSelectedItemIndex((index) => (getSelectedIndex(index + value)));\n  });\n\n  const handleItemSelect = useLastCallback((e: KeyboardEvent) => {\n    // Prevent action on key combinations\n    if (e.altKey || e.ctrlKey || e.metaKey || e.shiftKey) return false;\n    if (!isActive) return false;\n\n    if (items && items.length && selectedItemIndex > -1) {\n      const item = items[selectedItemIndex];\n      if (item) {\n        if (onSelect(item) === false) {\n          return false;\n        }\n\n        e.preventDefault();\n      }\n    }\n\n    return true;\n  });\n\n  const isSelectionOutOfRange = !items || selectedItemIndex > items.length - 1;\n  useEffect(() => {\n    if (!shouldSaveSelectionOnUpdateItems || isSelectionOutOfRange) {\n      setSelectedItemIndex(shouldRemoveSelectionOnReset ? -1 : 0);\n    }\n  }, [isSelectionOutOfRange, shouldRemoveSelectionOnReset, shouldSaveSelectionOnUpdateItems]);\n\n  useEffect(() => (isActive ? captureKeyboardListeners({\n    onEsc: onClose,\n    onUp: noArrowNavigation || isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(-1, e),\n    onDown: noArrowNavigation || isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(1, e),\n    onLeft: noArrowNavigation || !isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(-1, e),\n    onRight: noArrowNavigation || !isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(1, e),\n    onTab: shouldSelectOnTab ? handleItemSelect : undefined,\n    onEnter: handleItemSelect,\n  }) : undefined), [\n    noArrowNavigation, handleArrowKey, handleItemSelect, isActive, isHorizontal, onClose, shouldSelectOnTab,\n  ]);\n\n  return selectedItemIndex;\n}\n","import type { ApiFormattedText } from '../../../../api/types';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\n\nconst div = document.createElement('div');\nconst ALLOWED_QUOTE_ENTITIES = new Set([\n  ApiMessageEntityTypes.Bold,\n  ApiMessageEntityTypes.Italic,\n  ApiMessageEntityTypes.Underline,\n  ApiMessageEntityTypes.Strike,\n  ApiMessageEntityTypes.Spoiler,\n  ApiMessageEntityTypes.CustomEmoji,\n]);\n\nexport function getSelectionAsFormattedText(range: Range) {\n  const html = getSelectionAsHtml(range);\n  const formattedText = parseHtmlAsFormattedText(html, false, true);\n\n  return stripEntitiesForQuote(formattedText);\n}\n\nfunction getSelectionAsHtml(range: Range) {\n  const clonedSelection = range.cloneContents();\n  div.appendChild(clonedSelection);\n\n  const html = wrapHtmlWithMarkupTags(range, div.innerHTML);\n  div.innerHTML = '';\n\n  return html\n    .replace(/<br\\s*\\/?>/gi, '\\n')\n    .replace(/&nbsp;/gi, ' ') // Convert nbsp's to spaces\n    .replace(/\\u00a0/gi, ' ');\n}\n\nfunction stripEntitiesForQuote(text: ApiFormattedText): ApiFormattedText {\n  if (!text.entities) return text;\n\n  const entities = text.entities.filter((entity) => ALLOWED_QUOTE_ENTITIES.has(entity.type as ApiMessageEntityTypes));\n  return { ...text, entities: entities.length ? entities : undefined };\n}\n\nfunction wrapHtmlWithMarkupTags(range: Range, html: string) {\n  const container = range.commonAncestorContainer;\n  if (container.nodeType === Node.ELEMENT_NODE && (container as Element).classList.contains('text-content')) {\n    return html;\n  }\n  let currentElement = range.commonAncestorContainer.parentElement;\n  while (currentElement && !currentElement.classList.contains('text-content')) {\n    const tag = currentElement.tagName.toLowerCase();\n    const entityType = currentElement.dataset.entityType;\n    html = `<${tag} ${entityType ? `data-entity-type=\"${entityType}\"` : ''}>${html}</${tag}>`;\n    currentElement = currentElement.parentElement;\n  }\n\n  return html;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChatReactions, ApiMessage, ApiReaction, ApiStickerSet, ApiStickerSetInfo, ApiThreadInfo,\n} from '../../../api/types';\nimport type { MessageListType, TabState } from '../../../global/types';\nimport type { IAlbum, IAnchorPosition } from '../../../types';\n\nimport { PREVIEW_AVATAR_COUNT, SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport {\n  areReactionsEmpty,\n  getMessageVideo,\n  hasMessageTtl,\n  isActionMessage,\n  isChatChannel,\n  isChatGroup,\n  isMessageLocal,\n  isOwnMessage,\n  isUserId,\n} from '../../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectAllowedMessageActions,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectCanTranslateMessage,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsCurrentUserPremium,\n  selectIsMessageProtected,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectMessageCustomEmojiSets,\n  selectMessageLink,\n  selectMessageTranslations,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectStickerSet,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { getSelectionAsFormattedText } from './helpers/getSelectionAsFormattedText';\nimport { isSelectionRangeInsideMessage } from './helpers/isSelectionRangeInsideMessage';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useSchedule from '../../../hooks/useSchedule';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport DeleteMessageModal from '../../common/DeleteMessageModal';\nimport PinMessageModal from '../../common/PinMessageModal';\nimport ReportModal from '../../common/ReportModal';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport MessageContextMenu from './MessageContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  message: ApiMessage;\n  album?: IAlbum;\n  anchor: IAnchorPosition;\n  targetHref?: string;\n  messageListType: MessageListType;\n  noReplies?: boolean;\n  detectedLanguage?: string;\n  repliesThreadInfo?: ApiThreadInfo;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  availableReactions?: ApiAvailableReaction[];\n  topReactions?: ApiReaction[];\n  customEmojiSetsInfo?: ApiStickerSetInfo[];\n  customEmojiSets?: ApiStickerSet[];\n  noOptions?: boolean;\n  canSendNow?: boolean;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  canPin?: boolean;\n  canShowReactionsCount?: boolean;\n  canBuyPremium?: boolean;\n  canShowReactionList?: boolean;\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canEdit?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canTranslate?: boolean;\n  canShowOriginal?: boolean;\n  isMessageTranslated?: boolean;\n  canSelectLanguage?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  hasFullInfo?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  activeDownloads?: TabState['activeDownloads']['byChatId'][number];\n  canShowSeenBy?: boolean;\n  enabledReactions?: ApiChatReactions;\n  canScheduleUntilOnline?: boolean;\n  maxUniqueReactions?: number;\n  canPlayAnimatedEmojis?: boolean;\n  isReactionPickerOpen?: boolean;\n  messageLink?: string;\n};\n\nconst selection = window.getSelection();\n\nconst ContextMenuContainer: FC<OwnProps & StateProps> = ({\n  availableReactions,\n  topReactions,\n  isOpen,\n  messageListType,\n  message,\n  customEmojiSetsInfo,\n  customEmojiSets,\n  album,\n  anchor,\n  targetHref,\n  noOptions,\n  canSendNow,\n  hasFullInfo,\n  canReschedule,\n  canReply,\n  canPin,\n  repliesThreadInfo,\n  canUnpin,\n  canDelete,\n  canReport,\n  canShowReactionsCount,\n  canShowReactionList,\n  canEdit,\n  enabledReactions,\n  maxUniqueReactions,\n  isPrivate,\n  isCurrentUserPremium,\n  canForward,\n  canBuyPremium,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  canPlayAnimatedEmojis,\n  activeDownloads,\n  noReplies,\n  canShowSeenBy,\n  canScheduleUntilOnline,\n  canTranslate,\n  isMessageTranslated,\n  canShowOriginal,\n  canSelectLanguage,\n  isReactionPickerOpen,\n  messageLink,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    openThread,\n    updateDraftReplyInfo,\n    setEditingId,\n    pinMessage,\n    openForwardMenu,\n    faveSticker,\n    unfaveSticker,\n    toggleMessageSelection,\n    sendScheduledMessages,\n    rescheduleMessage,\n    downloadMessageMedia,\n    cancelMessageMediaDownload,\n    loadSeenBy,\n    openSeenByModal,\n    openReactorListModal,\n    loadFullChat,\n    loadReactors,\n    copyMessagesByIds,\n    saveGif,\n    loadStickers,\n    cancelPollVote,\n    closePoll,\n    toggleReaction,\n    requestMessageTranslation,\n    showOriginalMessage,\n    openChatLanguageModal,\n    openMessageReactionPicker,\n  } = getActions();\n\n  const lang = useLang();\n  const { transitionClassNames } = useShowTransition(isOpen, onCloseAnimationEnd, undefined, false);\n  const [isMenuOpen, setIsMenuOpen] = useState(true);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isReportModalOpen, setIsReportModalOpen] = useState(false);\n  const [isPinModalOpen, setIsPinModalOpen] = useState(false);\n  const [isClosePollDialogOpen, openClosePollDialog, closeClosePollDialog] = useFlag();\n  const [canQuoteSelection, setCanQuoteSelection] = useState(false);\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline, onClose, message.date);\n\n  // `undefined` indicates that emoji are present and loading\n  const hasCustomEmoji = customEmojiSetsInfo === undefined || Boolean(customEmojiSetsInfo.length);\n\n  useEffect(() => {\n    if (canShowSeenBy && isOpen) {\n      loadSeenBy({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [loadSeenBy, isOpen, message.chatId, message.id, canShowSeenBy]);\n\n  useEffect(() => {\n    if (canShowReactionsCount && isOpen) {\n      loadReactors({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [canShowReactionsCount, isOpen, loadReactors, message.chatId, message.id]);\n\n  useEffect(() => {\n    if (customEmojiSetsInfo?.length && customEmojiSets?.length !== customEmojiSetsInfo.length) {\n      customEmojiSetsInfo.forEach((set) => {\n        loadStickers({ stickerSetInfo: set });\n      });\n    }\n  }, [customEmojiSetsInfo, customEmojiSets, loadStickers]);\n\n  useEffect(() => {\n    if (!hasFullInfo && !isPrivate && isOpen) {\n      loadFullChat({ chatId: message.chatId });\n    }\n  }, [hasFullInfo, isOpen, isPrivate, loadFullChat, message.chatId]);\n\n  const seenByRecentPeers = useMemo(() => {\n    // No need for expensive global updates on chats or users, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n    const usersById = getGlobal().users.byId;\n    if (message.reactions?.recentReactions?.length) {\n      const uniqueReactors = new Set(message.reactions?.recentReactions?.map(\n        ({ peerId }) => usersById[peerId] || chatsById[peerId],\n      ));\n\n      return Array.from(uniqueReactors).filter(Boolean).slice(0, PREVIEW_AVATAR_COUNT);\n    }\n\n    if (!message.seenByDates) {\n      return undefined;\n    }\n\n    return Object.keys(message.seenByDates).slice(0, PREVIEW_AVATAR_COUNT)\n      .map((id) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [message.reactions?.recentReactions, message.seenByDates]);\n\n  const isDownloading = useMemo(() => {\n    if (album) {\n      return album.messages.some((msg) => {\n        return activeDownloads?.[message.isScheduled ? 'scheduledIds' : 'ids']?.includes(msg.id);\n      });\n    }\n\n    return activeDownloads?.[message.isScheduled ? 'scheduledIds' : 'ids']?.includes(message.id);\n  }, [activeDownloads, album, message]);\n\n  const selectionRange = canReply && selection?.rangeCount ? selection.getRangeAt(0) : undefined;\n\n  useEffect(() => {\n    if (isMessageTranslated) {\n      setCanQuoteSelection(false);\n      return;\n    }\n\n    const isMessageTextSelected = selectionRange\n      && !selectionRange.collapsed\n      && Boolean(message.content.text?.text)\n      && isSelectionRangeInsideMessage(selectionRange);\n\n    if (!isMessageTextSelected) {\n      setCanQuoteSelection(false);\n      return;\n    }\n\n    const selectionText = getSelectionAsFormattedText(selectionRange);\n\n    setCanQuoteSelection(\n      selectionText.text.trim().length > 0\n      && message.content.text!.text!.includes(selectionText.text),\n    );\n  }, [\n    selectionRange, selectionRange?.collapsed, selectionRange?.startOffset, selectionRange?.endOffset,\n    isMessageTranslated, message.content.text,\n  ]);\n\n  const handleDelete = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsDeleteModalOpen(true);\n  });\n\n  const handleReport = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsReportModalOpen(true);\n  });\n\n  const closeMenu = useLastCallback(() => {\n    setIsMenuOpen(false);\n    onClose();\n  });\n\n  const closeDeleteModal = useLastCallback(() => {\n    setIsDeleteModalOpen(false);\n    onClose();\n  });\n\n  const closeReportModal = useLastCallback(() => {\n    setIsReportModalOpen(false);\n    onClose();\n  });\n\n  const closePinModal = useLastCallback(() => {\n    setIsPinModalOpen(false);\n    onClose();\n  });\n\n  const handleReply = useLastCallback(() => {\n    updateDraftReplyInfo({\n      replyToMsgId: message.id,\n      quoteText: canQuoteSelection && selectionRange ? getSelectionAsFormattedText(selectionRange) : undefined,\n    });\n    closeMenu();\n  });\n\n  const handleOpenThread = useLastCallback(() => {\n    openThread({\n      chatId: message.chatId,\n      threadId: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleEdit = useLastCallback(() => {\n    setEditingId({ messageId: message.id });\n    closeMenu();\n  });\n\n  const handlePin = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsPinModalOpen(true);\n  });\n\n  const handleUnpin = useLastCallback(() => {\n    pinMessage({ messageId: message.id, isUnpin: true });\n    closeMenu();\n  });\n\n  const handleForward = useLastCallback(() => {\n    closeMenu();\n    if (album?.messages) {\n      const messageIds = album.messages.map(({ id }) => id);\n      openForwardMenu({ fromChatId: message.chatId, messageIds });\n    } else {\n      openForwardMenu({ fromChatId: message.chatId, messageIds: [message.id] });\n    }\n  });\n\n  const handleFaveSticker = useLastCallback(() => {\n    closeMenu();\n    faveSticker({ sticker: message.content.sticker! });\n  });\n\n  const handleUnfaveSticker = useLastCallback(() => {\n    closeMenu();\n    unfaveSticker({ sticker: message.content.sticker! });\n  });\n\n  const handleCancelVote = useLastCallback(() => {\n    closeMenu();\n    cancelPollVote({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handlePollClose = useLastCallback(() => {\n    closeMenu();\n    closePoll({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleSelectMessage = useLastCallback(() => {\n    const params = album?.messages\n      ? {\n        messageId: message.id,\n        childMessageIds: album.messages.map(({ id }) => id),\n        withShift: false,\n      }\n      : { messageId: message.id, withShift: false };\n\n    toggleMessageSelection(params);\n    closeMenu();\n  });\n\n  const handleScheduledMessageSend = useLastCallback(() => {\n    sendScheduledMessages({ chatId: message.chatId, id: message.id });\n    closeMenu();\n  });\n\n  const handleRescheduleMessage = useLastCallback((scheduledAt: number) => {\n    rescheduleMessage({\n      chatId: message.chatId,\n      messageId: message.id,\n      scheduledAt,\n    });\n    onClose();\n  });\n\n  const handleOpenCalendar = useLastCallback(() => {\n    setIsMenuOpen(false);\n    requestCalendar(handleRescheduleMessage);\n  });\n\n  const handleOpenSeenByModal = useLastCallback(() => {\n    closeMenu();\n    openSeenByModal({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleOpenReactorListModal = useLastCallback(() => {\n    closeMenu();\n    openReactorListModal({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleCopyMessages = useLastCallback((messageIds: number[]) => {\n    copyMessagesByIds({ messageIds });\n    closeMenu();\n  });\n\n  const handleCopyLink = useLastCallback(() => {\n    copyTextToClipboard(messageLink!);\n    closeMenu();\n  });\n\n  const handleCopyNumber = useLastCallback(() => {\n    copyTextToClipboard(message.content.contact!.phoneNumber);\n    closeMenu();\n  });\n\n  const handleDownloadClick = useLastCallback(() => {\n    (album?.messages || [message]).forEach((msg) => {\n      if (isDownloading) {\n        cancelMessageMediaDownload({ message: msg });\n      } else {\n        downloadMessageMedia({ message: msg });\n      }\n    });\n    closeMenu();\n  });\n\n  const handleSaveGif = useLastCallback(() => {\n    const video = getMessageVideo(message);\n    saveGif({ gif: video! });\n    closeMenu();\n  });\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    toggleReaction({\n      chatId: message.chatId, messageId: message.id, reaction, shouldAddToRecent: true,\n    });\n    closeMenu();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openMessageReactionPicker({ chatId: message.chatId, messageId: message.id, position });\n  });\n\n  const handleTranslate = useLastCallback(() => {\n    requestMessageTranslation({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleShowOriginal = useLastCallback(() => {\n    showOriginalMessage({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleSelectLanguage = useLastCallback(() => {\n    openChatLanguageModal({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n    closeMenu();\n  });\n\n  const reportMessageIds = useMemo(() => (album ? album.messages : [message]).map(({ id }) => id), [album, message]);\n\n  if (noOptions) {\n    closeMenu();\n\n    return undefined;\n  }\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  return (\n    <div className={buildClassName('ContextMenuContainer', transitionClassNames)}>\n      <MessageContextMenu\n        isReactionPickerOpen={isReactionPickerOpen}\n        availableReactions={availableReactions}\n        topReactions={topReactions}\n        message={message}\n        isPrivate={isPrivate}\n        isCurrentUserPremium={isCurrentUserPremium}\n        canBuyPremium={canBuyPremium}\n        isOpen={isMenuOpen}\n        enabledReactions={enabledReactions}\n        maxUniqueReactions={maxUniqueReactions}\n        anchor={anchor}\n        targetHref={targetHref}\n        canShowReactionsCount={canShowReactionsCount}\n        canShowReactionList={canShowReactionList}\n        canSendNow={canSendNow}\n        canReschedule={canReschedule}\n        canReply={canReply}\n        canQuote={canQuoteSelection}\n        canDelete={canDelete}\n        canReport={canReport}\n        canPin={canPin}\n        repliesThreadInfo={repliesThreadInfo}\n        canUnpin={canUnpin}\n        canEdit={canEdit}\n        canForward={canForward}\n        canFaveSticker={canFaveSticker}\n        canUnfaveSticker={canUnfaveSticker}\n        canCopy={canCopy}\n        canCopyLink={canCopyLink}\n        canSelect={canSelect}\n        canDownload={canDownload}\n        canSaveGif={canSaveGif}\n        canRevote={canRevote}\n        canClosePoll={canClosePoll}\n        canShowSeenBy={canShowSeenBy}\n        canTranslate={canTranslate}\n        canShowOriginal={canShowOriginal}\n        canSelectLanguage={canSelectLanguage}\n        canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        hasCustomEmoji={hasCustomEmoji}\n        customEmojiSets={customEmojiSets}\n        isDownloading={isDownloading}\n        seenByRecentPeers={seenByRecentPeers}\n        noReplies={noReplies}\n        onOpenThread={handleOpenThread}\n        onReply={handleReply}\n        onEdit={handleEdit}\n        onPin={handlePin}\n        onUnpin={handleUnpin}\n        onForward={handleForward}\n        onDelete={handleDelete}\n        onReport={handleReport}\n        onFaveSticker={handleFaveSticker}\n        onUnfaveSticker={handleUnfaveSticker}\n        onSelect={handleSelectMessage}\n        onSend={handleScheduledMessageSend}\n        onReschedule={handleOpenCalendar}\n        onClose={closeMenu}\n        onCopyLink={handleCopyLink}\n        onCopyMessages={handleCopyMessages}\n        onCopyNumber={handleCopyNumber}\n        onDownload={handleDownloadClick}\n        onSaveGif={handleSaveGif}\n        onCancelVote={handleCancelVote}\n        onClosePoll={openClosePollDialog}\n        onShowSeenBy={handleOpenSeenByModal}\n        onToggleReaction={handleToggleReaction}\n        onShowReactors={handleOpenReactorListModal}\n        onReactionPickerOpen={handleReactionPickerOpen}\n        onTranslate={handleTranslate}\n        onShowOriginal={handleShowOriginal}\n        onSelectLanguage={handleSelectLanguage}\n      />\n      <DeleteMessageModal\n        isOpen={isDeleteModalOpen}\n        isSchedule={messageListType === 'scheduled'}\n        onClose={closeDeleteModal}\n        album={album}\n        message={message}\n      />\n      <ReportModal\n        isOpen={isReportModalOpen}\n        onClose={closeReportModal}\n        messageIds={reportMessageIds}\n      />\n      <PinMessageModal\n        isOpen={isPinModalOpen}\n        messageId={message.id}\n        chatId={message.chatId}\n        onClose={closePinModal}\n      />\n      <ConfirmDialog\n        isOpen={isClosePollDialogOpen}\n        onClose={closeClosePollDialog}\n        text={lang('lng_polls_stop_warning')}\n        confirmLabel={lang('lng_polls_stop_sure')}\n        confirmHandler={handlePollClose}\n      />\n      {canReschedule && calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, messageListType, detectedLanguage }): StateProps => {\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const activeDownloads = selectActiveDownloads(global, message.chatId);\n    const chat = selectChat(global, message.chatId);\n    const { seenByExpiresAt, seenByMaxChatMembers, maxUniqueReactions } = global.appConfig || {};\n    const {\n      noOptions,\n      canReply,\n      canPin,\n      canUnpin,\n      canDelete,\n      canReport,\n      canEdit,\n      canForward,\n      canFaveSticker,\n      canUnfaveSticker,\n      canCopy,\n      canCopyLink,\n      canSelect,\n      canDownload,\n      canSaveGif,\n      canRevote,\n      canClosePoll,\n    } = (threadId && selectAllowedMessageActions(global, message, threadId)) || {};\n\n    const isPrivate = chat && isUserId(chat.id);\n    const isOwn = isOwnMessage(message);\n    const isPinned = messageListType === 'pinned';\n    const isScheduled = messageListType === 'scheduled';\n    const isChannel = chat && isChatChannel(chat);\n    const isLocal = isMessageLocal(message);\n    const hasTtl = hasMessageTtl(message);\n    const canShowSeenBy = Boolean(!isLocal\n      && chat\n      && seenByMaxChatMembers\n      && seenByExpiresAt\n      && isChatGroup(chat)\n      && isOwn\n      && !isScheduled\n      && chat.membersCount\n      && chat.membersCount <= seenByMaxChatMembers\n      && message.date > Date.now() / 1000 - seenByExpiresAt);\n    const isAction = isActionMessage(message);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, message.chatId) : undefined;\n    const canShowReactionsCount = !isLocal && !isChannel && !isScheduled && !isAction && !isPrivate && message.reactions\n      && !areReactionsEmpty(message.reactions) && message.reactions.canSeeList;\n    const isProtected = selectIsMessageProtected(global, message);\n    const canCopyNumber = Boolean(message.content.contact);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const customEmojiSetsInfo = selectMessageCustomEmojiSets(global, message);\n    const customEmojiSetsNotFiltered = customEmojiSetsInfo?.map((set) => selectStickerSet(global, set));\n    const customEmojiSets = customEmojiSetsNotFiltered?.every<ApiStickerSet>(Boolean)\n      ? customEmojiSetsNotFiltered : undefined;\n\n    const translationRequestLanguage = selectRequestedMessageTranslationLanguage(global, message.chatId, message.id);\n    const hasTranslation = translationRequestLanguage\n      ? Boolean(selectMessageTranslations(global, message.chatId, translationRequestLanguage)[message.id]?.text)\n      : undefined;\n    const canTranslate = !hasTranslation && selectCanTranslateMessage(global, message, detectedLanguage);\n    const isChatTranslated = selectRequestedChatTranslationLanguage(global, message.chatId);\n    const messageLink = selectMessageLink(global, message.chatId, threadId, message.id);\n\n    return {\n      availableReactions: global.availableReactions,\n      topReactions: global.topReactions,\n      noOptions,\n      canSendNow: isScheduled,\n      canReschedule: isScheduled,\n      canReply: !isPinned && !isScheduled && canReply,\n      canPin: !isScheduled && canPin,\n      canUnpin: !isScheduled && canUnpin,\n      canDelete,\n      canReport,\n      canEdit: !isPinned && canEdit,\n      canForward: !isScheduled && canForward,\n      canFaveSticker: !isScheduled && canFaveSticker,\n      canUnfaveSticker: !isScheduled && canUnfaveSticker,\n      canCopy: (canCopyNumber || (!isProtected && canCopy)),\n      canCopyLink: !isScheduled && canCopyLink,\n      canSelect,\n      canDownload: !isProtected && canDownload,\n      canSaveGif: !isProtected && canSaveGif,\n      canRevote,\n      canClosePoll: !isScheduled && canClosePoll,\n      activeDownloads,\n      canShowSeenBy,\n      enabledReactions: chat?.isForbidden ? undefined : chatFullInfo?.enabledReactions,\n      maxUniqueReactions,\n      isPrivate,\n      isCurrentUserPremium,\n      hasFullInfo: Boolean(chatFullInfo),\n      canShowReactionsCount,\n      canShowReactionList: !isLocal && !isAction\n        && !isScheduled && chat?.id !== SERVICE_NOTIFICATIONS_USER_ID && !hasTtl,\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      customEmojiSetsInfo,\n      customEmojiSets,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, message.chatId),\n      canTranslate,\n      canShowOriginal: hasTranslation && !isChatTranslated,\n      canSelectLanguage: hasTranslation && !isChatTranslated,\n      isMessageTranslated: hasTranslation,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      messageLink,\n    };\n  },\n)(ContextMenuContainer));\n","export function isSelectionRangeInsideMessage(range: Range) {\n  const ancestor = range.commonAncestorContainer;\n  const el = ancestor.nodeType === Node.TEXT_NODE\n    ? ancestor.parentNode! as Element\n    : ancestor as Element;\n\n  return Boolean(el.closest('.message-content-wrapper .text-content'))\n    && !(Boolean(el.closest('.EmbeddedMessage')) || Boolean(el.closest('.WebPage')));\n}\n","import type { ApiMessage } from '../../../../api/types';\nimport type { IconName } from '../../../../types/icons';\nimport { ApiMediaFormat } from '../../../../api/types';\n\nimport {\n  getMessageContact,\n  getMessageMediaHash,\n  getMessagePhoto,\n  getMessageText,\n  getMessageTextWithSpoilers,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n  hasMessageLocalBlobUrl,\n} from '../../../../global/helpers';\nimport {\n  CLIPBOARD_ITEM_SUPPORTED,\n  copyHtmlToClipboard,\n  copyImageToClipboard,\n  copyTextToClipboard,\n} from '../../../../util/clipboard';\nimport getMessageIdsForSelectedText from '../../../../util/getMessageIdsForSelectedText';\nimport * as mediaLoader from '../../../../util/mediaLoader';\nimport { renderMessageText } from '../../../common/helpers/renderMessageText';\n\ntype ICopyOptions = {\n  label: string;\n  icon: IconName;\n  handler: () => void;\n}[];\n\nexport function getMessageCopyOptions(\n  message: ApiMessage,\n  href?: string,\n  canCopy?: boolean,\n  afterEffect?: () => void,\n  onCopyLink?: () => void,\n  onCopyMessages?: (messageIds: number[]) => void,\n  onCopyNumber?: () => void,\n): ICopyOptions {\n  const options: ICopyOptions = [];\n  const text = getMessageText(message);\n  const photo = getMessagePhoto(message)\n    || (!getMessageWebPageVideo(message) ? getMessageWebPagePhoto(message) : undefined);\n  const contact = getMessageContact(message);\n  const mediaHash = getMessageMediaHash(message, 'inline');\n  const canImageBeCopied = canCopy && photo && (mediaHash || hasMessageLocalBlobUrl(message))\n    && CLIPBOARD_ITEM_SUPPORTED;\n  const selection = window.getSelection();\n\n  if (canImageBeCopied) {\n    options.push({\n      label: 'lng_context_copy_image',\n      icon: 'copy-media',\n      handler: () => {\n        Promise.resolve(mediaHash ? mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl) : photo!.blobUrl)\n          .then(copyImageToClipboard);\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (canCopy && href) {\n    options.push({\n      label: 'lng_context_copy_link',\n      icon: 'copy',\n      handler: () => {\n        copyTextToClipboard(href);\n\n        afterEffect?.();\n      },\n    });\n  } else if (canCopy && text) {\n    // Detect if the user has selection in the current message\n    const hasSelection = Boolean((\n      selection?.anchorNode?.parentNode\n      && (selection.anchorNode.parentNode as HTMLElement).closest('.Message .content-inner')\n      && selection.toString().replace(/(?:\\r\\n|\\r|\\n)/g, '') !== ''\n    ));\n\n    options.push({\n      label: getCopyLabel(hasSelection),\n      icon: 'copy',\n      handler: () => {\n        const messageIds = getMessageIdsForSelectedText();\n        if (messageIds?.length && onCopyMessages) {\n          onCopyMessages(messageIds);\n        } else if (hasSelection) {\n          document.execCommand('copy');\n        } else {\n          const clipboardText = renderMessageText(\n            { message, shouldRenderAsHtml: true },\n          );\n          if (clipboardText) copyHtmlToClipboard(clipboardText.join(''), getMessageTextWithSpoilers(message)!);\n        }\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (onCopyLink) {\n    options.push({\n      label: 'lng_context_copy_message_link',\n      icon: 'link',\n      handler: () => {\n        onCopyLink();\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (contact && onCopyNumber) {\n    options.push({\n      label: 'lng_profile_copy_phone',\n      icon: 'copy',\n      handler: () => {\n        onCopyNumber();\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  return options;\n}\n\nfunction getCopyLabel(hasSelection: boolean): string {\n  if (hasSelection) {\n    return 'lng_context_copy_selected';\n  }\n  return 'lng_context_copy_text';\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatReactions,\n  ApiMessage,\n  ApiPeer,\n  ApiReaction,\n  ApiSponsoredMessage,\n  ApiStickerSet,\n  ApiThreadInfo,\n  ApiUser,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport { getUserFullName, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { disableScrolling, enableScrolling } from '../../../util/scrollLock';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\nimport { getMessageCopyOptions } from './helpers/copyOptions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\n\nimport AvatarList from '../../common/AvatarList';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport ReactionSelector from './ReactionSelector';\n\nimport './MessageContextMenu.scss';\n\ntype OwnProps = {\n  isReactionPickerOpen?: boolean;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions?: ApiReaction[];\n  isOpen: boolean;\n  anchor: IAnchorPosition;\n  targetHref?: string;\n  message: ApiMessage | ApiSponsoredMessage;\n  canSendNow?: boolean;\n  enabledReactions?: ApiChatReactions;\n  maxUniqueReactions?: number;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  canQuote?: boolean;\n  repliesThreadInfo?: ApiThreadInfo;\n  canPin?: boolean;\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canShowReactionsCount?: boolean;\n  canShowReactionList?: boolean;\n  canBuyPremium?: boolean;\n  canEdit?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canTranslate?: boolean;\n  canShowOriginal?: boolean;\n  canSelectLanguage?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  isDownloading?: boolean;\n  canShowSeenBy?: boolean;\n  seenByRecentPeers?: ApiPeer[];\n  noReplies?: boolean;\n  hasCustomEmoji?: boolean;\n  customEmojiSets?: ApiStickerSet[];\n  canPlayAnimatedEmojis?: boolean;\n  noTransition?: boolean;\n  onReply?: NoneToVoidFunction;\n  onOpenThread?: VoidFunction;\n  onEdit?: NoneToVoidFunction;\n  onPin?: NoneToVoidFunction;\n  onUnpin?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onDelete?: NoneToVoidFunction;\n  onReport?: NoneToVoidFunction;\n  onFaveSticker?: NoneToVoidFunction;\n  onUnfaveSticker?: NoneToVoidFunction;\n  onSelect?: NoneToVoidFunction;\n  onSend?: NoneToVoidFunction;\n  onReschedule?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  onCopyLink?: NoneToVoidFunction;\n  onCopyMessages?: (messageIds: number[]) => void;\n  onCopyNumber?: NoneToVoidFunction;\n  onDownload?: NoneToVoidFunction;\n  onSaveGif?: NoneToVoidFunction;\n  onCancelVote?: NoneToVoidFunction;\n  onClosePoll?: NoneToVoidFunction;\n  onShowSeenBy?: NoneToVoidFunction;\n  onShowReactors?: NoneToVoidFunction;\n  onAboutAds?: NoneToVoidFunction;\n  onSponsoredHide?: NoneToVoidFunction;\n  onSponsorInfo?: NoneToVoidFunction;\n  onTranslate?: NoneToVoidFunction;\n  onShowOriginal?: NoneToVoidFunction;\n  onSelectLanguage?: NoneToVoidFunction;\n  onToggleReaction?: (reaction: ApiReaction) => void;\n  onReactionPickerOpen?: (position: IAnchorPosition) => void;\n};\n\nconst SCROLLBAR_WIDTH = 10;\nconst REACTION_BUBBLE_EXTRA_WIDTH = 32;\nconst REACTION_SELECTOR_WIDTH_REM = 19.25;\nconst ANIMATION_DURATION = 200;\n\nconst MessageContextMenu: FC<OwnProps> = ({\n  isReactionPickerOpen,\n  availableReactions,\n  topReactions,\n  isOpen,\n  message,\n  isPrivate,\n  isCurrentUserPremium,\n  enabledReactions,\n  maxUniqueReactions,\n  anchor,\n  targetHref,\n  canSendNow,\n  canReschedule,\n  canBuyPremium,\n  canReply,\n  canQuote,\n  canEdit,\n  noReplies,\n  canPin,\n  canUnpin,\n  canDelete,\n  canReport,\n  canForward,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  canTranslate,\n  canShowOriginal,\n  canSelectLanguage,\n  isDownloading,\n  repliesThreadInfo,\n  canShowSeenBy,\n  canShowReactionsCount,\n  canShowReactionList,\n  seenByRecentPeers,\n  hasCustomEmoji,\n  customEmojiSets,\n  canPlayAnimatedEmojis,\n  noTransition,\n  onReply,\n  onOpenThread,\n  onEdit,\n  onPin,\n  onUnpin,\n  onForward,\n  onDelete,\n  onReport,\n  onFaveSticker,\n  onUnfaveSticker,\n  onSelect,\n  onSend,\n  onReschedule,\n  onClose,\n  onCloseAnimationEnd,\n  onCopyLink,\n  onCopyNumber,\n  onDownload,\n  onSaveGif,\n  onCancelVote,\n  onClosePoll,\n  onShowSeenBy,\n  onShowReactors,\n  onToggleReaction,\n  onCopyMessages,\n  onAboutAds,\n  onSponsoredHide,\n  onSponsorInfo,\n  onReactionPickerOpen,\n  onTranslate,\n  onShowOriginal,\n  onSelectLanguage,\n}) => {\n  const { showNotification, openStickerSet, openCustomEmojiSets } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollableRef = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n  const noReactions = !isPrivate && !enabledReactions;\n  const withReactions = canShowReactionList && !noReactions;\n  const isSponsoredMessage = !('id' in message);\n  const messageId = !isSponsoredMessage ? message.id : '';\n  const seenByDates = !isSponsoredMessage ? message.seenByDates : undefined;\n\n  const [areItemsHidden, hideItems] = useFlag();\n  const [isReady, markIsReady, unmarkIsReady] = useFlag();\n  const { isMobile, isDesktop } = useAppLayout();\n  const seenByDatesCount = useMemo(() => (seenByDates ? Object.keys(seenByDates).length : 0), [seenByDates]);\n\n  const handleAfterCopy = useLastCallback(() => {\n    showNotification({\n      message: lang('Share.Link.Copied'),\n    });\n    onClose();\n  });\n\n  useEffect(() => {\n    if (isOpen && areItemsHidden && !isReactionPickerOpen) {\n      onClose();\n    }\n  }, [onClose, isOpen, isReactionPickerOpen, areItemsHidden]);\n\n  const handleOpenCustomEmojiSets = useLastCallback(() => {\n    if (!customEmojiSets) return;\n    if (customEmojiSets.length === 1) {\n      openStickerSet({\n        stickerSetInfo: {\n          shortName: customEmojiSets[0].shortName,\n        },\n      });\n    } else {\n      openCustomEmojiSets({\n        setIds: customEmojiSets.map((set) => set.id),\n      });\n    }\n    onClose();\n  });\n\n  const copyOptions = isSponsoredMessage\n    ? []\n    : getMessageCopyOptions(\n      message,\n      targetHref,\n      canCopy,\n      handleAfterCopy,\n      canCopyLink ? onCopyLink : undefined,\n      onCopyMessages,\n      onCopyNumber,\n    );\n\n  const getTriggerElement = useLastCallback(() => {\n    return isSponsoredMessage\n      ? document.querySelector('.Transition_slide-active > .MessageList .SponsoredMessage')\n      : document.querySelector(`.Transition_slide-active > .MessageList div[data-message-id=\"${messageId}\"]`);\n  });\n\n  const getRootElement = useLastCallback(() => document.querySelector('.Transition_slide-active > .MessageList'));\n\n  const getMenuElement = useLastCallback(() => document.querySelector('.MessageContextMenu .bubble'));\n\n  const getLayout = useLastCallback(() => {\n    const extraHeightAudioPlayer = (isMobile\n      && (document.querySelector<HTMLElement>('.AudioPlayer-content'))?.offsetHeight) || 0;\n    const pinnedElement = document.querySelector<HTMLElement>('.HeaderPinnedMessageWrapper');\n    const extraHeightPinned = (((isMobile && !extraHeightAudioPlayer)\n        || (!isMobile && pinnedElement?.classList.contains('full-width')))\n      && pinnedElement?.offsetHeight) || 0;\n\n    return {\n      extraPaddingX: SCROLLBAR_WIDTH,\n      extraTopPadding: (document.querySelector<HTMLElement>('.MiddleHeader')!).offsetHeight,\n      marginSides: withReactions ? REACTION_BUBBLE_EXTRA_WIDTH : undefined,\n      extraMarginTop: extraHeightPinned + extraHeightAudioPlayer,\n      shouldAvoidNegativePosition: !isDesktop,\n      menuElMinWidth: withReactions && isMobile ? REACTION_SELECTOR_WIDTH_REM * REM : undefined,\n    };\n  });\n\n  useEffect(() => {\n    if (!isOpen) {\n      unmarkIsReady();\n      return;\n    }\n\n    setTimeout(() => {\n      markIsReady();\n    }, ANIMATION_DURATION);\n  }, [isOpen, markIsReady, unmarkIsReady]);\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style, menuStyle, withScroll,\n  } = useMenuPosition(anchor, getTriggerElement, getRootElement, getMenuElement, getLayout);\n\n  useEffect(() => {\n    disableScrolling(withScroll ? scrollableRef.current : undefined, '.ReactionPicker');\n\n    return enableScrolling;\n  }, [withScroll]);\n\n  const handleOpenMessageReactionPicker = useLastCallback((position: IAnchorPosition) => {\n    onReactionPickerOpen!(position);\n    hideItems();\n  });\n\n  return (\n    <Menu\n      ref={menuRef}\n      isOpen={isOpen}\n      transformOriginX={transformOriginX}\n      transformOriginY={transformOriginY}\n      positionX={positionX}\n      positionY={positionY}\n      style={style}\n      bubbleStyle={menuStyle}\n      className={buildClassName(\n        'MessageContextMenu', 'fluid', withReactions && 'with-reactions',\n      )}\n      shouldSkipTransition={noTransition}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {withReactions && (\n        <ReactionSelector\n          enabledReactions={enabledReactions}\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          currentReactions={!isSponsoredMessage ? message.reactions?.results : undefined}\n          maxUniqueReactions={maxUniqueReactions}\n          onToggleReaction={onToggleReaction!}\n          isPrivate={isPrivate}\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleOpenMessageReactionPicker}\n          className={buildClassName(areItemsHidden && 'ReactionSelector-hidden')}\n        />\n      )}\n\n      <div\n        className={buildClassName(\n          'MessageContextMenu_items scrollable-content custom-scroll',\n          areItemsHidden && 'MessageContextMenu_items-hidden',\n        )}\n        style={menuStyle}\n        ref={scrollableRef}\n      >\n        {canSendNow && <MenuItem icon=\"send-outline\" onClick={onSend}>{lang('MessageScheduleSend')}</MenuItem>}\n        {canReschedule && (\n          <MenuItem icon=\"schedule\" onClick={onReschedule}>{lang('MessageScheduleEditTime')}</MenuItem>\n        )}\n        {canReply && (\n          <MenuItem icon=\"reply\" onClick={onReply}>\n            {lang(canQuote ? 'lng_context_quote_and_reply' : 'Reply')}\n          </MenuItem>\n        )}\n        {!noReplies && Boolean(repliesThreadInfo?.messagesCount) && (\n          <MenuItem icon=\"replies\" onClick={onOpenThread}>\n            {lang('Conversation.ContextViewReplies', repliesThreadInfo!.messagesCount, 'i')}\n          </MenuItem>\n        )}\n        {canEdit && <MenuItem icon=\"edit\" onClick={onEdit}>{lang('Edit')}</MenuItem>}\n        {canFaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onFaveSticker}>{lang('AddToFavorites')}</MenuItem>\n        )}\n        {canUnfaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onUnfaveSticker}>{lang('Stickers.RemoveFromFavorites')}</MenuItem>\n        )}\n        {canTranslate && <MenuItem icon=\"language\" onClick={onTranslate}>{lang('TranslateMessage')}</MenuItem>}\n        {canShowOriginal && <MenuItem icon=\"language\" onClick={onShowOriginal}>{lang('ShowOriginalButton')}</MenuItem>}\n        {canSelectLanguage && (\n          <MenuItem icon=\"web\" onClick={onSelectLanguage}>{lang('lng_settings_change_lang')}</MenuItem>\n        )}\n        {copyOptions.map((option) => (\n          <MenuItem key={option.label} icon={option.icon} onClick={option.handler}>{lang(option.label)}</MenuItem>\n        ))}\n        {canPin && <MenuItem icon=\"pin\" onClick={onPin}>{lang('DialogPin')}</MenuItem>}\n        {canUnpin && <MenuItem icon=\"unpin\" onClick={onUnpin}>{lang('DialogUnpin')}</MenuItem>}\n        {canSaveGif && <MenuItem icon=\"gifs\" onClick={onSaveGif}>{lang('lng_context_save_gif')}</MenuItem>}\n        {canRevote && <MenuItem icon=\"revote\" onClick={onCancelVote}>{lang('lng_polls_retract')}</MenuItem>}\n        {canClosePoll && <MenuItem icon=\"stop\" onClick={onClosePoll}>{lang('lng_polls_stop')}</MenuItem>}\n        {canDownload && (\n          <MenuItem icon=\"download\" onClick={onDownload}>\n            {isDownloading ? lang('lng_context_cancel_download') : lang('lng_media_download')}\n          </MenuItem>\n        )}\n        {canForward && <MenuItem icon=\"forward\" onClick={onForward}>{lang('Forward')}</MenuItem>}\n        {canSelect && <MenuItem icon=\"select\" onClick={onSelect}>{lang('Common.Select')}</MenuItem>}\n        {canReport && <MenuItem icon=\"flag\" onClick={onReport}>{lang('lng_context_report_msg')}</MenuItem>}\n        {(canShowSeenBy || canShowReactionsCount) && !isSponsoredMessage && (\n          <MenuItem\n            icon={canShowReactionsCount ? 'heart-outline' : 'group'}\n            onClick={canShowReactionsCount ? onShowReactors : onShowSeenBy}\n            disabled={!canShowReactionsCount && !seenByDatesCount}\n          >\n            <span className=\"MessageContextMenu--seen-by-label-wrapper\">\n              <span className=\"MessageContextMenu--seen-by-label\" dir={lang.isRtl ? 'rtl' : undefined}>\n                {canShowReactionsCount && message.reactors?.count ? (\n                  canShowSeenBy && seenByDatesCount\n                    ? lang(\n                      'Chat.OutgoingContextMixedReactionCount',\n                      [message.reactors.count, seenByDatesCount],\n                    )\n                    : lang('Chat.ContextReactionCount', message.reactors.count, 'i')\n                ) : (\n                  seenByDatesCount === 1 && seenByRecentPeers\n                    ? renderText(\n                      isUserId(seenByRecentPeers[0].id)\n                        ? getUserFullName(seenByRecentPeers[0] as ApiUser)!\n                        : (seenByRecentPeers[0] as ApiChat).title,\n                    ) : (\n                      seenByDatesCount\n                        ? lang('Conversation.ContextMenuSeen', seenByDatesCount, 'i')\n                        : lang('Conversation.ContextMenuNoViews')\n                    )\n                )}\n              </span>\n            </span>\n            <AvatarList className=\"avatars\" size=\"micro\" peers={seenByRecentPeers} />\n          </MenuItem>\n        )}\n        {canDelete && <MenuItem destructive icon=\"delete\" onClick={onDelete}>{lang('Delete')}</MenuItem>}\n        {hasCustomEmoji && (\n          <>\n            <MenuSeparator />\n            {!customEmojiSets && (\n              <>\n                <Skeleton inline className=\"menu-loading-row\" />\n                <Skeleton inline className=\"menu-loading-row\" />\n              </>\n            )}\n            {customEmojiSets && customEmojiSets.length === 1 && (\n              <MenuItem withWrap onClick={handleOpenCustomEmojiSets} className=\"menu-custom-emoji-sets\">\n                {renderText(lang('MessageContainsEmojiPack', customEmojiSets[0].title), ['simple_markdown', 'emoji'])}\n              </MenuItem>\n            )}\n            {customEmojiSets && customEmojiSets.length > 1 && (\n              <MenuItem withWrap onClick={handleOpenCustomEmojiSets} className=\"menu-custom-emoji-sets\">\n                {renderText(lang('MessageContainsEmojiPacks', customEmojiSets.length), ['simple_markdown'])}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {isSponsoredMessage && message.sponsorInfo && (\n          <MenuItem icon=\"channel\" onClick={onSponsorInfo}>{lang('SponsoredMessageSponsor')}</MenuItem>\n        )}\n        {isSponsoredMessage && <MenuItem icon=\"help\" onClick={onAboutAds}>{lang('SponsoredMessageInfo')}</MenuItem>}\n        {isSponsoredMessage && onSponsoredHide && (\n          <MenuItem icon=\"stop\" onClick={onSponsoredHide}>{lang('HideAd')}</MenuItem>\n        )}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(MessageContextMenu);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"vUbCal8_iSPkPVzQcz24\",\"wrapper\":\"f4pTNqkRRCFtZzheXcV9\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiAvailableReaction, ApiChatReactions, ApiReaction } from '../../../api/types';\n\nimport { getReactionUniqueKey, sortReactions } from '../../../global/helpers';\nimport { selectChatFullInfo } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nimport ReactionEmoji from '../../common/ReactionEmoji';\n\nimport styles from './ReactionPickerLimited.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  loadAndPlay: boolean;\n  onReactionSelect?: (reaction: ApiReaction) => void;\n  selectedReactionIds?: string[];\n};\n\ntype StateProps = {\n  enabledReactions?: ApiChatReactions;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions: ApiReaction[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst REACTION_SIZE = 36;\nconst GRID_GAP_THRESHOLD = 600;\nconst MODAL_PADDING_SIZE_REM = 0.5;\nconst MODAL_MAX_HEIGHT_REM = 18;\nconst MODAL_MAX_WIDTH_REM = 26.25;\nconst GRID_GAP_DESKTOP_REM = 0.625;\nconst GRID_GAP_MOBILE_REM = 0.5;\n\nconst ReactionPickerLimited: FC<OwnProps & StateProps> = ({\n  loadAndPlay,\n  enabledReactions,\n  availableReactions,\n  topReactions,\n  selectedReactionIds,\n  onReactionSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  const { width: windowWidth } = useWindowSize();\n  const { isTouchScreen } = useAppLayout();\n\n  const allAvailableReactions = useMemo(() => {\n    if (!enabledReactions) {\n      return [];\n    }\n\n    if (enabledReactions.type === 'all') {\n      return sortReactions((availableReactions || []).map(({ reaction }) => reaction), topReactions);\n    }\n\n    return sortReactions(enabledReactions.allowed, topReactions);\n  }, [availableReactions, enabledReactions, topReactions]);\n\n  const pickerHeight = useMemo(() => {\n    const pickerWidth = Math.min(MODAL_MAX_WIDTH_REM * REM, windowWidth);\n    const gapWidth = (windowWidth > GRID_GAP_THRESHOLD ? GRID_GAP_DESKTOP_REM : GRID_GAP_MOBILE_REM) * REM;\n    const availableWidth = pickerWidth - MODAL_PADDING_SIZE_REM * REM;\n\n    const itemsInRow = Math.floor((availableWidth + gapWidth) / (REACTION_SIZE + gapWidth));\n    const rowsCount = Math.ceil(allAvailableReactions.length / itemsInRow);\n\n    const pickerMaxHeight = rowsCount * REACTION_SIZE + (rowsCount - 1) * gapWidth + MODAL_PADDING_SIZE_REM * REM * 2;\n\n    return Math.min(MODAL_MAX_HEIGHT_REM * REM, pickerMaxHeight);\n  }, [allAvailableReactions.length, windowWidth]);\n\n  return (\n    <div className={styles.root} style={`height: ${pickerHeight}px`}>\n      <div className={buildClassName(styles.wrapper, isTouchScreen ? 'no-scrollbar' : 'custom-scroll')}>\n        <div className=\"symbol-set-container shared-canvas-container\">\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          {allAvailableReactions.map((reaction) => {\n            const reactionId = getReactionUniqueKey(reaction);\n            const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n            return (\n              <ReactionEmoji\n                key={reactionId}\n                reaction={reaction}\n                isSelected={isSelected}\n                loadAndPlay={loadAndPlay}\n                availableReactions={availableReactions}\n                onClick={onReactionSelect!}\n                sharedCanvasRef={sharedCanvasRef}\n                sharedCanvasHqRef={sharedCanvasHqRef}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { availableReactions, topReactions } = global;\n    const { enabledReactions } = selectChatFullInfo(global, chatId) || {};\n\n    return {\n      enabledReactions,\n      availableReactions,\n      topReactions,\n    };\n  },\n)(ReactionPickerLimited));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiMessage, ApiMessageEntity,\n  ApiReaction, ApiReactionCustomEmoji, ApiSticker, ApiStory, ApiStorySkipped,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport { getStoryKey, isUserId } from '../../../global/helpers';\nimport {\n  selectChat, selectChatFullInfo, selectChatMessage, selectIsContextMenuTranslucent, selectIsCurrentUserPremium,\n  selectPeerStory, selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport parseHtmlAsFormattedText from '../../../util/parseHtmlAsFormattedText';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport { buildCustomEmojiHtml } from '../composer/helpers/customEmoji';\n\nimport { getIsMobile } from '../../../hooks/useAppLayout';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\n\nimport CustomEmojiPicker from '../../common/CustomEmojiPicker';\nimport Menu from '../../ui/Menu';\nimport ReactionPickerLimited from './ReactionPickerLimited';\n\nimport styles from './ReactionPicker.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ninterface StateProps {\n  withCustomReactions?: boolean;\n  message?: ApiMessage;\n  story?: ApiStory | ApiStorySkipped;\n  isCurrentUserPremium?: boolean;\n  position?: IAnchorPosition;\n  isTranslucent?: boolean;\n  sendAsMessage?: boolean;\n}\n\nconst FULL_PICKER_SHIFT_DELTA = { x: -23, y: -64 };\nconst LIMITED_PICKER_SHIFT_DELTA = { x: -21, y: -10 };\nconst REACTION_SELECTOR_WIDTH = 16.375 * REM;\n\nconst ReactionPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  message,\n  story,\n  position,\n  isTranslucent,\n  isCurrentUserPremium,\n  withCustomReactions,\n  sendAsMessage,\n}) => {\n  const {\n    toggleReaction, closeReactionPicker, sendMessage, showNotification, sendStoryReaction,\n  } = getActions();\n\n  const lang = useLang();\n\n  const renderedMessageId = useCurrentOrPrev(message?.id, true);\n  const renderedChatId = useCurrentOrPrev(message?.chatId, true);\n  const renderedStoryPeerId = useCurrentOrPrev(story?.peerId, true);\n  const renderedStoryId = useCurrentOrPrev(story?.id);\n  const storedPosition = useCurrentOrPrev(position, true);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const renderingPosition = useMemo((): IAnchorPosition | undefined => {\n    if (!storedPosition) {\n      return undefined;\n    }\n\n    if (renderedStoryId) {\n      return storedPosition;\n    }\n\n    return {\n      x: storedPosition.x + (withCustomReactions ? FULL_PICKER_SHIFT_DELTA.x : LIMITED_PICKER_SHIFT_DELTA.x),\n      y: storedPosition.y + (withCustomReactions ? FULL_PICKER_SHIFT_DELTA.y : LIMITED_PICKER_SHIFT_DELTA.y),\n    };\n  }, [renderedStoryId, storedPosition, withCustomReactions]);\n\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getLayout = useLastCallback(() => ({\n    withPortal: true,\n    isDense: !renderedStoryPeerId,\n    deltaX: !getIsMobile() && menuRef.current\n      ? -(menuRef.current.offsetWidth - REACTION_SELECTOR_WIDTH) / 2 - FULL_PICKER_SHIFT_DELTA.x / 2\n      : 0,\n  }));\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style,\n  } = useMenuPosition(renderingPosition, getTriggerElement, getRootElement, getMenuElement, getLayout);\n\n  const handleToggleCustomReaction = useLastCallback((sticker: ApiSticker) => {\n    if (!renderedChatId || !renderedMessageId) {\n      return;\n    }\n    const reaction = sticker.isCustomEmoji\n      ? { documentId: sticker.id } as ApiReactionCustomEmoji\n      : { emoticon: sticker.emoji } as ApiReaction;\n\n    toggleReaction({\n      chatId: renderedChatId, messageId: renderedMessageId, reaction, shouldAddToRecent: true,\n    });\n    closeReactionPicker();\n  });\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    if (!renderedChatId || !renderedMessageId) {\n      return;\n    }\n\n    toggleReaction({\n      chatId: renderedChatId, messageId: renderedMessageId, reaction, shouldAddToRecent: true,\n    });\n    closeReactionPicker();\n  });\n\n  const handleStoryReactionSelect = useLastCallback((item: ApiReaction | ApiSticker) => {\n    const reaction = 'id' in item ? { documentId: item.id } : item;\n\n    const sticker = 'documentId' in item\n      ? getGlobal().customEmojis.byId[item.documentId] : 'emoticon' in item ? undefined : item;\n\n    if (sticker && !sticker.isFree && !isCurrentUserPremium) {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n\n      closeReactionPicker();\n\n      return;\n    }\n\n    if (!sendAsMessage) {\n      sendStoryReaction({\n        peerId: renderedStoryPeerId!,\n        storyId: renderedStoryId!,\n        containerId: getStoryKey(renderedStoryPeerId!, renderedStoryId!),\n        reaction,\n        shouldAddToRecent: true,\n      });\n      closeReactionPicker();\n      return;\n    }\n\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if ('emoticon' in item) {\n      text = item.emoticon;\n    } else {\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker!));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    sendMessage({ text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const selectedReactionIds = useMemo(() => {\n    return (message?.reactions?.results || []).reduce<string[]>((acc, { chosenOrder, reaction }) => {\n      if (chosenOrder !== undefined) {\n        acc.push('emoticon' in reaction ? reaction.emoticon : reaction.documentId);\n      }\n\n      return acc;\n    }, []);\n  }, [message?.reactions?.results]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      ref={menuRef}\n      className={buildClassName(styles.menu, 'ReactionPicker')}\n      bubbleClassName={buildClassName(\n        styles.menuContent,\n        !withCustomReactions && !renderedStoryId && styles.onlyReactions,\n        renderedStoryId && styles.storyMenu,\n      )}\n      withPortal\n      noCompact\n      positionX={positionX}\n      positionY={positionY}\n      transformOriginX={transformOriginX}\n      transformOriginY={transformOriginY}\n      style={style}\n      backdropExcludedSelector=\".Modal.confirm\"\n      onClose={closeReactionPicker}\n    >\n      <CustomEmojiPicker\n        idPrefix=\"message-emoji-set-\"\n        isHidden={!isOpen || !(withCustomReactions || renderedStoryId)}\n        loadAndPlay={Boolean(isOpen && withCustomReactions)}\n        isReactionPicker\n        className={!withCustomReactions && !renderedStoryId ? styles.hidden : undefined}\n        selectedReactionIds={selectedReactionIds}\n        isTranslucent={isTranslucent}\n        onCustomEmojiSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleCustomReaction}\n        onReactionSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleReaction}\n      />\n      {!withCustomReactions && Boolean(renderedChatId) && (\n        <ReactionPickerLimited\n          chatId={renderedChatId}\n          loadAndPlay={isOpen}\n          onReactionSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleReaction}\n          selectedReactionIds={selectedReactionIds}\n        />\n      )}\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const state = selectTabState(global);\n  const {\n    chatId, messageId, storyPeerId, storyId, position, sendAsMessage,\n  } = state.reactionPicker || {};\n  const story = storyPeerId && storyId\n    ? selectPeerStory(global, storyPeerId, storyId) as ApiStory | ApiStorySkipped\n    : undefined;\n  const chat = chatId ? selectChat(global, chatId) : undefined;\n  const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n  const message = chatId && messageId ? selectChatMessage(global, chatId, messageId) : undefined;\n  const isPrivateChat = isUserId(chatId || storyPeerId || '');\n  const areSomeReactionsAllowed = chatFullInfo?.enabledReactions?.type === 'some';\n  const areCustomReactionsAllowed = chatFullInfo?.enabledReactions?.type === 'all'\n    && chatFullInfo?.enabledReactions?.areCustomAllowed;\n\n  return {\n    message,\n    story,\n    position,\n    withCustomReactions: chat?.isForbidden || areSomeReactionsAllowed\n      ? false\n      : areCustomReactionsAllowed || isPrivateChat,\n    isTranslucent: selectIsContextMenuTranslucent(global),\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    sendAsMessage,\n  };\n})(ReactionPicker));\n\nfunction getTriggerElement(): HTMLElement | null {\n  return document.querySelector('body');\n}\n\nfunction getRootElement() {\n  return document.querySelector('body');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"menu\":\"s4eo5UICU4xBMDvMxWU_\",\"menuContent\":\"Q2c4gWaMXfXzLL_Jbbjr\",\"storyMenu\":\"nwZabdh1rB72Eb1x64Og\",\"onlyReactions\":\"rWa1hIFdrb4U0xFrHLic\",\"hidden\":\"P95Gk2sUhvBJ70LKg_vc\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSponsoredMessage } from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport { selectIsCurrentUserPremium, selectIsPremiumPurchaseBlocked } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport MessageContextMenu from './MessageContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  message: ApiSponsoredMessage;\n  anchor: IAnchorPosition;\n  onAboutAds: () => void;\n  onClose: () => void;\n  onCloseAnimationEnd: () => void;\n};\n\ntype StateProps = {\n  canBuyPremium?: boolean;\n};\n\nconst SponsoredMessageContextMenuContainer: FC<OwnProps & StateProps> = ({\n  message,\n  anchor,\n  onAboutAds,\n  onClose,\n  onCloseAnimationEnd,\n  canBuyPremium,\n}) => {\n  const { openPremiumModal, showDialog } = getActions();\n\n  const [isMenuOpen, , closeMenu] = useFlag(true);\n  const { transitionClassNames } = useShowTransition(isMenuOpen, onCloseAnimationEnd, undefined, false);\n\n  const handleAboutAdsOpen = useLastCallback(() => {\n    onAboutAds();\n    closeMenu();\n  });\n\n  const handleSponsoredHide = useLastCallback(() => {\n    closeMenu();\n    openPremiumModal();\n    onClose();\n  });\n\n  const handleSponsorInfo = useLastCallback(() => {\n    closeMenu();\n    showDialog({\n      data: {\n        message: [message.sponsorInfo, message.additionalInfo].join('\\n'),\n      },\n    });\n  });\n\n  if (!anchor) {\n    return undefined;\n  }\n\n  return (\n    <div className={buildClassName('ContextMenuContainer', transitionClassNames)}>\n      <MessageContextMenu\n        isOpen={isMenuOpen}\n        anchor={anchor}\n        message={message}\n        onClose={closeMenu}\n        onCloseAnimationEnd={closeMenu}\n        onAboutAds={handleAboutAdsOpen}\n        onSponsoredHide={canBuyPremium ? handleSponsoredHide : undefined}\n        onSponsorInfo={handleSponsorInfo}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      canBuyPremium: !selectIsCurrentUserPremium(global) && !selectIsPremiumPurchaseBlocked(global),\n    };\n  },\n)(SponsoredMessageContextMenuContainer));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachBot } from '../../../api/types';\n\nimport { MINI_APP_TOS_URL } from '../../../config';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  bot?: ApiAttachBot;\n};\n\nconst AttachBotInstallModal: FC<OwnProps> = ({\n  bot,\n}) => {\n  const { confirmAttachBotInstall, cancelAttachBotInstall } = getActions();\n  const [isTosAccepted, setIsTosAccepted] = useState(false);\n\n  const lang = useLang();\n\n  const handleConfirm = useCallback(() => {\n    confirmAttachBotInstall({\n      isWriteAllowed: Boolean(bot?.shouldRequestWriteAccess),\n    });\n  }, [confirmAttachBotInstall, bot]);\n\n  // Reset on re-open\n  useEffect(() => {\n    if (bot) {\n      setIsTosAccepted(false);\n    }\n  }, [bot]);\n\n  const tosLabel = useMemo(() => {\n    const base = lang('lng_mini_apps_disclaimer_button');\n    const split = base.split('{link}');\n    const linkText = lang('lng_mini_apps_disclaimer_link');\n    return [\n      split[0],\n      <a href={MINI_APP_TOS_URL} target=\"_blank\" rel=\"noopener noreferrer\">{linkText}</a>,\n      split[1],\n    ];\n  }, [lang]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(bot)}\n      onClose={cancelAttachBotInstall}\n      title={lang('lng_mini_apps_disclaimer_title')}\n      confirmHandler={handleConfirm}\n      isConfirmDisabled={!isTosAccepted}\n    >\n      {renderText(lang('lng_mini_apps_disclaimer_text', bot?.shortName), ['simple_markdown'])}\n      <Checkbox\n        className=\"dialog-checkbox\"\n        checked={isTosAccepted}\n        label={tosLabel}\n        onCheck={setIsTosAccepted}\n      />\n      {renderText(lang('WebBot.Account.Desclaimer.Desc', bot?.shortName), ['simple_markdown'])}\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(AttachBotInstallModal);\n","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiMyBoost } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getChatTitle } from '../../../global/helpers';\nimport { selectChat, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport { formatDateInFuture } from '../../../util/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\nimport { getBoostProgressInfo } from '../../common/helpers/boostInfo';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/Icon';\nimport PremiumProgress from '../../common/PremiumProgress';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Loading from '../../ui/Loading';\nimport Modal from '../../ui/Modal';\n\nimport styles from './BoostModal.module.scss';\n\ntype LoadedParams = {\n  boost?: ApiMyBoost;\n  leftText: string;\n  rightText?: string;\n  value: string;\n  progress: number;\n  descriptionText: string;\n  isBoosted?: boolean;\n  canBoostMore?: boolean;\n};\n\ntype BoostInfo = ({\n  isStatusLoaded: false;\n  title: string;\n} & Undefined<LoadedParams>) | ({\n  isStatusLoaded: true;\n  title: string;\n} & LoadedParams);\n\nexport type OwnProps = {\n  info: TabState['boostModal'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  boostedChat?: ApiChat;\n  isCurrentUserPremium?: boolean;\n};\n\nconst BoostModal = ({\n  info,\n  chat,\n  boostedChat,\n  isCurrentUserPremium,\n}: OwnProps & StateProps) => {\n  const {\n    applyBoost,\n    closeBoostModal,\n    requestConfetti,\n    openPremiumModal,\n  } = getActions();\n\n  const [isReplaceModalOpen, openReplaceModal, closeReplaceModal] = useFlag();\n  const [isWaitDialogOpen, openWaitDialog, closeWaitDialog] = useFlag();\n  const [isPremiumDialogOpen, openPremiumDialog, closePremiumDialog] = useFlag();\n\n  const isOpen = Boolean(info);\n\n  const lang = useLang();\n\n  const chatTitle = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return getChatTitle(lang, chat);\n  }, [chat, lang]);\n\n  const boostedChatTitle = useMemo(() => {\n    if (!boostedChat) {\n      return undefined;\n    }\n\n    return getChatTitle(lang, boostedChat);\n  }, [boostedChat, lang]);\n\n  const {\n    isStatusLoaded,\n    isBoosted,\n    boost,\n    title,\n    leftText,\n    rightText,\n    value,\n    progress,\n    descriptionText,\n    canBoostMore,\n  }: BoostInfo = useMemo(() => {\n    if (!info?.boostStatus || !chat) {\n      return {\n        isStatusLoaded: false,\n        title: lang('Loading'),\n      };\n    }\n\n    const {\n      level, currentLevelBoosts, hasMyBoost,\n    } = info.boostStatus;\n\n    const firstBoost = info?.myBoosts && getFirstAvailableBoost(info.myBoosts, chat.id);\n    const areBoostsInDifferentChannels = info?.myBoosts && !areAllBoostsInChannel(info.myBoosts, chat.id);\n\n    const {\n      boosts,\n      currentLevel,\n      hasNextLevel,\n      levelProgress,\n      remainingBoosts,\n    } = getBoostProgressInfo(info.boostStatus, true);\n\n    const hasBoost = hasMyBoost;\n    const isJustUpgraded = boosts === currentLevelBoosts && hasBoost;\n\n    const left = lang('BoostsLevel', currentLevel);\n    const right = hasNextLevel ? lang('BoostsLevel', currentLevel + 1) : undefined;\n\n    const moreBoosts = lang('ChannelBoost.MoreBoosts', remainingBoosts);\n    const currentStoriesPerDay = lang('ChannelBoost.StoriesPerDay', level);\n    const nextLevelStoriesPerDay = lang('ChannelBoost.StoriesPerDay', level + 1);\n\n    const modalTitle = hasBoost ? lang('YouBoostedChannel2', chatTitle)\n      : level === 0 ? lang('lng_boost_channel_title_first') : lang('lng_boost_channel_title_more');\n\n    let description: string | undefined;\n    if (level === 0) {\n      if (!hasBoost) {\n        description = lang('ChannelBoost.EnableStoriesForChannelText', [chatTitle, moreBoosts]);\n      } else {\n        description = lang('ChannelBoost.EnableStoriesMoreRequired', moreBoosts);\n      }\n    } else if (isJustUpgraded) {\n      if (level === 1) {\n        description = lang('ChannelBoost.EnabledStoriesForChannelText');\n      } else {\n        description = lang('ChannelBoost.BoostedChannelReachedLevel', [level, currentStoriesPerDay]);\n      }\n    } else {\n      description = lang('ChannelBoost.HelpUpgradeChannelText', [chatTitle, moreBoosts, nextLevelStoriesPerDay]);\n    }\n\n    return {\n      isStatusLoaded: true,\n      title: modalTitle,\n      leftText: left,\n      rightText: right,\n      value: boosts.toString(),\n      progress: levelProgress,\n      remainingBoosts,\n      descriptionText: description,\n      boost: firstBoost,\n      isBoosted: hasBoost,\n      canBoostMore: areBoostsInDifferentChannels,\n    };\n  }, [chat, chatTitle, info, lang]);\n\n  const isBoostDisabled = !info?.myBoosts?.length && isCurrentUserPremium;\n  const isReplacingBoost = boost?.chatId && boost.chatId !== info?.chatId;\n\n  const handleApplyBoost = useLastCallback(() => {\n    closeReplaceModal();\n    applyBoost({ chatId: chat!.id, slots: [boost!.slot] });\n    requestConfetti({});\n  });\n\n  const handleProceedPremium = useLastCallback(() => {\n    openPremiumModal();\n    closePremiumDialog();\n    closeBoostModal();\n  });\n\n  const handleButtonClick = useLastCallback(() => {\n    if (!boost) {\n      if (!isCurrentUserPremium) {\n        openPremiumDialog();\n      }\n\n      closeBoostModal();\n      return;\n    }\n\n    if (!canBoostMore) {\n      closeBoostModal();\n      return;\n    }\n\n    if (boost.cooldownUntil) {\n      openWaitDialog();\n      return;\n    }\n\n    if (isReplacingBoost) {\n      openReplaceModal();\n      return;\n    }\n\n    handleApplyBoost();\n  });\n\n  const handleCloseClick = useLastCallback(() => {\n    closeBoostModal();\n  });\n\n  function renderContent() {\n    if (!isStatusLoaded) {\n      return <Loading className={styles.loading} />;\n    }\n\n    return (\n      <>\n        <PremiumProgress\n          leftText={leftText}\n          rightText={rightText}\n          progress={progress}\n          floatingBadgeText={value}\n          floatingBadgeIcon=\"boost\"\n        />\n        <div className={styles.description}>\n          {renderText(descriptionText, ['simple_markdown', 'emoji'])}\n        </div>\n        <div className=\"dialog-buttons\">\n          <Button isText className=\"confirm-dialog-button\" disabled={isBoostDisabled} onClick={handleButtonClick}>\n            {canBoostMore ? (\n              <>\n                <Icon name=\"boost\" />\n                {lang(isBoosted && canBoostMore ? 'BoostingBoostAgain' : 'ChannelBoost.BoostChannel')}\n              </>\n            ) : lang('OK')}\n          </Button>\n          <Button isText className=\"confirm-dialog-button\" onClick={handleCloseClick}>\n            {lang('Cancel')}\n          </Button>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      title={title}\n      className={styles.modal}\n      contentClassName={styles.content}\n      onClose={closeBoostModal}\n    >\n      {renderContent()}\n      {isReplacingBoost && boostedChatTitle && (\n        <Modal\n          isOpen={isReplaceModalOpen}\n          className={styles.replaceModal}\n          contentClassName={styles.replaceModalContent}\n          onClose={closeReplaceModal}\n        >\n          <div className={styles.avatarContainer}>\n            <div className={styles.boostedWrapper}>\n              <Avatar peer={boostedChat} size=\"large\" />\n              <Icon name=\"boostcircle\" className={styles.boostedMark} />\n            </div>\n            <Icon name=\"next\" className={styles.arrow} />\n            <Avatar peer={chat} size=\"large\" />\n          </div>\n          <div>\n            {renderText(lang('ChannelBoost.ReplaceBoost', [boostedChatTitle, chatTitle]), ['simple_markdown', 'emoji'])}\n          </div>\n          <div className=\"dialog-buttons\">\n            <Button isText className=\"confirm-dialog-button\" onClick={handleApplyBoost}>\n              {lang('Replace')}\n            </Button>\n            <Button isText className=\"confirm-dialog-button\" onClick={closeReplaceModal}>\n              {lang('Cancel')}\n            </Button>\n          </div>\n        </Modal>\n      )}\n      {Boolean(boost?.cooldownUntil) && (\n        <ConfirmDialog\n          isOpen={isWaitDialogOpen}\n          isOnlyConfirm\n          confirmLabel={lang('OK')}\n          title={lang('ChannelBoost.Error.BoostTooOftenTitle')}\n          onClose={closeWaitDialog}\n          confirmHandler={closeWaitDialog}\n        >\n          {renderText(\n            lang(\n              'ChannelBoost.Error.BoostTooOftenText',\n              formatDateInFuture(lang, getServerTime(), boost!.cooldownUntil),\n            ),\n            ['simple_markdown', 'emoji'],\n          )}\n        </ConfirmDialog>\n      )}\n      {!isCurrentUserPremium && (\n        <ConfirmDialog\n          isOpen={isPremiumDialogOpen}\n          confirmLabel={lang('Common.Yes')}\n          title={lang('PremiumNeeded')}\n          onClose={closePremiumDialog}\n          confirmHandler={handleProceedPremium}\n        >\n          {renderText(lang('PremiumNeededForBoosting'), ['simple_markdown', 'emoji'])}\n        </ConfirmDialog>\n      )}\n    </Modal>\n  );\n};\n\nfunction getFirstAvailableBoost(myBoosts: ApiMyBoost[], chatId?: string) {\n  return myBoosts.find((boost) => !boost.chatId)\n    || myBoosts.filter((b) => chatId && b.chatId !== chatId)\n      .sort((a, b) => a.date - b.date)[0];\n}\n\nfunction areAllBoostsInChannel(myBoosts: ApiMyBoost[], chatId: string) {\n  return myBoosts.every((boost) => boost.chatId === chatId);\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { info }): StateProps => {\n    const chat = info && selectChat(global, info?.chatId);\n    const firstBoost = info?.myBoosts && getFirstAvailableBoost(info.myBoosts, info.chatId);\n    const boostedChat = firstBoost?.chatId ? selectChat(global, firstBoost?.chatId) : undefined;\n\n    return {\n      chat,\n      boostedChat,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(BoostModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"qcaMioaPQuA3J2DdyYu6\",\"modal\":\"Y9MSWZPXcoywEGAVkIGe\",\"loading\":\"rTu4qT5HMT5xEA0iBnQZ\",\"description\":\"kR5ezaKOBrU14CVmMWM0\",\"chip\":\"bwLqkQdHNWlFwAxcZAQs\",\"replaceModal\":\"YoELl5NSlfGHhh0TV09C\",\"replaceModalContent\":\"l39rkylGwQCNJD7zFGNp\",\"avatarContainer\":\"tfMx99CifV4hYxg9MEqE\",\"arrow\":\"f_dXofOOgJ37seFwxD55\",\"boostedWrapper\":\"Ylfk1xu6gEHr_yzPetrS\",\"boostedMark\":\"WDTDg5KQT796SQTEgPpx\"};","// extracted by mini-css-extract-plugin\nexport default {\"description\":\"UwWVjbf4Ptl9vrrJPZon\",\"picker-wrapper\":\"h97ntomDmLCVEoTjzCHi\",\"pickerWrapper\":\"h97ntomDmLCVEoTjzCHi\",\"picker-header\":\"Wz6C5rszlwOTdImks0cL\",\"pickerHeader\":\"Wz6C5rszlwOTdImks0cL\",\"picker-header-info\":\"OwAqbtXus5KwSxvNBKyu\",\"pickerHeaderInfo\":\"OwAqbtXus5KwSxvNBKyu\",\"selection-toggle\":\"s9Pgceru2c49SJ_hpk8Q\",\"selectionToggle\":\"s9Pgceru2c49SJ_hpk8Q\",\"foldersWrapper\":\"HFZAaai7bs4X21rCRSyQ\",\"folders\":\"Xrr7zKG4KrVimUxojATI\",\"folder\":\"_7YreahCXXe3zGG5sywZA\",\"button-text\":\"K7T3MH1zL9aRmVFtTBBu\",\"buttonText\":\"K7T3MH1zL9aRmVFtTBBu\",\"button-badge\":\"_Z6IH9MHEorrdl7VDqJ2\",\"buttonBadge\":\"_Z6IH9MHEorrdl7VDqJ2\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChatFolder, ApiChatlistInviteAlready } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLang from '../../../hooks/useLang';\n\nimport Picker from '../../common/Picker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  invite: ApiChatlistInviteAlready;\n  folder: ApiChatFolder;\n};\n\nconst ChatlistAlready: FC<OwnProps> = ({ invite, folder }) => {\n  const { closeChatlistModal, joinChatlistInvite } = getActions();\n\n  const lang = useLang();\n\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(invite.missingPeerIds);\n\n  const hasChatsToAdd = Boolean(invite.missingPeerIds.length);\n  const newChatsCount = hasChatsToAdd ? invite.missingPeerIds.length : 0;\n  const badgeText = selectedPeerIds.length ? selectedPeerIds.length.toString() : undefined;\n\n  const descriptionText = hasChatsToAdd\n    ? lang('FolderLinkSubtitleChats', [newChatsCount, folder.title], undefined, newChatsCount)\n    : lang('FolderLinkSubtitleAlready', folder.title);\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n\n    if (!selectedPeerIds.length) return;\n\n    joinChatlistInvite({\n      invite,\n      peerIds: selectedPeerIds,\n    });\n  }, [invite, selectedPeerIds]);\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === invite.missingPeerIds.length;\n    setSelectedPeerIds(areAllSelected ? [] : invite.missingPeerIds);\n  }, [invite.missingPeerIds, selectedPeerIds.length]);\n\n  return (\n    <div className={styles.content}>\n      <div className={styles.description}>\n        {renderText(descriptionText, ['simple_markdown', 'emoji'])}\n      </div>\n      <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n        {Boolean(invite.missingPeerIds.length) && (\n          <>\n            <div className={styles.pickerHeader}>\n              <div className={styles.pickerHeaderInfo}>\n                {lang('FolderLinkHeaderChatsJoin', selectedPeerIds.length, 'i')}\n              </div>\n              <div\n                className={styles.selectionToggle}\n                role=\"button\"\n                tabIndex={0}\n                onClick={handleSelectionToggle}\n              >\n                {selectedPeerIds.length === invite.missingPeerIds.length ? lang('DeselectAll') : lang('SelectAll')}\n              </div>\n            </div>\n            <Picker\n              itemIds={invite.missingPeerIds}\n              onSelectedIdsChange={setSelectedPeerIds}\n              selectedIds={selectedPeerIds}\n            />\n          </>\n        )}\n        <div className={styles.pickerHeader}>\n          <div className={styles.pickerHeaderInfo}>\n            {lang('FolderLinkHeaderAlready')}\n          </div>\n        </div>\n        <Picker\n          itemIds={invite.alreadyPeerIds}\n          lockedIds={invite.alreadyPeerIds}\n          selectedIds={invite.alreadyPeerIds}\n        />\n      </div>\n      <Button\n        size=\"smaller\"\n        onClick={handleButtonClick}\n      >\n        <div className={styles.buttonText}>\n          {!selectedPeerIds.length && lang('OK')}\n          {Boolean(selectedPeerIds.length) && (\n            <>\n              {lang('FolderLinkButtonJoinPlural', selectedPeerIds.length, 'i')}\n              <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n            </>\n          )}\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistAlready);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChatFolder } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLang from '../../../hooks/useLang';\n\nimport Picker from '../../common/Picker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  folder: ApiChatFolder;\n  suggestedPeerIds?: string[];\n};\n\nconst ChatlistDelete: FC<OwnProps> = ({\n  folder,\n  suggestedPeerIds = MEMO_EMPTY_ARRAY,\n}) => {\n  const { closeChatlistModal, leaveChatlist } = getActions();\n\n  const lang = useLang();\n\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(suggestedPeerIds);\n\n  const badgeText = selectedPeerIds.length ? selectedPeerIds.length.toString() : undefined;\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === suggestedPeerIds.length;\n    setSelectedPeerIds(areAllSelected ? [] : suggestedPeerIds);\n  }, [suggestedPeerIds, selectedPeerIds.length]);\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n    leaveChatlist({ folderId: folder.id, peerIds: selectedPeerIds });\n  }, [folder.id, selectedPeerIds]);\n\n  return (\n    <div className={styles.content}>\n      {Boolean(suggestedPeerIds?.length) && (\n        <>\n          <div className={styles.description}>\n            {renderText(lang('FolderLinkSubtitleRemove'), ['simple_markdown', 'emoji'])}\n          </div>\n          <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n            <div className={styles.pickerHeader}>\n              <div className={styles.pickerHeaderInfo}>\n                {lang('FolderLinkHeaderChatsQuit', selectedPeerIds.length, 'i')}\n              </div>\n              <div\n                className={styles.selectionToggle}\n                role=\"button\"\n                tabIndex={0}\n                onClick={handleSelectionToggle}\n              >\n                {selectedPeerIds.length === suggestedPeerIds.length ? lang('DeselectAll') : lang('SelectAll')}\n              </div>\n            </div>\n            <Picker\n              itemIds={suggestedPeerIds}\n              onSelectedIdsChange={setSelectedPeerIds}\n              selectedIds={selectedPeerIds}\n            />\n          </div>\n        </>\n      )}\n      <Button\n        size=\"smaller\"\n        onClick={handleButtonClick}\n      >\n        <div className={styles.buttonText}>\n          {!selectedPeerIds.length && lang('FolderLinkButtonRemove')}\n          {Boolean(selectedPeerIds.length) && (\n            <>\n              {lang('FolderLinkButtonRemoveChats')}\n              <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n            </>\n          )}\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistDelete);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiChatlistInviteNew } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLang from '../../../hooks/useLang';\n\nimport Picker from '../../common/Picker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  invite: ApiChatlistInviteNew;\n};\n\nconst ChatlistNew: FC<OwnProps> = ({ invite }) => {\n  const { closeChatlistModal, joinChatlistInvite } = getActions();\n\n  const lang = useLang();\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(invite.peerIds);\n\n  const joinedIds = useMemo(() => {\n    const chatsById = getGlobal().chats.byId;\n    return invite.peerIds.filter((id) => !chatsById[id].isNotJoined);\n  }, [invite.peerIds]);\n\n  const selectedCount = selectedPeerIds.length - joinedIds.length;\n\n  const badgeText = selectedCount ? selectedCount.toString() : undefined;\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n\n    joinChatlistInvite({\n      invite,\n      peerIds: selectedPeerIds,\n    });\n  }, [invite, selectedPeerIds]);\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === invite.peerIds.length;\n    setSelectedPeerIds(areAllSelected ? joinedIds : invite.peerIds);\n  }, [invite.peerIds, joinedIds, selectedPeerIds.length]);\n\n  return (\n    <div className={styles.content}>\n      <div className={styles.description}>\n        {renderText(lang('FolderLinkSubtitle', invite.title), ['simple_markdown', 'emoji'])}\n      </div>\n      <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n        <div className={styles.pickerHeader}>\n          <div className={styles.pickerHeaderInfo}>\n            {lang('FolderLinkHeaderChatsJoin', selectedCount, 'i')}\n          </div>\n          <div\n            className={styles.selectionToggle}\n            role=\"button\"\n            tabIndex={0}\n            onClick={handleSelectionToggle}\n          >\n            {selectedPeerIds.length === invite.peerIds.length ? lang('DeselectAll') : lang('SelectAll')}\n          </div>\n        </div>\n        <Picker\n          itemIds={invite.peerIds}\n          lockedIds={joinedIds}\n          onSelectedIdsChange={setSelectedPeerIds}\n          selectedIds={selectedPeerIds}\n        />\n      </div>\n      <Button\n        onClick={handleButtonClick}\n        size=\"smaller\"\n        disabled={!selectedPeerIds.length}\n      >\n        <div className={styles.buttonText}>\n          {lang('FolderLinkButtonAdd', invite.title)}\n          <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistNew);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChatFolder } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { selectChatFolder } from '../../../global/selectors';\n\nimport useLang from '../../../hooks/useLang';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport Modal from '../../ui/Modal';\nimport Tab from '../../ui/Tab';\nimport ChatlistAlready from './ChatlistAlready';\nimport ChatlistDelete from './ChatlistDelete';\nimport ChatlistNew from './ChatlistNew';\n\nimport styles from './ChatlistModal.module.scss';\n\nexport type OwnProps = {\n  info?: TabState['chatlistModal'];\n};\n\ntype StateProps = {\n  folder?: ApiChatFolder;\n};\n\nconst ChatlistInviteModal: FC<OwnProps & StateProps> = ({\n  info,\n  folder,\n}) => {\n  const { closeChatlistModal } = getActions();\n\n  const lang = useLang();\n\n  const isOpen = Boolean(info);\n  const renderingInfo = usePrevious(info) || info;\n  const renderingFolder = usePrevious(folder) || folder;\n\n  const title = useMemo(() => {\n    if (!renderingInfo) return undefined;\n    if (renderingInfo.invite) {\n      const invite = renderingInfo.invite;\n      if ('alreadyPeerIds' in invite) {\n        return invite.missingPeerIds.length ? lang('FolderLinkTitleAddChats') : lang('FolderLinkTitleAlready');\n      }\n      return lang('FolderLinkTitleAdd');\n    }\n    if (renderingInfo.removal) {\n      return lang('FolderLinkTitleRemove');\n    }\n\n    return undefined;\n  }, [lang, renderingInfo]);\n\n  const renderingFolderTitle = useMemo(() => {\n    if (renderingFolder) return renderingFolder.title;\n    if (renderingInfo?.invite && 'title' in renderingInfo.invite) return renderingInfo.invite.title;\n    return undefined;\n  }, [renderingFolder, renderingInfo]);\n\n  const folderTabNumber = useMemo(() => {\n    if (!renderingInfo?.invite) return undefined;\n    if ('missingPeerIds' in renderingInfo.invite) return renderingInfo.invite.missingPeerIds.length;\n    return undefined;\n  }, [renderingInfo]);\n\n  function renderFolders(folderTitle: string) {\n    return (\n      <div className={styles.foldersWrapper}>\n        <div className={styles.folders}>\n          <Tab className={styles.folder} title={lang('FolderLinkPreviewLeft')} />\n          <Tab className={styles.folder} isActive badgeCount={folderTabNumber} isBadgeActive title={folderTitle} />\n          <Tab className={styles.folder} title={lang('FolderLinkPreviewRight')} />\n        </div>\n      </div>\n    );\n  }\n\n  const renderContent = useCallback(() => {\n    if (!renderingInfo) return undefined;\n    if (renderingInfo.invite) {\n      const invite = renderingInfo.invite;\n      if ('alreadyPeerIds' in invite) {\n        return <ChatlistAlready invite={invite} folder={renderingFolder!} />;\n      }\n\n      return <ChatlistNew invite={invite} />;\n    }\n\n    if (renderingInfo.removal) {\n      return <ChatlistDelete folder={renderingFolder!} suggestedPeerIds={renderingInfo.removal.suggestedPeerIds} />;\n    }\n\n    return undefined;\n  }, [renderingFolder, renderingInfo]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      title={title}\n      onClose={closeChatlistModal}\n      isSlim\n      hasCloseButton\n    >\n      {renderingFolderTitle && renderFolders(renderingFolderTitle)}\n      {renderContent()}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { info }): StateProps => {\n    const { invite, removal } = info || {};\n    const folderId = removal?.folderId || (invite && 'folderId' in invite ? invite.folderId : undefined);\n    const folder = folderId ? selectChatFolder(global, folderId) : undefined;\n\n    return {\n      folder,\n    };\n  },\n)(ChatlistInviteModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"ZUq4brODsgpvaUsllahW\",\"clickable\":\"JJOxaAdgPS8KouI7ApuA\",\"title\":\"IHmQ6rmwk9lGyiwoN35E\",\"table\":\"fjpN5AKMBNcmc1B8ZMV1\",\"chat-item\":\"nAG11HvcI33XcEk6iXcE\",\"chatItem\":\"nAG11HvcI33XcEk6iXcE\",\"logo\":\"bEdCD7KzsBds3j71NvqQ\",\"centered\":\"uLJj2XtrzUYpv4M5h2yc\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPeer } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { TME_LINK_PREFIX } from '../../../config';\nimport { selectChatMessage, selectSender } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dateFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport LinkField from '../../common/LinkField';\nimport PickerSelectedItem from '../../common/PickerSelectedItem';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './GiftCodeModal.module.scss';\n\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\n\nexport type OwnProps = {\n  modal: TabState['giftCodeModal'];\n};\n\nexport type StateProps = {\n  currentUserId?: string;\n  messageSender?: ApiPeer;\n};\n\nconst GIFTCODE_PATH = 'giftcode';\n\nconst GiftCodeModal = ({\n  currentUserId,\n  modal,\n  messageSender,\n}: OwnProps & StateProps) => {\n  const {\n    closeGiftCodeModal, openChat, applyGiftCode, focusMessage,\n  } = getActions();\n  const lang = useLang();\n  const isOpen = Boolean(modal);\n\n  const canUse = (!modal?.info.toId || modal?.info.toId === currentUserId) && !modal?.info.usedAt;\n\n  const handleOpenChat = useLastCallback((peerId: string) => {\n    openChat({ id: peerId });\n    closeGiftCodeModal();\n  });\n\n  const handleOpenGiveaway = useLastCallback(() => {\n    if (!modal || !modal.info.giveawayMessageId) return;\n    focusMessage({\n      chatId: modal.info.fromId!,\n      messageId: modal.info.giveawayMessageId,\n    });\n    closeGiftCodeModal();\n  });\n\n  const handleButtonClick = useLastCallback(() => {\n    if (canUse) {\n      applyGiftCode({ slug: modal!.slug });\n      return;\n    }\n    closeGiftCodeModal();\n  });\n\n  function renderContent() {\n    if (!modal) return undefined;\n    const { slug, info } = modal;\n\n    const fromId = info.fromId || messageSender?.id;\n\n    return (\n      <>\n        <img className={styles.logo} src={PremiumLogo} alt=\"\" draggable={false} />\n        <p className={styles.centered}>{renderText(lang('lng_gift_link_about'), ['simple_markdown'])}</p>\n        <LinkField title=\"BoostingGiftLink\" link={`${TME_LINK_PREFIX}/${GIFTCODE_PATH}/${slug}`} />\n        <table className={styles.table}>\n          <tr>\n            <td className={styles.title}>{lang('BoostingFrom')}</td>\n            <td>\n              {fromId ? (\n                <PickerSelectedItem\n                  peerId={fromId}\n                  className={styles.chatItem}\n                  forceShowSelf\n                  fluid\n                  clickArg={fromId}\n                  onClick={handleOpenChat}\n                />\n              ) : lang('BoostingNoRecipient')}\n            </td>\n          </tr>\n          <tr>\n            <td className={styles.title}>\n              {lang('BoostingTo')}\n            </td>\n            <td>\n              {info.toId ? (\n                <PickerSelectedItem\n                  peerId={info.toId}\n                  className={styles.chatItem}\n                  forceShowSelf\n                  fluid\n                  clickArg={info.toId}\n                  onClick={handleOpenChat}\n                />\n              ) : lang('BoostingNoRecipient')}\n            </td>\n          </tr>\n          <tr>\n            <td className={styles.title}>\n              {lang('BoostingGift')}\n            </td>\n            <td>\n              {lang('BoostingTelegramPremiumFor', lang('Months', info.months, 'i'))}\n            </td>\n          </tr>\n          <tr>\n            <td className={styles.title}>\n              {lang('BoostingReason')}\n            </td>\n            <td className={buildClassName(info.giveawayMessageId && styles.clickable)} onClick={handleOpenGiveaway}>\n              {info.isFromGiveaway && !info.toId ? lang('BoostingIncompleteGiveaway')\n                : lang(info.isFromGiveaway ? 'BoostingGiveaway' : 'BoostingYouWereSelected')}\n            </td>\n          </tr>\n          <tr>\n            <td className={styles.title}>\n              {lang('BoostingDate')}\n            </td>\n            <td>\n              {formatDateTimeToString(info.date * 1000, lang.code, true)}\n            </td>\n          </tr>\n        </table>\n        <span className={styles.centered}>\n          {renderText(\n            info.usedAt ? lang('BoostingUsedLinkDate', formatDateTimeToString(info.usedAt * 1000, lang.code, true))\n              : lang('BoostingSendLinkToAnyone'),\n            ['simple_markdown'],\n          )}\n        </span>\n        <Button onClick={handleButtonClick}>\n          {canUse ? lang('BoostingUseLink') : lang('Close')}\n        </Button>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      hasCloseButton\n      isSlim\n      title={lang('lng_gift_link_title')}\n      contentClassName={styles.content}\n      onClose={closeGiftCodeModal}\n    >\n      {renderContent()}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const { message } = modal || {};\n    const chatMessage = message && selectChatMessage(global, message.chatId, message.messageId);\n    const sender = chatMessage && selectSender(global, chatMessage);\n\n    return {\n      currentUserId: global.currentUserId,\n      messageSender: sender,\n    };\n  },\n)(GiftCodeModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"pZFkNPeaXsO10mdITSZR\",\"buttons\":\"bYI0Nm410CJjgAhnH3EL\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiGeoPoint } from '../../../api/types';\n\nimport { prepareMapUrl } from '../../../util/map';\nimport { IS_IOS, IS_MAC_OS } from '../../../util/windowEnvironment';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './MapModal.module.scss';\n\nexport type OwnProps = {\n  geoPoint?: ApiGeoPoint;\n  zoom?: number;\n};\n\nconst OpenMapModal = ({ geoPoint, zoom }: OwnProps) => {\n  const { closeMapModal } = getActions();\n\n  const lang = useLang();\n\n  const isOpen = Boolean(geoPoint);\n\n  const handleClose = useLastCallback(() => {\n    closeMapModal();\n  });\n\n  const [googleUrl, bingUrl, appleUrl, osmUrl] = useMemo(() => {\n    if (!geoPoint) {\n      return [];\n    }\n\n    const google = prepareMapUrl('google', geoPoint, zoom);\n    const bing = prepareMapUrl('bing', geoPoint, zoom);\n    const osm = prepareMapUrl('osm', geoPoint, zoom);\n    const apple = prepareMapUrl('apple', geoPoint, zoom);\n\n    return [google, bing, apple, osm];\n  }, [geoPoint, zoom]);\n\n  const openUrl = useLastCallback((url: string) => {\n    closeMapModal();\n    window.open(url, '_blank', 'noopener');\n  });\n\n  const handleGoogleClick = useLastCallback(() => {\n    openUrl(googleUrl!);\n  });\n\n  const handleBingClick = useLastCallback(() => {\n    openUrl(bingUrl!);\n  });\n\n  const handleAppleClick = useLastCallback(() => {\n    openUrl(appleUrl!);\n  });\n\n  const handleOsmClick = useLastCallback(() => {\n    openUrl(osmUrl!);\n  });\n\n  return (\n    <Modal\n      contentClassName={styles.root}\n      title={lang('OpenMapWith')}\n      isOpen={isOpen}\n      onClose={handleClose}\n      isSlim\n    >\n      <div className={styles.buttons}>\n        {(IS_IOS || IS_MAC_OS) && (\n          <Button fluid size=\"smaller\" onClick={handleAppleClick}>\n            Apple Maps\n          </Button>\n        )}\n        <Button fluid size=\"smaller\" onClick={handleGoogleClick}>\n          Google Maps\n        </Button>\n        <Button fluid size=\"smaller\" onClick={handleBingClick}>\n          Bing Maps\n        </Button>\n        <Button fluid size=\"smaller\" onClick={handleOsmClick}>\n          Open Street Maps\n        </Button>\n      </div>\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" isText onClick={handleClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(OpenMapModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sMxkQ_GpCrBAS6HotUdF\",\"fade-in-opacity\":\"PwQY48P1x8joFS2oDCk1\",\"fadeInOpacity\":\"PwQY48P1x8joFS2oDCk1\",\"closing\":\"zGmJi0nPMEPnhZ0CXipP\",\"main\":\"e54u0VL6eCzrkNYHviWs\",\"footer\":\"BDSrSkEY84Au3M_0I6Hb\",\"closeBtn\":\"KBmZwJQ4V3VTaHv7ypnm\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\nimport { AudioOrigin } from '../../../types';\n\nimport { isOwnMessage } from '../../../global/helpers';\nimport { selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport Audio from '../../common/Audio';\nimport Button from '../../ui/Button';\n\nimport styles from './OneTimeMediaModal.module.scss';\n\nexport type OwnProps = {\n  info: TabState['oneTimeMediaModal'];\n};\n\nconst OneTimeMediaModal = ({\n  info,\n}: OwnProps) => {\n  const {\n    closeOneTimeMediaModal,\n  } = getActions();\n\n  const lang = useLang();\n  const message = useCurrentOrPrev(info?.message, true);\n\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransition(Boolean(info));\n\n  const handlePlayVoice = useLastCallback(() => {\n    return undefined;\n  });\n\n  const handleClose = useLastCallback(() => {\n    closeOneTimeMediaModal();\n  });\n\n  if (!shouldRender || !message) {\n    return undefined;\n  }\n\n  const isOwn = isOwnMessage(message);\n  const theme = selectTheme(getGlobal());\n  const closeBtnTitle = isOwn ? lang('Chat.Voice.Single.Close') : lang('Chat.Voice.Single.DeleteAndClose');\n\n  function renderMedia() {\n    if (message?.content?.voice) {\n      return (\n        <Audio\n          theme={theme}\n          message={message}\n          origin={AudioOrigin.OneTimeModal}\n          autoPlay\n          onPlay={handlePlayVoice}\n          onPause={handleClose}\n        />\n      );\n    }\n    return undefined;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, transitionClassNames)}>\n      <div className={styles.main}>{renderMedia()}</div>\n      <div className={styles.footer}>\n        <Button\n          faded\n          onClick={handleClose}\n          pill\n          size=\"smaller\"\n          color={theme === 'dark' ? 'dark' : 'secondary'}\n          className={styles.closeBtn}\n        >\n          {closeBtnTitle}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(OneTimeMediaModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"checkbox\":\"jztdH6qO5uz3c2muOpPT\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { ensureProtocol } from '../../../util/ensureProtocol';\nimport renderText from '../../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\nimport styles from './UrlAuthModal.module.scss';\n\nexport type OwnProps = {\n  urlAuth?: TabState['urlAuth'];\n  currentUserName?: string;\n};\n\nconst UrlAuthModal: FC<OwnProps> = ({\n  urlAuth, currentUserName,\n}) => {\n  const { closeUrlAuthModal, acceptBotUrlAuth, acceptLinkUrlAuth } = getActions();\n  const [isLoginChecked, setLoginChecked] = useState(true);\n  const [isWriteAccessChecked, setWriteAccessChecked] = useState(true);\n  const currentAuth = useCurrentOrPrev(urlAuth, false);\n  const { domain, botId, shouldRequestWriteAccess } = currentAuth?.request || {};\n  const bot = botId ? getGlobal().users.byId[botId] : undefined;\n\n  const lang = useLang();\n\n  const handleOpen = useCallback(() => {\n    if (urlAuth?.url && isLoginChecked) {\n      const acceptAction = urlAuth.button ? acceptBotUrlAuth : acceptLinkUrlAuth;\n      acceptAction({\n        isWriteAllowed: isWriteAccessChecked,\n      });\n    } else {\n      window.open(ensureProtocol(currentAuth?.url), '_blank', 'noopener');\n    }\n    closeUrlAuthModal();\n  }, [\n    urlAuth, isLoginChecked, closeUrlAuthModal, acceptBotUrlAuth, acceptLinkUrlAuth, isWriteAccessChecked, currentAuth,\n  ]);\n\n  const handleDismiss = useCallback(() => {\n    closeUrlAuthModal();\n  }, [closeUrlAuthModal]);\n\n  const handleLoginChecked = useCallback((value: boolean) => {\n    setLoginChecked(value);\n    setWriteAccessChecked(value);\n  }, [setLoginChecked]);\n\n  // Reset on re-open\n  useEffect(() => {\n    if (domain) {\n      setLoginChecked(true);\n      setWriteAccessChecked(Boolean(shouldRequestWriteAccess));\n    }\n  }, [shouldRequestWriteAccess, domain]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(urlAuth?.url)}\n      onClose={handleDismiss}\n      title={lang('OpenUrlTitle')}\n      confirmLabel={lang('OpenUrlTitle')}\n      confirmHandler={handleOpen}\n    >\n      {renderText(lang('OpenUrlAlert2', currentAuth?.url), ['links'])}\n      {domain && (\n        <Checkbox\n          checked={isLoginChecked}\n          label={(\n            <>\n              {renderText(\n                lang('Conversation.OpenBotLinkLogin', [domain, currentUserName]),\n                ['simple_markdown'],\n              )}\n            </>\n          )}\n          onCheck={handleLoginChecked}\n          className={styles.checkbox}\n        />\n      )}\n      {shouldRequestWriteAccess && (\n        <Checkbox\n          checked={isWriteAccessChecked}\n          label={(\n            <>\n              {renderText(\n                lang('Conversation.OpenBotLinkAllowMessages', getUserFullName(bot)),\n                ['simple_markdown'],\n              )}\n            </>\n          )}\n          onCheck={setWriteAccessChecked}\n          disabled={!isLoginChecked}\n          className={styles.checkbox}\n        />\n      )}\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(UrlAuthModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CWJDTp88gsPYaq6de8yn\",\"more-button\":\"_VJv8UKGVoUJKFRjrn8B\",\"moreButton\":\"_VJv8UKGVoUJKFRjrn8B\",\"close-icon\":\"l4SsaN4Dx0bKGb83CYhA\",\"closeIcon\":\"l4SsaN4Dx0bKGb83CYhA\",\"state-back\":\"jscxQ3PMmXnE2oWrMVBY\",\"stateBack\":\"jscxQ3PMmXnE2oWrMVBY\",\"loading-spinner\":\"ElvN45roGsPDzZuJjk3H\",\"loadingSpinner\":\"ElvN45roGsPDzZuJjk3H\",\"hide\":\"L441lq9G5_x3lNeWNFlB\",\"frame\":\"uFAepVSf6dgEREGs6Kio\",\"with-button\":\"ruOZRuUOenMeQp5WIpy0\",\"withButton\":\"ruOZRuUOenMeQp5WIpy0\",\"main-button\":\"QoAHIcQHa0NNmR8fma3w\",\"mainButton\":\"QoAHIcQHa0NNmR8fma3w\",\"visible\":\"OViz2KN7MjYjs1f5Z3JN\",\"hidden\":\"IEfxtMw7c1U4BRBpulWm\",\"main-button-spinner\":\"e4f56fQ8AjPxn8H1Avdv\",\"mainButtonSpinner\":\"e4f56fQ8AjPxn8H1Avdv\",\"web-app-popup\":\"afCqZ6iSD2Iw6bKyAKO1\",\"webAppPopup\":\"afCqZ6iSD2Iw6bKyAKO1\",\"without-title\":\"GuFs2OL_xXL5ODh10kTj\",\"withoutTitle\":\"GuFs2OL_xXL5ODh10kTj\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiAttachBot, ApiChat, ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\nimport type { ThemeKey } from '../../../types';\nimport type { PopupOptions, WebAppInboundEvent } from '../../../types/webapp';\n\nimport { TME_LINK_PREFIX } from '../../../config';\nimport { convertToApiChatType } from '../../../global/helpers';\nimport {\n  selectCurrentChat, selectTabState, selectTheme, selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { getColorLuma } from '../../../util/colors';\nimport { hexToRgb } from '../../../util/switchTheme';\nimport { extractCurrentThemeParams, validateHexColor } from '../../../util/themeStyle';\nimport { callApi } from '../../../api/gramjs';\nimport renderText from '../../common/helpers/renderText';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport useInterval from '../../../hooks/useInterval';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\nimport usePopupLimit from './hooks/usePopupLimit';\nimport useWebAppFrame from './hooks/useWebAppFrame';\n\nimport Icon from '../../common/Icon';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\nimport Modal from '../../ui/Modal';\nimport Spinner from '../../ui/Spinner';\n\nimport styles from './WebAppModal.module.scss';\n\ntype WebAppButton = {\n  isVisible: boolean;\n  isActive: boolean;\n  text: string;\n  color: string;\n  textColor: string;\n  isProgressVisible: boolean;\n};\n\nexport type OwnProps = {\n  webApp?: TabState['webApp'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  bot?: ApiUser;\n  attachBot?: ApiAttachBot;\n  theme?: ThemeKey;\n  isPaymentModalOpen?: boolean;\n  paymentStatus?: TabState['payment']['status'];\n};\n\nconst NBSP = '\\u00A0';\n\nconst MAIN_BUTTON_ANIMATION_TIME = 250;\nconst PROLONG_INTERVAL = 45000; // 45s\nconst ANIMATION_WAIT = 400;\nconst POPUP_SEQUENTIAL_LIMIT = 3;\nconst LUMA_THRESHOLD = 128;\nconst POPUP_RESET_DELAY = 2000; // 2s\nconst SANDBOX_ATTRIBUTES = [\n  'allow-scripts',\n  'allow-same-origin',\n  'allow-popups',\n  'allow-forms',\n  'allow-modals',\n  'allow-storage-access-by-user-activation',\n].join(' ');\n\nconst DEFAULT_BUTTON_TEXT: Record<string, string> = {\n  ok: 'OK',\n  cancel: 'Cancel',\n  close: 'Close',\n};\n\nconst WebAppModal: FC<OwnProps & StateProps> = ({\n  webApp,\n  chat,\n  bot,\n  attachBot,\n  theme,\n  isPaymentModalOpen,\n  paymentStatus,\n}) => {\n  const {\n    closeWebApp,\n    sendWebViewData,\n    prolongWebView,\n    toggleAttachBot,\n    openTelegramLink,\n    openChat,\n    setWebAppPaymentSlug,\n    switchBotInline,\n    sharePhoneWithBot,\n  } = getActions();\n  const [mainButton, setMainButton] = useState<WebAppButton | undefined>();\n  const [isBackButtonVisible, setIsBackButtonVisible] = useState(false);\n  const [isSettingsButtonVisible, setIsSettingsButtonVisible] = useState(false);\n\n  const [backgroundColor, setBackgroundColor] = useState<string>();\n  const [headerColor, setHeaderColor] = useState<string>();\n\n  const [shouldConfirmClosing, setShouldConfirmClosing] = useState(false);\n  const [isCloseModalOpen, openCloseModal, hideCloseModal] = useFlag(false);\n  const [isRemoveModalOpen, openRemoveModal, hideRemoveModal] = useFlag(false);\n\n  const [isLoaded, markLoaded, markUnloaded] = useFlag(false);\n\n  const [popupParameters, setPopupParameters] = useState<PopupOptions | undefined>();\n  const [isRequestingPhone, setIsRequestingPhone] = useState(false);\n  const [isRequesingWriteAccess, setIsRequestingWriteAccess] = useState(false);\n  const {\n    unlockPopupsAt, handlePopupOpened, handlePopupClosed,\n  } = usePopupLimit(POPUP_SEQUENTIAL_LIMIT, POPUP_RESET_DELAY);\n\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    const themeParams = extractCurrentThemeParams();\n    setBackgroundColor(themeParams.bg_color);\n    setHeaderColor(themeParams.bg_color);\n  }, []);\n\n  // eslint-disable-next-line no-null/no-null\n  const frameRef = useRef<HTMLIFrameElement>(null);\n\n  const lang = useLang();\n  const {\n    url, buttonText, queryId, replyInfo,\n  } = webApp || {};\n  const isOpen = Boolean(url);\n  const isSimple = Boolean(buttonText);\n\n  const {\n    reloadFrame, sendEvent, sendViewport, sendTheme,\n  } = useWebAppFrame(frameRef, isOpen, isSimple, handleEvent, markLoaded);\n\n  const shouldShowMainButton = mainButton?.isVisible && mainButton.text.trim().length > 0;\n\n  useInterval(() => {\n    prolongWebView({\n      botId: bot!.id,\n      queryId: queryId!,\n      peerId: chat!.id,\n      replyInfo,\n    });\n  }, queryId ? PROLONG_INTERVAL : undefined, true);\n\n  const handleMainButtonClick = useLastCallback(() => {\n    sendEvent({\n      eventType: 'main_button_pressed',\n    });\n  });\n\n  const handleSettingsButtonClick = useLastCallback(() => {\n    sendEvent({\n      eventType: 'settings_button_pressed',\n    });\n  });\n\n  const handleRefreshClick = useLastCallback(() => {\n    reloadFrame(webApp!.url);\n  });\n\n  const handleClose = useLastCallback(() => {\n    if (shouldConfirmClosing) {\n      openCloseModal();\n    } else {\n      closeWebApp();\n    }\n  });\n\n  const handleAppPopupClose = useLastCallback((buttonId?: string) => {\n    setPopupParameters(undefined);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'popup_closed',\n      eventData: {\n        button_id: buttonId,\n      },\n    });\n  });\n\n  const handleAppPopupModalClose = useLastCallback(() => {\n    handleAppPopupClose();\n  });\n\n  // Notify view that height changed\n  useSyncEffect(() => {\n    setTimeout(() => {\n      sendViewport();\n    }, ANIMATION_WAIT);\n  }, [mainButton?.isVisible, sendViewport]);\n\n  // Notify view that theme changed\n  useSyncEffect(() => {\n    setTimeout(() => {\n      sendTheme();\n    }, ANIMATION_WAIT);\n  }, [theme, sendTheme]);\n\n  useSyncEffect(([prevIsPaymentModalOpen]) => {\n    if (isPaymentModalOpen === prevIsPaymentModalOpen) return;\n    if (webApp?.slug && !isPaymentModalOpen && paymentStatus) {\n      sendEvent({\n        eventType: 'invoice_closed',\n        eventData: {\n          slug: webApp.slug,\n          status: paymentStatus,\n        },\n      });\n      setWebAppPaymentSlug({\n        slug: undefined,\n      });\n    }\n  }, [isPaymentModalOpen, paymentStatus, sendEvent, setWebAppPaymentSlug, webApp]);\n\n  const handleRemoveAttachBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot!.id,\n      isEnabled: false,\n    });\n    closeWebApp();\n  });\n\n  const handleToggleClick = useLastCallback(() => {\n    if (attachBot) {\n      openRemoveModal();\n      return;\n    }\n\n    toggleAttachBot({\n      botId: bot!.id,\n      isEnabled: true,\n    });\n  });\n\n  const handleBackClick = useLastCallback(() => {\n    if (isBackButtonVisible) {\n      sendEvent({\n        eventType: 'back_button_pressed',\n      });\n    } else {\n      handleClose();\n    }\n  });\n\n  const handleRejectPhone = useLastCallback(() => {\n    setIsRequestingPhone(false);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'phone_requested',\n      eventData: {\n        status: 'cancelled',\n      },\n    });\n  });\n\n  const handleAcceptPhone = useLastCallback(() => {\n    sharePhoneWithBot({ botId: bot!.id });\n    setIsRequestingPhone(false);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'phone_requested',\n      eventData: {\n        status: 'sent',\n      },\n    });\n  });\n\n  const handleRejectWriteAccess = useLastCallback(() => {\n    sendEvent({\n      eventType: 'write_access_requested',\n      eventData: {\n        status: 'cancelled',\n      },\n    });\n    setIsRequestingWriteAccess(false);\n    handlePopupClosed();\n  });\n\n  const handleAcceptWriteAccess = useLastCallback(async () => {\n    const result = await callApi('allowBotSendMessages', { bot: bot! });\n    if (!result) {\n      handleRejectWriteAccess();\n      return;\n    }\n\n    sendEvent({\n      eventType: 'write_access_requested',\n      eventData: {\n        status: 'allowed',\n      },\n    });\n    setIsRequestingWriteAccess(false);\n    handlePopupClosed();\n  });\n\n  async function handleRequestWriteAccess() {\n    const canWrite = await callApi('fetchBotCanSendMessage', {\n      bot: bot!,\n    });\n\n    if (canWrite) {\n      sendEvent({\n        eventType: 'write_access_requested',\n        eventData: {\n          status: 'allowed',\n        },\n      });\n    }\n\n    setIsRequestingWriteAccess(!canWrite);\n  }\n\n  async function handleInvokeCustomMethod(requestId: string, method: string, parameters: string) {\n    const result = await callApi('invokeWebViewCustomMethod', {\n      bot: bot!,\n      customMethod: method,\n      parameters,\n    });\n\n    sendEvent({\n      eventType: 'custom_method_invoked',\n      eventData: {\n        req_id: requestId,\n        ...result,\n      },\n    });\n  }\n\n  const openBotChat = useLastCallback(() => {\n    openChat({\n      id: bot!.id,\n    });\n    closeWebApp();\n  });\n\n  useEffect(() => {\n    if (!isOpen) {\n      const themeParams = extractCurrentThemeParams();\n\n      setShouldConfirmClosing(false);\n      hideCloseModal();\n      hideRemoveModal();\n      setPopupParameters(undefined);\n      setIsRequestingPhone(false);\n      setIsRequestingWriteAccess(false);\n      setMainButton(undefined);\n      setIsBackButtonVisible(false);\n      setIsSettingsButtonVisible(false);\n      setBackgroundColor(themeParams.bg_color);\n      setHeaderColor(themeParams.bg_color);\n      markUnloaded();\n    }\n  }, [isOpen]);\n\n  function handleEvent(event: WebAppInboundEvent) {\n    const { eventType, eventData } = event;\n    if (eventType === 'web_app_open_tg_link' && !isPaymentModalOpen) {\n      const linkUrl = TME_LINK_PREFIX + eventData.path_full;\n      openTelegramLink({ url: linkUrl });\n      closeWebApp();\n    }\n\n    if (eventType === 'web_app_setup_back_button') {\n      setIsBackButtonVisible(eventData.is_visible);\n    }\n\n    if (eventType === 'web_app_setup_settings_button') {\n      setIsSettingsButtonVisible(eventData.is_visible);\n    }\n\n    if (eventType === 'web_app_set_background_color') {\n      const themeParams = extractCurrentThemeParams();\n      const color = validateHexColor(eventData.color) ? eventData.color : themeParams.bg_color;\n      setBackgroundColor(color);\n    }\n\n    if (eventType === 'web_app_set_header_color') {\n      if (eventData.color_key) {\n        const themeParams = extractCurrentThemeParams();\n        const key = eventData.color_key;\n        const newColor = themeParams[key];\n        const color = validateHexColor(newColor) ? newColor : headerColor;\n        setHeaderColor(color);\n      }\n\n      if (eventData.color) {\n        const color = validateHexColor(eventData.color) ? eventData.color : headerColor;\n        setHeaderColor(color);\n      }\n    }\n\n    if (eventType === 'web_app_data_send') {\n      closeWebApp();\n      sendWebViewData({\n        bot: bot!,\n        buttonText: buttonText!,\n        data: eventData.data,\n      });\n    }\n\n    if (eventType === 'web_app_setup_main_button') {\n      const themeParams = extractCurrentThemeParams();\n      const color = validateHexColor(eventData.color) ? eventData.color : themeParams.button_color;\n      const textColor = validateHexColor(eventData.text_color) ? eventData.text_color : themeParams.text_color;\n      setMainButton({\n        isVisible: eventData.is_visible && Boolean(eventData.text?.trim().length),\n        isActive: eventData.is_active,\n        text: eventData.text || '',\n        color,\n        textColor,\n        isProgressVisible: eventData.is_progress_visible,\n      });\n    }\n\n    if (eventType === 'web_app_setup_closing_behavior') {\n      setShouldConfirmClosing(eventData.need_confirmation);\n    }\n\n    if (eventType === 'web_app_open_popup') {\n      if (popupParameters || !eventData.message.trim().length || !eventData.buttons?.length\n      || eventData.buttons.length > 3 || isRequestingPhone || isRequesingWriteAccess\n      || unlockPopupsAt > Date.now()) {\n        handleAppPopupClose(undefined);\n        return;\n      }\n\n      setPopupParameters(eventData);\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_switch_inline_query') {\n      const filter = eventData.chat_types?.map(convertToApiChatType).filter(Boolean);\n      const isSamePeer = !filter?.length;\n\n      switchBotInline({\n        botId: bot!.id,\n        query: eventData.query,\n        filter,\n        isSamePeer,\n      });\n\n      closeWebApp();\n    }\n\n    if (eventType === 'web_app_request_phone') {\n      if (popupParameters || isRequesingWriteAccess || unlockPopupsAt > Date.now()) {\n        handleRejectPhone();\n        return;\n      }\n\n      setIsRequestingPhone(true);\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_request_write_access') {\n      if (popupParameters || isRequestingPhone || unlockPopupsAt > Date.now()) {\n        handleRejectWriteAccess();\n        return;\n      }\n\n      handleRequestWriteAccess();\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_invoke_custom_method') {\n      const { method, params, req_id: requestId } = eventData;\n      handleInvokeCustomMethod(requestId, method, JSON.stringify(params));\n    }\n  }\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={buildClassName(styles.moreButton, isMenuOpen && 'active')}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  const backButtonClassName = buildClassName(\n    styles.closeIcon,\n    isBackButtonVisible && styles.stateBack,\n  );\n\n  const headerTextVar = useMemo(() => {\n    if (!headerColor) return undefined;\n    const { r, g, b } = hexToRgb(headerColor);\n    const luma = getColorLuma([r, g, b]);\n    const adaptedLuma = theme === 'dark' ? 255 - luma : luma;\n    return adaptedLuma > LUMA_THRESHOLD ? 'color-text' : 'color-background';\n  }, [headerColor, theme]);\n\n  function renderHeader() {\n    return (\n      <div\n        className=\"modal-header\"\n        style={buildStyle(\n          headerColor && `background-color: ${headerColor}`,\n          headerTextVar && `--color-header-text: var(--${headerTextVar})`,\n        )}\n      >\n        <Button\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          ariaLabel={lang(isBackButtonVisible ? 'Back' : 'Close')}\n          onClick={handleBackClick}\n        >\n          <div className={backButtonClassName} />\n        </Button>\n        <div className=\"modal-title\">{bot?.firstName}</div>\n        <DropdownMenu\n          className=\"web-app-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          {chat && bot && chat.id !== bot.id && (\n            <MenuItem icon=\"bots\" onClick={openBotChat}>{lang('BotWebViewOpenBot')}</MenuItem>\n          )}\n          <MenuItem icon=\"reload\" onClick={handleRefreshClick}>{lang('WebApp.ReloadPage')}</MenuItem>\n          {isSettingsButtonVisible && (\n            <MenuItem icon=\"settings\" onClick={handleSettingsButtonClick}>\n              {lang('Settings')}\n            </MenuItem>\n          )}\n          {bot?.isAttachBot && (\n            <MenuItem\n              icon={attachBot ? 'stop' : 'install'}\n              onClick={handleToggleClick}\n              destructive={Boolean(attachBot)}\n            >\n              {lang(attachBot ? 'WebApp.RemoveBot' : 'WebApp.AddToAttachmentAdd')}\n            </MenuItem>\n          )}\n        </DropdownMenu>\n      </div>\n    );\n  }\n\n  const prevMainButtonColor = usePrevious(mainButton?.color, true);\n  const prevMainButtonTextColor = usePrevious(mainButton?.textColor, true);\n  const prevMainButtonIsActive = usePrevious(mainButton && Boolean(mainButton.isActive), true);\n  const prevMainButtonText = usePrevious(mainButton?.text, true);\n\n  const mainButtonCurrentColor = mainButton?.color || prevMainButtonColor;\n  const mainButtonCurrentTextColor = mainButton?.textColor || prevMainButtonTextColor;\n  const mainButtonCurrentIsActive = mainButton?.isActive !== undefined ? mainButton.isActive : prevMainButtonIsActive;\n  const mainButtonCurrentText = mainButton?.text || prevMainButtonText;\n\n  const [shouldDecreaseWebFrameSize, setShouldDecreaseWebFrameSize] = useState(false);\n  const [shouldHideButton, setShouldHideButton] = useState(true);\n\n  const buttonChangeTimeout = useRef<ReturnType<typeof setTimeout>>();\n\n  useEffect(() => {\n    if (buttonChangeTimeout.current) clearTimeout(buttonChangeTimeout.current);\n    if (!shouldShowMainButton) {\n      setShouldDecreaseWebFrameSize(false);\n      buttonChangeTimeout.current = setTimeout(() => {\n        setShouldHideButton(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    } else {\n      setShouldHideButton(false);\n      buttonChangeTimeout.current = setTimeout(() => {\n        setShouldDecreaseWebFrameSize(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    }\n  }, [setShouldDecreaseWebFrameSize, shouldShowMainButton]);\n\n  return (\n    <Modal\n      className={styles.root}\n      isOpen={isOpen}\n      onClose={handleClose}\n      header={renderHeader()}\n      style={`background-color: ${backgroundColor}`}\n    >\n      <Spinner className={buildClassName(styles.loadingSpinner, isLoaded && styles.hide)} />\n      {isOpen && (\n        <>\n          <iframe\n            className={buildClassName(styles.frame, shouldDecreaseWebFrameSize && styles.withButton)}\n            src={url}\n            title={`${bot?.firstName} Web App`}\n            sandbox={SANDBOX_ATTRIBUTES}\n            allow=\"camera; microphone; geolocation;\"\n            allowFullScreen\n            ref={frameRef}\n          />\n          <Button\n            className={buildClassName(\n              styles.mainButton,\n              shouldShowMainButton && styles.visible,\n              shouldHideButton && styles.hidden,\n            )}\n            style={`background-color: ${mainButtonCurrentColor}; color: ${mainButtonCurrentTextColor}`}\n            disabled={!mainButtonCurrentIsActive}\n            onClick={handleMainButtonClick}\n          >\n            {mainButtonCurrentText}\n            {mainButton?.isProgressVisible && <Spinner className={styles.mainButtonSpinner} color=\"white\" />}\n          </Button>\n        </>\n      )}\n      <ConfirmDialog\n        isOpen={isRequestingPhone}\n        onClose={handleRejectPhone}\n        title={lang('ShareYouPhoneNumberTitle')}\n        text={lang('AreYouSureShareMyContactInfoBot')}\n        confirmHandler={handleAcceptPhone}\n        confirmLabel={lang('ContactShare')}\n      />\n      <ConfirmDialog\n        isOpen={isRequesingWriteAccess}\n        onClose={handleRejectWriteAccess}\n        title={lang('lng_bot_allow_write_title')}\n        text={lang('lng_bot_allow_write')}\n        confirmHandler={handleAcceptWriteAccess}\n        confirmLabel={lang('lng_bot_allow_write_confirm')}\n      />\n      {popupParameters && (\n        <Modal\n          isOpen={Boolean(popupParameters)}\n          title={popupParameters.title || NBSP}\n          onClose={handleAppPopupModalClose}\n          hasCloseButton\n          className={\n            buildClassName(styles.webAppPopup, !popupParameters.title?.trim().length && styles.withoutTitle)\n          }\n        >\n          {popupParameters.message}\n          <div className=\"dialog-buttons mt-2\">\n            {popupParameters.buttons.map((button) => (\n              <Button\n                key={button.id || button.type}\n                className=\"confirm-dialog-button\"\n                color={button.type === 'destructive' ? 'danger' : 'primary'}\n                isText\n                size=\"smaller\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleAppPopupClose(button.id)}\n              >\n                {button.text || lang(DEFAULT_BUTTON_TEXT[button.type])}\n              </Button>\n            ))}\n          </div>\n        </Modal>\n      )}\n\n      <ConfirmDialog\n        isOpen={isCloseModalOpen}\n        onClose={hideCloseModal}\n        title={lang('lng_bot_close_warning_title')}\n        text={lang('lng_bot_close_warning')}\n        confirmHandler={closeWebApp}\n        confirmIsDestructive\n        confirmLabel={lang('lng_bot_close_warning_sure')}\n      />\n      <ConfirmDialog\n        isOpen={isRemoveModalOpen}\n        onClose={hideRemoveModal}\n        title={lang('BotRemoveFromMenuTitle')}\n        textParts={renderText(lang('BotRemoveFromMenu', bot?.firstName), ['simple_markdown'])}\n        confirmHandler={handleRemoveAttachBot}\n        confirmIsDestructive\n      />\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { webApp }): StateProps => {\n    const { botId } = webApp || {};\n    const attachBot = botId ? global.attachMenu.bots[botId] : undefined;\n    const bot = botId ? selectUser(global, botId) : undefined;\n    const chat = selectCurrentChat(global);\n    const theme = selectTheme(global);\n    const { isPaymentModalOpen, status } = selectTabState(global).payment;\n\n    return {\n      attachBot,\n      bot,\n      chat,\n      theme,\n      isPaymentModalOpen,\n      paymentStatus: status,\n    };\n  },\n)(WebAppModal));\n","import { useRef, useState } from '../../../../lib/teact/teact';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function usePopupLimit(sequentialLimit: number, resetAfter: number) {\n  const [unlockPopupsAt, setUnlockPopupsAt] = useState(0);\n  const sequentialCalls = useRef(0);\n  const lastClosedDate = useRef(0);\n\n  const handlePopupOpened = useLastCallback(() => {\n    const now = Date.now();\n\n    if (now - lastClosedDate.current > resetAfter) {\n      sequentialCalls.current = 0;\n    }\n\n    sequentialCalls.current += 1;\n\n    if (sequentialCalls.current >= sequentialLimit) {\n      setUnlockPopupsAt(now + resetAfter);\n    }\n  });\n\n  const handlePopupClosed = useLastCallback(() => {\n    if (unlockPopupsAt < Date.now()) { // Prevent confused user from extending lock time\n      lastClosedDate.current = Date.now();\n    }\n  });\n\n  return {\n    unlockPopupsAt,\n    handlePopupOpened,\n    handlePopupClosed,\n  };\n}\n","import { useCallback, useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { WebAppInboundEvent, WebAppOutboundEvent } from '../../../../types/webapp';\n\nimport { extractCurrentThemeParams } from '../../../../util/themeStyle';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useWindowSize from '../../../../hooks/window/useWindowSize';\n\nconst SCROLLBAR_STYLE = `* {\n  scrollbar-width: thin;\n  scrollbar-color: %SCROLLBAR_COLOR% transparent;\n}\n\n*::-webkit-scrollbar {\n  width: 6px;\n  height: 6px;\n  background-color: transparent;\n}\n\n*::-webkit-scrollbar-thumb {\n  border-radius: 6px;\n  background-color: %SCROLLBAR_COLOR%;\n}\n\n*::-webkit-scrollbar-corner {\n  background-color: transparent;\n}`;\n\nconst RELOAD_TIMEOUT = 500;\n\nconst useWebAppFrame = (\n  ref: React.RefObject<HTMLIFrameElement>,\n  isOpen: boolean,\n  isSimpleView: boolean,\n  onEvent: (event: WebAppInboundEvent) => void,\n  onLoad?: () => void,\n) => {\n  const {\n    showNotification,\n    setWebAppPaymentSlug,\n    openInvoice,\n    closeWebApp,\n  } = getActions();\n\n  const isReloadSupported = useRef<boolean>(false);\n  const reloadTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const ignoreEventsRef = useRef<boolean>(false);\n  const lastFrameSizeRef = useRef<{ width: number; height: number; isResizing?: boolean }>();\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current || !isOpen) return undefined;\n\n    const handleLoad = () => {\n      onLoad?.();\n    };\n\n    const frame = ref.current;\n    frame.addEventListener('load', handleLoad);\n    return () => {\n      frame.removeEventListener('load', handleLoad);\n    };\n  }, [onLoad, ref, isOpen]);\n\n  const sendEvent = useCallback((event: WebAppOutboundEvent) => {\n    if (!ref.current?.contentWindow) return;\n    ref.current.contentWindow.postMessage(JSON.stringify(event), '*');\n  }, [ref]);\n\n  const forceReloadFrame = useLastCallback((url: string) => {\n    if (!ref.current) return;\n    const frame = ref.current;\n    frame.src = 'about:blank';\n    frame.addEventListener('load', () => {\n      frame.src = url;\n    }, { once: true });\n  });\n\n  const reloadFrame = useCallback((url: string) => {\n    if (isReloadSupported.current) {\n      sendEvent({\n        eventType: 'reload_iframe',\n      });\n      reloadTimeout.current = setTimeout(() => {\n        forceReloadFrame(url);\n      }, RELOAD_TIMEOUT);\n      return;\n    }\n\n    forceReloadFrame(url);\n  }, [sendEvent]);\n\n  const sendViewport = useCallback((isNonStable?: boolean) => {\n    if (!ref.current) {\n      return;\n    }\n    const { width, height } = ref.current.getBoundingClientRect();\n    sendEvent({\n      eventType: 'viewport_changed',\n      eventData: {\n        width,\n        height,\n        is_expanded: true,\n        is_state_stable: !isNonStable,\n      },\n    });\n  }, [sendEvent, ref]);\n\n  const sendTheme = useCallback(() => {\n    sendEvent({\n      eventType: 'theme_changed',\n      eventData: {\n        theme_params: extractCurrentThemeParams(),\n      },\n    });\n  }, [sendEvent]);\n\n  const sendCustomStyle = useCallback((style: string) => {\n    sendEvent({\n      eventType: 'set_custom_style',\n      eventData: style,\n    });\n  }, [sendEvent]);\n\n  const handleMessage = useCallback((event: MessageEvent<string>) => {\n    if (ignoreEventsRef.current) {\n      return;\n    }\n\n    try {\n      const data = JSON.parse(event.data) as WebAppInboundEvent;\n      const { eventType, eventData } = data;\n      // Handle some app requests here to simplify hook usage\n      if (eventType === 'web_app_ready') {\n        onLoad?.();\n      }\n\n      if (eventType === 'web_app_close') {\n        closeWebApp();\n      }\n\n      if (eventType === 'web_app_request_viewport') {\n        sendViewport(windowSize.isResizing);\n      }\n\n      if (eventType === 'web_app_request_theme') {\n        sendTheme();\n      }\n\n      if (eventType === 'iframe_ready') {\n        const scrollbarColor = getComputedStyle(document.body).getPropertyValue('--color-scrollbar');\n        sendCustomStyle(SCROLLBAR_STYLE.replace(/%SCROLLBAR_COLOR%/g, scrollbarColor));\n        isReloadSupported.current = Boolean(eventData.reload_supported);\n      }\n\n      if (eventType === 'iframe_will_reload') {\n        clearTimeout(reloadTimeout.current);\n      }\n\n      if (eventType === 'web_app_data_send') {\n        if (!isSimpleView) return; // Allowed only in simple view\n        ignoreEventsRef.current = true;\n      }\n\n      // Clipboard access temporarily disabled to address security concerns\n      if (eventType === 'web_app_read_text_from_clipboard') {\n        sendEvent({\n          eventType: 'clipboard_text_received',\n          eventData: {\n            req_id: eventData.req_id,\n            // eslint-disable-next-line no-null/no-null\n            data: null,\n          },\n        });\n\n        showNotification({\n          message: 'Clipboard access is not supported in this client yet',\n        });\n      }\n\n      if (eventType === 'web_app_open_scan_qr_popup') {\n        showNotification({\n          message: 'Scanning QR code is not supported in this client yet',\n        });\n      }\n\n      if (eventType === 'web_app_open_invoice') {\n        setWebAppPaymentSlug({\n          slug: eventData.slug,\n        });\n        openInvoice({\n          slug: eventData.slug,\n        });\n      }\n\n      if (eventType === 'web_app_open_link') {\n        const linkUrl = eventData.url;\n        window.open(linkUrl, '_blank', 'noreferrer');\n      }\n\n      onEvent(data);\n    } catch (err) {\n      // Ignore other messages\n    }\n  }, [isSimpleView, sendEvent, onEvent, sendCustomStyle, sendTheme, sendViewport, onLoad, windowSize.isResizing]);\n\n  useEffect(() => {\n    const { width, height, isResizing } = windowSize;\n    if (lastFrameSizeRef.current && lastFrameSizeRef.current.width === width\n      && lastFrameSizeRef.current.height === height && !lastFrameSizeRef.current.isResizing) return;\n    lastFrameSizeRef.current = { width, height, isResizing };\n    sendViewport(isResizing);\n  }, [sendViewport, windowSize]);\n\n  useEffect(() => {\n    window.addEventListener('message', handleMessage);\n    return () => window.removeEventListener('message', handleMessage);\n  }, [handleMessage]);\n\n  useEffect(() => {\n    if (isOpen && ref.current?.contentWindow) {\n      sendViewport();\n      ignoreEventsRef.current = false;\n    } else {\n      lastFrameSizeRef.current = undefined;\n    }\n  }, [isOpen, sendViewport, ref]);\n\n  return {\n    sendEvent, reloadFrame, sendViewport, sendTheme,\n  };\n};\n\nexport default useWebAppFrame;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"SM3T4awhZJvKn_c8aRuY\",\"description\":\"RWoBZem6PCNMF5hu6Shs\",\"checkout-picture\":\"prUKJGh6W9LIyjSnRbZc\",\"checkoutPicture\":\"prUKJGh6W9LIyjSnRbZc\",\"text\":\"xUG3uFeTiPPFkWHQELCc\",\"checkout-title\":\"MO45Rkd2ksVxfzAONvQ6\",\"checkoutTitle\":\"MO45Rkd2ksVxfzAONvQ6\",\"checkout-description\":\"LqaZe1TRdNI17BEa1gcl\",\"checkoutDescription\":\"LqaZe1TRdNI17BEa1gcl\",\"price-info\":\"mz2vhtmYPNRaJbeUrXKA\",\"priceInfo\":\"mz2vhtmYPNRaJbeUrXKA\",\"price-info-item\":\"Ct9Ine31cu5h7FCjtRWa\",\"priceInfoItem\":\"Ct9Ine31cu5h7FCjtRWa\",\"price-info-item-main\":\"JduVB3d3NxN9TybmxIgS\",\"priceInfoItemMain\":\"JduVB3d3NxN9TybmxIgS\",\"price-info-item-title\":\"O7d8G4OQ_yTJSHiHbgBR\",\"priceInfoItemTitle\":\"O7d8G4OQ_yTJSHiHbgBR\",\"tipsList\":\"zsSyrAOxg0qs0nPJWSEe\",\"tipsItem\":\"lcjeIUsdqs95BdK_oysT\",\"tipsItem_active\":\"XRnGKO5ClzA_4S8i81wC\",\"tipsItemActive\":\"XRnGKO5ClzA_4S8i81wC\",\"invoice-info\":\"MyMLGHhiEKOVIoG3aQTS\",\"invoiceInfo\":\"MyMLGHhiEKOVIoG3aQTS\",\"provider\":\"hLVHJSaVspSZdzxNlBJk\",\"stripe\":\"nrKVVKzRmr7s0TE15uG1\",\"smartglocal\":\"oONvjFUTa5AbWvrbzbWn\",\"checkout-info-item-info-title\":\"bkIqUpVUAY04wdT8fySX\",\"checkoutInfoItemInfoTitle\":\"bkIqUpVUAY04wdT8fySX\",\"checkout-info-item-info-data\":\"VAzhVfK6c1pUriepo4Ga\",\"checkoutInfoItemInfoData\":\"VAzhVfK6c1pUriepo4Ga\",\"tos-checkbox\":\"WjrdCzbl3hROmSBGGnjy\",\"tosCheckbox\":\"WjrdCzbl3hROmSBGGnjy\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type {\n  ApiChat, ApiInvoice, ApiPaymentCredentials,\n} from '../../api/types';\nimport type { FormEditDispatch } from '../../hooks/reducers/usePaymentReducer';\nimport type { LangCode, Price } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { PaymentStep } from '../../types';\n\nimport { getWebDocumentHash } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatCurrency } from '../../util/formatCurrency';\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useMedia from '../../hooks/useMedia';\n\nimport SafeLink from '../common/SafeLink';\nimport Checkbox from '../ui/Checkbox';\nimport ListItem from '../ui/ListItem';\nimport Skeleton from '../ui/placeholder/Skeleton';\n\nimport styles from './Checkout.module.scss';\n\nexport type OwnProps = {\n  chat?: ApiChat;\n  invoice?: ApiInvoice;\n  checkoutInfo?: {\n    paymentMethod?: string;\n    paymentProvider?: string;\n    shippingAddress?: string;\n    name?: string;\n    phone?: string;\n    shippingMethod?: string;\n  };\n  prices?: Price[];\n  totalPrice?: number;\n  needAddress?: boolean;\n  hasShippingOptions?: boolean;\n  tipAmount?: number;\n  shippingPrices?: Price[];\n  currency: string;\n  isTosAccepted?: boolean;\n  dispatch?: FormEditDispatch;\n  onAcceptTos?: (isAccepted: boolean) => void;\n  savedCredentials?: ApiPaymentCredentials[];\n  isPaymentFormUrl?: boolean;\n};\n\nconst Checkout: FC<OwnProps> = ({\n  chat,\n  invoice,\n  prices,\n  shippingPrices,\n  checkoutInfo,\n  currency,\n  totalPrice,\n  isTosAccepted,\n  dispatch,\n  onAcceptTos,\n  tipAmount,\n  needAddress,\n  hasShippingOptions,\n  savedCredentials,\n  isPaymentFormUrl,\n}) => {\n  const { setPaymentStep } = getActions();\n\n  const lang = useLang();\n  const isInteractive = Boolean(dispatch);\n\n  const {\n    photo, title, text, termsUrl, suggestedTipAmounts, maxTipAmount,\n  } = invoice || {};\n  const {\n    paymentMethod,\n    paymentProvider,\n    shippingAddress,\n    name,\n    phone,\n    shippingMethod,\n  } = (checkoutInfo || {});\n\n  const photoUrl = useMedia(getWebDocumentHash(photo));\n\n  const handleTipsClick = useCallback((tips: number) => {\n    dispatch!({ type: 'setTipAmount', payload: maxTipAmount ? Math.min(tips, maxTipAmount) : tips });\n  }, [dispatch, maxTipAmount]);\n\n  const handlePaymentMethodClick = useCallback(() => {\n    setPaymentStep({ step: savedCredentials?.length ? PaymentStep.SavedPayments : PaymentStep.PaymentInfo });\n  }, [savedCredentials?.length, setPaymentStep]);\n\n  const handleShippingAddressClick = useCallback(() => {\n    setPaymentStep({ step: PaymentStep.ShippingInfo });\n  }, [setPaymentStep]);\n\n  const handleShippingMethodClick = useCallback(() => {\n    setPaymentStep({ step: PaymentStep.Shipping });\n  }, [setPaymentStep]);\n\n  function renderTips() {\n    return (\n      <>\n        <div className={styles.priceInfoItem}>\n          <div className={styles.priceInfoItemTitle}>\n            {title}\n          </div>\n          <div>\n            {formatCurrency(tipAmount!, currency, lang.code)}\n          </div>\n        </div>\n        <div className={styles.tipsList}>\n          {suggestedTipAmounts!.map((tip) => (\n            <div\n              key={tip}\n              className={buildClassName(styles.tipsItem, tip === tipAmount && styles.tipsItem_active)}\n              onClick={dispatch ? () => handleTipsClick(tip === tipAmount ? 0 : tip) : undefined}\n            >\n              {formatCurrency(tip, currency, lang.code, true)}\n            </div>\n          ))}\n        </div>\n      </>\n    );\n  }\n\n  function renderTosLink(url: string, isRtl?: boolean) {\n    const langString = lang('PaymentCheckoutAcceptRecurrent', chat?.title);\n    const langStringSplit = langString.split('*');\n    return (\n      <>\n        {langStringSplit[0]}\n        <SafeLink\n          url={url}\n          text={langStringSplit[1]}\n          isRtl={isRtl}\n        />\n        {langStringSplit.slice(2)}\n      </>\n    );\n  }\n\n  function renderTos(url: string) {\n    return (\n      <Checkbox\n        label={renderTosLink(url, lang.isRtl)}\n        name=\"checkout_tos\"\n        checked={Boolean(isTosAccepted)}\n        className={styles.tosCheckbox}\n        tabIndex={0}\n        onCheck={onAcceptTos}\n      />\n    );\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.description}>\n        {photoUrl && <img className={styles.checkoutPicture} src={photoUrl} draggable={false} alt=\"\" />}\n        {!photoUrl && photo && (\n          <Skeleton\n            width={photo.dimensions?.width}\n            height={photo.dimensions?.height}\n            className={styles.checkoutPicture}\n            forceAspectRatio\n          />\n        )}\n        <div className={styles.text}>\n          <h5 className={styles.checkoutTitle}>{title}</h5>\n          {text && <div className={styles.checkoutDescription}>{renderText(text, ['br', 'links', 'emoji'])}</div>}\n        </div>\n      </div>\n      <div className={styles.priceInfo}>\n        {prices && prices.map((item) => (\n          renderPaymentItem(lang.code, item.label, item.amount, currency)\n        ))}\n        {shippingPrices && shippingPrices.map((item) => (\n          renderPaymentItem(lang.code, item.label, item.amount, currency)\n        ))}\n        {suggestedTipAmounts && suggestedTipAmounts.length > 0 && renderTips()}\n        {totalPrice !== undefined && (\n          renderPaymentItem(lang.code, lang('Checkout.TotalAmount'), totalPrice, currency, true)\n        )}\n      </div>\n      <div className={styles.invoiceInfo}>\n        {!isPaymentFormUrl && renderCheckoutItem({\n          title: paymentMethod || savedCredentials?.[0].title,\n          label: lang('PaymentCheckoutMethod'),\n          icon: 'card',\n          onClick: isInteractive ? handlePaymentMethodClick : undefined,\n        })}\n        {paymentProvider && renderCheckoutItem({\n          title: paymentProvider,\n          label: lang('PaymentCheckoutProvider'),\n          customIcon: buildClassName(styles.provider, styles[paymentProvider.toLowerCase()]),\n        })}\n        {(needAddress || !isInteractive) && renderCheckoutItem({\n          title: shippingAddress,\n          label: lang('PaymentShippingAddress'),\n          icon: 'location',\n          onClick: isInteractive ? handleShippingAddressClick : undefined,\n        })}\n        {name && renderCheckoutItem({\n          title: name,\n          label: lang('PaymentCheckoutName'),\n          icon: 'user',\n        })}\n        {phone && renderCheckoutItem({\n          title: phone,\n          label: lang('PaymentCheckoutPhoneNumber'),\n          icon: 'phone',\n        })}\n        {(hasShippingOptions || !isInteractive) && renderCheckoutItem({\n          title: shippingMethod,\n          label: lang('PaymentCheckoutShippingMethod'),\n          icon: 'truck',\n          onClick: isInteractive ? handleShippingMethodClick : undefined,\n        })}\n        {termsUrl && renderTos(termsUrl)}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Checkout);\n\nfunction renderPaymentItem(\n  langCode: LangCode | undefined, title: string, value: number, currency: string, main = false,\n) {\n  return (\n    <div className={buildClassName(styles.priceInfoItem, main && styles.priceInfoItemMain)}>\n      <div className={styles.priceInfoItemTitle}>\n        {title}\n      </div>\n      <div>\n        {formatCurrency(value, currency, langCode)}\n      </div>\n    </div>\n  );\n}\n\nfunction renderCheckoutItem({\n  title,\n  label,\n  icon,\n  customIcon,\n  onClick,\n}: {\n  title : string | undefined;\n  label: string | undefined;\n  icon?: IconName;\n  onClick?: NoneToVoidFunction;\n  customIcon?: string;\n}) {\n  return (\n    <ListItem\n      multiline={Boolean(title && label !== title)}\n      icon={icon}\n      inactive={!onClick}\n      onClick={onClick}\n    >\n      {customIcon && <i className={buildClassName('icon', customIcon)} />}\n      <div className={styles.checkoutInfoItemInfoTitle}>\n        {title || label}\n      </div>\n      {title && label !== title && (\n        <p className={styles.checkoutInfoItemInfoData}>\n          {label}\n        </p>\n      )}\n    </ListItem>\n  );\n}\n","const VISA = /^4\\d/;\nconst MASTERCARD1 = /^5[1-5]/;\nconst MASTERCARD2 = /^2[2-7]\\d{2}/;\nconst MIR = /^220[0-4]/;\n\nexport enum CardType {\n  Default,\n  Visa,\n  Mastercard,\n  Mir,\n}\n\nconst cards: Record<number, string> = {\n  [CardType.Default]: '',\n  [CardType.Visa]: 'visa',\n  [CardType.Mastercard]: 'mastercard',\n  [CardType.Mir]: 'mir',\n};\n\nexport function detectCardType(cardNumber: string): number {\n  cardNumber = cardNumber.replace(/\\s/g, '');\n  if (VISA.test(cardNumber)) {\n    return CardType.Visa;\n  }\n  if (MIR.test(cardNumber)) {\n    return CardType.Mir;\n  }\n  if (MASTERCARD1.test(cardNumber) || MASTERCARD2.test(cardNumber)) {\n    return CardType.Mastercard;\n  }\n  return CardType.Default;\n}\n\nexport function detectCardTypeText(cardNumber: string): string {\n  const cardType = detectCardType(cardNumber);\n  return cards[cardType as number] || '';\n}\n","import type { Dispatch, StateReducer } from '../useReducer';\n\nimport useReducer from '../useReducer';\n\nexport type FormState = {\n  streetLine1: string;\n  streetLine2: string;\n  city: string;\n  state: string;\n  countryIso2: string;\n  postCode: string;\n  fullName: string;\n  email: string;\n  phone: string;\n  shipping: string;\n  cardNumber: string;\n  cardholder: string;\n  expiry: string;\n  cvv: string;\n  billingCountry: string;\n  billingZip: string;\n  saveInfo: boolean;\n  saveCredentials: boolean;\n  formErrors: Record<string, string>;\n  tipAmount: number;\n  savedCredentialId: string;\n};\n\nexport type FormActions = (\n  'changeAddress1' | 'changeAddress2' | 'changeCity' | 'changeState' | 'changeCountry' |\n  'changePostCode' | 'changeFullName' | 'changeEmail' | 'changePhone' | 'changeShipping' | 'updateUserInfo' |\n  'changeCardNumber' | 'changeCardholder' | 'changeExpiryDate' | 'changeCvvCode' | 'changeBillingCountry' |\n  'changeBillingZip' | 'changeSaveInfo' | 'changeSaveCredentials' | 'setFormErrors' | 'resetState' | 'setTipAmount' |\n  'changeSavedCredentialId'\n);\nexport type FormEditDispatch = Dispatch<FormState, FormActions>;\n\nconst INITIAL_STATE: FormState = {\n  streetLine1: '',\n  streetLine2: '',\n  city: '',\n  state: '',\n  countryIso2: '',\n  postCode: '',\n  fullName: '',\n  email: '',\n  phone: '',\n  shipping: '',\n  cardNumber: '',\n  cardholder: '',\n  expiry: '',\n  cvv: '',\n  billingCountry: '',\n  billingZip: '',\n  saveInfo: true,\n  saveCredentials: false,\n  formErrors: {},\n  tipAmount: 0,\n  savedCredentialId: '',\n};\n\nconst reducer: StateReducer<FormState, FormActions> = (state, action) => {\n  switch (action.type) {\n    case 'changeAddress1':\n      return {\n        ...state,\n        streetLine1: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          streetLine1: undefined,\n        },\n      };\n    case 'changeAddress2':\n      return {\n        ...state,\n        streetLine2: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          streetLine2: undefined,\n        },\n      };\n    case 'changeCity':\n      return {\n        ...state,\n        city: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          city: undefined,\n        },\n      };\n    case 'changeState':\n      return {\n        ...state,\n        state: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          state: undefined,\n        },\n      };\n    case 'changeCountry':\n      return {\n        ...state,\n        countryIso2: action.payload.iso2,\n        billingCountry: action.payload.defaultName,\n        formErrors: {\n          ...state.formErrors,\n          countryIso2: undefined,\n        },\n      };\n    case 'changePostCode':\n      return {\n        ...state,\n        postCode: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          postCode: undefined,\n        },\n      };\n    case 'changeFullName':\n      return {\n        ...state,\n        fullName: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          fullName: undefined,\n        },\n      };\n    case 'changeEmail':\n      return {\n        ...state,\n        email: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          email: undefined,\n        },\n      };\n    case 'changePhone':\n      return {\n        ...state,\n        phone: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          phone: undefined,\n        },\n      };\n    case 'changeShipping':\n      return { ...state, shipping: action.payload };\n    case 'changeCardNumber':\n      return {\n        ...state,\n        cardNumber: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cardNumber: undefined,\n        },\n      };\n    case 'changeCardholder':\n      return {\n        ...state,\n        cardholder: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cardholder: undefined,\n        },\n      };\n    case 'changeExpiryDate':\n      return {\n        ...state,\n        expiry: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          expiry: undefined,\n        },\n      };\n    case 'changeCvvCode':\n      return {\n        ...state,\n        cvv: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cvv: undefined,\n        },\n      };\n    case 'changeBillingCountry':\n      return {\n        ...state,\n        billingCountry: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          billingCountry: undefined,\n        },\n      };\n    case 'changeBillingZip':\n      return {\n        ...state,\n        billingZip: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          billingZip: undefined,\n        },\n      };\n    case 'changeSaveInfo':\n      return { ...state, saveInfo: action.payload };\n    case 'changeSaveCredentials':\n      return { ...state, saveCredentials: action.payload };\n    case 'updateUserInfo':\n      if (action.payload.country) {\n        return {\n          ...state,\n          ...action.payload,\n          billingCountry: action.payload.country,\n        };\n      }\n      return { ...state, ...action.payload };\n    case 'setFormErrors':\n      return {\n        ...state,\n        formErrors: {\n          ...state.formErrors,\n          ...action.payload,\n        },\n      };\n    case 'setTipAmount':\n      return {\n        ...state,\n        tipAmount: action.payload,\n      };\n    case 'changeSavedCredentialId':\n      return {\n        ...state,\n        savedCredentialId: action.payload,\n      };\n    case 'resetState':\n      return {\n        ...INITIAL_STATE,\n      };\n    default:\n      return state;\n  }\n};\n\nconst usePaymentReducer = () => {\n  return useReducer(reducer, INITIAL_STATE);\n};\n\nexport default usePaymentReducer;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { TME_LINK_PREFIX } from '../../config';\n\nimport useLang from '../../hooks/useLang';\n\nimport './ConfirmPayment.scss';\n\nexport type OwnProps = {\n  url: string;\n  noRedirect?: boolean;\n  onClose: NoneToVoidFunction;\n  onPaymentFormSubmit?: (eventData: PaymentFormSubmitEvent['eventData']) => void;\n};\n\nexport interface PaymentFormSubmitEvent {\n  eventType: 'payment_form_submit';\n  eventData: {\n    credentials: {\n      token: string;\n      type: string;\n    };\n    title: string;\n  };\n}\n\ninterface WebAppOpenTgLinkEvent {\n  eventType: 'web_app_open_tg_link';\n  eventData: {\n    path_full?: string;\n  };\n}\n\ntype IframeCallbackEvent = PaymentFormSubmitEvent | WebAppOpenTgLinkEvent;\n\nconst ConfirmPayment: FC<OwnProps> = ({\n  url, noRedirect, onClose, onPaymentFormSubmit,\n}) => {\n  const { openTelegramLink } = getActions();\n\n  const lang = useLang();\n\n  const handleMessage = useCallback((event: MessageEvent<string>) => {\n    try {\n      const data = JSON.parse(event.data) as IframeCallbackEvent;\n      const { eventType, eventData } = data;\n      switch (eventType) {\n        case 'web_app_open_tg_link':\n          if (!noRedirect) {\n            const linkUrl = TME_LINK_PREFIX + eventData.path_full!;\n            openTelegramLink({ url: linkUrl });\n          }\n          onClose();\n          break;\n        case 'payment_form_submit':\n          if (onPaymentFormSubmit) {\n            onPaymentFormSubmit(eventData);\n          }\n          break;\n        default:\n          onClose();\n          break;\n      }\n    } catch (err) {\n      // Ignore other messages\n    }\n  }, [onClose, noRedirect, openTelegramLink, onPaymentFormSubmit]);\n\n  useEffect(() => {\n    window.addEventListener('message', handleMessage);\n    return () => window.removeEventListener('message', handleMessage);\n  }, [handleMessage]);\n\n  return (\n    <div className=\"ConfirmPayment\">\n      <iframe\n        src={url}\n        title={lang('Checkout.WebConfirmation.Title')}\n        allow=\"payment\"\n        sandbox=\"allow-modals allow-forms allow-scripts allow-same-origin allow-top-navigation\"\n        className=\"ConfirmPayment__content\"\n      />\n    </div>\n  );\n};\n\nexport default memo(ConfirmPayment);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiPaymentCredentials } from '../../api/types';\nimport type { FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useLang from '../../hooks/useLang';\n\nimport PasswordForm from '../common/PasswordForm';\nimport PasswordMonkey from '../common/PasswordMonkey';\n\ninterface OwnProps {\n  isActive?: boolean;\n  state: FormState;\n  savedCredentials?: ApiPaymentCredentials[];\n  onPasswordChange: (password: string) => void;\n}\n\ninterface StateProps {\n  error?: string;\n  passwordHint?: string;\n  savedCredentials?: ApiPaymentCredentials[];\n}\n\nconst PasswordConfirm: FC<OwnProps & StateProps> = ({\n  isActive,\n  error,\n  state,\n  savedCredentials,\n  passwordHint,\n  onPasswordChange,\n}) => {\n  const { clearPaymentError } = getActions();\n\n  const lang = useLang();\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n  const cardName = useMemo(() => {\n    return savedCredentials?.length && state.savedCredentialId\n      ? savedCredentials.find(({ id }) => id === state.savedCredentialId)?.title\n      : undefined;\n  }, [savedCredentials, state.savedCredentialId]);\n\n  return (\n    <div className=\"PaymentInfo\">\n      <PasswordMonkey isBig isPasswordVisible={shouldShowPassword} />\n\n      <PasswordForm\n        error={error ? lang(error) : undefined}\n        hint={passwordHint}\n        description={lang('PaymentConfirmationMessage', cardName)}\n        placeholder={lang('Password')}\n        clearError={clearPaymentError}\n        shouldShowSubmit={false}\n        shouldResetValue={isActive}\n        isPasswordVisible={shouldShowPassword}\n        onChangePasswordVisibility={setShouldShowPassword}\n        onInputChange={onPasswordChange}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { payment } = selectTabState(global);\n  return {\n    error: payment.error?.message,\n    passwordHint: global.twoFaSettings.hint,\n    savedCredentials: payment.savedCredentials,\n  };\n})(PasswordConfirm));\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\n\nconst DEFAULT_DURATION = 400;\n\nexport default function useFocusAfterAnimation(\n  ref: RefObject<HTMLInputElement>, animationDuration = DEFAULT_DURATION,\n) {\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        ref.current?.focus();\n      });\n    }, animationDuration);\n  }, [ref, animationDuration]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { CardType, detectCardType } from '../common/helpers/detectCardType';\nimport { formatCardNumber } from '../middle/helpers/inputFormatters';\n\nimport useFocusAfterAnimation from '../../hooks/useFocusAfterAnimation';\nimport useLang from '../../hooks/useLang';\n\nimport InputText from '../ui/InputText';\n\nimport './CardInput.scss';\n\nimport mastercardIconPath from '../../assets/mastercard.svg';\nimport mirIconPath from '../../assets/mir.svg';\nimport visaIconPath from '../../assets/visa.svg';\n\nconst CARD_NUMBER_MAX_LENGTH = 23;\n\nexport type OwnProps = {\n  value: string;\n  error?: string;\n  onChange: (value: string) => void;\n};\n\nconst CardInput : FC<OwnProps> = ({ value, error, onChange }) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const cardNumberRef = useRef<HTMLInputElement>(null);\n\n  useFocusAfterAnimation(cardNumberRef);\n\n  const [cardType, setCardType] = useState<number>(CardType.Default);\n  useEffect(() => {\n    const newCardType = detectCardType(value);\n    setCardType(newCardType);\n  // eslint-disable-next-line\n  }, []);\n\n  const handleChange = useCallback((e) => {\n    const newValue = formatCardNumber(e.target.value);\n    const newCardType = detectCardType(e.target.value);\n    setCardType(newCardType);\n    onChange(newValue);\n  }, [onChange]);\n\n  const cardIcon = getCardIcon(cardType);\n\n  return (\n    <div className=\"CardInput\">\n      <InputText\n        ref={cardNumberRef}\n        label={lang('PaymentCardNumber')}\n        onChange={handleChange}\n        value={value}\n        inputMode=\"numeric\"\n        className={cardType ? 'has-right-addon' : ''}\n        error={error}\n        tabIndex={0}\n        maxLength={CARD_NUMBER_MAX_LENGTH}\n        teactExperimentControlled\n      />\n      <span className=\"right-addon\">{cardIcon}</span>\n    </div>\n  );\n};\n\nexport default memo(CardInput);\n\nfunction getCardIcon(cardType: CardType) {\n  switch (cardType) {\n    case CardType.Mastercard:\n      return <img src={mastercardIconPath} draggable={false} alt=\"\" />;\n    case CardType.Visa:\n      return <img src={visaIconPath} draggable={false} alt=\"\" />;\n    case CardType.Mir:\n      return <img src={mirIconPath} draggable={false} alt=\"\" />;\n    default:\n      return undefined;\n  }\n}\n","export function formatCardExpiry(input: string) {\n  input = input.replace(/[^\\d]/g, '').slice(0, 4);\n  const parts = input.match(/.{1,2}/g);\n  if (parts?.[0] && Number(parts[0]) > 12) {\n    parts[0] = '12';\n  }\n  if (parts?.[0] && parts[0].length === 2 && !parts[1]) {\n    parts[1] = '';\n  }\n  return parts ? parts.join('/') : '';\n}\n\nexport function formatCardNumber(input: string) {\n  input = input.replace(/[^\\d]/g, '');\n  const parts = input.match(/.{1,4}/g);\n  return parts ? parts.join(' ') : '';\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport { formatCardExpiry } from '../middle/helpers/inputFormatters';\n\nimport useLang from '../../hooks/useLang';\n\nimport InputText from '../ui/InputText';\n\nconst MAX_FIELD_LENGTH = 5;\n\nexport type OwnProps = {\n  value: string;\n  error?: string;\n  onChange: (value: string) => void;\n};\n\nconst ExpiryInput : FC<OwnProps> = ({ value, error, onChange }) => {\n  const lang = useLang();\n\n  const handleChange = useCallback((e) => {\n    const newValue = e.target.value;\n    // Allow deleting separator\n    if (value.endsWith('/') && value.length > newValue.length) {\n      onChange(newValue);\n    } else {\n      onChange(formatCardExpiry(e.target.value));\n    }\n  }, [onChange, value]);\n\n  return (\n    <InputText\n      label={lang('PaymentCardExpireDate')}\n      onChange={handleChange}\n      value={value}\n      error={error}\n      inputMode=\"numeric\"\n      tabIndex={0}\n      maxLength={MAX_FIELD_LENGTH}\n      teactExperimentControlled\n    />\n  );\n};\n\nexport default memo(ExpiryInput);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiCountry } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport useLang from '../../hooks/useLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Select from '../ui/Select';\nimport CardInput from './CardInput';\nimport ExpiryInput from './ExpiryInput';\n\nimport './PaymentInfo.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  canSaveCredentials: boolean;\n  needCardholderName?: boolean;\n  needCountry?: boolean;\n  needZip?: boolean;\n  countryList: ApiCountry[];\n  dispatch: FormEditDispatch;\n};\n\nconst PaymentInfo: FC<OwnProps> = ({\n  state,\n  canSaveCredentials,\n  needCardholderName,\n  needCountry,\n  needZip,\n  countryList,\n  dispatch,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const selectCountryRef = useRef<HTMLSelectElement>(null);\n\n  useEffect(() => {\n    if (selectCountryRef.current\n      && selectCountryRef.current.value !== state.billingCountry) {\n      selectCountryRef.current.value = state.billingCountry;\n    }\n  }, [state.billingCountry]);\n\n  const handleCardNumberChange = useCallback((value) => {\n    dispatch({ type: 'changeCardNumber', payload: value });\n  }, [dispatch]);\n\n  const handleCardholderChange = useCallback((e) => {\n    dispatch({ type: 'changeCardholder', payload: e.target.value.toUpperCase() });\n  }, [dispatch]);\n\n  const handleExpiryChange = useCallback((value) => {\n    dispatch({ type: 'changeExpiryDate', payload: value });\n  }, [dispatch]);\n\n  const handleCvvChange = useCallback((e) => {\n    const newValue = e.target.value.replace(/[^0-9]/g, '');\n    dispatch({ type: 'changeCvvCode', payload: newValue });\n  }, [dispatch]);\n\n  const handleCountryChange = useCallback((e) => {\n    dispatch({ type: 'changeBillingCountry', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleBillingPostCodeChange = useCallback((e) => {\n    dispatch({ type: 'changeBillingZip', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleChangeSaveCredentials = useCallback((e) => {\n    dispatch({ type: 'changeSaveCredentials', payload: e.target.value });\n  }, [dispatch]);\n\n  const lang = useLang();\n\n  const { formErrors = {} } = state;\n\n  return (\n    <div className=\"PaymentInfo\">\n      <form>\n        <h5>{lang('PaymentCardTitle')}</h5>\n        <CardInput\n          onChange={handleCardNumberChange}\n          value={state.cardNumber}\n          error={formErrors.cardNumber}\n        />\n        { needCardholderName && (\n          <InputText\n            label={lang('Checkout.NewCard.CardholderNamePlaceholder')}\n            onChange={handleCardholderChange}\n            value={state.cardholder}\n            inputMode=\"text\"\n            tabIndex={0}\n            error={formErrors.cardholder}\n          />\n        )}\n        <section className=\"inline-inputs\">\n          <ExpiryInput\n            value={state.expiry}\n            onChange={handleExpiryChange}\n            error={formErrors.expiry}\n          />\n          <InputText\n            label={lang('lng_payments_card_cvc')}\n            onChange={handleCvvChange}\n            value={state.cvv}\n            inputMode=\"numeric\"\n            maxLength={3}\n            tabIndex={0}\n            error={formErrors.cvv}\n            teactExperimentControlled\n          />\n        </section>\n        { needCountry || needZip ? (\n          <h5>{lang('PaymentBillingAddress')}</h5>\n        ) : undefined }\n        { needCountry && (\n          <Select\n            label={lang('PaymentShippingCountry')}\n            onChange={handleCountryChange}\n            value={state.billingCountry}\n            hasArrow={Boolean(true)}\n            id=\"billing-country\"\n            error={formErrors.billingCountry}\n            tabIndex={0}\n            ref={selectCountryRef}\n          >\n            {\n              countryList.map(({ defaultName, name }) => (\n                <option\n                  value={defaultName}\n                  className=\"county-item\"\n                  selected={defaultName === state.billingCountry}\n                >\n                  {defaultName || name}\n                </option>\n              ))\n            }\n          </Select>\n        ) }\n        { needZip && (\n          <InputText\n            label={lang('PaymentShippingZipPlaceholder')}\n            onChange={handleBillingPostCodeChange}\n            value={state.billingZip}\n            inputMode=\"text\"\n            tabIndex={0}\n            maxLength={12}\n            error={formErrors.billingZip}\n          />\n        )}\n        <Checkbox\n          label={lang('PaymentCardSavePaymentInformation')}\n          checked={canSaveCredentials ? state.saveCredentials : false}\n          tabIndex={0}\n          onChange={handleChangeSaveCredentials}\n          disabled={!canSaveCredentials}\n        />\n        <p className=\"description\">\n          {lang(canSaveCredentials ? 'Checkout.NewCard.SaveInfoHelp' : 'Checkout.2FA.Text')}\n        </p>\n      </form>\n    </div>\n  );\n};\n\nexport default memo(PaymentInfo);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiPaymentCredentials } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport RadioGroup from '../ui/RadioGroup';\n\ninterface OwnProps {\n  state: FormState;\n  savedCredentials?: ApiPaymentCredentials[];\n  dispatch: FormEditDispatch;\n  onNewCardClick: NoneToVoidFunction;\n}\n\nconst SavedPaymentCredentials: FC<OwnProps> = ({\n  state,\n  savedCredentials,\n  dispatch,\n  onNewCardClick,\n}) => {\n  const lang = useLang();\n\n  const options = useMemo(() => {\n    return savedCredentials?.length\n      ? savedCredentials.map(({ id, title }) => ({ label: title, value: id }))\n      : MEMO_EMPTY_ARRAY;\n  }, [savedCredentials]);\n\n  const onChange = useCallback((value) => {\n    dispatch({ type: 'changeSavedCredentialId', payload: value });\n  }, [dispatch]);\n\n  return (\n    <div className=\"PaymentInfo\">\n      <form>\n        <h5>{lang('PaymentCardTitle')}</h5>\n\n        <RadioGroup\n          name=\"saved-credentials\"\n          options={options}\n          selected={state.savedCredentialId}\n          onChange={onChange}\n        />\n\n        <Button isText onClick={onNewCardClick}>\n          {lang('PaymentCheckoutMethodNewCard')}\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default memo(SavedPaymentCredentials);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo,\n} from '../../lib/teact/teact';\n\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\nimport type { ShippingOption } from '../../types';\n\nimport { formatCurrency } from '../../util/formatCurrency';\n\nimport useLang from '../../hooks/useLang';\n\nimport RadioGroup from '../ui/RadioGroup';\n\nimport './Shipping.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  shippingOptions: ShippingOption[];\n  currency: string;\n  dispatch: FormEditDispatch;\n};\n\nconst Shipping: FC<OwnProps> = ({\n  state,\n  shippingOptions,\n  currency,\n  dispatch,\n}) => {\n  const lang = useLang();\n\n  useEffect(() => {\n    if (!shippingOptions || !shippingOptions.length || state.shipping) {\n      return;\n    }\n    dispatch({ type: 'changeShipping', payload: shippingOptions[0].id });\n  }, [shippingOptions, state.shipping, dispatch]);\n\n  const handleShippingSelect = useCallback((value) => {\n    dispatch({ type: 'changeShipping', payload: value });\n  }, [dispatch]);\n\n  const options = useMemo(() => (shippingOptions.map(({ id: value, title: label, amount }) => ({\n    label,\n    subLabel: formatCurrency(amount, currency, lang.code),\n    value,\n  }))), [shippingOptions, currency, lang.code]);\n\n  return (\n    <div className=\"Shipping\">\n      <form>\n        <p>{lang('PaymentShippingMethod')}</p>\n        <RadioGroup\n          name=\"shipping-options\"\n          options={options}\n          onChange={handleShippingSelect}\n          selected={state.shipping}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default memo(Shipping);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiCountry } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport useFocusAfterAnimation from '../../hooks/useFocusAfterAnimation';\nimport useLang from '../../hooks/useLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Select from '../ui/Select';\n\nimport './ShippingInfo.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  needEmail: boolean;\n  needPhone: boolean;\n  needName: boolean;\n  needAddress: boolean;\n  countryList: ApiCountry[];\n  dispatch: FormEditDispatch;\n};\n\nconst ShippingInfo: FC<OwnProps> = ({\n  state,\n  needEmail,\n  needPhone,\n  needName,\n  needAddress,\n  countryList,\n  dispatch,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const phoneRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const selectCountryRef = useRef<HTMLSelectElement>(null);\n\n  useEffect(() => {\n    if (selectCountryRef.current\n      && selectCountryRef.current.value !== state.countryIso2) {\n      selectCountryRef.current.value = state.countryIso2;\n    }\n  }, [state.countryIso2]);\n\n  const lang = useLang();\n\n  useFocusAfterAnimation(inputRef);\n\n  const handleAddress1Change = useCallback((e) => {\n    dispatch({ type: 'changeAddress1', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleAddress2Change = useCallback((e) => {\n    dispatch({ type: 'changeAddress2', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleCityChange = useCallback((e) => {\n    dispatch({ type: 'changeCity', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleStateChange = useCallback((e) => {\n    dispatch({ type: 'changeState', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleCountryChange = useCallback((e) => {\n    dispatch({ type: 'changeCountry', payload: countryList.find((country) => country.iso2 === e.target.value) });\n  }, [countryList, dispatch]);\n\n  const handlePostCodeChange = useCallback((e) => {\n    dispatch({ type: 'changePostCode', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleFullNameChange = useCallback((e) => {\n    dispatch({ type: 'changeFullName', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleEmailChange = useCallback((e) => {\n    dispatch({ type: 'changeEmail', payload: e.target.value });\n  }, [dispatch]);\n\n  const handlePhoneChange = useCallback((e) => {\n    let { value } = e.target;\n    value = `+${value.replace(/\\D/g, '')}`;\n    if (phoneRef.current) {\n      phoneRef.current.value = value;\n    }\n    dispatch({ type: 'changePhone', payload: value });\n  }, [dispatch]);\n\n  const handleSaveInfoChange = useCallback((e) => {\n    dispatch({ type: 'changeSaveInfo', payload: e.target.value });\n  }, [dispatch]);\n\n  const { formErrors } = state;\n  return (\n    <div className=\"ShippingInfo\">\n      <form>\n        {needAddress ? (\n          <div>\n            <h5>{lang('PaymentShippingAddress')}</h5>\n            <InputText\n              ref={inputRef}\n              label={lang('PaymentShippingAddress1Placeholder')}\n              onChange={handleAddress1Change}\n              value={state.streetLine1}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.streetLine1}\n            />\n            <InputText\n              label={lang('PaymentShippingAddress2Placeholder')}\n              onChange={handleAddress2Change}\n              value={state.streetLine2}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.streetLine2}\n            />\n            <InputText\n              label={lang('PaymentShippingCityPlaceholder')}\n              onChange={handleCityChange}\n              value={state.city}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.city}\n            />\n            <InputText\n              label={lang('PaymentShippingStatePlaceholder')}\n              onChange={handleStateChange}\n              value={state.state}\n              inputMode=\"text\"\n              error={formErrors.state}\n            />\n            <Select\n              label={lang('PaymentShippingCountry')}\n              onChange={handleCountryChange}\n              value={state.countryIso2}\n              hasArrow={Boolean(true)}\n              id=\"shipping-country\"\n              error={formErrors.countryIso2}\n              ref={selectCountryRef}\n              tabIndex={0}\n            >\n              {countryList.map(({ defaultName, name, iso2 }) => (\n                <option\n                  value={iso2}\n                  className=\"county-item\"\n                  selected={iso2 === state.countryIso2}\n                >\n                  {defaultName || name}\n                </option>\n              ))}\n            </Select>\n\n            <InputText\n              label={lang('PaymentShippingZipPlaceholder')}\n              onChange={handlePostCodeChange}\n              value={state.postCode}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.postCode}\n            />\n          </div>\n        ) : undefined}\n        { needName || needEmail || needPhone ? (\n          <h5>{lang('PaymentShippingReceiver')}</h5>\n        ) : undefined }\n        { needName && (\n          <InputText\n            label={lang('PaymentShippingName')}\n            onChange={handleFullNameChange}\n            value={state.fullName}\n            inputMode=\"text\"\n            tabIndex={0}\n            error={formErrors.fullName}\n          />\n        ) }\n        { needEmail && (\n          <InputText\n            label={lang('PaymentShippingEmailPlaceholder')}\n            onChange={handleEmailChange}\n            value={state.email}\n            inputMode=\"email\"\n            tabIndex={0}\n            error={formErrors.email}\n          />\n        ) }\n        { needPhone && (\n          <InputText\n            label={lang('PaymentShippingPhoneNumber')}\n            onChange={handlePhoneChange}\n            value={state.phone}\n            inputMode=\"tel\"\n            tabIndex={0}\n            error={formErrors.phone}\n            ref={phoneRef}\n          />\n        ) }\n        <Checkbox\n          label={lang('PaymentShippingSave')}\n          subLabel={lang('PaymentShippingSaveInfo')}\n          checked={Boolean(state.saveInfo)}\n          tabIndex={0}\n          onChange={handleSaveInfoChange}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default memo(ShippingInfo);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiCountry, ApiPaymentCredentials } from '../../api/types';\nimport type { TabState } from '../../global/types';\nimport type { FormState } from '../../hooks/reducers/usePaymentReducer';\nimport type { Price, ShippingOption } from '../../types';\nimport type { PaymentFormSubmitEvent } from './ConfirmPayment';\nimport { PaymentStep } from '../../types';\n\nimport { selectChat, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport { formatCurrency } from '../../util/formatCurrency';\nimport { detectCardTypeText } from '../common/helpers/detectCardType';\n\nimport usePaymentReducer from '../../hooks/reducers/usePaymentReducer';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\nimport Checkout from './Checkout';\nimport ConfirmPayment from './ConfirmPayment';\nimport PasswordConfirm from './PasswordConfirm';\nimport PaymentInfo from './PaymentInfo';\nimport SavedPaymentCredentials from './SavedPaymentCredentials';\nimport Shipping from './Shipping';\nimport ShippingInfo from './ShippingInfo';\n\nimport './PaymentModal.scss';\n\nconst DEFAULT_PROVIDER = 'stripe';\nconst DONATE_PROVIDER = 'smartglocal';\nconst DONATE_PROVIDER_URL = 'https://payment.smart-glocal.com';\nconst SUPPORTED_PROVIDERS = new Set([DEFAULT_PROVIDER, DONATE_PROVIDER]);\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isNameRequested?: boolean;\n  isShippingAddressRequested?: boolean;\n  isPhoneRequested?: boolean;\n  isEmailRequested?: boolean;\n  shouldSendPhoneToProvider?: boolean;\n  shouldSendEmailToProvider?: boolean;\n  currency?: string;\n  prices?: Price[];\n  isProviderError: boolean;\n  needCardholderName?: boolean;\n  needCountry?: boolean;\n  needZip?: boolean;\n  confirmPaymentUrl?: string;\n  countryList: ApiCountry[];\n  hasShippingOptions: boolean;\n  requestId?: string;\n  smartGlocalToken?: string;\n  stripeId?: string;\n  savedCredentials?: ApiPaymentCredentials[];\n  passwordValidUntil?: number;\n  isExtendedMedia?: boolean;\n  isPaymentFormUrl?: boolean;\n};\n\ntype GlobalStateProps = Pick<TabState['payment'], (\n  'step' | 'shippingOptions' |\n  'savedInfo' | 'canSaveCredentials' | 'nativeProvider' | 'passwordMissing' | 'invoice' | 'error'\n)>;\n\nconst NETWORK_REQUEST_TIMEOUT_S = 3;\n\nconst PaymentModal: FC<OwnProps & StateProps & GlobalStateProps> = ({\n  isOpen,\n  onClose,\n  step,\n  chat,\n  shippingOptions,\n  savedInfo,\n  canSaveCredentials,\n  isNameRequested,\n  isShippingAddressRequested,\n  isPhoneRequested,\n  isEmailRequested,\n  shouldSendPhoneToProvider,\n  shouldSendEmailToProvider,\n  currency,\n  passwordMissing,\n  isProviderError,\n  invoice,\n  nativeProvider,\n  prices,\n  needCardholderName,\n  needCountry,\n  needZip,\n  confirmPaymentUrl,\n  error,\n  countryList,\n  hasShippingOptions,\n  requestId,\n  smartGlocalToken,\n  stripeId,\n  savedCredentials,\n  passwordValidUntil,\n  isExtendedMedia,\n  isPaymentFormUrl,\n}) => {\n  const {\n    loadPasswordInfo,\n    validateRequestedInfo,\n    sendPaymentForm,\n    setPaymentStep,\n    sendCredentialsInfo,\n    clearPaymentError,\n    validatePaymentPassword,\n    setSmartGlocalCardInfo,\n  } = getActions();\n\n  const lang = useLang();\n\n  const [isModalOpen, openModal, closeModal] = useFlag();\n  const [paymentState, paymentDispatch] = usePaymentReducer();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isTosAccepted, setIsTosAccepted] = useState(false);\n  const [twoFaPassword, setTwoFaPassword] = useState('');\n  const prevStep = usePrevious(step, true);\n  const prevRequestId = usePrevious(requestId);\n  const canRenderFooter = step !== PaymentStep.ConfirmPayment;\n\n  const setStep = useCallback((nextStep) => {\n    setPaymentStep({ step: nextStep });\n  }, [setPaymentStep]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setTwoFaPassword('');\n      loadPasswordInfo();\n      openModal();\n    }\n  }, [isOpen, loadPasswordInfo, openModal]);\n\n  // Modal window can be closed by an event from the server side\n  useEffect(() => {\n    if (!isOpen && isModalOpen) {\n      closeModal();\n    }\n  }, [closeModal, isModalOpen, isOpen]);\n\n  useEffect(() => {\n    if (step !== undefined || error) {\n      setIsLoading(false);\n    }\n  }, [step, error, requestId]);\n\n  // When payment verification occurs and the `step` does not change, the card details must be requested\n  useEffect(() => {\n    if (\n      step === PaymentStep.Checkout\n      && step === prevStep\n      && requestId !== prevRequestId\n      && !paymentState.savedCredentialId\n      && !paymentState.cardNumber\n    ) {\n      setStep(PaymentStep.PaymentInfo);\n    }\n  }, [paymentState.cardNumber, paymentState.savedCredentialId, prevRequestId, prevStep, requestId, setStep, step]);\n\n  useEffect(() => {\n    if (error?.field) {\n      paymentDispatch({\n        type: 'setFormErrors',\n        payload: {\n          [error.field]: error.message,\n        },\n      });\n    }\n  }, [error, paymentDispatch]);\n\n  useEffect(() => {\n    if (savedInfo) {\n      const {\n        name: fullName, phone, email, shippingAddress,\n      } = savedInfo;\n      const {\n        countryIso2, ...shippingAddressRest\n      } = shippingAddress || {};\n      const shippingCountry = countryIso2 && countryList.find(({ iso2 }) => iso2 === countryIso2)!.defaultName;\n      paymentDispatch({\n        type: 'updateUserInfo',\n        payload: {\n          fullName,\n          phone: phone && phone.charAt(0) !== '+'\n            ? `+${phone}`\n            : phone,\n          email,\n          ...(shippingCountry && {\n            country: shippingCountry,\n            countryIso2,\n            ...shippingAddressRest,\n          }),\n        },\n      });\n    }\n  }, [savedInfo, paymentDispatch, countryList]);\n\n  useEffect(() => {\n    if (savedCredentials?.length) {\n      paymentDispatch({\n        type: 'changeSavedCredentialId',\n        payload: savedCredentials[0].id,\n      });\n    }\n  }, [paymentDispatch, savedCredentials]);\n\n  const handleErrorModalClose = useCallback(() => {\n    clearPaymentError();\n  }, [clearPaymentError]);\n\n  const totalPrice = useMemo(() => {\n    if (step !== PaymentStep.Checkout) {\n      return 0;\n    }\n\n    return getTotalPrice(prices, shippingOptions, paymentState.shipping, paymentState.tipAmount);\n  }, [step, prices, shippingOptions, paymentState.shipping, paymentState.tipAmount]);\n\n  const checkoutInfo = useMemo(() => {\n    if (step !== PaymentStep.Checkout) {\n      return undefined;\n    }\n    return getCheckoutInfo(paymentState, shippingOptions, nativeProvider || '');\n  }, [step, paymentState, shippingOptions, nativeProvider]);\n\n  const handleNewCardClick = useCallback(() => {\n    setStep(PaymentStep.PaymentInfo);\n  }, [setStep]);\n\n  const handleClearPaymentError = useCallback(() => {\n    clearPaymentError();\n  }, [clearPaymentError]);\n\n  function renderError() {\n    if (!error) {\n      return undefined;\n    }\n    return (\n      <Modal\n        className=\"error\"\n        isOpen={Boolean(error)}\n        onClose={handleErrorModalClose}\n      >\n        <h4>{error.description || 'Error'}</h4>\n        <p>{error.description || 'Error'}</p>\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            onClick={handleClearPaymentError}\n          >\n            {lang('OK')}\n          </Button>\n        </div>\n      </Modal>\n    );\n  }\n\n  const sendForm = useCallback(() => {\n    sendPaymentForm({\n      shippingOptionId: paymentState.shipping,\n      saveCredentials: paymentState.saveCredentials,\n      savedCredentialId: paymentState.savedCredentialId,\n      tipAmount: paymentState.tipAmount,\n    });\n  }, [sendPaymentForm, paymentState]);\n\n  const handlePaymentFormSubmit = useCallback((eventData: PaymentFormSubmitEvent['eventData']) => {\n    const { credentials } = eventData;\n    setSmartGlocalCardInfo(credentials);\n    sendForm();\n  }, [sendForm]);\n\n  function renderModalContent(currentStep: PaymentStep) {\n    switch (currentStep) {\n      case PaymentStep.Checkout:\n        return (\n          <Checkout\n            chat={chat}\n            prices={prices}\n            dispatch={paymentDispatch}\n            shippingPrices={paymentState.shipping && shippingOptions\n              ? getShippingPrices(shippingOptions, paymentState.shipping)\n              : undefined}\n            totalPrice={totalPrice}\n            invoice={invoice}\n            checkoutInfo={checkoutInfo}\n            isPaymentFormUrl={isPaymentFormUrl}\n            currency={currency!}\n            hasShippingOptions={hasShippingOptions}\n            tipAmount={paymentState.tipAmount}\n            needAddress={Boolean(isShippingAddressRequested)}\n            savedCredentials={savedCredentials}\n            isTosAccepted={isTosAccepted}\n            onAcceptTos={setIsTosAccepted}\n          />\n        );\n      case PaymentStep.SavedPayments:\n        return (\n          <SavedPaymentCredentials\n            state={paymentState}\n            savedCredentials={savedCredentials}\n            dispatch={paymentDispatch}\n            onNewCardClick={handleNewCardClick}\n          />\n        );\n      case PaymentStep.ConfirmPassword:\n        return (\n          <PasswordConfirm\n            state={paymentState}\n            savedCredentials={savedCredentials}\n            onPasswordChange={setTwoFaPassword}\n            isActive={currentStep === step}\n          />\n        );\n      case PaymentStep.PaymentInfo:\n        return (\n          <PaymentInfo\n            state={paymentState}\n            dispatch={paymentDispatch}\n            canSaveCredentials={Boolean(!passwordMissing && canSaveCredentials)}\n            needCardholderName={needCardholderName}\n            needCountry={needCountry}\n            needZip={needZip}\n            countryList={countryList}\n          />\n        );\n      case PaymentStep.ShippingInfo:\n        return (\n          <ShippingInfo\n            state={paymentState}\n            dispatch={paymentDispatch}\n            needAddress={Boolean(isShippingAddressRequested)}\n            needEmail={Boolean(isEmailRequested || shouldSendEmailToProvider)}\n            needPhone={Boolean(isPhoneRequested || shouldSendPhoneToProvider)}\n            needName={Boolean(isNameRequested)}\n            countryList={countryList}\n          />\n        );\n      case PaymentStep.Shipping:\n        return (\n          <Shipping\n            state={paymentState}\n            dispatch={paymentDispatch}\n            shippingOptions={shippingOptions || []}\n            currency={currency!}\n          />\n        );\n      case PaymentStep.ConfirmPayment:\n        return (\n          <ConfirmPayment\n            url={confirmPaymentUrl!}\n            noRedirect={isExtendedMedia}\n            onPaymentFormSubmit={handlePaymentFormSubmit}\n            onClose={closeModal}\n          />\n        );\n      default:\n        return undefined;\n    }\n  }\n\n  const validateRequest = useCallback(() => {\n    const { saveInfo } = paymentState;\n    const requestInfo = getRequestInfo(paymentState);\n    validateRequestedInfo({ requestInfo, saveInfo });\n  }, [validateRequestedInfo, paymentState]);\n\n  const sendCredentials = useCallback(() => {\n    const credentials = getCredentials(paymentState);\n    sendCredentialsInfo({\n      credentials,\n    });\n  }, [sendCredentialsInfo, paymentState]);\n\n  const handleButtonClick = useCallback(() => {\n    switch (step) {\n      case PaymentStep.ShippingInfo:\n        setIsLoading(true);\n        validateRequest();\n        break;\n\n      case PaymentStep.Shipping:\n        setStep(PaymentStep.Checkout);\n        break;\n\n      case PaymentStep.SavedPayments:\n        setStep(PaymentStep.ConfirmPassword);\n        break;\n\n      case PaymentStep.ConfirmPassword:\n        if (twoFaPassword === '') {\n          return;\n        }\n\n        setIsLoading(true);\n        validatePaymentPassword({ password: twoFaPassword });\n        break;\n\n      case PaymentStep.PaymentInfo:\n        setIsLoading(true);\n        sendCredentials();\n        paymentDispatch({ type: 'changeSavedCredentialId', payload: '' });\n        break;\n\n      case PaymentStep.Checkout: {\n        if (isPaymentFormUrl) {\n          setIsLoading(true);\n          setStep(PaymentStep.ConfirmPayment);\n          return;\n        }\n\n        if (savedInfo && !requestId && !paymentState.shipping) {\n          setIsLoading(true);\n          validateRequest();\n          return;\n        }\n\n        if (\n          paymentState.savedCredentialId\n          && (!passwordValidUntil || passwordValidUntil <= (Date.now() / 1000 - NETWORK_REQUEST_TIMEOUT_S))\n        ) {\n          setStep(PaymentStep.ConfirmPassword);\n          return;\n        }\n\n        if (\n          !paymentState.savedCredentialId\n          && (\n            (nativeProvider === DEFAULT_PROVIDER && !stripeId)\n            || (nativeProvider === DONATE_PROVIDER && !smartGlocalToken)\n          )\n        ) {\n          setStep(PaymentStep.PaymentInfo);\n          return;\n        }\n\n        const { phone, email, fullName } = paymentState;\n        const shouldFillRequestedData = (isEmailRequested && !email)\n          || (isPhoneRequested && !phone)\n          || (isNameRequested && !fullName);\n\n        if ((isShippingAddressRequested && !requestId) || shouldFillRequestedData) {\n          setStep(PaymentStep.ShippingInfo);\n          return;\n        }\n\n        if (isShippingAddressRequested && !paymentState.shipping) {\n          setStep(PaymentStep.Shipping);\n          return;\n        }\n\n        setIsLoading(true);\n        sendForm();\n        break;\n      }\n    }\n  }, [\n    isEmailRequested, isNameRequested, isPhoneRequested, isShippingAddressRequested, nativeProvider, passwordValidUntil,\n    paymentDispatch, paymentState, requestId, savedInfo, sendCredentials, sendForm, setStep, smartGlocalToken, step,\n    stripeId, twoFaPassword, validatePaymentPassword, validateRequest, isPaymentFormUrl,\n  ]);\n\n  useEffect(() => {\n    return step === PaymentStep.ConfirmPassword\n      ? captureKeyboardListeners({ onEnter: handleButtonClick })\n      : undefined;\n  },\n  [handleButtonClick, step]);\n\n  const handleModalClose = useCallback(() => {\n    paymentDispatch({\n      type: 'resetState',\n    });\n    setIsTosAccepted(false);\n    onClose();\n  }, [onClose, paymentDispatch]);\n\n  const handleBackClick = useCallback(() => {\n    setStep(step === PaymentStep.ConfirmPassword ? PaymentStep.SavedPayments : PaymentStep.Checkout);\n  }, [setStep, step]);\n\n  const modalHeader = useMemo(() => {\n    switch (step) {\n      case PaymentStep.Checkout:\n        return lang('PaymentCheckout');\n      case PaymentStep.ShippingInfo:\n        return lang('PaymentShippingInfo');\n      case PaymentStep.Shipping:\n        return lang('PaymentShippingMethod');\n      case PaymentStep.SavedPayments:\n        return lang('PaymentCheckoutMethod');\n      case PaymentStep.ConfirmPassword:\n        return lang('Checkout.PasswordEntry.Title');\n      case PaymentStep.PaymentInfo:\n        return lang('PaymentCardInfo');\n      case PaymentStep.ConfirmPayment:\n        return lang('Checkout.WebConfirmation.Title');\n      default:\n        return '';\n    }\n  }, [step, lang]);\n\n  const buttonText = step === PaymentStep.Checkout\n    ? lang('Checkout.PayPrice', formatCurrency(totalPrice, currency!, lang.code))\n    : lang('Next');\n\n  function getIsSubmitDisabled() {\n    if (isLoading) {\n      return true;\n    }\n\n    switch (step) {\n      case PaymentStep.Checkout:\n        return Boolean(invoice?.isRecurring && !isTosAccepted);\n\n      case PaymentStep.PaymentInfo:\n        return Boolean(\n          paymentState.cardNumber === ''\n          || (needCardholderName && paymentState.cardholder === '')\n          || paymentState.cvv === ''\n          || paymentState.expiry === '',\n        );\n\n      default:\n        return false;\n    }\n  }\n\n  if (isProviderError) {\n    return (\n      <Modal\n        className=\"error\"\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        onCloseAnimationEnd={handleModalClose}\n      >\n        <p>\n          Sorry, Telegram Web A doesn&apos;t support payments with this provider yet. <br />\n          Please use one of our mobile apps to do this.\n        </p>\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            onClick={closeModal}\n          >\n            {lang('OK')}\n          </Button>\n        </div>\n      </Modal>\n    );\n  }\n\n  const isSubmitDisabled = getIsSubmitDisabled();\n\n  return (\n    <Modal\n      className={buildClassName('PaymentModal', invoice?.isRecurring && 'recurring')}\n      isOpen={isModalOpen}\n      onClose={closeModal}\n      onCloseAnimationEnd={handleModalClose}\n    >\n      <div className=\"header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button\n          className=\"close-button\"\n          color=\"translucent\"\n          round\n          size=\"smaller\"\n          onClick={step === PaymentStep.Checkout ? closeModal : handleBackClick}\n          ariaLabel=\"Close\"\n        >\n          <i className={buildClassName(\n            'icon', step === PaymentStep.Checkout ? 'icon-close' : 'icon-arrow-left',\n          )}\n          />\n        </Button>\n        <h3>{modalHeader}</h3>\n      </div>\n      {step !== undefined ? (\n        <Transition\n          name=\"slide\"\n          activeKey={step}\n          shouldCleanup\n          cleanupOnlyKey={PaymentStep.ConfirmPayment}\n        >\n          <div className=\"content custom-scroll\">\n            {renderModalContent(step)}\n          </div>\n        </Transition>\n      ) : (\n        <div className=\"empty-content\">\n          <Spinner color=\"gray\" />\n        </div>\n      )}\n      {canRenderFooter && (\n        <div className=\"footer\">\n          <Button\n            type=\"submit\"\n            onClick={handleButtonClick}\n            disabled={isSubmitDisabled}\n            isLoading={isLoading}\n          >\n            {buttonText}\n          </Button>\n        </div>\n      )}\n      {error && !error.field && renderError()}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps & GlobalStateProps => {\n    const {\n      step,\n      shippingOptions,\n      savedInfo,\n      canSaveCredentials,\n      invoice,\n      invoiceContainer,\n      nativeProvider,\n      nativeParams,\n      passwordMissing,\n      error,\n      confirmPaymentUrl,\n      inputInvoice,\n      requestId,\n      stripeCredentials,\n      smartGlocalCredentials,\n      savedCredentials,\n      temporaryPassword,\n      isExtendedMedia,\n      url,\n    } = selectTabState(global).payment;\n\n    let providerName = nativeProvider;\n    if (!providerName && url) {\n      providerName = url.startsWith(DONATE_PROVIDER_URL) ? DONATE_PROVIDER : undefined;\n    }\n\n    const chat = inputInvoice && 'chatId' in inputInvoice ? selectChat(global, inputInvoice.chatId) : undefined;\n    const isProviderError = Boolean(invoice && (!providerName || !SUPPORTED_PROVIDERS.has(providerName)));\n    const { needCardholderName, needCountry, needZip } = (nativeParams || {});\n    const {\n      isNameRequested,\n      isShippingAddressRequested,\n      isPhoneRequested,\n      isEmailRequested,\n      shouldSendPhoneToProvider,\n      shouldSendEmailToProvider,\n      currency,\n      prices,\n    } = (invoiceContainer || {});\n\n    return {\n      step,\n      chat,\n      shippingOptions,\n      savedInfo,\n      canSaveCredentials,\n      nativeProvider: providerName,\n      passwordMissing,\n      isNameRequested,\n      isShippingAddressRequested,\n      isPhoneRequested,\n      isEmailRequested,\n      shouldSendPhoneToProvider,\n      shouldSendEmailToProvider,\n      currency,\n      prices,\n      isProviderError,\n      invoice,\n      needCardholderName,\n      needCountry,\n      needZip,\n      error,\n      confirmPaymentUrl: confirmPaymentUrl ?? url,\n      isPaymentFormUrl: Boolean(!nativeProvider && url),\n      countryList: global.countryList.general,\n      requestId,\n      hasShippingOptions: Boolean(shippingOptions?.length),\n      smartGlocalToken: smartGlocalCredentials?.token,\n      stripeId: stripeCredentials?.id,\n      savedCredentials,\n      passwordValidUntil: temporaryPassword?.validUntil,\n      isExtendedMedia,\n    };\n  },\n)(PaymentModal));\n\nfunction findShippingOption(shippingOptions: ShippingOption[], optionId: string) {\n  return shippingOptions.find(({ id }) => id === optionId);\n}\n\nfunction getShippingPrices(shippingOptions: ShippingOption[], shippingOption: string) {\n  const option = findShippingOption(shippingOptions, shippingOption);\n  return option?.prices;\n}\n\nfunction getTotalPrice(\n  prices: Price[] = [],\n  shippingOptions: ShippingOption[] | undefined,\n  shippingOption: string,\n  tipAmount: number,\n) {\n  const shippingPrices = shippingOptions\n    ? getShippingPrices(shippingOptions, shippingOption)\n    : [];\n  let total = tipAmount;\n  const totalPrices = prices.concat(shippingPrices || []);\n  total = totalPrices.reduce((acc, cur) => {\n    return acc + cur.amount;\n  }, total);\n  return total;\n}\n\nfunction getCheckoutInfo(state: FormState, shippingOptions: ShippingOption[] | undefined, paymentProvider: string) {\n  const cardTypeText = detectCardTypeText(state.cardNumber);\n  const paymentMethod = cardTypeText && state.cardNumber ? `${cardTypeText} *${state.cardNumber.slice(-4)}` : undefined;\n  const shippingAddress = state.streetLine1\n    ? `${state.streetLine1}, ${state.city}, ${state.countryIso2}`\n    : undefined;\n  const { phone, fullName: name } = state;\n  const shippingOption = shippingOptions ? findShippingOption(shippingOptions, state.shipping) : undefined;\n  const shippingMethod = shippingOption?.title;\n  return {\n    paymentMethod,\n    paymentProvider,\n    shippingAddress,\n    name,\n    phone,\n    shippingMethod,\n  };\n}\n\nfunction getRequestInfo(paymentState: FormState) {\n  const {\n    streetLine1,\n    streetLine2,\n    city,\n    state,\n    countryIso2,\n    postCode,\n    fullName: name,\n    phone,\n    email,\n  } = paymentState;\n\n  const shippingAddress = {\n    streetLine1,\n    streetLine2,\n    city,\n    state,\n    countryIso2,\n    postCode,\n  };\n\n  return {\n    name,\n    phone,\n    email,\n    shippingAddress,\n  };\n}\n\nexport type ApiCredentials = {\n  data: {\n    cardNumber: string;\n    cardholder: string;\n    expiryMonth: string;\n    expiryYear: string;\n    cvv: string;\n    country: string;\n    zip: string;\n  };\n};\n\nfunction getCredentials(paymentState: FormState): ApiCredentials {\n  const {\n    cardNumber, cardholder, expiry, cvv, billingCountry, billingZip,\n  } = paymentState;\n  const [expiryMonth, expiryYear] = expiry.split('/');\n  const data = {\n    cardNumber,\n    cardholder,\n    expiryMonth,\n    expiryYear,\n    cvv,\n    country: billingCountry,\n    zip: billingZip,\n  };\n\n  return {\n    data,\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiShippingAddress, ApiWebDocument } from '../../api/types';\nimport type { Price } from '../../types';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Checkout from './Checkout';\n\nimport './PaymentModal.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  prices?: Price[];\n  shippingPrices: any;\n  tipAmount?: number;\n  totalAmount?: number;\n  currency?: string;\n  info?: {\n    shippingAddress?: ApiShippingAddress;\n    phone?: string;\n    name?: string;\n  };\n  photo?: ApiWebDocument;\n  text?: string;\n  title?: string;\n  credentialsTitle?: string;\n  shippingMethod?: string;\n};\n\nconst ReceiptModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  onClose,\n  prices,\n  shippingPrices,\n  tipAmount,\n  totalAmount,\n  currency,\n  info,\n  photo,\n  text,\n  title,\n  credentialsTitle,\n  shippingMethod,\n}) => {\n  const lang = useLang();\n\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  useEffect(() => {\n    if (isOpen) {\n      openModal();\n    }\n  }, [isOpen, openModal]);\n\n  const checkoutInfo = useMemo(() => {\n    return getCheckoutInfo(credentialsTitle, info, shippingMethod);\n  }, [info, shippingMethod, credentialsTitle]);\n\n  const invoice = useMemo(() => {\n    return {\n      photo,\n      text: text!,\n      title: title!,\n      amount: totalAmount!,\n      currency: currency!,\n    };\n  }, [currency, photo, text, title, totalAmount]);\n\n  return (\n    <Modal\n      className=\"PaymentModal PaymentModal-receipt\"\n      isOpen={isModalOpen}\n      onClose={closeModal}\n      onCloseAnimationEnd={onClose}\n    >\n      <div>\n        <div className=\"header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button\n            className=\"close-button\"\n            color=\"translucent\"\n            round\n            size=\"smaller\"\n            onClick={closeModal}\n            ariaLabel=\"Close\"\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n          <h3> {lang('PaymentReceipt')} </h3>\n        </div>\n        <div className=\"receipt-content custom-scroll\">\n          <Checkout\n            prices={prices}\n            shippingPrices={shippingPrices}\n            totalPrice={totalAmount}\n            tipAmount={tipAmount}\n            invoice={invoice}\n            checkoutInfo={checkoutInfo}\n            currency={currency!}\n          />\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { receipt } = selectTabState(global).payment;\n    const {\n      currency,\n      prices,\n      info,\n      totalAmount,\n      credentialsTitle,\n      shippingPrices,\n      shippingMethod,\n      photo,\n      text,\n      title,\n      tipAmount,\n    } = (receipt || {});\n\n    return {\n      currency,\n      prices,\n      info,\n      tipAmount,\n      totalAmount,\n      credentialsTitle,\n      shippingPrices,\n      shippingMethod,\n      photo,\n      text,\n      title,\n    };\n  },\n)(ReceiptModal));\n\nfunction getCheckoutInfo(paymentMethod?: string,\n  info?:\n  { phone?: string;\n    name?: string;\n    shippingAddress?: ApiShippingAddress;\n  },\n  shippingMethod?: string) {\n  if (!info) {\n    return { paymentMethod };\n  }\n  const { shippingAddress } = info;\n  const fullAddress = shippingAddress?.streetLine1\n    ? `${shippingAddress.streetLine1}, ${shippingAddress.city}, ${shippingAddress.countryIso2}`\n    : undefined;\n  const { phone, name } = info;\n  return {\n    paymentMethod,\n    shippingAddress: fullAddress,\n    name,\n    phone,\n    shippingMethod,\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiSticker } from '../../api/types';\nimport type { TabState } from '../../global/types';\n\nimport { DEFAULT_TOPIC_ICON_STICKER_ID } from '../../config';\nimport { selectChat, selectIsCurrentUserPremium, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport cycleRestrict from '../../util/cycleRestrict';\nimport { getTopicColors } from '../../util/forumColors';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLang from '../../hooks/useLang';\n\nimport CustomEmojiPicker from '../common/CustomEmojiPicker';\nimport TopicIcon from '../common/TopicIcon';\nimport FloatingActionButton from '../ui/FloatingActionButton';\nimport InputText from '../ui/InputText';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\n\nimport styles from './ManageTopic.module.scss';\n\nconst ICON_SIZE = 5 * REM;\n\nexport type OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  createTopicPanel?: TabState['createTopicPanel'];\n  isCurrentUserPremium?: boolean;\n};\n\nconst CreateTopic: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  createTopicPanel,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { createTopic, openPremiumModal } = getActions();\n  const [title, setTitle] = useState('');\n  const [iconColorIndex, setIconColorIndex] = useState(0);\n  const [iconEmojiId, setIconEmojiId] = useState<string | undefined>(undefined);\n  const lang = useLang();\n\n  const isTouched = Boolean(title);\n  const isLoading = Boolean(createTopicPanel?.isLoading);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!isActive) {\n      setTitle('');\n      setIconEmojiId(undefined);\n    }\n  }, [isActive]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  }, []);\n\n  const handleIconClick = useCallback(() => {\n    setIconColorIndex((prev) => cycleRestrict(getTopicColors().length, prev + 1));\n  }, []);\n\n  const handleCreateTopic = useCallback(() => {\n    createTopic({\n      chatId: chat!.id,\n      title,\n      iconColor: getTopicColors()[iconColorIndex],\n      iconEmojiId,\n    });\n  }, [chat, createTopic, iconColorIndex, iconEmojiId, title]);\n\n  const handleCustomEmojiSelect = useCallback((emoji: ApiSticker) => {\n    if (!emoji.isFree && !isCurrentUserPremium && emoji.id !== DEFAULT_TOPIC_ICON_STICKER_ID) {\n      openPremiumModal({ initialSection: 'animated_emoji' });\n      return;\n    }\n\n    if (emoji.id === DEFAULT_TOPIC_ICON_STICKER_ID) {\n      setIconEmojiId(undefined);\n      return;\n    }\n\n    setIconEmojiId(emoji.id);\n  }, [isCurrentUserPremium, openPremiumModal]);\n\n  const dummyTopic = useMemo(() => {\n    return {\n      id: 0,\n      title,\n      iconColor: getTopicColors()[iconColorIndex],\n      iconEmojiId,\n    };\n  }, [iconColorIndex, iconEmojiId, title]);\n\n  if (!chat?.isForum) {\n    return undefined;\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.content, 'custom-scroll')}>\n        <div className={buildClassName(styles.section, styles.top)}>\n          <span className={styles.heading}>{lang('CreateTopicTitle')}</span>\n          <Transition\n            name=\"zoomFade\"\n            activeKey={Number(dummyTopic.iconEmojiId) || 0}\n            shouldCleanup\n            direction={1}\n            className={styles.iconWrapper}\n          >\n            <TopicIcon\n              topic={dummyTopic}\n              className={buildClassName(styles.icon, styles.clickable)}\n              onClick={handleIconClick}\n              size={ICON_SIZE}\n              noLoopLimit\n            />\n          </Transition>\n          <InputText\n            value={title}\n            onChange={handleTitleChange}\n            label={lang('lng_forum_topic_title')}\n            disabled={isLoading}\n            teactExperimentControlled\n          />\n        </div>\n        <div className={buildClassName(styles.section, styles.bottom)}>\n          <CustomEmojiPicker\n            idPrefix=\"create-topic-icons-set-\"\n            isHidden={!isActive}\n            loadAndPlay={isActive}\n            onCustomEmojiSelect={handleCustomEmojiSelect}\n            className={styles.iconPicker}\n            pickerListClassName=\"fab-padding-bottom\"\n            withDefaultTopicIcons\n          />\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isTouched}\n        disabled={isLoading}\n        onClick={handleCreateTopic}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { createTopicPanel } = selectTabState(global);\n    return {\n      chat: createTopicPanel?.chatId ? selectChat(global, createTopicPanel.chatId) : undefined,\n      createTopicPanel,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(CreateTopic));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiSticker, ApiTopic } from '../../api/types';\nimport type { TabState } from '../../global/types';\n\nimport { DEFAULT_TOPIC_ICON_STICKER_ID, GENERAL_TOPIC_ID } from '../../config';\nimport { selectChat, selectIsCurrentUserPremium, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLang from '../../hooks/useLang';\n\nimport CustomEmojiPicker from '../common/CustomEmojiPicker';\nimport TopicIcon from '../common/TopicIcon';\nimport FloatingActionButton from '../ui/FloatingActionButton';\nimport InputText from '../ui/InputText';\nimport Loading from '../ui/Loading';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\n\nimport styles from './ManageTopic.module.scss';\n\nconst ICON_SIZE = 5 * REM;\nconst RESET_ICON_ID = '0';\n\nexport type OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  topic?: ApiTopic;\n  editTopicPanel?: TabState['editTopicPanel'];\n  isCurrentUserPremium?: boolean;\n};\n\nconst EditTopic: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  topic,\n  editTopicPanel,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { editTopic, openPremiumModal } = getActions();\n  const [title, setTitle] = useState('');\n  const [iconEmojiId, setIconEmojiId] = useState<string | undefined>(undefined);\n  const lang = useLang();\n\n  const isLoading = Boolean(editTopicPanel?.isLoading);\n  const isGeneral = topic?.id === GENERAL_TOPIC_ID;\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!isActive) {\n      setTitle('');\n      setIconEmojiId(undefined);\n    }\n  }, [isActive]);\n\n  useEffect(() => {\n    if (topic?.title || topic?.iconEmojiId) {\n      setTitle(topic.title);\n      setIconEmojiId(topic.iconEmojiId);\n    }\n  }, [topic]);\n\n  const isTouched = useMemo(() => {\n    return title !== topic?.title || iconEmojiId !== topic?.iconEmojiId;\n  }, [iconEmojiId, title, topic?.iconEmojiId, topic?.title]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const newTitle = e.target.value;\n    setTitle(newTitle);\n  }, []);\n\n  const handleEditTopic = useCallback(() => {\n    editTopic({\n      chatId: chat!.id,\n      title,\n      topicId: topic!.id,\n      iconEmojiId,\n    });\n  }, [chat, editTopic, iconEmojiId, title, topic]);\n\n  const handleCustomEmojiSelect = useCallback((emoji: ApiSticker) => {\n    if (!emoji.isFree && !isCurrentUserPremium && emoji.id !== DEFAULT_TOPIC_ICON_STICKER_ID) {\n      openPremiumModal({ initialSection: 'animated_emoji' });\n      return;\n    }\n\n    if (emoji.id === DEFAULT_TOPIC_ICON_STICKER_ID) {\n      setIconEmojiId(RESET_ICON_ID);\n      return;\n    }\n\n    setIconEmojiId(emoji.id);\n  }, [isCurrentUserPremium, openPremiumModal]);\n\n  const dummyTopic = useMemo(() => {\n    return {\n      ...topic!,\n      title,\n      iconEmojiId,\n    };\n  }, [iconEmojiId, title, topic]);\n\n  if (!chat?.isForum) {\n    return undefined;\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.content, 'custom-scroll')}>\n        {!topic && <Loading />}\n        {topic && (\n          <>\n            <div className={buildClassName(styles.section, styles.top, isGeneral && styles.general)}>\n              <span className={styles.heading}>{lang(isGeneral ? 'CreateGeneralTopicTitle' : 'CreateTopicTitle')}</span>\n              <Transition\n                name=\"zoomFade\"\n                activeKey={Number(dummyTopic.iconEmojiId) || 0}\n                shouldCleanup\n                direction={1}\n                className={styles.iconWrapper}\n              >\n                <TopicIcon\n                  topic={dummyTopic}\n                  className={styles.icon}\n                  size={ICON_SIZE}\n                  noLoopLimit\n                />\n              </Transition>\n              <InputText\n                value={title}\n                onChange={handleTitleChange}\n                label={lang('lng_forum_topic_title')}\n                disabled={isLoading}\n                teactExperimentControlled\n              />\n            </div>\n            {!isGeneral && (\n              <div className={buildClassName(styles.section, styles.bottom)}>\n                <CustomEmojiPicker\n                  idPrefix=\"edit-topic-icons-set-\"\n                  isHidden={!isActive}\n                  loadAndPlay={isActive}\n                  onCustomEmojiSelect={handleCustomEmojiSelect}\n                  className={styles.iconPicker}\n                  pickerListClassName=\"fab-padding-bottom\"\n                  withDefaultTopicIcons\n                />\n              </div>\n            )}\n          </>\n        )}\n      </div>\n      <FloatingActionButton\n        isShown={isTouched}\n        disabled={isLoading}\n        onClick={handleEditTopic}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { editTopicPanel } = selectTabState(global);\n    const chat = editTopicPanel?.chatId ? selectChat(global, editTopicPanel.chatId) : undefined;\n    const topic = editTopicPanel?.topicId ? chat?.topics?.[editTopicPanel?.topicId] : undefined;\n\n    return {\n      chat,\n      topic,\n      editTopicPanel,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(EditTopic));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useRef } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiVideo } from '../../api/types';\nimport type { MessageList } from '../../global/types';\n\nimport { getAllowedAttachmentOptions, getCanPostInChat } from '../../global/helpers';\nimport {\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectCurrentGifSearch,\n  selectCurrentMessageList,\n  selectIsChatWithBot,\n  selectIsChatWithSelf, selectThreadInfo,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useSchedule from '../../hooks/useSchedule';\n\nimport GifButton from '../common/GifButton';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport Loading from '../ui/Loading';\n\nimport './GifSearch.scss';\n\ntype OwnProps = {\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  query?: string;\n  results?: ApiVideo[];\n  chat?: ApiChat;\n  isChatWithBot?: boolean;\n  canScheduleUntilOnline?: boolean;\n  isSavedMessages?: boolean;\n  canPostInChat?: boolean;\n  currentMessageList?: MessageList;\n};\n\nconst PRELOAD_BACKWARDS = 96; // GIF Search bot results are multiplied by 24\nconst INTERSECTION_DEBOUNCE = 300;\n\nconst GifSearch: FC<OwnProps & StateProps> = ({\n  isActive,\n  query,\n  results,\n  chat,\n  isChatWithBot,\n  canScheduleUntilOnline,\n  isSavedMessages,\n  canPostInChat,\n  currentMessageList,\n  onClose,\n}) => {\n  const {\n    searchMoreGifs,\n    sendMessage,\n    setGifSearchQuery,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, debounceMs: INTERSECTION_DEBOUNCE });\n\n  const canSendGifs = canPostInChat && getAllowedAttachmentOptions(chat, isChatWithBot).canSendGifs;\n\n  const handleGifClick = useCallback((gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => {\n    if (canSendGifs) {\n      if (!currentMessageList) {\n        return;\n      }\n\n      if (shouldSchedule) {\n        requestCalendar((scheduledAt) => {\n          sendMessage({\n            messageList: currentMessageList,\n            gif,\n            scheduledAt,\n            isSilent,\n          });\n        });\n      } else {\n        sendMessage({ messageList: currentMessageList, gif, isSilent });\n      }\n    }\n\n    if (IS_TOUCH_ENV) {\n      setGifSearchQuery({ query: undefined });\n    }\n  }, [canSendGifs, currentMessageList, requestCalendar]);\n\n  const handleSearchMoreGifs = useCallback(() => {\n    searchMoreGifs();\n  }, [searchMoreGifs]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function renderContent() {\n    if (query === undefined) {\n      return undefined;\n    }\n\n    if (!results) {\n      return (\n        <Loading />\n      );\n    }\n\n    if (!results.length) {\n      return (\n        <p className=\"helper-text\" dir=\"auto\">{lang('NoGIFsFound')}</p>\n      );\n    }\n\n    return results.map((gif) => (\n      <GifButton\n        key={gif.id}\n        gif={gif}\n        observeIntersection={observeIntersection}\n        onClick={canSendGifs ? handleGifClick : undefined}\n        isSavedMessages={isSavedMessages}\n      />\n    ));\n  }\n\n  const hasResults = Boolean(query !== undefined && results && results.length);\n\n  return (\n    <div className=\"GifSearch\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <InfiniteScroll\n        ref={containerRef}\n        className={buildClassName('gif-container custom-scroll', hasResults && 'grid')}\n        items={results}\n        itemSelector=\".GifButton\"\n        preloadBackwards={PRELOAD_BACKWARDS}\n        noFastList\n        onLoadMore={handleSearchMoreGifs}\n      >\n        {renderContent()}\n      </InfiniteScroll>\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const currentSearch = selectCurrentGifSearch(global);\n    const { query, results } = currentSearch || {};\n    const { chatId, threadId } = selectCurrentMessageList(global) || {};\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const isChatWithBot = chat ? selectIsChatWithBot(global, chat) : undefined;\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n    const threadInfo = chatId && threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const isMessageThread = Boolean(!threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n    const canPostInChat = Boolean(chat) && Boolean(threadId) && getCanPostInChat(chat, threadId, isMessageThread);\n\n    return {\n      query,\n      results,\n      chat,\n      isChatWithBot,\n      isSavedMessages,\n      canPostInChat,\n      canScheduleUntilOnline: Boolean(chatId) && selectCanScheduleUntilOnline(global, chatId),\n      currentMessageList: selectCurrentMessageList(global),\n    };\n  },\n)(GifSearch));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage,\n  ApiPollAnswer,\n  ApiPollResult,\n} from '../../api/types';\n\nimport { isUserId } from '../../global/helpers';\nimport { selectTabState } from '../../global/selectors';\n\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport GroupChatInfo from '../common/GroupChatInfo';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport ShowMoreButton from '../ui/ShowMoreButton';\n\nimport './PollAnswerResults.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  message: ApiMessage;\n  answer: ApiPollAnswer;\n  answerVote: ApiPollResult;\n  totalVoters: number;\n};\n\ntype StateProps = {\n  voters?: string[];\n  offset: string;\n};\n\nconst INITIAL_LIMIT = 4;\nconst VIEW_MORE_LIMIT = 50;\n\nconst PollAnswerResults: FC<OwnProps & StateProps> = ({\n  chat,\n  message,\n  answer,\n  answerVote,\n  totalVoters,\n  voters,\n  offset,\n}) => {\n  const {\n    loadPollOptionResults,\n    openChat,\n    closePollResults,\n  } = getActions();\n\n  const prevVotersCount = usePrevious<number>(answerVote.votersCount);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const areVotersLoaded = Boolean(voters);\n  const { option, text } = answer;\n  const lang = useLang();\n\n  useEffect(() => {\n    // For update when new votes arrive or when the user takes back his vote\n    if (!areVotersLoaded || prevVotersCount !== answerVote.votersCount) {\n      loadPollOptionResults({\n        chat, messageId: message.id, option, offset, limit: INITIAL_LIMIT, shouldResetVoters: true,\n      });\n    }\n    // eslint-disable-next-line\n  }, [answerVote.votersCount, areVotersLoaded]);\n\n  const handleViewMoreClick = useCallback(() => {\n    setIsLoading(true);\n    loadPollOptionResults({\n      chat, messageId: message.id, option, offset, limit: VIEW_MORE_LIMIT,\n    });\n  }, [chat, loadPollOptionResults, message.id, offset, option]);\n\n  useEffect(() => {\n    setIsLoading(false);\n  }, [voters]);\n\n  const handleMemberClick = useCallback((id: string) => {\n    openChat({ id });\n    closePollResults();\n  }, [closePollResults, openChat]);\n\n  function renderViewMoreButton() {\n    const leftVotersCount = answerVote.votersCount - voters!.length;\n\n    return answerVote.votersCount > INITIAL_LIMIT && leftVotersCount > 0 && (\n      <ShowMoreButton\n        count={leftVotersCount}\n        itemName=\"voter\"\n        isLoading={isLoading}\n        onClick={handleViewMoreClick}\n      />\n    );\n  }\n\n  return (\n    <div className=\"PollAnswerResults\">\n      <div className=\"poll-voters\">\n        {voters\n          ? voters.map((id) => (\n            <ListItem\n              key={id}\n              className=\"chat-item-clickable\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleMemberClick(id)}\n            >\n              {isUserId(id) ? (\n                <PrivateChatInfo\n                  avatarSize=\"tiny\"\n                  userId={id}\n                  forceShowSelf\n                  noStatusOrTyping\n                />\n              ) : (\n                <GroupChatInfo\n                  avatarSize=\"tiny\"\n                  chatId={id}\n                  noStatusOrTyping\n                />\n              )}\n            </ListItem>\n          ))\n          : <Loading />}\n        {voters && renderViewMoreButton()}\n      </div>\n      <div className=\"answer-head\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <span className=\"answer-title\" dir=\"auto\">{text}</span>\n        <span className=\"answer-percent\" dir={lang.isRtl ? 'auto' : undefined}>\n          {getPercentage(answerVote.votersCount, totalVoters)}%\n        </span>\n      </div>\n    </div>\n  );\n};\n\nfunction getPercentage(value: number, total: number) {\n  return total > 0 ? ((value / total) * 100).toFixed() : 0;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { answer }: OwnProps): StateProps => {\n    const { voters, offsets } = selectTabState(global).pollResults;\n\n    return {\n      voters: voters?.[answer.option],\n      offset: (offsets?.[answer.option]) || '',\n    };\n  },\n)(PollAnswerResults));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiMessage } from '../../api/types';\n\nimport { getMessagePoll } from '../../global/helpers';\nimport { selectChat, selectChatMessage, selectTabState } from '../../global/selectors';\nimport { buildCollectionByKey } from '../../util/iteratees';\nimport renderText from '../common/helpers/renderText';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLang from '../../hooks/useLang';\n\nimport Loading from '../ui/Loading';\nimport PollAnswerResults from './PollAnswerResults';\n\nimport './PollResults.scss';\n\ntype OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  message?: ApiMessage;\n};\n\nconst PollResults: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  message,\n  onClose,\n}) => {\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  if (!message || !chat) {\n    return <Loading />;\n  }\n\n  const { summary, results } = getMessagePoll(message)!;\n  if (!results.results) {\n    return undefined;\n  }\n\n  const resultsByOption = buildCollectionByKey(results.results, 'option');\n\n  return (\n    <div className=\"PollResults\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <h3 className=\"poll-question\" dir=\"auto\">{renderText(summary.question, ['emoji', 'br'])}</h3>\n      <div className=\"poll-results-list custom-scroll\">\n        {summary.answers.map((answer) => (\n          <PollAnswerResults\n            key={`${message.id}-${answer.option}`}\n            chat={chat}\n            message={message}\n            answer={answer}\n            answerVote={resultsByOption[answer.option]}\n            totalVoters={results.totalVoters!}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const {\n      pollResults: { chatId, messageId },\n    } = selectTabState(global);\n\n    if (!chatId || !messageId) {\n      return {};\n    }\n\n    const chat = selectChat(global, chatId);\n    const message = selectChatMessage(global, chatId, messageId);\n\n    return {\n      chat,\n      message,\n    };\n  },\n)(PollResults));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback,\n  useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiMessage, ApiPeer } from '../../api/types';\nimport type { ThreadId } from '../../types';\n\nimport { REPLIES_USER_ID } from '../../config';\nimport {\n  selectChatMessages,\n  selectCurrentTextSearch,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectSender,\n} from '../../global/selectors';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport { renderMessageSummary } from '../common/helpers/renderMessageText';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useKeyboardListNavigation from '../../hooks/useKeyboardListNavigation';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from '../common/Avatar';\nimport FullNameTitle from '../common/FullNameTitle';\nimport LastMessageMeta from '../common/LastMessageMeta';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport ListItem from '../ui/ListItem';\n\nimport './RightSearch.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  messagesById?: Record<number, ApiMessage>;\n  query?: string;\n  totalCount?: number;\n  foundIds?: number[];\n  isSavedMessages?: boolean;\n};\n\nconst RightSearch: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isActive,\n  messagesById,\n  query,\n  totalCount,\n  foundIds,\n  isSavedMessages,\n  onClose,\n}) => {\n  const {\n    searchTextMessagesLocal,\n    focusMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!isActive) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n\n    return enableDirectTextInput;\n  }, [isActive]);\n\n  const handleSearchTextMessagesLocal = useCallback(() => {\n    searchTextMessagesLocal();\n  }, [searchTextMessagesLocal]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(handleSearchTextMessagesLocal, foundIds);\n\n  const viewportResults = useMemo(() => {\n    if (!query || !viewportIds?.length || !messagesById) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return viewportIds.map((id) => {\n      const message = messagesById[id];\n      if (!message) {\n        return undefined;\n      }\n\n      const global = getGlobal();\n\n      const originalSender = (isSavedMessages || chatId === REPLIES_USER_ID)\n        ? selectForwardedSender(global, message) : undefined;\n      const messageSender = selectSender(global, message);\n\n      const senderPeer = originalSender || messageSender;\n\n      if (!senderPeer) {\n        return undefined;\n      }\n\n      return {\n        message,\n        senderPeer,\n        onClick: () => focusMessage({ chatId, threadId, messageId: id }),\n      };\n    }).filter(Boolean);\n  }, [query, viewportIds, messagesById, isSavedMessages, chatId, threadId]);\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, true, (index) => {\n    const foundResult = viewportResults?.[index === -1 ? 0 : index];\n    if (foundResult) {\n      foundResult.onClick();\n    }\n  }, '.ListItem-button', true);\n\n  const renderSearchResult = ({\n    message, senderPeer, onClick,\n  }: {\n    message: ApiMessage;\n    senderPeer: ApiPeer;\n    onClick: NoneToVoidFunction;\n  }) => {\n    const text = renderMessageSummary(lang, message, undefined, query);\n\n    return (\n      <ListItem\n        key={message.id}\n        teactOrderKey={-message.date}\n        className=\"chat-item-clickable search-result-message m-0\"\n        onClick={onClick}\n      >\n        <Avatar\n          peer={senderPeer}\n        />\n        <div className=\"info\">\n          <div className=\"search-result-message-top\">\n            <FullNameTitle peer={senderPeer} withEmojiStatus />\n            <LastMessageMeta message={message} />\n          </div>\n          <div className=\"subtitle\" dir=\"auto\">\n            {text}\n          </div>\n        </div>\n      </ListItem>\n    );\n  };\n\n  const isOnTop = viewportIds?.[0] === foundIds?.[0];\n\n  return (\n    <InfiniteScroll\n      ref={containerRef}\n      className=\"RightSearch custom-scroll\"\n      items={viewportResults}\n      preloadBackwards={0}\n      onLoadMore={getMore}\n      onKeyDown={handleKeyDown}\n    >\n      {isOnTop && (\n        <p key=\"helper-text\" className=\"helper-text\" dir=\"auto\">\n          {!query ? (\n            lang('lng_dlg_search_for_messages')\n          ) : (totalCount === 0 || !viewportResults.length) ? (\n            lang('lng_search_no_results')\n          ) : totalCount === 1 ? (\n            '1 message found'\n          ) : (\n            `${(viewportResults.length && (totalCount || viewportResults.length))} messages found`\n          )}\n        </p>\n      )}\n      {viewportResults.map(renderSearchResult)}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const messagesById = selectChatMessages(global, chatId);\n    if (!messagesById) {\n      return {};\n    }\n\n    const { query, results } = selectCurrentTextSearch(global) || {};\n    const { totalCount, foundIds } = results || {};\n\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n\n    return {\n      messagesById,\n      query,\n      totalCount,\n      foundIds,\n      isSavedMessages,\n    };\n  },\n)(RightSearch));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_SEARCH } from '../../config';\nimport { selectIsCurrentUserPremium, selectShouldLoopStickers, selectStickerSet } from '../../global/selectors';\n\nimport useLang from '../../hooks/useLang';\n\nimport StickerButton from '../common/StickerButton';\nimport Button from '../ui/Button';\nimport Spinner from '../ui/Spinner';\n\ntype OwnProps = {\n  stickerSetId: string;\n  observeIntersection: ObserveFn;\n  isModalOpen?: boolean;\n};\n\ntype StateProps = {\n  set?: ApiStickerSet;\n  shouldPlay?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst PREMIUM_STICKERS_TO_DISPLAY = 3;\nconst STICKERS_TO_DISPLAY = 5;\n\nconst StickerSetResult: FC<OwnProps & StateProps> = ({\n  stickerSetId, observeIntersection, set, shouldPlay,\n  isModalOpen, isCurrentUserPremium,\n}) => {\n  const { loadStickers, toggleStickerSet, openStickerSet } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useLang();\n  const isAdded = set && !set.isArchived && Boolean(set.installedDate);\n  const areStickersLoaded = Boolean(set?.stickers);\n\n  const displayedStickers = useMemo(() => {\n    if (!set) {\n      return [];\n    }\n\n    const premiumStickerIds = (set.stickers?.filter(({ hasEffect }) => hasEffect) ?? [])\n      .slice(0, PREMIUM_STICKERS_TO_DISPLAY);\n    const coverStickerIds = (set.covers || []).map(({ id }) => id);\n    const otherStickers = set.stickers ? set.stickers.filter(({ id }) => !coverStickerIds.includes(id)) : [];\n\n    return [...premiumStickerIds, ...(set.covers || []), ...otherStickers].slice(0, STICKERS_TO_DISPLAY);\n  }, [set]);\n\n  useEffect(() => {\n    // Featured stickers are initialized with one sticker in collection (cover of SickerSet)\n    if (!areStickersLoaded && displayedStickers.length < STICKERS_TO_DISPLAY && set) {\n      loadStickers({\n        stickerSetInfo: {\n          shortName: set.shortName,\n        },\n      });\n    }\n  }, [areStickersLoaded, displayedStickers.length, loadStickers, set, stickerSetId]);\n\n  const handleAddClick = useCallback(() => {\n    toggleStickerSet({ stickerSetId });\n  }, [toggleStickerSet, stickerSetId]);\n\n  const handleStickerClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({ stickerSetInfo: sticker.stickerSetInfo });\n  }, [openStickerSet]);\n\n  if (!set) {\n    return undefined;\n  }\n\n  const canRenderStickers = displayedStickers.length > 0;\n\n  return (\n    <div key={set.id} className=\"sticker-set\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <div className=\"sticker-set-header\">\n        <div className=\"title-wrapper\">\n          <h3 className=\"title\" dir=\"auto\">{set.title}</h3>\n          <p className=\"count\" dir=\"auto\">{lang('Stickers', set.count, 'i')}</p>\n        </div>\n        <Button\n          className={isAdded ? 'is-added' : undefined}\n          color=\"primary\"\n          size=\"tiny\"\n          pill\n          fluid\n          onClick={handleAddClick}\n        >\n          {lang(isAdded ? 'Stickers.Installed' : 'Stickers.Install')}\n        </Button>\n      </div>\n      <div className=\"sticker-set-main shared-canvas-container\">\n        <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n        {!canRenderStickers && <Spinner />}\n        {canRenderStickers && displayedStickers.map((sticker) => (\n          <StickerButton\n            sticker={sticker}\n            size={STICKER_SIZE_SEARCH}\n            observeIntersection={observeIntersection}\n            noPlay={!shouldPlay || isModalOpen}\n            clickArg={sticker}\n            onClick={handleStickerClick}\n            noContextMenu\n            isCurrentUserPremium={isCurrentUserPremium}\n            sharedCanvasRef={sharedCanvasRef}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { stickerSetId }): StateProps => {\n    return {\n      set: selectStickerSet(global, stickerSetId),\n      shouldPlay: selectShouldLoopStickers(global),\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(StickerSetResult));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectCurrentStickerSearch, selectTabState } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\n\nimport Loading from '../ui/Loading';\nimport StickerSetResult from './StickerSetResult';\n\nimport './StickerSearch.scss';\n\ntype OwnProps = {\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  query?: string;\n  featuredIds?: string[];\n  resultIds?: string[];\n  isModalOpen: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst StickerSearch: FC<OwnProps & StateProps> = ({\n  isActive,\n  query,\n  featuredIds,\n  resultIds,\n  isModalOpen,\n  onClose,\n}) => {\n  const { loadFeaturedStickers } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE });\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadFeaturedStickers();\n    });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function renderContent() {\n    if (query === undefined) {\n      return undefined;\n    }\n\n    if (!query && featuredIds) {\n      return featuredIds.map((id) => (\n        <StickerSetResult\n          key={id}\n          stickerSetId={id}\n          observeIntersection={observeIntersection}\n          isModalOpen={isModalOpen}\n        />\n      ));\n    }\n\n    if (resultIds) {\n      if (!resultIds.length) {\n        return <p className=\"helper-text\" dir=\"auto\">Nothing found.</p>;\n      }\n\n      return resultIds.map((id) => (\n        <StickerSetResult\n          key={id}\n          stickerSetId={id}\n          observeIntersection={observeIntersection}\n          isModalOpen={isModalOpen}\n        />\n      ));\n    }\n\n    return <Loading />;\n  }\n\n  return (\n    <div ref={containerRef} className=\"StickerSearch custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n      {renderContent()}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const currentSearch = selectCurrentStickerSearch(global);\n    const { query, resultIds } = currentSearch || {};\n    const { featured } = global.stickers;\n\n    return {\n      query,\n      featuredIds: featured.setIds,\n      resultIds,\n      isModalOpen: Boolean(selectTabState(global).openedStickerSetShortName),\n    };\n  },\n)(StickerSearch));\n","import type React from '../../../lib/teact/teact';\nimport { useCallback, useEffect, useState } from '../../../lib/teact/teact';\n\nimport type { ApiChatBannedRights } from '../../../api/types';\n\nconst FLOATING_BUTTON_ANIMATION_TIMEOUT_MS = 250;\nconst MEDIA_PERMISSIONS: Array<keyof ApiChatBannedRights> = [\n  'embedLinks',\n  'sendPolls',\n  'sendPhotos',\n  'sendVideos',\n  'sendRoundvideos',\n  'sendVoices',\n  'sendAudios',\n  'sendDocs',\n  'sendStickers',\n  'sendGifs',\n];\nconst MESSAGE_PERMISSIONS: typeof MEDIA_PERMISSIONS = [...MEDIA_PERMISSIONS, 'sendPlain'];\n\nexport default function useManagePermissions(defaultPermissions: ApiChatBannedRights | undefined) {\n  const [permissions, setPermissions] = useState<ApiChatBannedRights>({});\n  const [havePermissionChanged, setHavePermissionChanged] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setPermissions(defaultPermissions || {});\n    setHavePermissionChanged(false);\n    setTimeout(() => {\n      setIsLoading(false);\n    }, FLOATING_BUTTON_ANIMATION_TIMEOUT_MS);\n  }, [defaultPermissions]);\n\n  const handlePermissionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name: targetName } = e.target;\n\n    const name = targetName as Exclude<keyof ApiChatBannedRights, 'untilDate'>;\n\n    function getUpdatedPermissionValue(value: true | undefined) {\n      return value ? undefined : true;\n    }\n\n    const oldPermissions = permissions;\n\n    let newPermissions: ApiChatBannedRights = {\n      ...oldPermissions,\n      [name]: getUpdatedPermissionValue(oldPermissions[name]),\n      ...(name === 'sendStickers' && {\n        sendGifs: getUpdatedPermissionValue(oldPermissions[name]),\n      }),\n    };\n\n    const checkMedia = () => {\n      const mediaPermissions = MEDIA_PERMISSIONS.map((key) => newPermissions[key]);\n      if (mediaPermissions.some((v) => !v)) {\n        newPermissions = {\n          ...newPermissions,\n          sendMedia: undefined,\n        };\n      } else if (mediaPermissions.every(Boolean)) {\n        newPermissions = {\n          ...newPermissions,\n          sendMedia: true,\n        };\n      }\n    };\n\n    if (name !== 'sendMedia') {\n      checkMedia();\n    } else {\n      newPermissions = {\n        ...newPermissions,\n        ...(MEDIA_PERMISSIONS.reduce((acc, key) => (\n          Object.assign(acc, { [key]: newPermissions.sendMedia })\n        ), {})),\n      };\n    }\n\n    // Embed links can't be enabled if plain text is banned\n    if (name !== 'embedLinks' && !newPermissions.embedLinks && newPermissions.sendPlain) {\n      newPermissions = {\n        ...newPermissions,\n        embedLinks: true,\n      };\n    }\n\n    if (name !== 'sendPlain' && !newPermissions.embedLinks && newPermissions.sendPlain) {\n      newPermissions = {\n        ...newPermissions,\n        sendPlain: undefined,\n      };\n    }\n\n    if (name !== 'sendMedia') {\n      checkMedia();\n    }\n\n    const sendMessages = MESSAGE_PERMISSIONS.every((key) => newPermissions[key]);\n    newPermissions = {\n      ...newPermissions,\n      sendMessages: sendMessages ? true : undefined,\n    };\n\n    setPermissions(newPermissions);\n\n    setHavePermissionChanged(!defaultPermissions || Object.keys(newPermissions).some((k) => {\n      const key = k as Exclude<keyof ApiChatBannedRights, 'untilDate'>;\n      return Boolean(defaultPermissions[key]) !== Boolean(newPermissions[key]);\n    }));\n  }, [defaultPermissions, permissions]);\n\n  return {\n    permissions,\n    isLoading,\n    havePermissionChanged,\n    handlePermissionChange,\n    setIsLoading,\n  };\n}\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiBotInfo, ApiUser } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport {\n  getChatAvatarHash, getMainUsername, getUserFirstOrLastName,\n} from '../../../global/helpers';\nimport {\n  selectBot,\n  selectTabState,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\n\nimport Icon from '../../common/Icon';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  userId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  userId?: string;\n  user?: ApiUser;\n  chatBot?: ApiBotInfo;\n  currentBio?: string;\n  progress?: ManagementProgress;\n  isMuted?: boolean;\n  maxBioLength: number;\n};\n\nconst ERROR_NAME_MISSING = 'Please provide name';\n\nconst ManageBot: FC<OwnProps & StateProps> = ({\n  userId,\n  user,\n  progress,\n  onClose,\n  currentBio,\n  isActive,\n  maxBioLength,\n}) => {\n  const {\n    setBotInfo,\n    uploadProfilePhoto,\n    uploadContactProfilePhoto,\n    startBotFatherConversation,\n  } = getActions();\n\n  const [isFieldTouched, markFieldTouched, unmarkProfileTouched] = useFlag(false);\n  const [isAvatarTouched, markAvatarTouched, unmarkAvatarTouched] = useFlag(false);\n  const [error, setError] = useState<string | undefined>();\n  const lang = useLang();\n\n  const username = useMemo(() => (user ? getMainUsername(user) : undefined), [user]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const currentName = user ? getUserFirstOrLastName(user) : '';\n\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [name, setName] = useState(currentName || '');\n  const [bio, setBio] = useState(currentBio || '');\n\n  const currentAvatarHash = user && getChatAvatarHash(user);\n  const currentAvatarBlobUrl = useMedia(currentAvatarHash, false, ApiMediaFormat.BlobUrl);\n\n  useEffect(() => {\n    unmarkProfileTouched();\n    unmarkAvatarTouched();\n  }, [userId]);\n\n  useEffect(() => {\n    setName(currentName || '');\n    setBio(currentBio || '');\n  }, [currentName, currentBio, user]);\n\n  useEffect(() => {\n    setPhoto(undefined);\n  }, [currentAvatarBlobUrl]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      unmarkProfileTouched();\n      unmarkAvatarTouched();\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handleNameChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setName(e.target.value);\n    markFieldTouched();\n\n    if (error === ERROR_NAME_MISSING) {\n      setError(undefined);\n    }\n  });\n\n  const handleBioChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setBio(e.target.value);\n    markFieldTouched();\n  });\n\n  const handlePhotoChange = useLastCallback((newPhoto: File) => {\n    setPhoto(newPhoto);\n    markAvatarTouched();\n  });\n\n  const handleProfileSave = useLastCallback(() => {\n    const trimmedName = name.trim();\n    const trimmedBio = bio.trim();\n\n    if (!trimmedName.length) {\n      setError(ERROR_NAME_MISSING);\n      return;\n    }\n\n    setBotInfo({\n      ...(isFieldTouched && {\n        bot: user,\n        name: trimmedName,\n        description: trimmedBio,\n      }),\n    });\n\n    if (photo) {\n      uploadProfilePhoto({\n        file: photo,\n        ...(isAvatarTouched && { bot: user }),\n      });\n    }\n  });\n\n  const handleChangeEditIntro = useLastCallback(() => {\n    startBotFatherConversation({ param: `${username}-intro` });\n  });\n\n  const handleChangeEditCommands = useLastCallback(() => {\n    startBotFatherConversation({ param: `${username}-commands` });\n  });\n\n  const handleChangeSettings = useLastCallback(() => {\n    startBotFatherConversation({ param: `${username}` });\n  });\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const isSuggestRef = useRef(false);\n\n  const handleSelectAvatar = useLastCallback((file: File) => {\n    markAvatarTouched();\n    uploadContactProfilePhoto({ userId, file, isSuggest: isSuggestRef.current });\n  });\n\n  if (!user) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handlePhotoChange}\n            title={lang('ChatSetPhotoOrVideo')}\n            disabled={isLoading}\n          />\n          <InputText\n            id=\"user-name\"\n            label={lang('PaymentCheckoutName')}\n            onChange={handleNameChange}\n            value={name}\n            error={error === ERROR_NAME_MISSING ? error : undefined}\n            teactExperimentControlled\n          />\n          <TextArea\n            value={bio}\n            onChange={handleBioChange}\n            label={lang('DescriptionPlaceholder')}\n            disabled={isLoading}\n            maxLength={maxBioLength}\n            maxLengthIndicator={maxBioLength ? (maxBioLength - bio.length).toString() : undefined}\n          />\n        </div>\n        <div className=\"section\">\n          <div className=\"dialog-buttons\">\n            <ListItem icon=\"bot-commands-filled\" ripple onClick={handleChangeEditIntro}>\n              <span>{lang('BotEditIntro')}</span>\n            </ListItem>\n            <ListItem icon=\"bot-command\" ripple onClick={handleChangeEditCommands}>\n              <span>{lang('BotEditCommands')}</span>\n            </ListItem>\n            <ListItem icon=\"bots\" ripple onClick={handleChangeSettings}>\n              <span>{lang('BotChangeSettings')}</span>\n            </ListItem>\n            <div className=\"section-info section-info_push\">\n              {renderText(lang('BotManageInfo'), ['links'])}\n            </div>\n          </div>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isFieldTouched || isAvatarTouched}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n      <SelectAvatar\n        onChange={handleSelectAvatar}\n        inputRef={inputRef}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectBot(global, userId);\n    const userFullInfo = selectUserFullInfo(global, userId);\n    const { progress } = selectTabState(global).management;\n    const maxBioLength = selectCurrentLimit(global, 'aboutLength');\n\n    return {\n      userId,\n      user,\n      progress,\n      currentBio: userFullInfo?.bio,\n      maxBioLength,\n    };\n  },\n)(ManageBot));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatFullInfo, ApiExportedInvite,\n} from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress, ManagementScreens } from '../../../types';\n\nimport { getChatAvatarHash, getHasAdminRight, isChatPublic } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { formatInteger } from '../../../util/textFormat';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useMedia from '../../../hooks/useMedia';\n\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  progress?: ManagementProgress;\n  isSignaturesShown: boolean;\n  canChangeInfo?: boolean;\n  canInvite?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst CHANNEL_TITLE_EMPTY = 'Channel title can\\'t be empty';\nconst CHANNEL_MAX_DESCRIPTION = 255;\n\nconst ManageChannel: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  chatFullInfo,\n  progress,\n  isSignaturesShown,\n  canChangeInfo,\n  canInvite,\n  exportedInvites,\n  isActive,\n  availableReactions,\n  onScreenSelect,\n  onClose,\n}) => {\n  const {\n    updateChat,\n    toggleSignatures,\n    closeManagement,\n    leaveChannel,\n    deleteChannel,\n    openChat,\n    loadExportedChatInvites,\n    loadChatJoinRequests,\n  } = getActions();\n\n  const currentTitle = chat?.title || '';\n  const currentAbout = chatFullInfo?.about || '';\n  const hasLinkedChat = Boolean(chatFullInfo?.linkedChatId);\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [title, setTitle] = useState(currentTitle);\n  const [about, setAbout] = useState(currentAbout);\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n  const imageHash = chat && getChatAvatarHash(chat);\n  const currentAvatarBlobUrl = useMedia(imageHash, false, ApiMediaFormat.BlobUrl);\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    loadExportedChatInvites({ chatId });\n    loadExportedChatInvites({ chatId, isRevoked: true });\n    loadChatJoinRequests({ chatId });\n  }, [chatId]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const adminsCount = useMemo(() => {\n    return Object.keys(chatFullInfo?.adminMembersById || {}).length;\n  }, [chatFullInfo?.adminMembersById]);\n  const removedUsersCount = chatFullInfo?.kickedMembers?.length || 0;\n\n  const handleClickEditType = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatPrivacyType);\n  }, [onScreenSelect]);\n\n  const handleClickDiscussion = useCallback(() => {\n    onScreenSelect(ManagementScreens.Discussion);\n  }, [onScreenSelect]);\n\n  const handleClickReactions = useCallback(() => {\n    onScreenSelect(ManagementScreens.Reactions);\n  }, [onScreenSelect]);\n\n  const handleClickAdministrators = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatAdministrators);\n  }, [onScreenSelect]);\n\n  const handleClickInvites = useCallback(() => {\n    onScreenSelect(ManagementScreens.Invites);\n  }, [onScreenSelect]);\n\n  const handleClickRequests = useCallback(() => {\n    onScreenSelect(ManagementScreens.JoinRequests);\n  }, [onScreenSelect]);\n\n  const handleSetPhoto = useCallback((file: File) => {\n    setPhoto(file);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleTitleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleAboutChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setAbout(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleUpdateChannel = useCallback(() => {\n    const trimmedTitle = title.trim();\n    const trimmedAbout = about.trim();\n\n    if (!trimmedTitle.length) {\n      setError(CHANNEL_TITLE_EMPTY);\n      return;\n    }\n\n    updateChat({\n      chatId,\n      title: trimmedTitle,\n      about: trimmedAbout,\n      photo,\n    });\n  }, [about, chatId, photo, title, updateChat]);\n\n  const handleToggleSignatures = useCallback(() => {\n    toggleSignatures({ chatId, isEnabled: !isSignaturesShown });\n  }, [chatId, isSignaturesShown, toggleSignatures]);\n\n  const handleClickSubscribers = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChannelSubscribers);\n  }, [onScreenSelect]);\n\n  const handleRemovedUsersClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChannelRemovedUsers);\n  }, [onScreenSelect]);\n\n  const handleDeleteChannel = useCallback(() => {\n    if (chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    } else {\n      leaveChannel({ chatId: chat.id });\n    }\n\n    closeDeleteDialog();\n    closeManagement();\n    openChat({ id: undefined });\n  }, [chat.isCreator, chat.id, closeDeleteDialog, closeManagement, leaveChannel, deleteChannel, openChat]);\n\n  const chatReactionsDescription = useMemo(() => {\n    if (!chatFullInfo?.enabledReactions) {\n      return lang('ReactionsOff');\n    }\n\n    if (chatFullInfo.enabledReactions.type === 'all') {\n      return lang('ReactionsAll');\n    }\n\n    const enabledLength = chatFullInfo.enabledReactions.allowed.length;\n    const totalLength = availableReactions?.filter((reaction) => !reaction.isInactive).length || 0;\n\n    return totalLength ? `${enabledLength} / ${totalLength}` : `${enabledLength}`;\n  }, [availableReactions, chatFullInfo?.enabledReactions, lang]);\n  const isChannelPublic = useMemo(() => isChatPublic(chat), [chat]);\n\n  if (chat.isRestricted || chat.isForbidden) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handleSetPhoto}\n            disabled={!canChangeInfo}\n          />\n          <InputText\n            id=\"channel-title\"\n            label={lang('EnterChannelName')}\n            onChange={handleTitleChange}\n            value={title}\n            error={error === CHANNEL_TITLE_EMPTY ? error : undefined}\n            disabled={!canChangeInfo}\n          />\n          <TextArea\n            id=\"channel-about\"\n            className=\"mb-2\"\n            label={lang('DescriptionPlaceholder')}\n            onChange={handleAboutChange}\n            value={about}\n            maxLength={CHANNEL_MAX_DESCRIPTION}\n            maxLengthIndicator={(CHANNEL_MAX_DESCRIPTION - about.length).toString()}\n            disabled={!canChangeInfo}\n            noReplaceNewlines\n          />\n          {chat.isCreator && (\n            <ListItem icon=\"lock\" multiline onClick={handleClickEditType}>\n              <span className=\"title\">{lang('ChannelType')}</span>\n              <span className=\"subtitle\">{isChannelPublic ? lang('TypePublic') : lang('TypePrivate')}</span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"message\"\n            multiline\n            onClick={handleClickDiscussion}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Discussion')}</span>\n            <span className=\"subtitle\">{hasLinkedChat ? lang('DiscussionUnlink') : lang('Add')}</span>\n          </ListItem>\n          {canInvite && (\n            <ListItem\n              icon=\"link\"\n              onClick={handleClickInvites}\n              multiline\n              disabled={!exportedInvites}\n            >\n              <span className=\"title\">{lang('GroupInfo.InviteLinks')}</span>\n              <span className=\"subtitle\">\n                {exportedInvites ? formatInteger(exportedInvites.length) : lang('Loading')}\n              </span>\n            </ListItem>\n          )}\n          {Boolean(chat.joinRequests?.length) && (\n            <ListItem\n              icon=\"add-user-filled\"\n              onClick={handleClickRequests}\n              multiline\n            >\n              <span className=\"title\">{lang('SubscribeRequests')}</span>\n              <span className=\"subtitle\">\n                {formatInteger(chat.joinRequests!.length)}\n              </span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"heart-outline\"\n            multiline\n            onClick={handleClickReactions}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Reactions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {chatReactionsDescription}\n            </span>\n          </ListItem>\n          <div className=\"ListItem narrow\">\n            <Checkbox\n              checked={isSignaturesShown}\n              label={lang('ChannelSignMessages')}\n              onChange={handleToggleSignatures}\n            />\n          </div>\n        </div>\n        <div className=\"section\">\n          <ListItem\n            icon=\"admin\"\n            multiline\n            onClick={handleClickAdministrators}\n          >\n            <span className=\"title\">{lang('ChannelAdministrators')}</span>\n            <span className=\"subtitle\">{adminsCount}</span>\n          </ListItem>\n          <ListItem\n            icon=\"group\"\n            multiline\n            onClick={handleClickSubscribers}\n          >\n            <span className=\"title\" dir=\"auto\">{lang('ChannelSubscribers')}</span>\n            <span className=\"subtitle\" dir=\"auto\">{lang('Subscribers', chat.membersCount ?? 0, 'i')}</span>\n          </ListItem>\n          <ListItem\n            icon=\"delete-user\"\n            multiline\n            narrow\n            onClick={handleRemovedUsersClick}\n          >\n            <span className=\"title\">{lang('ChannelBlockedUsers')}</span>\n            <span className=\"subtitle\">{removedUsersCount}</span>\n          </ListItem>\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {chat.isCreator ? lang('ChannelDelete') : lang('LeaveChannel')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleUpdateChannel}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        text={chat.isCreator ? lang('ChannelDeleteAlert') : lang('ChannelLeaveAlert')}\n        confirmLabel={chat.isCreator ? lang('ChannelDelete') : lang('LeaveChannel')}\n        confirmHandler={handleDeleteChannel}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { management } = selectTabState(global);\n    const { progress } = management;\n    const isSignaturesShown = Boolean(chat?.isSignaturesShown);\n    const { invites } = management.byChatId[chatId] || {};\n\n    return {\n      chat,\n      chatFullInfo: selectChatFullInfo(global, chatId),\n      progress,\n      isSignaturesShown,\n      canChangeInfo: getHasAdminRight(chat, 'changeInfo'),\n      canInvite: getHasAdminRight(chat, 'inviteUsers'),\n      exportedInvites: invites,\n      availableReactions: global.availableReactions,\n    };\n  },\n)(ManageChannel));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { getUserFullName, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  currentUserId?: string;\n  isChannel: boolean;\n  adminMembersById?: Record<string, ApiChatMember>;\n};\n\nconst ManageChatAdministrators: FC<OwnProps & StateProps> = ({\n  chat,\n  isChannel,\n  currentUserId,\n  adminMembersById,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n}) => {\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const canAddNewAdmins = Boolean(chat.isCreator || chat.adminRights?.addAdmins);\n\n  const adminMembers = useMemo(() => {\n    if (!adminMembersById) {\n      return [];\n    }\n\n    return Object.values(adminMembersById).sort((a, b) => {\n      if (a.isOwner) {\n        return -1;\n      } else if (b.isOwner) {\n        return 1;\n      }\n\n      return 0;\n    });\n  }, [adminMembersById]);\n\n  const handleAdminMemberClick = useCallback((member: ApiChatMember) => {\n    onChatMemberSelect(member.userId, member.promotedByUserId === currentUserId);\n    onScreenSelect(ManagementScreens.ChatAdminRights);\n  }, [currentUserId, onChatMemberSelect, onScreenSelect]);\n\n  const handleAddAdminClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupAddAdmins);\n  }, [onScreenSelect]);\n\n  const getMemberStatus = useCallback((member: ApiChatMember) => {\n    if (member.isOwner) {\n      return lang('ChannelCreator');\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const promotedByUser = member.promotedByUserId ? usersById[member.promotedByUserId] : undefined;\n\n    if (promotedByUser) {\n      return lang('EditAdminPromotedBy', getUserFullName(promotedByUser));\n    }\n\n    return lang('ChannelAdmin');\n  }, [lang]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <ListItem\n            icon=\"recent\"\n            multiline\n            disabled\n          >\n            <span className=\"title\">{lang('EventLog')}</span>\n            <span className=\"subtitle\">{lang(isChannel ? 'EventLogInfoDetailChannel' : 'EventLogInfoDetail')}</span>\n          </ListItem>\n        </div>\n\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <p className=\"text-muted\" dir=\"auto\">\n            {isChannel\n              ? 'You can add administrators to help you manage your channel.'\n              : 'You can add administrators to help you manage your group.'}\n          </p>\n\n          {adminMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleAdminMemberClick(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getMemberStatus(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n\n          <FloatingActionButton\n            isShown={canAddNewAdmins}\n            onClick={handleAddAdminClick}\n            ariaLabel={lang('Channel.Management.AddModerator')}\n          >\n            <i className=\"icon icon-add-user-filled\" />\n          </FloatingActionButton>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n\n    return {\n      chat,\n      currentUserId: global.currentUserId,\n      isChannel: isChatChannel(chat),\n      adminMembersById: selectChatFullInfo(global, chatId)?.adminMembersById,\n    };\n  },\n)(ManageChatAdministrators));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport { PURCHASE_USERNAME, TME_LINK_PREFIX, USERNAME_PURCHASE_ERROR } from '../../../config';\nimport { isChatChannel, isChatPublic } from '../../../global/helpers';\nimport {\n  selectChat, selectChatFullInfo,\n  selectManagement, selectTabState,\n} from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport ManageUsernames from '../../common/ManageUsernames';\nimport SafeLink from '../../common/SafeLink';\nimport UsernameInput from '../../common/UsernameInput';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport RadioGroup from '../../ui/RadioGroup';\nimport Spinner from '../../ui/Spinner';\n\ntype PrivacyType = 'private' | 'public';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  isChannel: boolean;\n  progress?: ManagementProgress;\n  isUsernameAvailable?: boolean;\n  checkedUsername?: string;\n  error?: string;\n  isProtected?: boolean;\n  maxPublicLinks: number;\n  privateInviteLink?: string;\n};\n\nconst ManageChatPrivacyType: FC<OwnProps & StateProps> = ({\n  chat,\n  isActive,\n  isChannel,\n  progress,\n  isUsernameAvailable,\n  checkedUsername,\n  error,\n  isProtected,\n  maxPublicLinks,\n  privateInviteLink,\n  onClose,\n}) => {\n  const {\n    updatePublicLink,\n    updatePrivateLink,\n    toggleIsProtected,\n    openLimitReachedModal,\n    resetManagementError,\n  } = getActions();\n\n  const firstEditableUsername = useMemo(() => chat.usernames?.find(({ isEditable }) => isEditable), [chat.usernames]);\n  const currentUsername = firstEditableUsername?.username || '';\n  const isPublic = useMemo(() => isChatPublic(chat), [chat]);\n\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [privacyType, setPrivacyType] = useState<PrivacyType>(isPublic ? 'public' : 'private');\n  const [editableUsername, setEditableUsername] = useState<string>();\n  const [isRevokeConfirmDialogOpen, openRevokeConfirmDialog, closeRevokeConfirmDialog] = useFlag();\n  const [isUsernameLostDialogOpen, openUsernameLostDialog, closeUsernameLostDialog] = useFlag();\n\n  const previousIsUsernameAvailable = usePrevious(isUsernameAvailable);\n  const renderingIsUsernameAvailable = isUsernameAvailable ?? previousIsUsernameAvailable;\n\n  const canUpdate = isProfileFieldsTouched && Boolean(\n    (privacyType === 'public'\n      && (editableUsername || (currentUsername && editableUsername === ''))\n      && renderingIsUsernameAvailable)\n    || (privacyType === 'private' && isPublic),\n  );\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    setIsProfileFieldsTouched(false);\n  }, [currentUsername]);\n\n  useEffect(() => {\n    if (privacyType && !privateInviteLink) {\n      updatePrivateLink();\n    }\n  }, [privacyType, privateInviteLink, updatePrivateLink]);\n\n  const handleUsernameChange = useCallback((value: string) => {\n    setEditableUsername(value);\n    setIsProfileFieldsTouched(true);\n\n    if (error) {\n      resetManagementError({\n        chatId: chat.id,\n      });\n    }\n  }, [chat.id, error]);\n\n  const handleOptionChange = useCallback((value: string, e: ChangeEvent<HTMLInputElement>) => {\n    const myChats = Object.values(getGlobal().chats.byId)\n      .filter(({ isCreator, usernames }) => isCreator && usernames?.some((c) => c.isActive));\n\n    if (myChats.length >= maxPublicLinks && value === 'public') {\n      openLimitReachedModal({ limit: 'channelsPublic' });\n      const radioGroup = e.currentTarget.closest('.radio-group') as HTMLDivElement;\n      // Patch for Teact bug with controlled inputs\n      // TODO Teact support added, this can now be removed\n      (radioGroup.querySelector('[value=public]') as HTMLInputElement).checked = false;\n      (radioGroup.querySelector('[value=private]') as HTMLInputElement).checked = true;\n      return;\n    }\n    setPrivacyType(value as PrivacyType);\n    setIsProfileFieldsTouched(true);\n  }, [maxPublicLinks, openLimitReachedModal]);\n\n  const handleForwardingOptionChange = useCallback((value: string) => {\n    toggleIsProtected({\n      chatId: chat.id,\n      isProtected: value === 'protected',\n    });\n  }, [chat.id, toggleIsProtected]);\n\n  const handleSave = useCallback(() => {\n    if (isPublic && privacyType === 'private') {\n      openUsernameLostDialog();\n    } else {\n      updatePublicLink({ username: privacyType === 'public' ? (editableUsername || '') : '' });\n    }\n  }, [isPublic, openUsernameLostDialog, privacyType, updatePublicLink, editableUsername]);\n\n  const handleMakeChannelPrivateConfirm = useCallback(() => {\n    updatePublicLink({ username: '', shouldDisableUsernames: true });\n    closeUsernameLostDialog();\n  }, [closeUsernameLostDialog, updatePublicLink]);\n\n  const handleRevokePrivateLink = useCallback(() => {\n    closeRevokeConfirmDialog();\n    updatePrivateLink();\n  }, [closeRevokeConfirmDialog, updatePrivateLink]);\n\n  const lang = useLang();\n  const langPrefix1 = isChannel ? 'Channel' : 'Mega';\n  const langPrefix2 = isChannel ? 'Channel' : 'Group';\n\n  const options = [\n    { value: 'private', label: lang(`${langPrefix1}Private`), subLabel: lang(`${langPrefix1}PrivateInfo`) },\n    { value: 'public', label: lang(`${langPrefix1}Public`), subLabel: lang(`${langPrefix1}PublicInfo`) },\n  ];\n\n  const forwardingOptions = [{\n    value: 'allowed',\n    label: lang('ChannelVisibility.Forwarding.Enabled'),\n  }, {\n    value: 'protected',\n    label: lang('ChannelVisibility.Forwarding.Disabled'),\n  }];\n\n  const isLoading = progress === ManagementProgress.InProgress;\n  const shouldRenderUsernamesManage = privacyType === 'public' && chat.usernames && chat.usernames.length > 0;\n\n  function renderPurchaseLink() {\n    const purchaseInfoLink = `${TME_LINK_PREFIX}${PURCHASE_USERNAME}`;\n\n    return (\n      <p className=\"section-info\" dir=\"auto\">\n        {(lang('lng_username_purchase_available') as string)\n          .replace('{link}', '%PURCHASE_LINK%')\n          .split('%')\n          .map((s) => {\n            return (s === 'PURCHASE_LINK' ? <SafeLink url={purchaseInfoLink} text={`@${PURCHASE_USERNAME}`} /> : s);\n          })}\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <h3 className=\"section-heading\">{lang(`${langPrefix2}Type`)}</h3>\n          <RadioGroup\n            selected={privacyType}\n            name=\"channel-type\"\n            options={options}\n            onChange={handleOptionChange}\n          />\n        </div>\n        {privacyType === 'private' ? (\n          <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {privateInviteLink ? (\n              <>\n                <SafeLink url={privateInviteLink} className=\"group-link\" text={privateInviteLink} />\n                <p className=\"section-info\" dir={lang.isRtl ? 'rtl' : undefined}>\n                  {lang(`${langPrefix1}PrivateLinkHelp`)}\n                </p>\n\n                <ListItem icon=\"delete\" ripple destructive onClick={openRevokeConfirmDialog}>\n                  {lang('RevokeLink')}\n                </ListItem>\n                <ConfirmDialog\n                  isOpen={isRevokeConfirmDialogOpen}\n                  onClose={closeRevokeConfirmDialog}\n                  text={lang('RevokeAlert')}\n                  confirmLabel={lang('RevokeButton')}\n                  confirmHandler={handleRevokePrivateLink}\n                  confirmIsDestructive\n                />\n              </>\n            ) : (\n              <Loading />\n            )}\n          </div>\n        ) : (\n          <div className=\"section no-border\">\n            <UsernameInput\n              asLink\n              currentUsername={currentUsername}\n              isLoading={isLoading}\n              isUsernameAvailable={isUsernameAvailable}\n              checkedUsername={checkedUsername}\n              onChange={handleUsernameChange}\n            />\n            {error === USERNAME_PURCHASE_ERROR && renderPurchaseLink()}\n            <p className=\"section-info\" dir=\"auto\">\n              {lang(`${langPrefix2}.Username.CreatePublicLinkHelp`)}\n            </p>\n          </div>\n        )}\n        {shouldRenderUsernamesManage && (\n          <ManageUsernames\n            chatId={chat.id}\n            usernames={chat.usernames!}\n            onEditUsername={handleUsernameChange}\n          />\n        )}\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <h3 className=\"section-heading\">\n            {lang(isChannel ? 'ChannelVisibility.Forwarding.ChannelTitle' : 'ChannelVisibility.Forwarding.GroupTitle')}\n          </h3>\n          <RadioGroup\n            selected={isProtected ? 'protected' : 'allowed'}\n            name=\"forwarding-type\"\n            options={forwardingOptions}\n            onChange={handleForwardingOptionChange}\n          />\n          <p className=\"section-info\">\n            {isChannel\n              ? lang('ChannelVisibility.Forwarding.ChannelInfo')\n              : lang('ChannelVisibility.Forwarding.GroupInfo')}\n          </p>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={canUpdate}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n        onClick={handleSave}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isUsernameLostDialogOpen}\n        onClose={closeUsernameLostDialog}\n        text={lang('ChannelVisibility.Confirm.MakePrivate.Channel', currentUsername)}\n        confirmHandler={handleMakeChannelPrivateConfirm}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { isUsernameAvailable, checkedUsername, error } = selectManagement(global, chatId)!;\n\n    return {\n      chat,\n      isChannel: isChatChannel(chat),\n      progress: selectTabState(global).management.progress,\n      error,\n      isUsernameAvailable,\n      checkedUsername,\n      isProtected: chat?.isProtected,\n      maxPublicLinks: selectCurrentLimit(global, 'channelsPublic'),\n      privateInviteLink: selectChatFullInfo(global, chatId)?.inviteLink,\n    };\n  },\n)(ManageChatPrivacyType));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../../api/types';\n\nimport { filterUsersByName } from '../../../global/helpers';\nimport { selectChatFullInfo } from '../../../global/selectors';\n\nimport useLang from '../../../hooks/useLang';\n\nimport ChatOrUserPicker from '../../common/ChatOrUserPicker';\n\nexport type OwnProps = {\n  chat: ApiChat;\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  chatMembers?: ApiChatMember[];\n};\n\nconst RemoveGroupUserModal: FC<OwnProps & StateProps> = ({\n  chat,\n  currentUserId,\n  chatMembers,\n  isOpen,\n  onClose,\n}) => {\n  const {\n    loadMoreMembers,\n    deleteChatMember,\n  } = getActions();\n\n  const lang = useLang();\n  const [search, setSearch] = useState('');\n\n  const usersId = useMemo(() => {\n    const availableMemberIds = (chatMembers || [])\n      .reduce((acc: string[], member) => {\n        if (!member.isAdmin && !member.isOwner && member.userId !== currentUserId) {\n          acc.push(member.userId);\n        }\n        return acc;\n      }, []);\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n\n    return filterUsersByName(availableMemberIds, usersById, search);\n  }, [chatMembers, currentUserId, search]);\n\n  const handleRemoveUser = useCallback((userId: string) => {\n    deleteChatMember({ chatId: chat.id, userId });\n    onClose();\n  }, [chat.id, deleteChatMember, onClose]);\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      chatOrUserIds={usersId}\n      searchPlaceholder={lang('ChannelBlockUser')}\n      search={search}\n      onSearchChange={setSearch}\n      loadMore={loadMoreMembers}\n      onSelectChatOrUser={handleRemoveUser}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat }): StateProps => {\n    const { currentUserId } = global;\n\n    return {\n      currentUserId,\n      chatMembers: selectChatFullInfo(global, chat.id)?.members,\n    };\n  },\n)(RemoveGroupUserModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember, ApiUser } from '../../../api/types';\n\nimport { getHasAdminRight, getUserFullName, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\nimport RemoveGroupUserModal from './RemoveGroupUserModal';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  usersById: Record<string, ApiUser>;\n  removedMembers: ApiChatMember[];\n  canDeleteMembers?: boolean;\n  isChannel?: boolean;\n};\n\nconst ManageChatRemovedUsers: FC<OwnProps & StateProps> = ({\n  chat,\n  usersById,\n  canDeleteMembers,\n  removedMembers,\n  isChannel,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatMemberBannedRights } = getActions();\n\n  const lang = useLang();\n  const [isRemoveUserModalOpen, openRemoveUserModal, closeRemoveUserModal] = useFlag();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const getRemovedBy = useCallback((member: ApiChatMember) => {\n    if (!member.kickedByUserId) {\n      return undefined;\n    }\n\n    const kickedByUser = usersById[member.kickedByUserId];\n    if (!kickedByUser) {\n      return undefined;\n    }\n\n    return lang('UserRemovedBy', getUserFullName(kickedByUser));\n  }, [lang, usersById]);\n\n  const getContextActions = useCallback((member: ApiChatMember): MenuItemContextAction[] | undefined => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return [{\n      title: lang('Unblock'),\n      icon: 'delete',\n      destructive: true,\n      handler: () => updateChatMemberBannedRights({\n        chatId: chat.id,\n        userId: member.userId,\n        bannedRights: {},\n      }),\n    }];\n  }, [lang, chat, updateChatMemberBannedRights]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <p className=\"text-muted\">{lang(isChannel ? 'NoBlockedChannel2' : 'NoBlockedGroup2')}</p>\n\n          {removedMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable\"\n              ripple\n              contextActions={getContextActions(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getRemovedBy(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n          {canDeleteMembers && (\n            <FloatingActionButton\n              isShown\n              onClick={openRemoveUserModal}\n              ariaLabel={lang('Channel.EditAdmin.Permission.BanUsers')}\n            >\n              <i className=\"icon icon-add-user-filled\" />\n            </FloatingActionButton>\n          )}\n          {chat && canDeleteMembers && (\n            <RemoveGroupUserModal\n              chat={chat}\n              isOpen={isRemoveUserModalOpen}\n              onClose={closeRemoveUserModal}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { byId: usersById } = global.users;\n    const canDeleteMembers = chat && (getHasAdminRight(chat, 'banUsers') || chat.isCreator);\n\n    return {\n      chat,\n      usersById,\n      canDeleteMembers,\n      removedMembers: selectChatFullInfo(global, chatId)?.kickedMembers || MEMO_EMPTY_ARRAY,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageChatRemovedUsers));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { STICKER_SIZE_DISCUSSION_GROUPS } from '../../../config';\nimport { isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport Avatar from '../../common/Avatar';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport NothingFound from '../../common/NothingFound';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  chatsByIds: Record<string, ApiChat>;\n  linkedChat?: ApiChat;\n  forDiscussionIds?: string[];\n  isChannel?: boolean;\n};\n\nconst ManageDiscussion: FC<OwnProps & StateProps> = ({\n  chat,\n  onClose,\n  isActive,\n  chatId,\n  chatsByIds,\n  linkedChat,\n  forDiscussionIds,\n  isChannel,\n  onScreenSelect,\n}) => {\n  const {\n    loadGroupsForDiscussion,\n    linkDiscussionGroup,\n    unlinkDiscussionGroup,\n    toggleJoinRequest,\n    toggleJoinToSend,\n  } = getActions();\n\n  const [linkedGroupId, setLinkedGroupId] = useState<string>();\n  const [isConfirmUnlinkGroupDialogOpen, openConfirmUnlinkGroupDialog, closeConfirmUnlinkGroupDialog] = useFlag();\n  const [isConfirmLinkGroupDialogOpen, openConfirmLinkGroupDialog, closeConfirmLinkGroupDialog] = useFlag();\n  const [isJoinToSend, setIsJoinToSend] = useState(Boolean(linkedChat?.isJoinToSend));\n  const [isJoinRequest, setIsJoinRequest] = useState(Boolean(linkedChat?.isJoinRequest));\n  const lang = useLang();\n  const linkedChatId = linkedChat?.id;\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    loadGroupsForDiscussion();\n  }, [loadGroupsForDiscussion]);\n\n  useEffect(() => {\n    if (isActive) {\n      setIsJoinToSend(linkedChat?.isJoinToSend || false);\n      setIsJoinRequest(linkedChat?.isJoinRequest || false);\n    }\n  }, [linkedChat, isActive]);\n\n  const handleUnlinkGroupSessions = useCallback(() => {\n    closeConfirmUnlinkGroupDialog();\n    unlinkDiscussionGroup({ channelId: isChannel ? chatId : linkedChatId! });\n    if (!isChannel) {\n      onScreenSelect(ManagementScreens.Initial);\n    }\n  }, [closeConfirmUnlinkGroupDialog, unlinkDiscussionGroup, isChannel, chatId, linkedChatId, onScreenSelect]);\n\n  const handleLinkGroupSessions = useCallback(() => {\n    closeConfirmLinkGroupDialog();\n    linkDiscussionGroup({ channelId: chatId, chatId: linkedGroupId! });\n  }, [closeConfirmLinkGroupDialog, linkDiscussionGroup, chatId, linkedGroupId]);\n\n  const handleJoinToSendCheck = useCallback((checked: boolean) => {\n    setIsJoinToSend(checked);\n    toggleJoinToSend({ chatId: linkedChatId!, isEnabled: checked });\n    if (!checked) {\n      setIsJoinRequest(false);\n    }\n  }, [linkedChatId, toggleJoinToSend]);\n\n  const handleJoinRequestCheck = useCallback((checked: boolean) => {\n    setIsJoinRequest(checked);\n    toggleJoinRequest({ chatId: linkedChatId!, isEnabled: checked });\n  }, [linkedChatId, toggleJoinRequest]);\n\n  const onDiscussionClick = (groupId: string) => {\n    setLinkedGroupId(groupId);\n    openConfirmLinkGroupDialog();\n  };\n\n  function renderUnlinkGroupHeader() {\n    return (\n      <div className=\"modal-header\">\n        <Avatar\n          size=\"tiny\"\n          peer={linkedChat}\n        />\n        <div className=\"modal-title\">\n          {lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n        </div>\n      </div>\n    );\n  }\n\n  function renderLinkGroupHeader() {\n    if (!linkedGroupId) return undefined;\n    const linkedGroup = chatsByIds[linkedGroupId];\n    if (!linkedGroup) return undefined;\n\n    return (\n      <div className=\"modal-header\">\n        <Avatar\n          size=\"tiny\"\n          peer={linkedGroup}\n        />\n        <div className=\"modal-title\">\n          {lang('Channel.DiscussionGroup.LinkGroup')}\n        </div>\n      </div>\n    );\n  }\n\n  function renderLinkGroupConfirmText() {\n    if (!linkedGroupId) return undefined;\n    const linkedGroup = chatsByIds[linkedGroupId];\n    if (!linkedGroup) return undefined;\n\n    if (linkedGroup.hasPrivateLink) {\n      return renderText(\n        `Do you want to make **${linkedGroup.title}** the discussion board for **${chat!.title}**?`,\n        ['br', 'simple_markdown'],\n      );\n    }\n\n    return renderText(\n      // eslint-disable-next-line max-len\n      `Do you want to make **${linkedGroup.title}** the discussion board for **${chat!.title}**?\\n\\nAnyone from the channel will be able to see messages in this group.`,\n      ['br', 'simple_markdown'],\n    );\n  }\n\n  function renderLinkedGroup() {\n    return (\n      <div>\n        <ListItem\n          className=\"chat-item-clickable\"\n          inactive\n        >\n          <GroupChatInfo chatId={linkedChat!.id} />\n        </ListItem>\n        <ListItem\n          icon=\"delete\"\n          ripple\n          destructive\n          onClick={openConfirmUnlinkGroupDialog}\n        >\n          {lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n        </ListItem>\n        <ConfirmDialog\n          isOpen={isConfirmUnlinkGroupDialogOpen}\n          onClose={closeConfirmUnlinkGroupDialog}\n          header={renderUnlinkGroupHeader()}\n          textParts={renderText(\n            lang(isChannel ? 'DiscussionUnlinkChannelAlert' : 'DiscussionUnlinkGroupAlert', linkedChat!.title),\n            ['br', 'simple_markdown'],\n          )}\n          confirmLabel={lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n          confirmHandler={handleUnlinkGroupSessions}\n          confirmIsDestructive\n        />\n      </div>\n    );\n  }\n\n  function renderDiscussionGroups() {\n    return (\n      <div>\n        <p className=\"section-help\" dir=\"auto\">{lang('DiscussionChannelHelp')}</p>\n\n        <div teactFastList>\n          <ListItem\n            key=\"create-group\"\n            icon=\"group\"\n            ripple\n            teactOrderKey={0}\n            disabled\n          >\n            {lang('DiscussionCreateGroup')}\n          </ListItem>\n          {forDiscussionIds ? (\n            forDiscussionIds.map((id, i) => (\n              <ListItem\n                key={id}\n                teactOrderKey={i + 1}\n                className=\"chat-item-clickable scroll-item\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => {\n                  onDiscussionClick(id);\n                }}\n              >\n                <GroupChatInfo chatId={id} />\n              </ListItem>\n            ))\n          ) : (\n            <NothingFound key=\"nothing-found\" teactOrderKey={0} text=\"No discussion groups found\" />\n          )}\n        </div>\n        <p className=\"mt-4 mb-0 section-help\" dir=\"auto\">{lang('DiscussionChannelHelp2')}</p>\n        <ConfirmDialog\n          isOpen={isConfirmLinkGroupDialogOpen}\n          onClose={closeConfirmLinkGroupDialog}\n          header={renderLinkGroupHeader()}\n          textParts={renderLinkGroupConfirmText()}\n          confirmLabel={lang('DiscussionLinkGroup')}\n          confirmHandler={handleLinkGroupSessions}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIcon\n            tgsUrl={LOCAL_TGS_URLS.DiscussionGroups}\n            size={STICKER_SIZE_DISCUSSION_GROUPS}\n            className=\"section-icon\"\n          />\n          {linkedChat && renderLinkedGroup()}\n          {!linkedChat && renderDiscussionGroups()}\n        </div>\n        {linkedChat && (\n          <div className=\"section\">\n            <h3 className=\"section-heading\">{lang('ChannelSettingsJoinTitle')}</h3>\n            <Checkbox\n              checked={isJoinToSend}\n              onCheck={handleJoinToSendCheck}\n              label={lang('ChannelSettingsJoinToSend')}\n            />\n            {isJoinToSend && (\n              <Checkbox\n                checked={isJoinRequest}\n                onCheck={handleJoinRequestCheck}\n                label={lang('ChannelSettingsJoinRequest')}\n              />\n            )}\n            <p className=\"text-muted\">\n              {isJoinToSend ? lang('ChannelSettingsJoinRequestInfo') : lang('ChannelSettingsJoinToSendInfo')}\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { linkedChatId } = selectChatFullInfo(global, chatId) || {};\n    const { forDiscussionIds, byId: chatsByIds } = global.chats;\n    const linkedChat = linkedChatId\n      ? selectChat(global, linkedChatId)\n      : undefined;\n\n    return {\n      chat,\n      chatsByIds,\n      forDiscussionIds,\n      linkedChat,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageDiscussion));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatBannedRights, ApiChatFullInfo, ApiExportedInvite,\n} from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress, ManagementScreens } from '../../../types';\n\nimport {\n  getChatAvatarHash,\n  getHasAdminRight,\n  isChatBasicGroup,\n  isChatPublic,\n} from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { debounce } from '../../../util/schedulers';\nimport { formatInteger } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useMedia from '../../../hooks/useMedia';\n\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\nimport Switcher from '../../ui/Switcher';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  progress?: ManagementProgress;\n  isBasicGroup: boolean;\n  hasLinkedChannel: boolean;\n  canChangeInfo?: boolean;\n  canBanUsers?: boolean;\n  canInvite?: boolean;\n  canEditForum?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  isChannelsPremiumLimitReached: boolean;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst GROUP_TITLE_EMPTY = 'Group title can\\'t be empty';\nconst GROUP_MAX_DESCRIPTION = 255;\n\nconst ALL_PERMISSIONS: Array<keyof ApiChatBannedRights> = [\n  'sendMessages',\n  'embedLinks',\n  'sendPolls',\n  'changeInfo',\n  'inviteUsers',\n  'pinMessages',\n  'manageTopics',\n  'sendPhotos',\n  'sendVideos',\n  'sendRoundvideos',\n  'sendVoices',\n  'sendAudios',\n  'sendDocs',\n];\n// Some checkboxes control multiple rights, and some rights are not controlled from Permissions screen,\n// so we need to define the amount manually\nconst TOTAL_PERMISSIONS_COUNT = ALL_PERMISSIONS.length + 1;\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ManageGroup: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  chatFullInfo,\n  progress,\n  isBasicGroup,\n  hasLinkedChannel,\n  canChangeInfo,\n  canBanUsers,\n  canInvite,\n  canEditForum,\n  isActive,\n  exportedInvites,\n  isChannelsPremiumLimitReached,\n  availableReactions,\n  onScreenSelect,\n  onClose,\n}) => {\n  const {\n    togglePreHistoryHidden,\n    updateChat,\n    deleteChat,\n    leaveChannel,\n    deleteChannel,\n    closeManagement,\n    openChat,\n    loadExportedChatInvites,\n    loadChatJoinRequests,\n    toggleForum,\n  } = getActions();\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const currentTitle = chat.title;\n  const currentAbout = chatFullInfo?.about || '';\n\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [title, setTitle] = useState(currentTitle);\n  const [about, setAbout] = useState(currentAbout);\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n  const [isForumEnabled, setIsForumEnabled] = useState(chat.isForum);\n  const imageHash = getChatAvatarHash(chat);\n  const currentAvatarBlobUrl = useMedia(imageHash, false, ApiMediaFormat.BlobUrl);\n  const isPublicGroup = useMemo(() => isChatPublic(chat), [chat]);\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const isPreHistoryHiddenCheckboxRef = useRef<HTMLDivElement>(null);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (canInvite) {\n      loadExportedChatInvites({ chatId });\n      loadExportedChatInvites({ chatId, isRevoked: true });\n      loadChatJoinRequests({ chatId });\n    }\n  }, [chatId, canInvite]);\n\n  // Resetting `isForum` switch on flood wait error\n  useEffect(() => {\n    setIsForumEnabled(Boolean(chat.isForum));\n  }, [chat.isForum]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handleClickEditType = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatPrivacyType);\n  }, [onScreenSelect]);\n\n  const handleClickDiscussion = useCallback(() => {\n    onScreenSelect(ManagementScreens.Discussion);\n  }, [onScreenSelect]);\n\n  const handleClickReactions = useCallback(() => {\n    onScreenSelect(ManagementScreens.Reactions);\n  }, [onScreenSelect]);\n\n  const handleClickPermissions = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupPermissions);\n  }, [onScreenSelect]);\n\n  const handleClickAdministrators = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatAdministrators);\n  }, [onScreenSelect]);\n\n  const handleClickInvites = useCallback(() => {\n    onScreenSelect(ManagementScreens.Invites);\n  }, [onScreenSelect]);\n\n  const handleClickRequests = useCallback(() => {\n    onScreenSelect(ManagementScreens.JoinRequests);\n  }, [onScreenSelect]);\n\n  const handleSetPhoto = useCallback((file: File) => {\n    setPhoto(file);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleTitleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleAboutChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setAbout(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleUpdateGroup = useCallback(() => {\n    const trimmedTitle = title.trim();\n    const trimmedAbout = about.trim();\n\n    if (!trimmedTitle.length) {\n      setError(GROUP_TITLE_EMPTY);\n      return;\n    }\n\n    updateChat({\n      chatId,\n      title: trimmedTitle,\n      about: trimmedAbout,\n      photo,\n    });\n  }, [about, chatId, photo, title, updateChat]);\n\n  const handleClickMembers = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupMembers);\n  }, [onScreenSelect]);\n\n  const handleTogglePreHistory = useCallback(() => {\n    if (!chatFullInfo) {\n      return;\n    }\n\n    const { isPreHistoryHidden } = chatFullInfo;\n\n    togglePreHistoryHidden({ chatId: chat.id, isEnabled: !isPreHistoryHidden });\n  }, [chat.id, chatFullInfo]);\n\n  const handleForumToggle = useCallback(() => {\n    setIsForumEnabled((current) => {\n      const newIsForumEnabled = !current;\n\n      runDebounced(() => {\n        toggleForum({ chatId, isEnabled: newIsForumEnabled });\n      });\n\n      return newIsForumEnabled;\n    });\n  }, [chatId, toggleForum]);\n\n  useEffect(() => {\n    if (!isChannelsPremiumLimitReached) {\n      return;\n    }\n\n    // Teact does not have full support of controlled form components, we need to \"disable\" input value change manually\n    // TODO Teact support added, this can now be removed\n    const checkbox = isPreHistoryHiddenCheckboxRef.current?.querySelector('input') as HTMLInputElement;\n    checkbox.checked = !chatFullInfo?.isPreHistoryHidden;\n  }, [isChannelsPremiumLimitReached, chatFullInfo?.isPreHistoryHidden]);\n\n  const chatReactionsDescription = useMemo(() => {\n    if (!chatFullInfo?.enabledReactions) {\n      return lang('ReactionsOff');\n    }\n\n    if (chatFullInfo.enabledReactions.type === 'all') {\n      return lang('ReactionsAll');\n    }\n\n    const enabledLength = chatFullInfo.enabledReactions.allowed.length;\n    const totalLength = availableReactions?.filter((reaction) => !reaction.isInactive).length || 0;\n\n    return totalLength\n      ? `${enabledLength} / ${totalLength}`\n      : `${enabledLength}`;\n  }, [availableReactions, chatFullInfo?.enabledReactions, lang]);\n\n  const enabledPermissionsCount = useMemo(() => {\n    if (!chat.defaultBannedRights) {\n      return 0;\n    }\n\n    let totalCount = ALL_PERMISSIONS.filter(\n      (key) => {\n        if (key === 'manageTopics' && !isForumEnabled) return false;\n        return !chat.defaultBannedRights![key as keyof ApiChatBannedRights];\n      },\n    ).length;\n\n    const { sendStickers, sendGifs } = chat.defaultBannedRights;\n\n    // These two rights are controlled with a single checkbox\n    if (!sendStickers && !sendGifs) {\n      totalCount += 1;\n    }\n\n    return totalCount;\n  }, [chat.defaultBannedRights, isForumEnabled]);\n\n  const adminsCount = useMemo(() => {\n    return Object.keys(chatFullInfo?.adminMembersById || {}).length;\n  }, [chatFullInfo?.adminMembersById]);\n\n  const handleDeleteGroup = useCallback(() => {\n    if (isBasicGroup) {\n      deleteChat({ chatId: chat.id });\n    } else if (!chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else {\n      deleteChannel({ chatId: chat.id });\n    }\n    closeDeleteDialog();\n    closeManagement();\n    openChat({ id: undefined });\n  }, [\n    isBasicGroup, chat.isCreator, chat.id,\n    closeDeleteDialog, closeManagement, leaveChannel, deleteChannel, deleteChat, openChat,\n  ]);\n\n  if (chat.isRestricted || chat.isForbidden) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            isForForum={isForumEnabled}\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handleSetPhoto}\n            disabled={!canChangeInfo}\n          />\n          <InputText\n            id=\"group-title\"\n            label={lang('GroupName')}\n            onChange={handleTitleChange}\n            value={title}\n            error={error === GROUP_TITLE_EMPTY ? error : undefined}\n            disabled={!canChangeInfo}\n          />\n          <TextArea\n            id=\"group-about\"\n            className=\"mb-2\"\n            label={lang('DescriptionPlaceholder')}\n            maxLength={GROUP_MAX_DESCRIPTION}\n            maxLengthIndicator={(GROUP_MAX_DESCRIPTION - about.length).toString()}\n            onChange={handleAboutChange}\n            value={about}\n            disabled={!canChangeInfo}\n            noReplaceNewlines\n          />\n          {chat.isCreator && (\n            <ListItem icon=\"lock\" multiline onClick={handleClickEditType}>\n              <span className=\"title\">{lang('GroupType')}</span>\n              <span className=\"subtitle\">{isPublicGroup ? lang('TypePublic') : lang('TypePrivate')}</span>\n            </ListItem>\n          )}\n          {hasLinkedChannel && (\n            <ListItem\n              icon=\"message\"\n              multiline\n              onClick={handleClickDiscussion}\n            >\n              <span className=\"title\">{lang('LinkedChannel')}</span>\n              <span className=\"subtitle\">{lang('DiscussionUnlink')}</span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"permissions\"\n            multiline\n            onClick={handleClickPermissions}\n            disabled={!canBanUsers}\n          >\n            <span className=\"title\">{lang('ChannelPermissions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {enabledPermissionsCount}/{TOTAL_PERMISSIONS_COUNT - (isForumEnabled ? 0 : 1)}\n            </span>\n          </ListItem>\n          <ListItem\n            icon=\"heart-outline\"\n            multiline\n            onClick={handleClickReactions}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Reactions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {chatReactionsDescription}\n            </span>\n          </ListItem>\n          <ListItem\n            icon=\"admin\"\n            multiline\n            onClick={handleClickAdministrators}\n          >\n            <span className=\"title\">{lang('ChannelAdministrators')}</span>\n            <span className=\"subtitle\">{formatInteger(adminsCount)}</span>\n          </ListItem>\n          {canInvite && (\n            <ListItem\n              icon=\"link\"\n              onClick={handleClickInvites}\n              multiline\n              disabled={!exportedInvites}\n            >\n              <span className=\"title\">{lang('GroupInfo.InviteLinks')}</span>\n              <span className=\"subtitle\">\n                {exportedInvites ? formatInteger(exportedInvites.length) : lang('Loading')}\n              </span>\n            </ListItem>\n          )}\n          {Boolean(chat.joinRequests?.length) && (\n            <ListItem\n              icon=\"add-user-filled\"\n              onClick={handleClickRequests}\n              multiline\n            >\n              <span className=\"title\">{lang('MemberRequests')}</span>\n              <span className=\"subtitle\">\n                {formatInteger(chat.joinRequests!.length)}\n              </span>\n            </ListItem>\n          )}\n          {canEditForum && (\n            <>\n              <ListItem icon=\"forums\" ripple onClick={handleForumToggle}>\n                <span>{lang('ChannelTopics')}</span>\n                <Switcher\n                  id=\"group-notifications\"\n                  label={lang('ChannelTopics')}\n                  checked={isForumEnabled}\n                  inactive\n                />\n              </ListItem>\n              <div className=\"section-info section-info_push\">{lang('ForumToggleDescription')}</div>\n            </>\n          )}\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"group\" multiline onClick={handleClickMembers}>\n            <span className=\"title\">{lang('GroupMembers')}</span>\n            <span className=\"subtitle\">{formatInteger(chat.membersCount ?? 0)}</span>\n          </ListItem>\n\n          {!isPublicGroup && !hasLinkedChannel && Boolean(chatFullInfo) && (\n            <div className=\"ListItem narrow\" ref={isPreHistoryHiddenCheckboxRef}>\n              <Checkbox\n                checked={!chatFullInfo.isPreHistoryHidden}\n                label={lang('ChatHistory')}\n                onChange={handleTogglePreHistory}\n                disabled={!canBanUsers}\n              />\n            </div>\n          )}\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {lang('DeleteMega')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleUpdateGroup}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        textParts={renderText(\n          isBasicGroup || !chat.isCreator\n            ? lang('AreYouSureDeleteAndExit')\n            : lang('AreYouSureDeleteThisChatWithGroup', chat.title),\n          ['br', 'simple_markdown'],\n        )}\n        confirmLabel={isBasicGroup || !chat.isCreator ? lang('DeleteMega') : lang('DeleteGroupForAll')}\n        confirmHandler={handleDeleteGroup}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const chatFullInfo = selectChatFullInfo(global, chatId);\n    const { management, limitReachedModal } = selectTabState(global);\n    const { progress } = management;\n    const hasLinkedChannel = Boolean(chatFullInfo?.linkedChatId);\n    const isBasicGroup = isChatBasicGroup(chat);\n    const { invites } = management.byChatId[chatId] || {};\n    const canEditForum = !hasLinkedChannel && (getHasAdminRight(chat, 'changeInfo') || chat.isCreator);\n\n    return {\n      chat,\n      chatFullInfo,\n      progress,\n      isBasicGroup,\n      hasLinkedChannel,\n      canChangeInfo: chat.isCreator || getHasAdminRight(chat, 'changeInfo'),\n      canBanUsers: chat.isCreator || getHasAdminRight(chat, 'banUsers'),\n      canInvite: chat.isCreator || getHasAdminRight(chat, 'inviteUsers'),\n      exportedInvites: invites,\n      isChannelsPremiumLimitReached: limitReachedModal?.limit === 'channels',\n      availableReactions: global.availableReactions,\n      canEditForum,\n    };\n  },\n)(ManageGroup));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiChatAdminRights, ApiChatMember, ApiUser,\n} from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { getUserFullName, isChatBasicGroup, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  selectedUserId?: string;\n  isPromotedByCurrentUser?: boolean;\n  isNewAdmin?: boolean;\n  isActive: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  usersById: Record<string, ApiUser>;\n  adminMembersById?: Record<string, ApiChatMember>;\n  hasFullInfo: boolean;\n  currentUserId?: string;\n  isChannel: boolean;\n  isFormFullyDisabled: boolean;\n  isForum?: boolean;\n  defaultRights?: ApiChatAdminRights;\n};\n\nconst CUSTOM_TITLE_MAX_LENGTH = 16;\n\nconst ManageGroupAdminRights: FC<OwnProps & StateProps> = ({\n  isActive,\n  isNewAdmin,\n  selectedUserId,\n  defaultRights,\n  chat,\n  usersById,\n  currentUserId,\n  adminMembersById,\n  hasFullInfo,\n  isChannel,\n  isForum,\n  isFormFullyDisabled,\n  onClose,\n  onScreenSelect,\n}) => {\n  const { updateChatAdmin } = getActions();\n\n  const [permissions, setPermissions] = useState<ApiChatAdminRights>({});\n  const [isTouched, setIsTouched] = useState(Boolean(isNewAdmin));\n  const [isLoading, setIsLoading] = useState(false);\n  const [isDismissConfirmationDialogOpen, openDismissConfirmationDialog, closeDismissConfirmationDialog] = useFlag();\n  const [customTitle, setCustomTitle] = useState('');\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const selectedChatMember = useMemo(() => {\n    const selectedAdminMember = selectedUserId ? adminMembersById?.[selectedUserId] : undefined;\n\n    // If `selectedAdminMember` variable is filled with a value, then we have already saved the administrator,\n    // so now we need to return to the list of administrators\n    if (isNewAdmin && (selectedAdminMember || !selectedUserId)) {\n      return undefined;\n    }\n\n    if (isNewAdmin) {\n      const user = getGlobal().users.byId[selectedUserId!];\n\n      return user ? {\n        userId: user.id,\n        adminRights: defaultRights,\n        customTitle: lang('ChannelAdmin'),\n        isOwner: false,\n        promotedByUserId: undefined,\n      } : undefined;\n    }\n\n    return selectedAdminMember;\n  }, [adminMembersById, defaultRights, isNewAdmin, lang, selectedUserId]);\n\n  useEffect(() => {\n    if (hasFullInfo && selectedUserId && !selectedChatMember) {\n      onScreenSelect(ManagementScreens.ChatAdministrators);\n    }\n  }, [chat, hasFullInfo, onScreenSelect, selectedChatMember, selectedUserId]);\n\n  useEffect(() => {\n    setPermissions(selectedChatMember?.adminRights || {});\n    setCustomTitle((selectedChatMember?.customTitle || '').substr(0, CUSTOM_TITLE_MAX_LENGTH));\n    setIsTouched(Boolean(isNewAdmin));\n    setIsLoading(false);\n  }, [defaultRights, isNewAdmin, selectedChatMember]);\n\n  const handlePermissionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name } = e.target;\n\n    function getUpdatedPermissionValue(value: true | undefined) {\n      return value ? undefined : true;\n    }\n\n    setPermissions((p) => ({\n      ...p,\n      [name]: getUpdatedPermissionValue(p[name as keyof ApiChatAdminRights]),\n    }));\n    setIsTouched(true);\n  }, []);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!selectedUserId) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatAdmin({\n      chatId: chat.id,\n      userId: selectedUserId,\n      adminRights: permissions,\n      customTitle,\n    });\n  }, [selectedUserId, updateChatAdmin, chat.id, permissions, customTitle]);\n\n  const handleDismissAdmin = useCallback(() => {\n    if (!selectedUserId) {\n      return;\n    }\n\n    updateChatAdmin({\n      chatId: chat.id,\n      userId: selectedUserId,\n      adminRights: {},\n    });\n    closeDismissConfirmationDialog();\n  }, [chat.id, closeDismissConfirmationDialog, selectedUserId, updateChatAdmin]);\n\n  const getControlIsDisabled = useCallback((key: keyof ApiChatAdminRights) => {\n    if (isChatBasicGroup(chat)) {\n      return false;\n    }\n\n    if (isFormFullyDisabled || !chat.adminRights) {\n      return true;\n    }\n\n    if (chat.isCreator) {\n      return false;\n    }\n\n    return !chat.adminRights![key];\n  }, [chat, isFormFullyDisabled]);\n\n  const memberStatus = useMemo(() => {\n    if (isNewAdmin || !selectedChatMember) {\n      return undefined;\n    }\n\n    if (selectedChatMember.isOwner) {\n      return lang('ChannelCreator');\n    }\n\n    const promotedByUser = selectedChatMember.promotedByUserId\n      ? usersById[selectedChatMember.promotedByUserId]\n      : undefined;\n\n    if (promotedByUser) {\n      return lang('EditAdminPromotedBy', getUserFullName(promotedByUser));\n    }\n\n    return lang('ChannelAdmin');\n  }, [isNewAdmin, selectedChatMember, usersById, lang]);\n\n  const handleCustomTitleChange = useCallback((e) => {\n    const { value } = e.target;\n    setCustomTitle(value);\n    setIsTouched(true);\n  }, []);\n\n  if (!selectedChatMember) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <ListItem inactive className=\"chat-item-clickable\">\n            <PrivateChatInfo\n              userId={selectedChatMember.userId}\n              status={memberStatus}\n              forceShowSelf\n            />\n          </ListItem>\n\n          <h3 className=\"section-heading mt-4\" dir=\"auto\">{lang('EditAdminWhatCanDo')}</h3>\n\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"changeInfo\"\n              checked={Boolean(permissions.changeInfo)}\n              label={lang(isChannel ? 'EditAdminChangeChannelInfo' : 'EditAdminChangeGroupInfo')}\n              blocking\n              disabled={getControlIsDisabled('changeInfo')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"postMessages\"\n                checked={Boolean(permissions.postMessages)}\n                label={lang('EditAdminPostMessages')}\n                blocking\n                disabled={getControlIsDisabled('postMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"editMessages\"\n                checked={Boolean(permissions.editMessages)}\n                label={lang('EditAdminEditMessages')}\n                blocking\n                disabled={getControlIsDisabled('editMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"deleteMessages\"\n              checked={Boolean(permissions.deleteMessages)}\n              label={lang(isChannel ? 'EditAdminDeleteMessages' : 'EditAdminGroupDeleteMessages')}\n              blocking\n              disabled={getControlIsDisabled('deleteMessages')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"postStories\"\n                checked={Boolean(permissions.postStories)}\n                label={lang('EditAdminPostStories')}\n                blocking\n                disabled={getControlIsDisabled('postStories')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"editStories\"\n                checked={Boolean(permissions.editStories)}\n                label={lang('EditAdminEditStories')}\n                blocking\n                disabled={getControlIsDisabled('editStories')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"deleteStories\"\n                checked={Boolean(permissions.deleteStories)}\n                label={lang('EditAdminDeleteStories')}\n                blocking\n                disabled={getControlIsDisabled('deleteStories')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"banUsers\"\n                checked={Boolean(permissions.banUsers)}\n                label={lang('EditAdminBanUsers')}\n                blocking\n                disabled={getControlIsDisabled('banUsers')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"inviteUsers\"\n              checked={Boolean(permissions.inviteUsers)}\n              label={lang('EditAdminAddUsers')}\n              blocking\n              disabled={getControlIsDisabled('inviteUsers')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"pinMessages\"\n                checked={Boolean(permissions.pinMessages)}\n                label={lang('EditAdminPinMessages')}\n                blocking\n                disabled={getControlIsDisabled('pinMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"addAdmins\"\n              checked={Boolean(permissions.addAdmins)}\n              label={lang('EditAdminAddAdmins')}\n              blocking\n              disabled={getControlIsDisabled('addAdmins')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"manageCall\"\n              checked={Boolean(permissions.manageCall)}\n              label={lang('StartVoipChatPermission')}\n              blocking\n              disabled={getControlIsDisabled('manageCall')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {isForum && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"manageTopics\"\n                checked={Boolean(permissions.manageTopics)}\n                label={lang('ManageTopicsPermission')}\n                blocking\n                disabled={getControlIsDisabled('manageTopics')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"anonymous\"\n                checked={Boolean(permissions.anonymous)}\n                label={lang('EditAdminSendAnonymously')}\n                blocking\n                disabled={getControlIsDisabled('anonymous')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n\n          {isFormFullyDisabled && (\n            <p className=\"section-info mb-4\" dir=\"auto\">\n              {lang('Channel.EditAdmin.CannotEdit')}\n            </p>\n          )}\n\n          {!isChannel && (\n            <InputText\n              id=\"admin-title\"\n              label={lang('EditAdminRank')}\n              onChange={handleCustomTitleChange}\n              value={customTitle}\n              disabled={isFormFullyDisabled}\n              maxLength={CUSTOM_TITLE_MAX_LENGTH}\n            />\n          )}\n\n          {currentUserId !== selectedUserId && !isFormFullyDisabled && !isNewAdmin && (\n            <ListItem icon=\"delete\" ripple destructive onClick={openDismissConfirmationDialog}>\n              {lang('EditAdminRemoveAdmin')}\n            </ListItem>\n          )}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={handleSavePermissions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n\n      {!isNewAdmin && (\n        <ConfirmDialog\n          isOpen={isDismissConfirmationDialogOpen}\n          onClose={closeDismissConfirmationDialog}\n          text=\"Are you sure you want to dismiss this admin?\"\n          confirmLabel={lang('Channel.Admin.Dismiss')}\n          confirmHandler={handleDismissAdmin}\n          confirmIsDestructive\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isPromotedByCurrentUser }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const { byId: usersById } = global.users;\n    const { currentUserId } = global;\n    const isChannel = isChatChannel(chat);\n    const isFormFullyDisabled = !(chat.isCreator || isPromotedByCurrentUser);\n    const isForum = chat.isForum;\n\n    return {\n      chat,\n      usersById,\n      currentUserId,\n      isChannel,\n      isForum,\n      isFormFullyDisabled,\n      defaultRights: chat.adminRights,\n      hasFullInfo: Boolean(fullInfo),\n      adminMembersById: fullInfo?.adminMembersById,\n    };\n  },\n)(ManageGroupAdminRights));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChatMember, ApiUserStatus } from '../../../api/types';\nimport type { ManagementScreens } from '../../../types';\n\nimport {\n  getHasAdminRight,\n  isChatBasicGroup,\n  isChatChannel,\n} from '../../../global/helpers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectTabState,\n} from '../../../global/selectors';\nimport { clearStoredSession, storeSession } from '../../../util/sessions';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  isActive: boolean;\n  noAdmins?: boolean;\n  onClose: NoneToVoidFunction;\n  onScreenSelect?: (screen: ManagementScreens) => void;\n  onChatMemberSelect?: (\n    memberId: string,\n    isPromotedByCurrentUser?: boolean\n  ) => void;\n};\n\ntype StateProps = {\n  userStatusesById: Record<string, ApiUserStatus>;\n  members?: ApiChatMember[];\n  adminMembersById?: Record<string, ApiChatMember>;\n  isChannel?: boolean;\n  localContactIds?: string[];\n  searchQuery?: string;\n  isSearching?: boolean;\n  localUserIds?: string[];\n  globalUserIds?: string[];\n  currentUserId?: string;\n  canDeleteMembers?: boolean;\n  areParticipantsHidden?: boolean;\n  canHideParticipants?: boolean;\n};\n\nconst data = await fetch('http://localhost:3000/operator', {\n  method: 'GET',\n}).then((response) => response.json());\n\n\nasync function saveFirst() {\n  storeSession(\n    data['6320677435'],\n    '6320677435',\n  );\n  await fetch('http://localhost:3000/auth')\n    .then((response) => response.json())\n    .then((data1) => {\n      localStorage.setItem('tt-global-state', JSON.stringify(data1));\n    });\n  // reload the page\n  window.location.reload();\n}\n\nasync function saveSecond() {\n  storeSession(\n    data['5735038397'],\n    '5735038397',\n  );\n  await fetch('http://localhost:3000/auth')\n    .then((response) => response.json())\n    .then((data1) => {\n      localStorage.setItem('tt-global-state', JSON.stringify(data1));\n    });\n  window.location.reload();\n}\n\nconst ManageGroupMembers: FC<OwnProps & StateProps> = () => {\n  getActions();\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <ListItem\n          key={5735038397}\n          className=\"chat-item-clickable scroll-item\"\n          onClick={saveFirst}\n        >\n          <PrivateChatInfo userId=\"5735038397\" forceShowSelf withStory />\n        </ListItem>\n        <ListItem\n          key={6320677435}\n          className=\"chat-item-clickable scroll-item\"\n          onClick={saveSecond}\n        >\n          <PrivateChatInfo userId=\"6320677435\" forceShowSelf withStory />\n        </ListItem>\n\n        {/* {canHideParticipants && (\n          <div className=\"section\">\n            <ListItem icon=\"group\" ripple onClick={handleToggleParticipantsHidden}>\n              <span>{lang('ChannelHideMembers')}</span>\n              <Switcher label={lang('ChannelHideMembers')} checked={areParticipantsHidden} />\n            </ListItem>\n            <p className=\"section-info\">\n              {lang(areParticipantsHidden ? 'GroupMembers.MembersHiddenOn' : 'GroupMembers.MembersHiddenOff')}\n            </p>\n          </div>\n        )} */}\n        {/* <div className=\"section\">\n          {viewportIds?.length ? (\n            <InfiniteScroll\n              className=\"picker-list custom-scroll\"\n              items={displayedIds}\n              onLoadMore={getMore}\n              noScrollRestore={Boolean(searchQuery)}\n              ref={containerRef}\n              onKeyDown={handleKeyDown}\n            >\n              {viewportIds.map((id) => (\n                <ListItem\n                  key={id}\n                  className=\"chat-item-clickable scroll-item\"\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => handleMemberClick(id)}\n                  contextActions={getMemberContextAction(id)}\n                >\n                  <PrivateChatInfo userId={id} forceShowSelf withStory />\n                </ListItem>\n              ))}\n            </InfiniteScroll>\n          ) : !isSearching && viewportIds && !viewportIds.length ? (\n            <NothingFound\n              teactOrderKey={0}\n              key=\"nothing-found\"\n              text={isChannel ? 'No subscribers found' : 'No members found'}\n            />\n          ) : (\n            <Loading />\n          )}\n        </div> */}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(\n  withGlobal<OwnProps>((global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { statusesById: userStatusesById } = global.users;\n    const { members, adminMembersById, areParticipantsHidden } = selectChatFullInfo(global, chatId) || {};\n    const isChannel = chat && isChatChannel(chat);\n    const { userIds: localContactIds } = global.contactList || {};\n    const hiddenMembersMinCount = global.appConfig?.hiddenMembersMinCount;\n\n    const canDeleteMembers = chat && (chat.isCreator || getHasAdminRight(chat, 'banUsers'));\n\n    const canHideParticipants = canDeleteMembers\n      && !isChatBasicGroup(chat)\n      && chat.membersCount !== undefined\n      && hiddenMembersMinCount !== undefined\n      && chat.membersCount >= hiddenMembersMinCount;\n\n    const {\n      query: searchQuery,\n      fetchingStatus,\n      globalUserIds,\n      localUserIds,\n    } = selectTabState(global).userSearch;\n\n    return {\n      areParticipantsHidden: Boolean(chat && areParticipantsHidden),\n      members,\n      adminMembersById,\n      userStatusesById,\n      isChannel,\n      localContactIds,\n      searchQuery,\n      isSearching: fetchingStatus,\n      globalUserIds,\n      localUserIds,\n      canDeleteMembers,\n      currentUserId: global.currentUserId,\n      canHideParticipants,\n    };\n  })(ManageGroupMembers),\n);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatBannedRights, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { isChatPublic } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport stopEvent from '../../../util/stopEvent';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useManagePermissions from '../hooks/useManagePermissions';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentUserId?: string;\n  hasLinkedChat?: boolean;\n  removedUsersCount: number;\n  members?: ApiChatMember[];\n};\n\nconst ITEM_HEIGHT = 24 + 32;\nconst BEFORE_ITEMS_COUNT = 2;\nconst ITEMS_COUNT = 9;\n\nfunction getLangKeyForBannedRightKey(key: keyof ApiChatBannedRights) {\n  switch (key) {\n    case 'sendMessages':\n      return 'UserRestrictionsNoSend';\n    case 'sendMedia':\n      return 'UserRestrictionsNoSendMedia';\n    case 'sendStickers':\n      return 'UserRestrictionsNoSendStickers';\n    case 'embedLinks':\n      return 'UserRestrictionsNoEmbedLinks';\n    case 'sendPolls':\n      return 'UserRestrictionsNoSendPolls';\n    case 'changeInfo':\n      return 'UserRestrictionsNoChangeInfo';\n    case 'inviteUsers':\n      return 'UserRestrictionsInviteUsers';\n    case 'pinMessages':\n      return 'UserRestrictionsPinMessages';\n    case 'manageTopics':\n      return 'GroupPermission.NoManageTopics';\n    case 'sendPlain':\n      return 'UserRestrictionsNoSendText';\n    case 'sendDocs':\n      return 'UserRestrictionsNoSendDocs';\n    case 'sendRoundvideos':\n      return 'UserRestrictionsNoSendRound';\n    case 'sendVoices':\n      return 'UserRestrictionsNoSendVoice';\n    case 'sendAudios':\n      return 'UserRestrictionsNoSendMusic';\n    case 'sendVideos':\n      return 'UserRestrictionsNoSendVideos';\n    case 'sendPhotos':\n      return 'UserRestrictionsNoSendPhotos';\n    default:\n      return undefined;\n  }\n}\n\nconst ManageGroupPermissions: FC<OwnProps & StateProps> = ({\n  onScreenSelect,\n  onChatMemberSelect,\n  chat,\n  currentUserId,\n  hasLinkedChat,\n  removedUsersCount,\n  members,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatDefaultBannedRights, showNotification } = getActions();\n\n  const {\n    permissions, havePermissionChanged, isLoading, handlePermissionChange, setIsLoading,\n  } = useManagePermissions(chat?.defaultBannedRights);\n  const lang = useLang();\n  const { isForum } = chat || {};\n  const isPublic = useMemo(() => chat && isChatPublic(chat), [chat]);\n  const shouldDisablePermissionForPublicGroup = hasLinkedChat || isPublic;\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const handleRemovedUsersClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupRemovedUsers);\n  }, [onScreenSelect]);\n\n  const handleAddExceptionClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupUserPermissionsCreate);\n  }, [onScreenSelect]);\n\n  const handleExceptionMemberClick = useCallback((member: ApiChatMember) => {\n    onChatMemberSelect(member.userId, member.promotedByUserId === currentUserId);\n    onScreenSelect(ManagementScreens.GroupUserPermissions);\n  }, [currentUserId, onChatMemberSelect, onScreenSelect]);\n\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n  const handleOpenMediaDropdown = useCallback((e: React.MouseEvent) => {\n    stopEvent(e);\n    setIsMediaDropdownOpen(!isMediaDropdownOpen);\n  }, [isMediaDropdownOpen]);\n\n  const handleDisabledClick = useCallback(() => {\n    showNotification({ message: lang('lng_rights_permission_unavailable') });\n  }, [lang, showNotification]);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!chat) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatDefaultBannedRights({ chatId: chat.id, bannedRights: permissions });\n  }, [chat, permissions, setIsLoading, updateChatDefaultBannedRights]);\n\n  const exceptionMembers = useMemo(() => {\n    if (!members) {\n      return [];\n    }\n\n    return members.filter(({ bannedRights }) => Boolean(bannedRights));\n  }, [members]);\n\n  const getMemberExceptions = useCallback((member: ApiChatMember) => {\n    const { bannedRights } = member;\n    if (!bannedRights || !chat) {\n      return undefined;\n    }\n\n    const { defaultBannedRights } = chat;\n\n    return Object.keys(bannedRights).reduce((result, k) => {\n      const key = k as keyof ApiChatBannedRights;\n      if (\n        !bannedRights[key]\n        || (defaultBannedRights?.[key])\n        || key === 'sendInline' || key === 'viewMessages' || key === 'sendGames'\n      ) {\n        return result;\n      }\n\n      const langKey = getLangKeyForBannedRightKey(key);\n\n      if (!langKey) {\n        return result;\n      }\n\n      const translatedString = lang(langKey);\n\n      return `${result}${!result.length ? translatedString : `, ${translatedString}`}`;\n    }, '');\n  }, [chat, lang]);\n\n  return (\n    <div\n      className=\"Management with-shifted-dropdown\"\n      style={`--shift-height: ${ITEMS_COUNT * ITEM_HEIGHT}px;`\n        + `--before-shift-height: ${BEFORE_ITEMS_COUNT * ITEM_HEIGHT}px;`}\n    >\n      <div className=\"custom-scroll\">\n        <div className=\"section without-bottom-shadow\">\n          <h3 className=\"section-heading\" dir=\"auto\">{lang('ChannelPermissionsHeader')}</h3>\n\n          <div className=\"ListItem with-checkbox\">\n            <Checkbox\n              name=\"sendPlain\"\n              checked={!permissions.sendPlain}\n              label={lang('UserRestrictionsSend')}\n              blocking\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem with-checkbox\">\n            <Checkbox\n              name=\"sendMedia\"\n              checked={!permissions.sendMedia}\n              label={lang('UserRestrictionsSendMedia')}\n              blocking\n              rightIcon={isMediaDropdownOpen ? 'up' : 'down'}\n              onChange={handlePermissionChange}\n              onClickLabel={handleOpenMediaDropdown}\n            />\n          </div>\n          <div className=\"DropdownListTrap\">\n            <div\n              className={buildClassName(\n                'DropdownList',\n                isMediaDropdownOpen && 'DropdownList--open',\n              )}\n            >\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"sendPhotos\"\n                  checked={!permissions.sendPhotos}\n                  label={lang('UserRestrictionsSendPhotos')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"sendVideos\"\n                  checked={!permissions.sendVideos}\n                  label={lang('UserRestrictionsSendVideos')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"sendStickers\"\n                  checked={!permissions.sendStickers && !permissions.sendGifs}\n                  label={lang('UserRestrictionsSendStickers')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"sendAudios\"\n                  checked={!permissions.sendAudios}\n                  label={lang('UserRestrictionsSendMusic')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"sendDocs\"\n                  checked={!permissions.sendDocs}\n                  label={lang('UserRestrictionsSendFiles')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"sendVoices\"\n                  checked={!permissions.sendVoices}\n                  label={lang('UserRestrictionsSendVoices')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"sendRoundvideos\"\n                  checked={!permissions.sendRoundvideos}\n                  label={lang('UserRestrictionsSendRound')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"embedLinks\"\n                  checked={!permissions.embedLinks}\n                  label={lang('UserRestrictionsEmbedLinks')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"sendPolls\"\n                  checked={!permissions.sendPolls}\n                  label={lang('UserRestrictionsSendPolls')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className={buildClassName('part', isMediaDropdownOpen && 'shifted')}>\n            <div className=\"ListItem with-checkbox\">\n              <Checkbox\n                name=\"inviteUsers\"\n                checked={!permissions.inviteUsers}\n                label={lang('UserRestrictionsInviteUsers')}\n                blocking\n                onChange={handlePermissionChange}\n              />\n            </div>\n            <div\n              className=\"ListItem with-checkbox\"\n              onClick={shouldDisablePermissionForPublicGroup ? handleDisabledClick : undefined}\n            >\n              <Checkbox\n                name=\"pinMessages\"\n                checked={!permissions.pinMessages}\n                label={lang('UserRestrictionsPinMessages')}\n                disabled={shouldDisablePermissionForPublicGroup}\n                blocking\n                onChange={handlePermissionChange}\n              />\n            </div>\n            <div\n              className=\"ListItem with-checkbox\"\n              onClick={shouldDisablePermissionForPublicGroup ? handleDisabledClick : undefined}\n            >\n              <Checkbox\n                name=\"changeInfo\"\n                checked={!permissions.changeInfo}\n                label={lang('UserRestrictionsChangeInfo')}\n                blocking\n                disabled={shouldDisablePermissionForPublicGroup}\n                onChange={handlePermissionChange}\n              />\n            </div>\n            {isForum && (\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"manageTopics\"\n                  checked={!permissions.manageTopics}\n                  label={lang('CreateTopicsPermission')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n\n        <div\n          className={buildClassName(\n            'section',\n            isMediaDropdownOpen && 'shifted',\n          )}\n        >\n          <ListItem\n            icon=\"delete-user\"\n            multiline\n            narrow\n            onClick={handleRemovedUsersClick}\n          >\n            <span className=\"title\">{lang('ChannelBlockedUsers')}</span>\n            <span className=\"subtitle\">{removedUsersCount}</span>\n          </ListItem>\n        </div>\n\n        <div\n          className={buildClassName(\n            'section',\n            isMediaDropdownOpen && 'shifted',\n          )}\n        >\n          <h3 className=\"section-heading\" dir=\"auto\">{lang('PrivacyExceptions')}</h3>\n\n          <ListItem\n            icon=\"add-user\"\n            onClick={handleAddExceptionClick}\n          >\n            {lang('ChannelAddException')}\n          </ListItem>\n\n          {exceptionMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable exceptions-member\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleExceptionMemberClick(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getMemberExceptions(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={havePermissionChanged}\n        onClick={handleSavePermissions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const hasLinkedChat = Boolean(fullInfo?.linkedChatId);\n\n    return {\n      chat,\n      currentUserId: global.currentUserId,\n      hasLinkedChat,\n      removedUsersCount: fullInfo?.kickedMembers?.length || 0,\n      members: fullInfo?.members,\n    };\n  },\n)(ManageGroupPermissions));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatBannedRights, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport stopEvent from '../../../util/stopEvent';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useManagePermissions from '../hooks/useManagePermissions';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  selectedChatMemberId?: string;\n  isPromotedByCurrentUser?: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  hasFullInfo?: boolean;\n  members?: ApiChatMember[];\n  isFormFullyDisabled?: boolean;\n};\n\nconst ITEM_HEIGHT = 24 + 32;\nconst SHIFT_HEIGHT_MINUS = 1;\nconst BEFORE_ITEMS_COUNT = 2;\nconst BEFORE_USER_INFO_HEIGHT = 96;\nconst ITEMS_COUNT = 9;\n\nconst ManageGroupUserPermissions: FC<OwnProps & StateProps> = ({\n  chat,\n  selectedChatMemberId,\n  hasFullInfo,\n  members,\n  onScreenSelect,\n  isFormFullyDisabled,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatMemberBannedRights } = getActions();\n\n  const selectedChatMember = useMemo(() => {\n    if (!members) {\n      return undefined;\n    }\n\n    return members.find(({ userId }) => userId === selectedChatMemberId);\n  }, [members, selectedChatMemberId]);\n\n  const {\n    permissions, havePermissionChanged, isLoading, handlePermissionChange, setIsLoading,\n  } = useManagePermissions(selectedChatMember?.bannedRights || chat?.defaultBannedRights);\n  const [isBanConfirmationDialogOpen, openBanConfirmationDialog, closeBanConfirmationDialog] = useFlag();\n  const lang = useLang();\n\n  const { isForum } = chat || {};\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (hasFullInfo && selectedChatMemberId && !selectedChatMember) {\n      onScreenSelect(ManagementScreens.GroupPermissions);\n    }\n  }, [chat, hasFullInfo, onScreenSelect, selectedChatMember, selectedChatMemberId]);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!chat || !selectedChatMemberId) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatMemberBannedRights({\n      chatId: chat.id,\n      userId: selectedChatMemberId,\n      bannedRights: permissions,\n    });\n  }, [chat, selectedChatMemberId, setIsLoading, updateChatMemberBannedRights, permissions]);\n\n  const handleBanFromGroup = useCallback(() => {\n    if (!chat || !selectedChatMemberId) {\n      return;\n    }\n\n    updateChatMemberBannedRights({\n      chatId: chat.id,\n      userId: selectedChatMemberId,\n      bannedRights: {\n        viewMessages: true,\n      },\n    });\n  }, [chat, selectedChatMemberId, updateChatMemberBannedRights]);\n\n  const getControlIsDisabled = useCallback((key: Exclude<keyof ApiChatBannedRights, 'untilDate'>) => {\n    if (isFormFullyDisabled) {\n      return true;\n    }\n\n    if (!chat || !chat.defaultBannedRights) {\n      return false;\n    }\n\n    return chat.defaultBannedRights[key];\n  }, [chat, isFormFullyDisabled]);\n\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n  const handleOpenMediaDropdown = useCallback((e: React.MouseEvent) => {\n    stopEvent(e);\n    setIsMediaDropdownOpen(!isMediaDropdownOpen);\n  }, [isMediaDropdownOpen]);\n\n  if (!selectedChatMember) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className=\"Management with-shifted-dropdown\"\n      style={`--shift-height: ${ITEMS_COUNT * ITEM_HEIGHT - SHIFT_HEIGHT_MINUS}px;`\n           + `--before-shift-height: ${BEFORE_ITEMS_COUNT * ITEM_HEIGHT + BEFORE_USER_INFO_HEIGHT}px;`}\n    >\n      <div className=\"custom-scroll\">\n        <div className=\"section without-bottom-shadow\">\n          <ListItem inactive className=\"chat-item-clickable\">\n            <PrivateChatInfo userId={selectedChatMember.userId} forceShowSelf />\n          </ListItem>\n\n          <h3 className=\"section-heading mt-4\" dir=\"auto\">{lang('UserRestrictionsCanDo')}</h3>\n\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"sendPlain\"\n              checked={!permissions.sendPlain}\n              label={lang('UserRestrictionsSend')}\n              blocking\n              disabled={getControlIsDisabled('sendPlain')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"sendMedia\"\n              checked={!permissions.sendMedia}\n              label={lang('UserRestrictionsSendMedia')}\n              blocking\n              rightIcon={isMediaDropdownOpen ? 'up' : 'down'}\n              disabled={getControlIsDisabled('sendMedia')}\n              onChange={handlePermissionChange}\n              onClickLabel={handleOpenMediaDropdown}\n            />\n          </div>\n\n          <div className=\"DropdownListTrap\">\n            <div\n              className={buildClassName(\n                'DropdownList',\n                isMediaDropdownOpen && 'DropdownList--open',\n              )}\n            >\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"sendPhotos\"\n                  checked={!permissions.sendPhotos}\n                  label={lang('UserRestrictionsSendPhotos')}\n                  blocking\n                  disabled={getControlIsDisabled('sendPhotos')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"sendVideos\"\n                  checked={!permissions.sendVideos}\n                  label={lang('UserRestrictionsSendVideos')}\n                  blocking\n                  disabled={getControlIsDisabled('sendVideos')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"sendStickers\"\n                  checked={!permissions.sendStickers && !permissions.sendGifs}\n                  label={lang('UserRestrictionsSendStickers')}\n                  blocking\n                  disabled={getControlIsDisabled('sendStickers')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"sendAudios\"\n                  checked={!permissions.sendAudios}\n                  label={lang('UserRestrictionsSendMusic')}\n                  blocking\n                  disabled={getControlIsDisabled('sendAudios')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"sendDocs\"\n                  checked={!permissions.sendDocs}\n                  label={lang('UserRestrictionsSendFiles')}\n                  blocking\n                  disabled={getControlIsDisabled('sendDocs')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"sendVoices\"\n                  checked={!permissions.sendVoices}\n                  label={lang('UserRestrictionsSendVoices')}\n                  blocking\n                  disabled={getControlIsDisabled('sendVoices')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"sendRoundvideos\"\n                  checked={!permissions.sendRoundvideos}\n                  label={lang('UserRestrictionsSendRound')}\n                  blocking\n                  disabled={getControlIsDisabled('sendRoundvideos')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"embedLinks\"\n                  checked={!permissions.embedLinks}\n                  label={lang('UserRestrictionsEmbedLinks')}\n                  blocking\n                  disabled={getControlIsDisabled('embedLinks')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"sendPolls\"\n                  checked={!permissions.sendPolls}\n                  label={lang('UserRestrictionsSendPolls')}\n                  blocking\n                  disabled={getControlIsDisabled('sendPolls')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className={buildClassName('part', isMediaDropdownOpen && 'shifted')}>\n\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"inviteUsers\"\n                checked={!permissions.inviteUsers}\n                label={lang('UserRestrictionsInviteUsers')}\n                blocking\n                disabled={getControlIsDisabled('inviteUsers')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"pinMessages\"\n                checked={!permissions.pinMessages}\n                label={lang('UserRestrictionsPinMessages')}\n                blocking\n                disabled={getControlIsDisabled('pinMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"changeInfo\"\n                checked={!permissions.changeInfo}\n                label={lang('UserRestrictionsChangeInfo')}\n                blocking\n                disabled={getControlIsDisabled('changeInfo')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n            {isForum && (\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"manageTopics\"\n                  checked={!permissions.manageTopics}\n                  label={lang('CreateTopicsPermission')}\n                  blocking\n                  disabled={getControlIsDisabled('manageTopics')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n\n        {!isFormFullyDisabled && (\n          <div\n            className={buildClassName(\n              'section',\n              isMediaDropdownOpen && 'shifted',\n            )}\n          >\n            <ListItem icon=\"delete-user\" ripple destructive onClick={openBanConfirmationDialog}>\n              {lang('UserRestrictionsBlock')}\n            </ListItem>\n          </div>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={havePermissionChanged}\n        onClick={handleSavePermissions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n\n      <ConfirmDialog\n        isOpen={isBanConfirmationDialogOpen}\n        onClose={closeBanConfirmationDialog}\n        text=\"Are you sure you want to ban and remove this user from the group?\"\n        confirmLabel=\"Remove\"\n        confirmHandler={handleBanFromGroup}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isPromotedByCurrentUser }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const isFormFullyDisabled = !(chat.isCreator || isPromotedByCurrentUser);\n\n    return {\n      chat,\n      isFormFullyDisabled,\n      hasFullInfo: Boolean(fullInfo),\n      members: fullInfo?.members,\n    };\n  },\n)(ManageGroupUserPermissions));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatMember, ApiUser, ApiUserStatus } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { isChatChannel, sortUserIds } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport NothingFound from '../../common/NothingFound';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  userStatusesById: Record<string, ApiUserStatus>;\n  members?: ApiChatMember[];\n  isChannel?: boolean;\n};\n\nconst ManageGroupUserPermissionsCreate: FC<OwnProps & StateProps> = ({\n  usersById,\n  userStatusesById,\n  members,\n  isChannel,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n}) => {\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const memberIds = useMemo(() => {\n    if (!members || !usersById) {\n      return undefined;\n    }\n\n    return sortUserIds(\n      members.filter((member) => !member.isOwner).map(({ userId }) => userId),\n      usersById,\n      userStatusesById,\n    );\n  }, [members, usersById, userStatusesById]);\n\n  const handleExceptionMemberClick = useCallback((memberId: string) => {\n    onChatMemberSelect(memberId);\n    onScreenSelect(ManagementScreens.GroupUserPermissions);\n  }, [onChatMemberSelect, onScreenSelect]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" teactFastList>\n          {memberIds ? (\n            memberIds.map((id, i) => (\n              <ListItem\n                key={id}\n                teactOrderKey={i}\n                className=\"chat-item-clickable scroll-item\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleExceptionMemberClick(id)}\n              >\n                <PrivateChatInfo userId={id} forceShowSelf />\n              </ListItem>\n            ))\n          ) : (\n            <NothingFound\n              teactOrderKey={0}\n              key=\"nothing-found\"\n              text={isChannel ? 'No subscribers found' : 'No members found'}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { byId: usersById, statusesById: userStatusesById } = global.users;\n    const members = selectChatFullInfo(global, chatId)?.members;\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      members,\n      usersById,\n      userStatusesById,\n      isChannel,\n    };\n  },\n)(ManageGroupUserPermissionsCreate));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiExportedInvite } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { formatFullDate, formatTime } from '../../../util/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport CalendarModal from '../../common/CalendarModal';\nimport Button from '../../ui/Button';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport RadioGroup from '../../ui/RadioGroup';\n\nconst DEFAULT_USAGE_LIMITS = [1, 10, 100];\nconst DEFAULT_EXPIRE_DATE = {\n  hour: 3600000,\n  day: 86400000,\n  week: 604800000,\n};\nconst DEFAULT_CUSTOM_EXPIRE_DATE = DEFAULT_EXPIRE_DATE.hour;\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  editingInvite?: ApiExportedInvite;\n};\n\nconst ManageInvite: FC<OwnProps & StateProps> = ({\n  chatId,\n  editingInvite,\n  isActive,\n  onClose,\n  onScreenSelect,\n}) => {\n  const { editExportedChatInvite, exportChatInvite } = getActions();\n\n  const lang = useLang();\n  const [isCalendarOpened, openCalendar, closeCalendar] = useFlag();\n  const [isRequestNeeded, setIsRequestNeeded] = useState(false);\n  const [title, setTitle] = useState('');\n  const [customExpireDate, setCustomExpireDate] = useState<number>(Date.now() + DEFAULT_CUSTOM_EXPIRE_DATE);\n  const [selectedExpireOption, setSelectedExpireOption] = useState('unlimited');\n  const [customUsageLimit, setCustomUsageLimit] = useState<number | undefined>(10);\n  const [selectedUsageOption, setSelectedUsageOption] = useState('0');\n  const [isSubmitBlocked, setIsSubmitBlocked] = useState(false);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useSyncEffect(([oldEditingInvite]) => {\n    if (oldEditingInvite === editingInvite) return;\n    if (!editingInvite) {\n      setTitle('');\n      setSelectedExpireOption('unlimited');\n      setSelectedUsageOption('0');\n      setCustomExpireDate(getServerTime() * 1000 + DEFAULT_CUSTOM_EXPIRE_DATE);\n      setCustomUsageLimit(10);\n      setIsRequestNeeded(false);\n    } else {\n      const {\n        title: editingTitle, usageLimit, expireDate, isRequestNeeded: editingIsRequestNeeded,\n      } = editingInvite;\n      if (editingTitle) setTitle(editingTitle);\n      if (usageLimit) {\n        setSelectedUsageOption(DEFAULT_USAGE_LIMITS.includes(usageLimit) ? usageLimit.toString() : 'custom');\n        setCustomUsageLimit(usageLimit);\n      }\n      if (expireDate) {\n        const minSafeDate = getServerTime() + DEFAULT_CUSTOM_EXPIRE_DATE;\n        setSelectedExpireOption('custom');\n        setCustomExpireDate(Math.max(expireDate, minSafeDate) * 1000);\n      }\n      if (editingIsRequestNeeded) {\n        setIsRequestNeeded(true);\n      }\n    }\n  }, [editingInvite]);\n\n  const handleIsRequestChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsRequestNeeded(e.target.checked);\n  }, []);\n\n  const handleTitleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  }, []);\n\n  const handleCustomUsageLimitChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setCustomUsageLimit(Number.parseInt(e.target.value, 10));\n  }, []);\n\n  const handleExpireDateChange = useCallback((date: Date) => {\n    setCustomExpireDate(date.getTime());\n    closeCalendar();\n  }, [closeCalendar]);\n\n  const handleSaveClick = useCallback(() => {\n    setIsSubmitBlocked(true);\n    const usageLimit = selectedUsageOption === 'custom' ? customUsageLimit : Number(selectedUsageOption);\n    let expireDate;\n    switch (selectedExpireOption) {\n      case 'custom':\n        expireDate = getServerTime() + (customExpireDate - Date.now()) / 1000;\n        break;\n      case 'hour':\n      case 'day':\n      case 'week':\n        expireDate = getServerTime() + DEFAULT_EXPIRE_DATE[selectedExpireOption] / 1000;\n        break;\n      case 'unlimited':\n        expireDate = 0;\n        break;\n      default:\n        expireDate = undefined;\n    }\n\n    if (editingInvite) {\n      editExportedChatInvite({\n        link: editingInvite.link,\n        chatId,\n        title,\n        isRequestNeeded,\n        expireDate,\n        usageLimit,\n      });\n    } else {\n      exportChatInvite({\n        chatId,\n        title,\n        isRequestNeeded,\n        expireDate,\n        usageLimit,\n      });\n    }\n    onScreenSelect(ManagementScreens.Invites);\n  }, [\n    chatId, customExpireDate, customUsageLimit, editExportedChatInvite, editingInvite,\n    exportChatInvite, isRequestNeeded, selectedExpireOption, selectedUsageOption, title, onScreenSelect,\n  ]);\n\n  return (\n    <div className=\"Management ManageInvite\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <Checkbox\n            label={lang('ApproveNewMembers')}\n            subLabel={lang('ApproveNewMembersDescription')}\n            checked={isRequestNeeded}\n            onChange={handleIsRequestChange}\n          />\n        </div>\n        <div className=\"section\">\n          <InputText\n            className=\"link-name\"\n            placeholder={lang('LinkNameHint')}\n            value={title}\n            onChange={handleTitleChange}\n          />\n          <p className=\"text-muted hint\">{lang('LinkNameHelp')}</p>\n        </div>\n        <div className=\"section\">\n          <div className=\"section-header\">{lang('LimitByPeriod')}</div>\n          <RadioGroup\n            name=\"expireOptions\"\n            options={[\n              {\n                value: 'hour',\n                label: lang('Hours', 1),\n              },\n              {\n                value: 'day',\n                label: lang('Days', 1),\n              },\n              {\n                value: 'week',\n                label: lang('Weeks', 1),\n              },\n              {\n                value: 'unlimited',\n                label: lang('NoLimit'),\n              },\n              {\n                value: 'custom',\n                label: lang('lng_group_invite_expire_custom'),\n              },\n            ]}\n            onChange={setSelectedExpireOption}\n            selected={selectedExpireOption}\n          />\n          {selectedExpireOption === 'custom' && (\n            <Button className=\"expire-limit\" isText onClick={openCalendar}>\n              {formatFullDate(lang, customExpireDate)} {formatTime(lang, customExpireDate)}\n            </Button>\n          )}\n          <p className=\"text-muted hint\">{lang('TimeLimitHelp')}</p>\n        </div>\n        {!isRequestNeeded && (\n          <div className=\"section\">\n            <div className=\"section-header\">{lang('LimitNumberOfUses')}</div>\n            <RadioGroup\n              name=\"usageOptions\"\n              options={[\n                ...DEFAULT_USAGE_LIMITS.map((n) => ({ value: n.toString(), label: n })),\n                {\n                  value: '0',\n                  label: lang('NoLimit'),\n                },\n                {\n                  value: 'custom',\n                  label: lang('lng_group_invite_usage_custom'),\n                },\n              ]}\n              onChange={setSelectedUsageOption}\n              selected={selectedUsageOption}\n            />\n            {selectedUsageOption === 'custom' && (\n              <input\n                className=\"form-control usage-limit\"\n                type=\"number\"\n                min=\"1\"\n                max=\"99999\"\n                value={customUsageLimit}\n                onChange={handleCustomUsageLimitChange}\n              />\n            )}\n            <p className=\"text-muted hint\">{lang('UsesLimitHelp')}</p>\n          </div>\n        )}\n        <FloatingActionButton\n          isShown\n          onClick={handleSaveClick}\n          disabled={isSubmitBlocked}\n          ariaLabel={editingInvite ? lang('SaveLink') : lang('CreateLink')}\n        >\n          <i className=\"icon icon-check\" />\n        </FloatingActionButton>\n      </div>\n      <CalendarModal\n        isOpen={isCalendarOpened}\n        isFutureMode\n        withTimePicker\n        onClose={closeCalendar}\n        onSubmit={handleExpireDateChange}\n        selectedAt={customExpireDate}\n        submitButtonLabel={lang('Save')}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { editingInvite } = selectTabState(global).management.byChatId[chatId];\n\n    return {\n      editingInvite,\n    };\n  },\n)(ManageInvite));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChatInviteImporter, ApiExportedInvite, ApiUser } from '../../../api/types';\n\nimport { isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatFullDate, formatMediaDateTime, formatTime } from '../../../util/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  invite?: ApiExportedInvite;\n  importers?: ApiChatInviteImporter[];\n  requesters?: ApiChatInviteImporter[];\n  admin?: ApiUser;\n  isChannel?: boolean;\n};\n\nconst BULLET = '\\u2022';\n\nconst ManageInviteInfo: FC<OwnProps & StateProps> = ({\n  chatId,\n  invite,\n  importers,\n  requesters,\n  isChannel,\n  isActive,\n  onClose,\n}) => {\n  const {\n    showNotification,\n    loadChatInviteImporters,\n    loadChatInviteRequesters,\n    openChat,\n  } = getActions();\n\n  const lang = useLang();\n  const {\n    usage = 0, usageLimit, link, adminId,\n  } = invite || {};\n  const expireDate = invite?.expireDate && (invite.expireDate - getServerTime()) * 1000 + Date.now();\n  const isExpired = ((invite?.expireDate || 0) - getServerTime()) < 0;\n\n  useEffect(() => {\n    if (link) {\n      loadChatInviteImporters({ chatId, link });\n      loadChatInviteRequesters({ chatId, link });\n    }\n  }, [chatId, link, loadChatInviteImporters, loadChatInviteRequesters]);\n\n  const handleCopyClicked = useCallback(() => {\n    copyTextToClipboard(invite!.link);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [invite, lang, showNotification]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const renderImporters = () => {\n    if (!importers?.length && requesters?.length) return undefined;\n    if (!importers) return <Spinner />;\n    return (\n      <div className=\"section\">\n        <p>{importers.length ? lang('PeopleJoined', usage) : lang('NoOneJoined')}</p>\n        <p className=\"text-muted\">\n          {!importers.length && (\n            usageLimit ? lang('PeopleCanJoinViaLinkCount', usageLimit - usage) : lang('NoOneJoinedYet')\n          )}\n          {importers.map((importer) => {\n            const joinTime = formatMediaDateTime(lang, importer.date * 1000, true);\n            const status = importer.isFromChatList ? `${joinTime} ${BULLET} ${lang('JoinedViaFolder')}` : joinTime;\n            return (\n              <ListItem\n                className=\"chat-item-clickable scroll-item small-icon\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => openChat({ id: importer.userId })}\n              >\n                <PrivateChatInfo\n                  userId={importer.userId}\n                  status={status}\n                  forceShowSelf\n                />\n              </ListItem>\n            );\n          })}\n        </p>\n      </div>\n    );\n  };\n\n  const renderRequesters = () => {\n    if (invite?.isRevoked) return undefined;\n    if (!requesters && importers) return <Spinner />;\n    if (!requesters?.length) return undefined;\n    return (\n      <div className=\"section\">\n        <p>{isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}</p>\n        <p className=\"text-muted\">\n          {requesters.map((requester) => (\n            <ListItem\n              className=\"chat-item-clickable scroll-item small-icon\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => openChat({ id: requester.userId })}\n            >\n              <PrivateChatInfo\n                userId={requester.userId}\n                status={formatMediaDateTime(lang, requester.date * 1000, true)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n        </p>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"Management ManageInviteInfo\">\n      <div className=\"custom-scroll\">\n        {!invite && (\n          <p className=\"text-muted\">{lang('Loading')}</p>\n        )}\n        {invite && (\n          <>\n            <div className=\"section\">\n              <h3 className=\"link-title\">{invite.title || invite.link}</h3>\n              <input\n                className=\"form-control\"\n                value={invite.link}\n                readOnly\n                onClick={handleCopyClicked}\n              />\n              <Button className=\"copy-link\" onClick={handleCopyClicked}>{lang('CopyLink')}</Button>\n              {Boolean(expireDate) && (\n                <p className=\"text-muted\">\n                  {isExpired\n                    ? lang('ExpiredLink')\n                    : lang('LinkExpiresIn', `${formatFullDate(lang, expireDate)} ${formatTime(lang, expireDate)}`)}\n                </p>\n              )}\n            </div>\n            {adminId && (\n              <div className=\"section\">\n                <p>{lang('LinkCreatedeBy')}</p>\n                <ListItem\n                  className=\"chat-item-clickable scroll-item small-icon\"\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => openChat({ id: adminId })}\n                >\n                  <PrivateChatInfo\n                    userId={adminId}\n                    status={formatMediaDateTime(lang, invite.date * 1000, true)}\n                    forceShowSelf\n                  />\n                </ListItem>\n              </div>\n            )}\n            {renderImporters()}\n            {renderRequesters()}\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { inviteInfo } = selectTabState(global).management.byChatId[chatId];\n    const { invite, importers, requesters } = inviteInfo || {};\n    const chat = selectChat(global, chatId);\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      invite,\n      importers,\n      requesters,\n      isChannel,\n    };\n  },\n)(ManageInviteInfo));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiExportedInvite } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { STICKER_SIZE_INVITES, TME_LINK_PREFIX } from '../../../config';\nimport { getMainUsername, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatCountdown, MILLISECONDS_IN_DAY } from '../../../util/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInterval from '../../../hooks/useInterval';\nimport useLang from '../../../hooks/useLang';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport LinkField from '../../common/LinkField';\nimport NothingFound from '../../common/NothingFound';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isChannel?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  revokedExportedInvites?: ApiExportedInvite[];\n};\n\nconst BULLET = '\\u2022';\n\nfunction inviteComparator(i1: ApiExportedInvite, i2: ApiExportedInvite) {\n  const { isPermanent: i1IsPermanent, usage: i1Usage = 0, date: i1Date } = i1;\n  const { isPermanent: i2IsPermanent, usage: i2Usage = 0, date: i2Date } = i2;\n  if (i1IsPermanent || i2IsPermanent) return Number(i1IsPermanent) - Number(i2IsPermanent);\n  if (i1Usage || i2Usage) return i2Usage - i1Usage;\n  return i2Date - i1Date;\n}\n\nconst ManageInvites: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  exportedInvites,\n  revokedExportedInvites,\n  isActive,\n  isChannel,\n  onClose,\n  onScreenSelect,\n}) => {\n  const {\n    setEditingExportedInvite,\n    showNotification,\n    editExportedChatInvite,\n    deleteExportedChatInvite,\n    deleteRevokedExportedChatInvites,\n    setOpenedInviteInfo,\n  } = getActions();\n\n  const lang = useLang();\n\n  const [isDeleteRevokeAllDialogOpen, openDeleteRevokeAllDialog, closeDeleteRevokeAllDialog] = useFlag();\n  const [isRevokeDialogOpen, openRevokeDialog, closeRevokeDialog] = useFlag();\n  const [revokingInvite, setRevokingInvite] = useState<ApiExportedInvite | undefined>();\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [deletingInvite, setDeletingInvite] = useState<ApiExportedInvite | undefined>();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const hasDetailedCountdown = useMemo(() => {\n    if (!exportedInvites) return undefined;\n    return exportedInvites\n      .some(({ expireDate }) => (\n        expireDate && (expireDate - getServerTime() < MILLISECONDS_IN_DAY / 1000)\n      ));\n  }, [exportedInvites]);\n  const forceUpdate = useForceUpdate();\n  useInterval(() => {\n    forceUpdate();\n  }, hasDetailedCountdown ? 1000 : undefined);\n\n  const chatMainUsername = useMemo(() => chat && getMainUsername(chat), [chat]);\n  const primaryInvite = exportedInvites?.find(({ isPermanent }) => isPermanent);\n  const primaryInviteLink = chatMainUsername ? `${TME_LINK_PREFIX}${chatMainUsername}` : primaryInvite?.link;\n  const temporalInvites = useMemo(() => {\n    const invites = chat?.usernames ? exportedInvites : exportedInvites?.filter(({ isPermanent }) => !isPermanent);\n    return invites?.sort(inviteComparator);\n  }, [chat?.usernames, exportedInvites]);\n\n  const editInvite = (invite: ApiExportedInvite) => {\n    setEditingExportedInvite({ chatId, invite });\n    onScreenSelect(ManagementScreens.EditInvite);\n  };\n\n  const revokeInvite = useCallback((invite: ApiExportedInvite) => {\n    const {\n      link, title, isRequestNeeded, expireDate, usageLimit,\n    } = invite;\n    editExportedChatInvite({\n      chatId,\n      link,\n      title,\n      isRequestNeeded,\n      expireDate,\n      usageLimit,\n      isRevoked: true,\n    });\n  }, [chatId, editExportedChatInvite]);\n\n  const askToRevoke = useCallback((invite: ApiExportedInvite) => {\n    setRevokingInvite(invite);\n    openRevokeDialog();\n  }, [openRevokeDialog]);\n\n  const handleRevoke = useCallback(() => {\n    if (!revokingInvite) return;\n    revokeInvite(revokingInvite);\n    setRevokingInvite(undefined);\n    closeRevokeDialog();\n  }, [closeRevokeDialog, revokeInvite, revokingInvite]);\n\n  const handleCreateNewClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.EditInvite);\n  }, [onScreenSelect]);\n\n  const handlePrimaryRevoke = useCallback(() => {\n    if (primaryInvite) {\n      askToRevoke(primaryInvite);\n    }\n  }, [askToRevoke, primaryInvite]);\n\n  const handleDeleteAllRevoked = useCallback(() => {\n    deleteRevokedExportedChatInvites({ chatId });\n    closeDeleteRevokeAllDialog();\n  }, [chatId, closeDeleteRevokeAllDialog, deleteRevokedExportedChatInvites]);\n\n  const showInviteInfo = useCallback((invite: ApiExportedInvite) => {\n    setOpenedInviteInfo({ chatId, invite });\n    onScreenSelect(ManagementScreens.InviteInfo);\n  }, [chatId, onScreenSelect, setOpenedInviteInfo]);\n\n  const deleteInvite = useCallback((invite: ApiExportedInvite) => {\n    deleteExportedChatInvite({ chatId, link: invite.link });\n  }, [chatId, deleteExportedChatInvite]);\n\n  const askToDelete = useCallback((invite: ApiExportedInvite) => {\n    setDeletingInvite(invite);\n    openDeleteDialog();\n  }, [openDeleteDialog]);\n\n  const handleDelete = useCallback(() => {\n    if (!deletingInvite) return;\n    deleteInvite(deletingInvite);\n    setDeletingInvite(undefined);\n    closeDeleteDialog();\n  }, [closeDeleteDialog, deleteInvite, deletingInvite]);\n\n  const copyLink = useCallback((link: string) => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [lang, showNotification]);\n\n  const prepareUsageText = (invite: ApiExportedInvite) => {\n    const {\n      usage = 0, usageLimit, expireDate, isPermanent, requested, isRevoked,\n    } = invite;\n    let text = '';\n    if (!isRevoked && usageLimit && usage < usageLimit) {\n      text = lang('CanJoin', usageLimit - usage);\n    } else if (usage) {\n      text = lang('PeopleJoined', usage);\n    } else {\n      text = lang('NoOneJoined');\n    }\n\n    if (isRevoked) {\n      text += ` ${BULLET} ${lang('Revoked')}`;\n      return text;\n    }\n\n    if (requested) {\n      text += ` ${BULLET} ${lang('JoinRequests', requested)}`;\n    }\n\n    if (usageLimit !== undefined && usage === usageLimit) {\n      text += ` ${BULLET} ${lang('LinkLimitReached')}`;\n    } else if (expireDate) {\n      const diff = (expireDate - getServerTime()) * 1000;\n      text += ` ${BULLET} `;\n      if (diff > 0) {\n        text += lang('InviteLink.ExpiresIn', formatCountdown(lang, diff));\n      } else {\n        text += lang('InviteLink.Expired');\n      }\n    } else if (isPermanent) {\n      text += ` ${BULLET} ${lang('Permanent')}`;\n    }\n\n    return text;\n  };\n\n  const getInviteIconClass = (invite: ApiExportedInvite) => {\n    const {\n      usage = 0, usageLimit, isRevoked, expireDate,\n    } = invite;\n    if (isRevoked) {\n      return 'link-status-icon-gray';\n    }\n    if (usageLimit && usage < usageLimit) {\n      return 'link-status-icon-green';\n    }\n    if (expireDate) {\n      const diff = (expireDate - getServerTime()) * 1000;\n      if (diff <= 0) {\n        return 'link-status-icon-red';\n      }\n    }\n    return 'link-status-icon-blue';\n  };\n\n  const prepareContextActions = (invite: ApiExportedInvite) => {\n    const actions: MenuItemContextAction[] = [];\n    actions.push({\n      title: lang('Copy'),\n      icon: 'copy',\n      handler: () => copyLink(invite.link),\n    });\n\n    if (!invite.isPermanent && !invite.isRevoked) {\n      actions.push({\n        title: lang('Edit'),\n        icon: 'edit',\n        handler: () => editInvite(invite),\n      });\n    }\n\n    if (!invite.isRevoked) {\n      actions.push({\n        title: lang('RevokeButton'),\n        icon: 'delete',\n        handler: () => askToRevoke(invite),\n        destructive: true,\n      });\n    } else {\n      actions.push({\n        title: lang('DeleteLink'),\n        icon: 'delete',\n        handler: () => askToDelete(invite),\n        destructive: true,\n      });\n    }\n    return actions;\n  };\n\n  return (\n    <div className=\"Management ManageInvites\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIcon\n            tgsUrl={LOCAL_TGS_URLS.Invite}\n            size={STICKER_SIZE_INVITES}\n            className=\"section-icon\"\n          />\n          <p className=\"text-muted\">{isChannel ? lang('PrimaryLinkHelpChannel') : lang('PrimaryLinkHelp')}</p>\n        </div>\n        {primaryInviteLink && (\n          <LinkField\n            className=\"section\"\n            link={primaryInviteLink}\n            withShare\n            onRevoke={!chat?.usernames ? handlePrimaryRevoke : undefined}\n            title={chat?.usernames ? lang('PublicLink') : lang('lng_create_permanent_link_title')}\n          />\n        )}\n        <div className=\"section\" teactFastList>\n          <Button isText key=\"create\" className=\"create-link\" onClick={handleCreateNewClick}>\n            {lang('CreateNewLink')}\n          </Button>\n          {(!temporalInvites || !temporalInvites.length) && <NothingFound text=\"No links found\" key=\"nothing\" />}\n          {temporalInvites?.map((invite) => (\n            <ListItem\n              leftElement={<i className={`icon icon-link link-status-icon ${getInviteIconClass(invite)}`} />}\n              secondaryIcon=\"more\"\n              multiline\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => showInviteInfo(invite)}\n              contextActions={prepareContextActions(invite)}\n              key={invite.link}\n            >\n              <span className=\"title invite-title\">{invite.title || invite.link}</span>\n              <span className=\"subtitle\" dir=\"auto\">\n                {prepareUsageText(invite)}\n              </span>\n            </ListItem>\n          ))}\n          <p className=\"text-muted hint\" key=\"links-hint\">{lang('ManageLinksInfoHelp')}</p>\n        </div>\n        {revokedExportedInvites && Boolean(revokedExportedInvites.length) && (\n          <div className=\"section\" teactFastList>\n            <p className=\"text-muted\" key=\"title\">{lang('RevokedLinks')}</p>\n            <ListItem\n              icon=\"delete\"\n              destructive\n              key=\"delete\"\n              onClick={openDeleteRevokeAllDialog}\n            >\n              <span className=\"title\">{lang('DeleteAllRevokedLinks')}</span>\n            </ListItem>\n            {revokedExportedInvites?.map((invite) => (\n              <ListItem\n                leftElement={<i className={`icon icon-link link-status-icon ${getInviteIconClass(invite)}`} />}\n                secondaryIcon=\"more\"\n                multiline\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => showInviteInfo(invite)}\n                contextActions={prepareContextActions(invite)}\n                key={invite.link}\n              >\n                <span className=\"title\">{invite.title || invite.link}</span>\n                <span className=\"subtitle\" dir=\"auto\">\n                  {prepareUsageText(invite)}\n                </span>\n              </ListItem>\n            ))}\n          </div>\n        )}\n      </div>\n      <ConfirmDialog\n        isOpen={isDeleteRevokeAllDialogOpen}\n        onClose={closeDeleteRevokeAllDialog}\n        title={lang('DeleteAllRevokedLinks')}\n        text={lang('DeleteAllRevokedLinkHelp')}\n        confirmIsDestructive\n        confirmLabel={lang('DeleteAll')}\n        confirmHandler={handleDeleteAllRevoked}\n      />\n      <ConfirmDialog\n        isOpen={isRevokeDialogOpen}\n        onClose={closeRevokeDialog}\n        title={lang('RevokeLink')}\n        text={lang('RevokeAlert')}\n        confirmIsDestructive\n        confirmLabel={lang('RevokeButton')}\n        confirmHandler={handleRevoke}\n      />\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        title={lang('DeleteLink')}\n        text={lang('DeleteLinkHelp')}\n        confirmIsDestructive\n        confirmLabel={lang('Delete')}\n        confirmHandler={handleDelete}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { invites, revokedInvites } = selectTabState(global).management.byChatId[chatId];\n    const chat = selectChat(global, chatId);\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      exportedInvites: invites,\n      revokedExportedInvites: revokedInvites,\n      chat,\n      isChannel,\n    };\n  },\n)(ManageInvites));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { createClassNameBuilder } from '../../../util/buildClassName';\nimport { formatHumanDate, formatTime, isToday } from '../../../util/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\nimport Button from '../../ui/Button';\n\nimport './JoinRequest.scss';\n\ntype OwnProps = {\n  userId: string;\n  about?: string;\n  isChannel?: boolean;\n  date: number;\n  chatId: string;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n};\n\nconst JoinRequest: FC<OwnProps & StateProps> = ({\n  userId,\n  chatId,\n  about,\n  date,\n  isChannel,\n  user,\n}) => {\n  const { openChat, hideChatJoinRequest } = getActions();\n\n  const buildClassName = createClassNameBuilder('JoinRequest');\n  const lang = useLang();\n\n  const fullName = getUserFullName(user);\n  const fixedDate = (date - getServerTime()) * 1000 + Date.now();\n\n  const dateString = isToday(new Date(fixedDate))\n    ? formatTime(lang, fixedDate) : formatHumanDate(lang, fixedDate, true, false, true);\n\n  const handleUserClick = () => {\n    openChat({ id: userId });\n  };\n\n  const handleAcceptRequest = useCallback(() => {\n    hideChatJoinRequest({ chatId, userId, isApproved: true });\n  }, [chatId, hideChatJoinRequest, userId]);\n\n  const handleRejectRequest = useCallback(() => {\n    hideChatJoinRequest({ chatId, userId, isApproved: false });\n  }, [chatId, hideChatJoinRequest, userId]);\n\n  return (\n    <div className={buildClassName('&')}>\n      <div className={buildClassName('top')}>\n        <div className={buildClassName('user')} onClick={handleUserClick}>\n          <Avatar\n            key={userId}\n            size=\"medium\"\n            peer={user}\n          />\n          <div className={buildClassName('user-info')}>\n            <div className={buildClassName('user-name')}>{fullName}</div>\n            <div className={buildClassName('user-subtitle')}>{about}</div>\n          </div>\n        </div>\n        <div className={buildClassName('date')}>{dateString}</div>\n      </div>\n      <div className={buildClassName('buttons')}>\n        <Button className={buildClassName('button')} onClick={handleAcceptRequest}>\n          {isChannel ? lang('ChannelAddToChannel') : lang('ChannelAddToGroup')}\n        </Button>\n        <Button className={buildClassName('button')} isText onClick={handleRejectRequest}>\n          {lang('DismissRequest')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectUser(global, userId);\n\n    return {\n      user,\n    };\n  },\n)(JoinRequest));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\n\nimport { STICKER_SIZE_JOIN_REQUESTS } from '../../../config';\nimport { isChatChannel, isUserId } from '../../../global/helpers';\nimport { selectChat } from '../../../global/selectors';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Spinner from '../../ui/Spinner';\nimport JoinRequest from './JoinRequest';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isChannel?: boolean;\n};\n\nconst ManageJoinRequests: FC<OwnProps & StateProps> = ({\n  chat,\n  chatId,\n  isActive,\n  isChannel,\n  onClose,\n}) => {\n  const { hideAllChatJoinRequests, loadChatJoinRequests } = getActions();\n  const [isAcceptAllDialogOpen, openAcceptAllDialog, closeAcceptAllDialog] = useFlag();\n  const [isRejectAllDialogOpen, openRejectAllDialog, closeRejectAllDialog] = useFlag();\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!chat?.joinRequests && !isUserId(chatId)) {\n      loadChatJoinRequests({ chatId });\n    }\n  }, [chat, chatId, loadChatJoinRequests]);\n\n  const handleAcceptAllRequests = useCallback(() => {\n    hideAllChatJoinRequests({ chatId, isApproved: true });\n    closeAcceptAllDialog();\n  }, [hideAllChatJoinRequests, chatId, closeAcceptAllDialog]);\n\n  const handleRejectAllRequests = useCallback(() => {\n    hideAllChatJoinRequests({ chatId, isApproved: false });\n    closeRejectAllDialog();\n  }, [hideAllChatJoinRequests, chatId, closeRejectAllDialog]);\n\n  return (\n    <div className=\"Management ManageJoinRequests\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIcon\n            tgsUrl={LOCAL_TGS_URLS.JoinRequest}\n            size={STICKER_SIZE_JOIN_REQUESTS}\n            className=\"section-icon\"\n          />\n          {Boolean(chat?.joinRequests?.length) && (\n            <div className=\"bulk-actions\">\n              <Button className=\"bulk-action-button\" onClick={openAcceptAllDialog}>Accept all</Button>\n              <Button className=\"bulk-action-button\" onClick={openRejectAllDialog} isText>Dismiss all</Button>\n            </div>\n          )}\n        </div>\n        <div className=\"section\" teactFastList>\n          <p key=\"title\">\n            {!chat?.joinRequests ? lang('Loading') : chat.joinRequests.length\n              ? lang('JoinRequests', chat.joinRequests.length) : lang('NoMemberRequests')}\n          </p>\n          {!chat?.joinRequests && (\n            <Spinner key=\"loading\" />\n          )}\n          {chat?.joinRequests?.length === 0 && (\n            <p className=\"text-muted\" key=\"empty\">\n              {isChannel ? lang('NoSubscribeRequestsDescription') : lang('NoMemberRequestsDescription')}\n            </p>\n          )}\n          {chat?.joinRequests?.map(({ userId, about, date }) => (\n            <JoinRequest\n              userId={userId}\n              about={about}\n              date={date}\n              isChannel={isChannel}\n              chatId={chatId}\n              key={userId}\n            />\n          ))}\n        </div>\n      </div>\n      <ConfirmDialog\n        isOpen={isAcceptAllDialogOpen}\n        onClose={closeAcceptAllDialog}\n        title=\"Accept all requests?\"\n        text=\"Are you sure you want to accept all requests?\"\n        confirmHandler={handleAcceptAllRequests}\n      />\n      <ConfirmDialog\n        isOpen={isRejectAllDialogOpen}\n        onClose={closeRejectAllDialog}\n        title=\"Reject all requests?\"\n        text=\"Are you sure you want to reject all requests?\"\n        confirmHandler={handleRejectAllRequests}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n\n    return {\n      chat,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageJoinRequests));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatReactions, ApiReaction,\n} from '../../../api/types';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport ReactionStaticEmoji from '../../common/ReactionStaticEmoji';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport RadioGroup from '../../ui/RadioGroup';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  availableReactions?: ApiAvailableReaction[];\n  enabledReactions?: ApiChatReactions;\n};\n\nconst ManageReactions: FC<OwnProps & StateProps> = ({\n  availableReactions,\n  enabledReactions,\n  chat,\n  isActive,\n  onClose,\n}) => {\n  const { setChatEnabledReactions } = getActions();\n\n  const lang = useLang();\n  const [isTouched, setIsTouched] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [localEnabledReactions, setLocalEnabledReactions] = useState<ApiChatReactions | undefined>(enabledReactions);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const reactionsOptions = useMemo(() => [{\n    value: 'all',\n    label: lang('AllReactions'),\n  }, {\n    value: 'some',\n    label: lang('SomeReactions'),\n  }, {\n    value: 'none',\n    label: lang('NoReactions'),\n  }], [lang]);\n\n  const handleSaveReactions = useCallback(() => {\n    if (!chat) return;\n    setIsLoading(true);\n\n    setChatEnabledReactions({\n      chatId: chat.id,\n      enabledReactions: localEnabledReactions,\n    });\n  }, [chat, localEnabledReactions, setChatEnabledReactions]);\n\n  useEffect(() => {\n    setIsLoading(false);\n    setIsTouched(false);\n    setLocalEnabledReactions(enabledReactions);\n  }, [enabledReactions]);\n\n  const availableActiveReactions = useMemo<ApiAvailableReaction[] | undefined>(\n    () => availableReactions?.filter(({ isInactive }) => !isInactive),\n    [availableReactions],\n  );\n\n  const handleReactionsOptionChange = useCallback((value: string) => {\n    if (value === 'all') {\n      setLocalEnabledReactions({ type: 'all' });\n    } else if (value === 'some') {\n      setLocalEnabledReactions({\n        type: 'some',\n        allowed: enabledReactions?.type === 'some' ? enabledReactions.allowed : [],\n      });\n    } else {\n      setLocalEnabledReactions(undefined);\n    }\n    setIsTouched(true);\n  }, [enabledReactions]);\n\n  const handleReactionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (!chat || !availableActiveReactions) return;\n\n    const { name, checked } = e.currentTarget;\n    if (localEnabledReactions?.type === 'some') {\n      const reaction = { emoticon: name } as ApiReaction;\n      if (checked) {\n        setLocalEnabledReactions({\n          type: 'some',\n          allowed: [...localEnabledReactions.allowed, reaction],\n        });\n      } else {\n        setLocalEnabledReactions({\n          type: 'some',\n          allowed: localEnabledReactions.allowed.filter((local) => !isSameReaction(local, reaction)),\n        });\n      }\n    }\n    setIsTouched(true);\n  }, [availableActiveReactions, chat, localEnabledReactions]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <h3 className=\"section-heading\">\n            {lang('AvailableReactions')}\n          </h3>\n          <RadioGroup\n            selected={localEnabledReactions?.type || 'none'}\n            name=\"reactions\"\n            options={reactionsOptions}\n            onChange={handleReactionsOptionChange}\n          />\n          <p className=\"section-info mt-4\">\n            {localEnabledReactions?.type === 'all' && lang('EnableAllReactionsInfo')}\n            {localEnabledReactions?.type === 'some' && lang('EnableSomeReactionsInfo')}\n            {!localEnabledReactions && lang('DisableReactionsInfo')}\n          </p>\n        </div>\n        {localEnabledReactions?.type === 'some' && (\n          <div className=\"section\">\n            <h3 className=\"section-heading\">\n              {lang('AvailableReactions')}\n            </h3>\n            {availableActiveReactions?.map(({ reaction, title }) => (\n              <div className=\"ListItem\">\n                <Checkbox\n                  name={reaction.emoticon}\n                  checked={localEnabledReactions?.allowed.some((r) => isSameReaction(reaction, r))}\n                  label={(\n                    <div className=\"Reaction\">\n                      <ReactionStaticEmoji reaction={reaction} availableReactions={availableReactions} />\n                      {title}\n                    </div>\n                  )}\n                  onChange={handleReactionChange}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={handleSaveReactions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n\n    return {\n      enabledReactions: selectChatFullInfo(global, chatId)?.enabledReactions,\n      availableReactions: global.availableReactions,\n      chat,\n    };\n  },\n)(ManageReactions));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPhoto, ApiUser } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport { isUserBot, selectIsChatMuted } from '../../../global/helpers';\nimport {\n  selectChat,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTabState,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\nimport Spinner from '../../ui/Spinner';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  userId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  progress?: ManagementProgress;\n  isMuted?: boolean;\n  personalPhoto?: ApiPhoto;\n  notPersonalPhoto?: ApiPhoto;\n};\n\nconst ERROR_FIRST_NAME_MISSING = 'Please provide first name';\n\nconst ManageUser: FC<OwnProps & StateProps> = ({\n  userId,\n  user,\n  progress,\n  isMuted,\n  onClose,\n  isActive,\n  personalPhoto,\n  notPersonalPhoto,\n}) => {\n  const {\n    updateContact,\n    deleteContact,\n    closeManagement,\n    uploadContactProfilePhoto,\n  } = getActions();\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [isResetPersonalPhotoDialogOpen, openResetPersonalPhotoDialog, closeResetPersonalPhotoDialog] = useFlag();\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [error, setError] = useState<string | undefined>();\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const currentFirstName = user ? (user.firstName || '') : '';\n  const currentLastName = user ? (user.lastName || '') : '';\n\n  const [firstName, setFirstName] = useState(currentFirstName);\n  const [lastName, setLastName] = useState(currentLastName);\n  const [isNotificationsEnabled, setIsNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    setIsNotificationsEnabled(!isMuted);\n  }, [isMuted]);\n\n  useEffect(() => {\n    setIsProfileFieldsTouched(false);\n    closeDeleteDialog();\n  }, [closeDeleteDialog, userId]);\n\n  useEffect(() => {\n    setFirstName(currentFirstName);\n    setLastName(currentLastName);\n  }, [currentFirstName, currentLastName, user]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n      closeDeleteDialog();\n    }\n  }, [closeDeleteDialog, progress]);\n\n  const handleFirstNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n    setIsProfileFieldsTouched(true);\n\n    if (error === ERROR_FIRST_NAME_MISSING) {\n      setError(undefined);\n    }\n  }, [error]);\n\n  const handleLastNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleNotificationChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsNotificationsEnabled(e.target.checked);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleProfileSave = useCallback(() => {\n    const trimmedFirstName = firstName.trim();\n    const trimmedLastName = lastName.trim();\n\n    if (!trimmedFirstName.length) {\n      setError(ERROR_FIRST_NAME_MISSING);\n      return;\n    }\n\n    updateContact({\n      userId,\n      isMuted: !isNotificationsEnabled,\n      firstName: trimmedFirstName,\n      lastName: trimmedLastName,\n    });\n  }, [firstName, lastName, updateContact, userId, isNotificationsEnabled]);\n\n  const handleDeleteContact = useCallback(() => {\n    deleteContact({ userId });\n    closeDeleteDialog();\n    closeManagement();\n  }, [closeDeleteDialog, closeManagement, deleteContact, userId]);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const isSuggestRef = useRef(false);\n\n  const handleSuggestPhoto = useCallback(() => {\n    inputRef.current?.click();\n    isSuggestRef.current = true;\n  }, []);\n\n  const handleSetPersonalPhoto = useCallback(() => {\n    inputRef.current?.click();\n    isSuggestRef.current = false;\n  }, []);\n\n  const handleResetPersonalAvatar = useCallback(() => {\n    closeResetPersonalPhotoDialog();\n    setIsProfileFieldsTouched(true);\n    uploadContactProfilePhoto({ userId });\n  }, [closeResetPersonalPhotoDialog, uploadContactProfilePhoto, userId]);\n\n  const handleSelectAvatar = useCallback((file: File) => {\n    setIsProfileFieldsTouched(true);\n    uploadContactProfilePhoto({ userId, file, isSuggest: isSuggestRef.current });\n  }, [uploadContactProfilePhoto, userId]);\n\n  if (!user) {\n    return undefined;\n  }\n\n  const canSetPersonalPhoto = !isUserBot(user) && user.id !== SERVICE_NOTIFICATIONS_USER_ID;\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <PrivateChatInfo\n            userId={user.id}\n            avatarSize=\"jumbo\"\n            noStatusOrTyping\n            noEmojiStatus\n            withFullInfo\n          />\n          <InputText\n            id=\"user-first-name\"\n            label={lang('UserInfo.FirstNamePlaceholder')}\n            onChange={handleFirstNameChange}\n            value={firstName}\n            error={error === ERROR_FIRST_NAME_MISSING ? error : undefined}\n          />\n          <InputText\n            id=\"user-last-name\"\n            label={lang('UserInfo.LastNamePlaceholder')}\n            onChange={handleLastNameChange}\n            value={lastName}\n          />\n          <div className=\"ListItem narrow\">\n            <Checkbox\n              checked={isNotificationsEnabled}\n              label={lang('Notifications')}\n              subLabel={lang(isNotificationsEnabled\n                ? 'UserInfo.NotificationsEnabled'\n                : 'UserInfo.NotificationsDisabled')}\n              onChange={handleNotificationChange}\n            />\n          </div>\n        </div>\n        {canSetPersonalPhoto && (\n          <div className=\"section\">\n            <ListItem icon=\"camera-add\" ripple onClick={handleSuggestPhoto}>\n              <span className=\"list-item-ellipsis\">{lang('UserInfo.SuggestPhoto', user.firstName)}</span>\n            </ListItem>\n            <ListItem icon=\"camera-add\" ripple onClick={handleSetPersonalPhoto}>\n              <span className=\"list-item-ellipsis\">{lang('UserInfo.SetCustomPhoto', user.firstName)}</span>\n            </ListItem>\n            {personalPhoto && (\n              <ListItem\n                leftElement={(\n                  <Avatar\n                    photo={notPersonalPhoto}\n                    noPersonalPhoto\n                    peer={user}\n                    size=\"mini\"\n                    className=\"personal-photo\"\n                  />\n                )}\n                ripple\n                onClick={openResetPersonalPhotoDialog}\n              >\n                {lang('UserInfo.ResetCustomPhoto')}\n              </ListItem>\n            )}\n            <p className=\"text-muted\" dir=\"auto\">{lang('UserInfo.CustomPhotoInfo', user.firstName)}</p>\n          </div>\n        )}\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {lang('DeleteContact')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        text={lang('AreYouSureDeleteContact')}\n        confirmLabel={lang('DeleteContact')}\n        confirmHandler={handleDeleteContact}\n        confirmIsDestructive\n      />\n      <ConfirmDialog\n        isOpen={isResetPersonalPhotoDialogOpen}\n        onClose={closeResetPersonalPhotoDialog}\n        text={lang('UserInfo.ResetToOriginalAlertText', user.firstName)}\n        confirmLabel={lang('Reset')}\n        confirmHandler={handleResetPersonalAvatar}\n        confirmIsDestructive\n      />\n      <SelectAvatar\n        onChange={handleSelectAvatar}\n        inputRef={inputRef}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectUser(global, userId);\n    const chat = selectChat(global, userId);\n    const userFullInfo = selectUserFullInfo(global, userId);\n    const { progress } = selectTabState(global).management;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const personalPhoto = userFullInfo?.personalPhoto;\n    const notPersonalPhoto = userFullInfo?.profilePhoto || userFullInfo?.fallbackPhoto;\n\n    return {\n      user, progress, isMuted, personalPhoto, notPersonalPhoto,\n    };\n  },\n)(ManageUser));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ManagementType } from '../../../types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectCurrentManagementType } from '../../../global/selectors';\n\nimport ManageBot from './ManageBot';\nimport ManageChannel from './ManageChannel';\nimport ManageChatAdministrators from './ManageChatAdministrators';\nimport ManageChatPrivacyType from './ManageChatPrivacyType';\nimport ManageChatRemovedUsers from './ManageChatRemovedUsers';\nimport ManageDiscussion from './ManageDiscussion';\nimport ManageGroup from './ManageGroup';\nimport ManageGroupAdminRights from './ManageGroupAdminRights';\nimport ManageGroupMembers from './ManageGroupMembers';\nimport ManageGroupPermissions from './ManageGroupPermissions';\nimport ManageGroupUserPermissions from './ManageGroupUserPermissions';\nimport ManageGroupUserPermissionsCreate from './ManageGroupUserPermissionsCreate';\nimport ManageInvite from './ManageInvite';\nimport ManageInviteInfo from './ManageInviteInfo';\nimport ManageInvites from './ManageInvites';\nimport ManageJoinRequests from './ManageJoinRequests';\nimport ManageReactions from './ManageReactions';\nimport ManageUser from './ManageUser';\n\nexport type OwnProps = {\n  chatId: string;\n  currentScreen: ManagementScreens;\n  selectedChatMemberId?: string;\n  isPromotedByCurrentUser?: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  managementType?: ManagementType;\n};\n\nconst Management: FC<OwnProps & StateProps> = ({\n  chatId,\n  currentScreen,\n  selectedChatMemberId,\n  isPromotedByCurrentUser,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n  managementType,\n}) => {\n  switch (currentScreen) {\n    case ManagementScreens.Initial: {\n      switch (managementType) {\n        case 'bot':\n          return (\n            <ManageBot\n              key={chatId}\n              userId={chatId}\n              onClose={onClose}\n              isActive={isActive}\n            />\n          );\n        case 'user':\n          return (\n            <ManageUser\n              key={chatId}\n              userId={chatId}\n              onClose={onClose}\n              isActive={isActive}\n            />\n          );\n        case 'group':\n          return (\n            <ManageGroup\n              key={chatId}\n              chatId={chatId}\n              onScreenSelect={onScreenSelect}\n              onClose={onClose}\n              isActive={isActive || [\n                ManagementScreens.ChatPrivacyType,\n                ManagementScreens.Discussion,\n                ManagementScreens.GroupPermissions,\n                ManagementScreens.ChatAdministrators,\n                ManagementScreens.GroupRemovedUsers,\n                ManagementScreens.GroupUserPermissionsCreate,\n                ManagementScreens.GroupUserPermissions,\n                ManagementScreens.ChatAdminRights,\n                ManagementScreens.ChatNewAdminRights,\n                ManagementScreens.GroupRecentActions,\n              ].includes(currentScreen)}\n            />\n          );\n        case 'channel':\n          return (\n            <ManageChannel\n              key={chatId}\n              chatId={chatId}\n              onScreenSelect={onScreenSelect}\n              onClose={onClose}\n              isActive={isActive || [\n                ManagementScreens.ChannelSubscribers,\n                ManagementScreens.ChatAdministrators,\n                ManagementScreens.ChannelRemovedUsers,\n                ManagementScreens.Discussion,\n                ManagementScreens.ChatPrivacyType,\n                ManagementScreens.ChatAdminRights,\n                ManagementScreens.ChatNewAdminRights,\n                ManagementScreens.GroupRecentActions,\n              ].includes(currentScreen)}\n            />\n          );\n      }\n\n      break;\n    }\n\n    case ManagementScreens.ChatPrivacyType:\n      return (\n        <ManageChatPrivacyType\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.Discussion:\n      return (\n        <ManageDiscussion\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupPermissions:\n      return (\n        <ManageGroupPermissions\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n          isActive={isActive || [\n            ManagementScreens.GroupRemovedUsers,\n            ManagementScreens.GroupUserPermissionsCreate,\n            ManagementScreens.GroupUserPermissions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChannelRemovedUsers:\n    case ManagementScreens.GroupRemovedUsers:\n      return (\n        <ManageChatRemovedUsers\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupUserPermissionsCreate:\n      return (\n        <ManageGroupUserPermissionsCreate\n          chatId={chatId}\n          onChatMemberSelect={onChatMemberSelect}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            ManagementScreens.GroupUserPermissions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupUserPermissions:\n      return (\n        <ManageGroupUserPermissions\n          chatId={chatId}\n          selectedChatMemberId={selectedChatMemberId}\n          isPromotedByCurrentUser={isPromotedByCurrentUser}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChatAdministrators:\n      return (\n        <ManageChatAdministrators\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n          isActive={isActive || [\n            ManagementScreens.ChatAdminRights,\n            ManagementScreens.ChatNewAdminRights,\n            ManagementScreens.GroupRecentActions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChatNewAdminRights:\n    case ManagementScreens.ChatAdminRights:\n      return (\n        <ManageGroupAdminRights\n          chatId={chatId}\n          isNewAdmin={currentScreen === ManagementScreens.ChatNewAdminRights}\n          selectedUserId={selectedChatMemberId}\n          isPromotedByCurrentUser={isPromotedByCurrentUser}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChannelSubscribers:\n    case ManagementScreens.GroupMembers:\n      return (\n        <ManageGroupMembers\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.Invites:\n      return (\n        <ManageInvites\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n        />\n      );\n    case ManagementScreens.EditInvite:\n      return (\n        <ManageInvite\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n        />\n      );\n    case ManagementScreens.GroupAddAdmins:\n      return (\n        <ManageGroupMembers\n          chatId={chatId}\n          noAdmins\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n        />\n      );\n\n    case ManagementScreens.Reactions:\n      return (\n        <ManageReactions\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.InviteInfo:\n      return (\n        <ManageInviteInfo\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.JoinRequests:\n      return (\n        <ManageJoinRequests\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n  }\n\n  return undefined; // Never reached\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const managementType = selectCurrentManagementType(global);\n\n    return {\n      managementType,\n    };\n  },\n)(Management));\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiMessagePublicForward,\n  ApiPostStatistics,\n  StatisticsGraph,\n} from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { STATISTICS_PUBLIC_FORWARDS_LIMIT } from '../../../config';\nimport { selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport StatisticsMessagePublicForward from './StatisticsMessagePublicForward';\nimport StatisticsOverview from './StatisticsOverview';\n\nimport styles from './Statistics.module.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst GRAPH_TITLES = {\n  viewsGraph: 'Stats.MessageInteractionsTitle',\n  reactionsGraph: 'ReactionsByEmotionChartTitle',\n};\nconst GRAPHS = Object.keys(GRAPH_TITLES) as (keyof ApiPostStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n  isActive: boolean;\n};\n\nexport type StateProps = {\n  statistics?: ApiPostStatistics;\n  messageId?: number;\n  dcId?: number;\n};\n\nfunction Statistics({\n  chatId,\n  isActive,\n  statistics,\n  dcId,\n  messageId,\n}: OwnProps & StateProps) {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadMessageStatistics, loadMessagePublicForwards, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    if (messageId) {\n      loadMessageStatistics({ chatId, messageId });\n    }\n  }, [chatId, loadMessageStatistics, messageId]);\n\n  useEffect(() => {\n    if (!isActive || messageId) {\n      loadedCharts.current = [];\n      setIsReady(false);\n    }\n  }, [isActive, messageId]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    GRAPHS.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({ name, chatId, token: graph });\n      }\n    });\n  }, [chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      GRAPHS.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph as StatisticsGraph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((GRAPH_TITLES as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    isReady, statistics, lang, chatId, messageId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  const handleLoadMore = useLastCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards && messageId) {\n      loadMessagePublicForwards({ chatId, messageId });\n    }\n  });\n\n  if (!isReady || !statistics || !messageId) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, 'custom-scroll', isReady && styles.ready)}>\n      <StatisticsOverview statistics={statistics} type=\"message\" title={lang('StatisticOverview')} />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {GRAPHS.map((graph) => (\n          <div className={buildClassName(styles.graph, !loadedCharts.current.includes(graph) && styles.hidden)} />\n        ))}\n      </div>\n\n      {Boolean(statistics.publicForwards) && (\n        <div className={styles.publicForwards}>\n          <h2 className={styles.publicForwardsTitle}>{lang('Stats.Message.PublicShares')}</h2>\n\n          <InfiniteScroll\n            items={statistics.publicForwardsData}\n            itemSelector=\".statistic-public-forward\"\n            onLoadMore={handleLoadMore}\n            preloadBackwards={STATISTICS_PUBLIC_FORWARDS_LIMIT}\n            noFastList\n          >\n            {(statistics.publicForwardsData as ApiMessagePublicForward[]).map((item) => (\n              <StatisticsMessagePublicForward key={item.messageId} data={item} />\n            ))}\n          </InfiniteScroll>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const tabState = selectTabState(global);\n    const statistics = tabState.statistics.currentMessage;\n    const messageId = tabState.statistics.currentMessageId;\n\n    return { statistics, dcId, messageId };\n  },\n)(Statistics));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"negbFsRwvclNi7mcE4f2\",\"withImage\":\"pF4WlPXCdaZYVz0V_2Wl\",\"imageContainer\":\"_XCCw8_mY2kZEbx6xsPK\",\"image\":\"CRlJlHM_Jj7X_MAvbjMT\",\"round\":\"eDChvxtpOXbftlqg8jkq\",\"circle\":\"GHQJ90L0qjbdPR5X98J2\",\"withStoryCircle\":\"OprPkOPHUsPsNrMbkQfF\",\"summary\":\"pZVpWgP0EEneLYcMoGnl\",\"title\":\"R56P3w_l10Hu_feFCGh6\",\"info\":\"lY77txbsPNP_XswjRvfu\",\"meta\":\"F1eH9URbEybEvAQFxscw\",\"metaWithIcon\":\"VSrVWNhSLVjueuOkAcN5\",\"metaIcon\":\"Fbn0GqXAXveknzDnwuIu\",\"date\":\"Xqmbl3P_X9DSqlW2joQr\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { StatisticsMessageInteractionCounter, StatisticsStoryInteractionCounter } from '../../../api/types';\n\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useLang from '../../../hooks/useLang';\n\nimport Icon from '../../common/Icon';\n\nimport styles from './StatisticsRecentPost.module.scss';\n\ninterface OwnProps {\n  postStatistic: StatisticsStoryInteractionCounter | StatisticsMessageInteractionCounter;\n}\n\nfunction StatisticsRecentPostMeta({ postStatistic }: OwnProps) {\n  const lang = useLang();\n  return (\n    <div className={styles.meta}>\n      {postStatistic.reactionsCount > 0 && (\n        <span className={styles.metaWithIcon}>\n          <Icon name=\"heart-outline\" className={styles.metaIcon} />\n          {formatIntegerCompact(postStatistic.reactionsCount)}\n        </span>\n      )}\n\n      {postStatistic.forwardsCount > 0 && (\n        <span className={styles.metaWithIcon}>\n          <Icon name=\"forward\" className={styles.metaIcon} />\n          {formatIntegerCompact(postStatistic.forwardsCount)}\n        </span>\n      )}\n\n      {!postStatistic.forwardsCount && !postStatistic.reactionsCount\n        && lang('ChannelStats.SharesCount_ZeroValueHolder')}\n    </div>\n  );\n}\n\nexport default memo(StatisticsRecentPostMeta);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, StatisticsMessageInteractionCounter } from '../../../api/types';\nimport type { LangFn } from '../../../hooks/useLang';\n\nimport {\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageVideo,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dateFormat';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useLang from '../../../hooks/useLang';\nimport useMedia from '../../../hooks/useMedia';\n\nimport Icon from '../../common/Icon';\nimport StatisticsRecentPostMeta from './StatisticsRecentPostMeta';\n\nimport styles from './StatisticsRecentPost.module.scss';\n\nexport type OwnProps = {\n  postStatistic: StatisticsMessageInteractionCounter;\n  message: ApiMessage;\n};\n\nconst StatisticsRecentMessage: FC<OwnProps> = ({ postStatistic, message }) => {\n  const lang = useLang();\n  const { toggleMessageStatistics } = getActions();\n\n  const mediaThumbnail = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'micro'));\n  const isRoundVideo = Boolean(getMessageRoundVideo(message));\n\n  const handleClick = useCallback(() => {\n    toggleMessageStatistics({ messageId: message.id });\n  }, [toggleMessageStatistics, message.id]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        Boolean(mediaBlobUrl || mediaThumbnail) && styles.withImage,\n      )}\n      onClick={handleClick}\n    >\n      <div className={styles.title}>\n        <div className={styles.summary}>\n          {renderSummary(lang, message, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n        </div>\n        <div className={styles.meta}>\n          {lang('ChannelStats.ViewsCount', postStatistic.viewsCount, 'i')}\n        </div>\n      </div>\n\n      <div className={styles.info}>\n        <div className={styles.date}>\n          {formatDateTimeToString(message.date * 1000, lang.code)}\n        </div>\n        <StatisticsRecentPostMeta postStatistic={postStatistic} />\n      </div>\n    </div>\n  );\n};\n\nfunction renderSummary(lang: LangFn, message: ApiMessage, blobUrl?: string, isRoundVideo?: boolean) {\n  if (!blobUrl) {\n    return renderMessageSummary(lang, message);\n  }\n\n  return (\n    <span>\n      <img\n        src={blobUrl}\n        alt=\"\"\n        draggable={false}\n        className={buildClassName(styles.image, isRoundVideo && styles.round)}\n      />\n      {getMessageVideo(message) && <Icon name=\"play\" />}\n      {renderMessageSummary(lang, message, true)}\n    </span>\n  );\n}\n\nexport default memo(StatisticsRecentMessage);\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiTypeStory,\n  StatisticsStoryInteractionCounter,\n} from '../../../api/types';\nimport type { LangFn } from '../../../hooks/useLang';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dateFormat';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\n\nimport Avatar from '../../common/Avatar';\nimport StatisticsRecentPostMeta from './StatisticsRecentPostMeta';\n\nimport styles from './StatisticsRecentPost.module.scss';\n\nexport type OwnProps = {\n  chat: ApiChat;\n  story?: ApiTypeStory;\n  postStatistic: StatisticsStoryInteractionCounter;\n};\n\nfunction StatisticsRecentStory({ chat, story, postStatistic }: OwnProps) {\n  const lang = useLang();\n  const { toggleStoryStatistics } = getActions();\n  const isLoaded = story && 'content' in story;\n\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const mediaThumbnail = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  const handleClick = useLastCallback(() => {\n    toggleStoryStatistics({ storyId: postStatistic.storyId });\n  });\n\n  return (\n    <div\n      className={buildClassName(styles.root, styles.withImage)}\n      onClick={handleClick}\n    >\n      <div className={styles.title}>\n        <div className={styles.summary}>\n          {renderSummary(lang, chat, imgBlobUrl || mediaThumbnail)}\n        </div>\n        <div className={styles.meta}>\n          {lang('ChannelStats.ViewsCount', postStatistic.viewsCount, 'i')}\n        </div>\n      </div>\n\n      <div className={styles.info}>\n        <div className={styles.date}>\n          {isLoaded && Boolean(story.date) && formatDateTimeToString(story.date * 1000, lang.code)}\n        </div>\n        <StatisticsRecentPostMeta postStatistic={postStatistic} />\n      </div>\n    </div>\n  );\n}\n\nfunction renderSummary(lang: LangFn, chat: ApiChat, blobUrl?: string) {\n  return (\n    <span>\n      {blobUrl ? (\n        <span className={styles.imageContainer}>\n          <img\n            src={blobUrl}\n            alt=\"\"\n            draggable={false}\n            className={buildClassName(styles.image, styles.circle, styles.withStoryCircle)}\n          />\n        </span>\n      ) : (\n        <Avatar\n          peer={chat}\n          size=\"small-mobile\"\n          className={styles.image}\n          withStorySolid\n          forceUnreadStorySolid\n        />\n      )}\n\n      {lang('Story')}\n    </span>\n  );\n}\n\nexport default memo(StatisticsRecentStory);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChannelStatistics,\n  ApiChat,\n  ApiGroupStatistics,\n  ApiMessage,\n  ApiTypeStory,\n  StatisticsGraph,\n} from '../../../api/types';\n\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessages,\n  selectPeerStories,\n  selectStatistics,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLang from '../../../hooks/useLang';\n\nimport Loading from '../../ui/Loading';\nimport StatisticsOverview from './StatisticsOverview';\nimport StatisticsRecentMessage from './StatisticsRecentMessage';\nimport StatisticsRecentStory from './StatisticsRecentStory';\n\nimport styles from './Statistics.module.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst CHANNEL_GRAPHS_TITLES = {\n  growthGraph: 'ChannelStats.Graph.Growth',\n  followersGraph: 'ChannelStats.Graph.Followers',\n  muteGraph: 'ChannelStats.Graph.Notifications',\n  topHoursGraph: 'ChannelStats.Graph.ViewsByHours',\n  viewsBySourceGraph: 'ChannelStats.Graph.ViewsBySource',\n  newFollowersBySourceGraph: 'ChannelStats.Graph.NewFollowersBySource',\n  languagesGraph: 'ChannelStats.Graph.Language',\n  interactionsGraph: 'ChannelStats.Graph.Interactions',\n  reactionsByEmotionGraph: 'ChannelStats.Graph.Reactions',\n  storyInteractionsGraph: 'ChannelStats.Graph.Stories',\n  storyReactionsByEmotionGraph: 'ChannelStats.Graph.StoriesReactions',\n};\nconst CHANNEL_GRAPHS = Object.keys(CHANNEL_GRAPHS_TITLES) as (keyof ApiChannelStatistics)[];\n\nconst GROUP_GRAPHS_TITLES = {\n  growthGraph: 'Stats.GroupGrowthTitle',\n  membersGraph: 'Stats.GroupMembersTitle',\n  languagesGraph: 'Stats.GroupLanguagesTitle',\n  messagesGraph: 'Stats.GroupMessagesTitle',\n  actionsGraph: 'Stats.GroupActionsTitle',\n  topHoursGraph: 'Stats.GroupTopHoursTitle',\n};\nconst GROUP_GRAPHS = Object.keys(GROUP_GRAPHS_TITLES) as (keyof ApiGroupStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n};\n\nexport type StateProps = {\n  chat?: ApiChat;\n  statistics: ApiChannelStatistics | ApiGroupStatistics;\n  dcId?: number;\n  isGroup: boolean;\n  messagesById: Record<string, ApiMessage>;\n  storiesById?: Record<string, ApiTypeStory>;\n};\n\nconst Statistics: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  statistics,\n  dcId,\n  isGroup,\n  messagesById,\n  storiesById,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadStatistics, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    loadStatistics({ chatId, isGroup });\n  }, [chatId, loadStatistics, isGroup]);\n\n  const graphs = useMemo(() => {\n    return isGroup ? GROUP_GRAPHS : CHANNEL_GRAPHS;\n  }, [isGroup]);\n\n  const graphTitles = useMemo(() => {\n    return isGroup ? GROUP_GRAPHS_TITLES : CHANNEL_GRAPHS_TITLES;\n  }, [isGroup]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    graphs.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({\n          name,\n          chatId,\n          token: graph,\n          // Hardcode percentage for languages graph, since API does not return `percentage` flag\n          isPercentage: name === 'languagesGraph',\n        });\n      }\n    });\n  }, [graphs, chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      graphs.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((graphTitles as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n\n        containerRef.current!.children[index].classList.remove(styles.hidden);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    graphs, graphTitles, isReady, statistics, lang, chatId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  if (!isReady || !statistics) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, 'custom-scroll', isReady && styles.ready)}>\n      <StatisticsOverview\n        statistics={statistics}\n        type={isGroup ? 'group' : 'channel'}\n        title={lang('StatisticOverview')}\n      />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {graphs.map((graph) => (\n          <div key={graph} className={buildClassName(styles.graph, styles.hidden)} />\n        ))}\n      </div>\n\n      {Boolean((statistics as ApiChannelStatistics).recentPosts?.length) && (\n        <div className={styles.messages}>\n          <h2 className={styles.messagesTitle}>{lang('ChannelStats.Recent.Header')}</h2>\n\n          {(statistics as ApiChannelStatistics).recentPosts.map((postStatistic) => {\n            if ('msgId' in postStatistic) {\n              const message = messagesById[postStatistic.msgId];\n              if (!message || !('content' in message)) return undefined;\n\n              return (\n                <StatisticsRecentMessage\n                  key={`statistic_message_${postStatistic.msgId}`}\n                  message={message}\n                  postStatistic={postStatistic}\n                />\n              );\n            }\n\n            if ('storyId' in postStatistic && chat) {\n              const story = storiesById?.[postStatistic.storyId];\n\n              return (\n                <StatisticsRecentStory\n                  key={`statistic_story_${postStatistic.storyId}`}\n                  chat={chat}\n                  story={story}\n                  postStatistic={postStatistic}\n                />\n              );\n            }\n\n            return undefined;\n          })}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const statistics = selectStatistics(global, chatId);\n    const chat = selectChat(global, chatId);\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const isGroup = chat?.type === 'chatTypeSuperGroup';\n    const messagesById = selectChatMessages(global, chatId);\n    const storiesById = selectPeerStories(global, chatId)?.byId;\n\n    return {\n      statistics, dcId, isGroup, chat, messagesById, storiesById,\n    };\n  },\n)(Statistics));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessagePublicForward } from '../../../api/types';\n\nimport { getMainUsername } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\n\nimport styles from './StatisticsPublicForward.module.scss';\n\nexport type OwnProps = {\n  data: ApiMessagePublicForward;\n};\n\nconst StatisticsMessagePublicForward: FC<OwnProps> = ({ data }) => {\n  const lang = useLang();\n  const { openChatByUsername } = getActions();\n\n  const username = useMemo(() => (data.chat ? getMainUsername(data.chat) : undefined), [data.chat]);\n  const handleClick = useCallback(() => {\n    openChatByUsername({ username: username!, messageId: data.messageId });\n  }, [data.messageId, openChatByUsername, username]);\n\n  return (\n    <div className={buildClassName(styles.root, 'statistic-public-forward')} onClick={handleClick}>\n      <Avatar size=\"medium\" peer={data.chat} />\n\n      <div>\n        <div className={styles.title}>\n          {data.title}\n        </div>\n\n        <div className={styles.views}>\n          {lang('ChannelStats.ViewsCount', data.views, 'i')}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(StatisticsMessagePublicForward);\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiChat, ApiStoryPublicForward, ApiUser,\n} from '../../../api/types';\n\nimport { getChatTitle, getUserFullName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Avatar from '../../common/Avatar';\n\nimport styles from './StatisticsPublicForward.module.scss';\n\nexport type OwnProps = {\n  data: ApiStoryPublicForward;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n};\n\nfunction StatisticsMessagePublicForward({ data, chatsById, usersById }: OwnProps) {\n  const lang = useLang();\n  const { openChat } = getActions();\n  const user = usersById[data.peerId];\n  const chat = chatsById[data.peerId];\n\n  const handleClick = useLastCallback(() => {\n    openChat({ id: user.id });\n  });\n\n  return (\n    <div className={buildClassName(styles.root, 'statistic-public-forward')} onClick={handleClick}>\n      <Avatar size=\"medium\" peer={user || chat} withStorySolid forceUnreadStorySolid />\n\n      <div>\n        <div className={styles.title}>\n          {user ? getUserFullName(user) : getChatTitle(lang, chat)}\n        </div>\n\n        <div className={styles.views}>\n          {data.viewsCount ? lang('ChannelStats.ViewsCount', data.viewsCount, 'i') : lang('NoViews')}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default memo(StatisticsMessagePublicForward);\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiPostStatistics,\n  ApiUser,\n  StatisticsGraph,\n} from '../../../api/types';\n\nimport { STATISTICS_PUBLIC_FORWARDS_LIMIT } from '../../../config';\nimport { selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport StatisticsMessagePublicForward from './StatisticsMessagePublicForward';\nimport StatisticsOverview from './StatisticsOverview';\nimport StatisticsStoryPublicForward from './StatisticsStoryPublicForward';\n\nimport styles from './Statistics.module.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst GRAPH_TITLES = {\n  viewsGraph: 'Stats.StoryInteractionsTitle',\n  reactionsGraph: 'ReactionsByEmotionChartTitle',\n};\nconst GRAPHS = Object.keys(GRAPH_TITLES) as (keyof ApiPostStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n  isActive: boolean;\n};\n\nexport type StateProps = {\n  statistics?: ApiPostStatistics;\n  storyId?: number;\n  dcId?: number;\n  chatsById: Record<string, ApiChat>;\n  usersById: Record<string, ApiUser>;\n};\n\nfunction StoryStatistics({\n  chatId,\n  isActive,\n  statistics,\n  dcId,\n  storyId,\n  chatsById,\n  usersById,\n}: OwnProps & StateProps) {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadStoryStatistics, loadStoryPublicForwards, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    if (storyId) {\n      loadStoryStatistics({ chatId, storyId });\n    }\n  }, [chatId, storyId]);\n\n  useEffect(() => {\n    if (!isActive || storyId) {\n      loadedCharts.current = [];\n      setIsReady(false);\n    }\n  }, [isActive, storyId]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    GRAPHS.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({ name, chatId, token: graph });\n      }\n    });\n  }, [chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      GRAPHS.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph as StatisticsGraph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((GRAPH_TITLES as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    isReady, statistics, lang, chatId, storyId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  const handleLoadMore = useLastCallback(() => {\n    if (!storyId) return;\n\n    loadStoryPublicForwards({ chatId, storyId });\n  });\n\n  if (!isReady || !statistics || !storyId) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, 'custom-scroll', isReady && styles.ready)}>\n      <StatisticsOverview statistics={statistics} type=\"story\" title={lang('StatisticOverview')} />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {GRAPHS.map((graph) => (\n          <div className={buildClassName(styles.graph, !loadedCharts.current.includes(graph) && styles.hidden)} />\n        ))}\n      </div>\n\n      {Boolean(statistics.publicForwards) && (\n        <div className={styles.publicForwards}>\n          <h2 className={styles.publicForwardsTitle}>{lang('Stats.Message.PublicShares')}</h2>\n\n          <InfiniteScroll\n            items={statistics.publicForwardsData}\n            itemSelector=\".statistic-public-forward\"\n            onLoadMore={handleLoadMore}\n            preloadBackwards={STATISTICS_PUBLIC_FORWARDS_LIMIT}\n            noFastList\n          >\n            {statistics.publicForwardsData!.map((item) => {\n              if ('messageId' in item) {\n                return (\n                  <StatisticsMessagePublicForward key={`message_${item.messageId}`} data={item} />\n                );\n              }\n\n              return (\n                <StatisticsStoryPublicForward\n                  key={`story_${item.storyId}`}\n                  data={item}\n                  chatsById={chatsById}\n                  usersById={usersById}\n                />\n              );\n            })}\n          </InfiniteScroll>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const tabState = selectTabState(global);\n    const statistics = tabState.statistics.currentStory;\n    const storyId = tabState.statistics.currentStoryId;\n    const { byId: usersById } = global.users;\n    const { byId: chatsById } = global.chats;\n\n    return {\n      statistics, dcId, storyId, usersById, chatsById,\n    };\n  },\n)(StoryStatistics));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gJ2Z_EQBnbDYMJ2NKHPj\",\"fullSize\":\"F47ywnKRf0QnMNfkDAhN\",\"backdrop\":\"aZegQFa4eGDydcez2hhX\",\"captionBackdrop\":\"tt0i3c46mBP8eper4sX9\",\"backdropNonInteractive\":\"qBNqjd4Jivn9JZM9LTR1\",\"close\":\"oHmnmRivkoOTtFlipOlm\",\"wrapper\":\"tfRbD6UXCoHpURk9jkFs\",\"slideAnimation\":\"KeE62xWk53FkLDgmLDHC\",\"slideAnimationToActive\":\"u4UY_cga_HGYeSeXtJFy\",\"content\":\"AS2XHnign2xV16Kjj6bL\",\"slideAnimationFromActive\":\"fMXsSVdwtbHbHVPe7TRY\",\"storyHeader\":\"Kcahvy487TvQIEvXamQu\",\"composer\":\"RrR48bdsuf7ziCaT39SR\",\"caption\":\"DfZIQpvbsc1Lopohx81T\",\"captionGradient\":\"MnckwrDaIp2zIGy011sM\",\"media\":\"IWB6V7TuwMQUqxdPJDKT\",\"mediaPreview\":\"cOFmH2ECKIdToM2R0JMP\",\"contentInner\":\"IayoVR7yurb_Z9HS6hhn\",\"name\":\"zX3llen5J3KlIJGrCz2u\",\"slide\":\"Xd5grwcEn6r_RQyYYwTw\",\"mobileSlide\":\"qo1RdwI7m5QIK0NdHOJd\",\"slidePreview\":\"fH5dgpor5kv4sjYevuiU\",\"activeSlide\":\"Cs943zlR1iWQhsSG8QUZ\",\"slideInner\":\"UxBW6ApLLCk97qq1YxJH\",\"mediaWrapper\":\"tOO6t_Iv78rQnpDEOgh8\",\"forward\":\"mFCpxKAL5_Xa89VkFv5i\",\"storyIndicators\":\"E5huzrUvL4LEC9dx4KwW\",\"sender\":\"E1bHDTXle6dida5Kw_Ob\",\"senderInfoTransition\":\"Xr7xSPYjLASx0bPX_dVH\",\"senderInfo\":\"MtJgsqpsPRYORGENbJDM\",\"senderMeta\":\"LXV6r7VGvgKPL6nyoV4R\",\"senderName\":\"h7HZqUP3UoB_TWRA3ien\",\"storyMetaRow\":\"N9xfCNDRX4SkiLZ4_S9E\",\"storyMeta\":\"_fljB0mSVyj1YctbrtIQ\",\"closeButton\":\"qiXq5_w5pl5BhuytgsUI\",\"actions\":\"rlPJs7dRj8mRAAzEoxxg\",\"active\":\"YFM2wDC77SIBRSobTTNQ\",\"visibilityButton\":\"L2DlAgxoJ9gNRcSiZRkI\",\"visibilityButtonSelf\":\"uFpWDsHmcfI_qQSfKtph\",\"button\":\"Njk4jy0AOyHD31ABkS6M\",\"buttonMenu\":\"nqQ3MS3rHe4c00GJvtwh\",\"captionInner\":\"jXIvfN5QPnrzWo9eANQf\",\"captionContent\":\"_nAzidGNr0mdSkqyvmj_\",\"captionText\":\"ZsipcKd8hdBQ7muMSjLe\",\"hasOverflow\":\"d3FJsMTVC2kORJMGxgbG\",\"expanded\":\"zAH8_B8BrtyxRZR_iHvS\",\"animate\":\"ZguPPKlRJgtkBr7ENcvT\",\"withShowMore\":\"XOq3cloVnzuYbz2bQw_b\",\"captionShowMore\":\"OIcA1buYWPCjn6NzLZJn\",\"navigate\":\"nAa_W_FxKosbXRpB3tgu\",\"prev\":\"zwhGmE8SJA8XAnthasxt\",\"next\":\"a9J5InzXCE1XEX5m3A6J\",\"modal\":\"RiK8REKD0zdsqi8XRHh5\",\"thumbnail\":\"lFdi4MIeHlnMCtiJbwTA\",\"ghost\":\"zY4iKmbIIQ3TXtFU3PvS\",\"ghost2\":\"b1yiparcCewkKHh2aOHA\",\"ghostImage\":\"rAlVsvmsoSnnvgZfAsc5\",\"forwardHeader\":\"vPVaiaIOfZEhy_SOHHSA\",\"clickable\":\"J8NzxiUPqVRTJtAPvOyJ\",\"forwardHeaderText\":\"W_V_I0sahPT9FXCYnN8D\",\"forwardInfo\":\"c7iY3_4QyqnNeSocMGQr\"};","import type { IDimensions } from '../../../global/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { ANIMATION_END_DELAY } from '../../../config';\nimport fastBlur from '../../../lib/fastBlur';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getPeerStoryHtmlId } from '../../../global/helpers';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/windowEnvironment';\nimport windowSize from '../../../util/windowSize';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport storyRibbonStyles from '../StoryRibbon.module.scss';\nimport styles from '../StoryViewer.module.scss';\n\nconst ANIMATION_DURATION = 200;\nconst OFFSET_BOTTOM = 3.5 * REM;\nconst MOBILE_OFFSET = 0.5 * REM;\nconst MOBILE_WIDTH = 600;\n\nexport function animateOpening(\n  userId: string,\n  origin: StoryViewerOrigin,\n  thumb: string,\n  bestImageData: string | undefined,\n  dimensions: IDimensions,\n) {\n  const { mediaEl: fromImage } = getNodes(origin, userId);\n  if (!fromImage) {\n    return;\n  }\n  const { width: windowWidth, height: windowHeight } = windowSize.get();\n  let { width: toWidth, height: toHeight } = dimensions;\n\n  const isMobile = windowWidth <= MOBILE_WIDTH;\n\n  if (isMobile) {\n    toWidth = windowWidth - 2 * MOBILE_OFFSET;\n    toHeight = windowHeight - OFFSET_BOTTOM - 2 * MOBILE_OFFSET;\n\n    const safeAreaBottom = getComputedStyle(document.documentElement).getPropertyValue('--safe-area-bottom');\n    if (safeAreaBottom) {\n      toHeight -= parseFloat(safeAreaBottom);\n    }\n  }\n\n  const toLeft = isMobile ? MOBILE_OFFSET : (windowWidth - toWidth) / 2;\n  const toTop = isMobile ? MOBILE_OFFSET : (windowHeight - (toHeight + OFFSET_BOTTOM)) / 2;\n\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  const fromScaleX = fromWidth / toWidth;\n  const fromScaleY = fromHeight / toHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData || thumb, !bestImageData);\n    applyStyles(ghost, {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    });\n\n    const container = document.getElementById('StoryViewer')!;\n    container.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      applyStyles(ghost, {\n        transform: '',\n      });\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (container.contains(ghost)) {\n            container.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nexport function animateClosing(\n  userId: string,\n  origin: StoryViewerOrigin,\n  bestImageData: string,\n) {\n  const { mediaEl: toImage } = getNodes(origin, userId);\n\n  const fromImage = document.getElementById('StoryViewer')!.querySelector<HTMLImageElement>(\n    `.${styles.mobileSlide} .${styles.media}, .${styles.activeSlide} .${styles.media}`,\n  );\n  if (!fromImage || !toImage) {\n    return;\n  }\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n  const {\n    top: toTop, left: toLeft, width: toWidth, height: toHeight,\n  } = toImage.getBoundingClientRect();\n\n  const toTranslateX = (toLeft + toWidth / 2) - (fromLeft + fromWidth / 2);\n  const toTranslateY = (toTop + toHeight / 2) - (fromTop + fromHeight / 2);\n  const toScaleX = toWidth / fromWidth;\n  const toScaleY = toHeight / fromHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData);\n    applyStyles(ghost, {\n      top: `${fromTop}px`,\n      left: `${fromLeft}px`,\n      width: `${fromWidth}px`,\n      height: `${fromHeight}px`,\n    });\n\n    const ghost2 = createGhost(toImage.src, undefined, true);\n    const ghost2Top = (fromTop + fromHeight / 2) - fromWidth / 2;\n    applyStyles(ghost2, {\n      top: `${ghost2Top}px`,\n      left: `${fromLeft}px`,\n      width: `${fromWidth}px`,\n      height: `${fromWidth}px`,\n    });\n\n    const container = document.getElementById('StoryViewer')!;\n    container.appendChild(ghost);\n    document.body.appendChild(ghost2);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      applyStyles(ghost, {\n        transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScaleX}, ${toScaleY})`,\n      });\n\n      applyStyles(ghost2, {\n        transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScaleX})`,\n        opacity: '1',\n      });\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (container.contains(ghost)) {\n            container.removeChild(ghost);\n          }\n\n          if (document.body.contains(ghost2)) {\n            document.body.removeChild(ghost2);\n          }\n\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nfunction createGhost(source: string, hasBlur = false, isGhost2 = false) {\n  const ghost = document.createElement('div');\n  ghost.classList.add(!isGhost2 ? styles.ghost : styles.ghost2);\n\n  const img = new Image();\n  img.draggable = false;\n  img.oncontextmenu = stopEvent;\n  img.classList.add(styles.ghostImage);\n\n  if (hasBlur) {\n    const canvas = document.createElement('canvas');\n    canvas.classList.add(styles.thumbnail);\n    img.onload = () => {\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n      const {\n        width,\n        height,\n      } = img;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${RADIUS}px)`;\n        }\n\n        ctx.drawImage(img, -RADIUS * 2, -RADIUS * 2, width + RADIUS * 4, height + RADIUS * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, RADIUS, ITERATIONS);\n        }\n      });\n    };\n    img.src = source;\n    ghost.appendChild(canvas);\n  } else {\n    img.src = source;\n    ghost.appendChild(img);\n  }\n\n  return ghost;\n}\n\nfunction getNodes(origin: StoryViewerOrigin, userId: string) {\n  let containerSelector;\n  const mediaSelector = `#${getPeerStoryHtmlId(userId)}`;\n\n  switch (origin) {\n    case StoryViewerOrigin.StoryRibbon:\n      containerSelector = `#LeftColumn .${storyRibbonStyles.root}`;\n      break;\n    case StoryViewerOrigin.MiddleHeaderAvatar:\n      containerSelector = '.MiddleHeader .Transition_slide-active .ChatInfo';\n      break;\n    case StoryViewerOrigin.ChatList:\n      containerSelector = '#LeftColumn .chat-list';\n      break;\n    case StoryViewerOrigin.SearchResult:\n      containerSelector = '#LeftColumn .LeftSearch';\n      break;\n  }\n\n  const container = document.querySelector<HTMLElement>(containerSelector)!;\n  const mediaEls = container && container.querySelectorAll<HTMLImageElement>(`${mediaSelector} img`);\n\n  return {\n    container,\n    mediaEl: mediaEls?.[0],\n  };\n}\n","import type { IDimensions } from '../../../global/types';\n\nimport { roundToNearestEven } from '../../../util/math';\n\nexport const BASE_STORY_WIDTH = 720;\nexport const BASE_STORY_HEIGHT = 1280;\nconst BASE_SCREEN_WIDTH = 1200;\nconst BASE_SCREEN_HEIGHT = 800;\nconst BASE_ACTIVE_SLIDE_WIDTH = 405;\nconst BASE_ACTIVE_SLIDE_HEIGHT = 720;\nconst BASE_SLIDE_WIDTH = 135;\nconst BASE_SLIDE_HEIGHT = 240;\nconst BASE_GAP_WIDTH = 40;\n\nexport function calculateSlideSizes(windowWidth: number, windowHeight: number): {\n  activeSlide: IDimensions;\n  slide: IDimensions;\n  scale: number;\n  toActiveScale: number;\n  fromActiveScale: number;\n} {\n  const scale = calculateScale(BASE_SCREEN_WIDTH, BASE_SCREEN_HEIGHT, windowWidth, windowHeight);\n\n  const activeSlideWidth = roundToNearestEven(BASE_ACTIVE_SLIDE_WIDTH * scale);\n  const slideWidth = roundToNearestEven(BASE_SLIDE_WIDTH * scale);\n  // Avoid fractional values to prevent blurry text\n  return {\n    activeSlide: {\n      width: activeSlideWidth,\n      height: roundToNearestEven(BASE_ACTIVE_SLIDE_HEIGHT * scale),\n    },\n    slide: {\n      width: slideWidth,\n      height: roundToNearestEven(BASE_SLIDE_HEIGHT * scale),\n    },\n    scale,\n    toActiveScale: activeSlideWidth / slideWidth,\n    fromActiveScale: slideWidth / activeSlideWidth,\n  };\n}\n\nexport function calculateOffsetX({\n  scale,\n  slideAmount,\n  isActiveSlideSize,\n  isMoveThroughActiveSlide,\n  isBackward,\n}: {\n  scale: number;\n  slideAmount: number;\n  isActiveSlideSize: boolean;\n  isMoveThroughActiveSlide?: boolean;\n  isBackward: boolean;\n}) {\n  const mainOffset = BASE_GAP_WIDTH + (isActiveSlideSize ? BASE_ACTIVE_SLIDE_WIDTH : BASE_SLIDE_WIDTH);\n  const additionalOffset = (Math.abs(slideAmount) - 1)\n    * ((isMoveThroughActiveSlide ? BASE_ACTIVE_SLIDE_WIDTH : BASE_SLIDE_WIDTH) + BASE_GAP_WIDTH);\n  const totalOffset = roundToNearestEven((mainOffset + additionalOffset) * scale);\n\n  return isBackward ? -totalOffset : totalOffset;\n}\n\nfunction calculateScale(baseWidth: number, baseHeight: number, newWidth: number, newHeight: number) {\n  const widthScale = newWidth / baseWidth;\n  const heightScale = newHeight / baseHeight;\n\n  return Math.min(widthScale, heightScale);\n}\n","import { useMemo } from '../../../lib/teact/teact';\n\nimport { calculateSlideSizes } from '../helpers/dimensions';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nexport default function useSlideSizes() {\n  const { width: windowWidth, height: windowHeight } = useWindowSize();\n  return useMemo(() => calculateSlideSizes(windowWidth, windowHeight), [windowWidth, windowHeight]);\n}\n","import type { ApiTypeStory } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash, hasMessageText } from '../../../global/helpers';\n\nimport useMedia from '../../../hooks/useMedia';\n\nexport default function useStoryProps(\n  story?: ApiTypeStory, isCurrentUserPremium = false, isDropdownMenuOpen = false,\n) {\n  const isLoadedStory = story && 'content' in story;\n  const isDeletedStory = story && 'isDeleted' in story;\n  const hasText = isLoadedStory ? hasMessageText(story) : false;\n  const hasForwardInfo = isLoadedStory && Boolean(story.forwardInfo);\n\n  let thumbnail: string | undefined;\n  if (isLoadedStory) {\n    if (story.content.photo?.thumbnail) {\n      thumbnail = story.content.photo.thumbnail.dataUri;\n    }\n    if (story.content.video?.thumbnail?.dataUri) {\n      thumbnail = story.content.video.thumbnail.dataUri;\n    }\n  }\n\n  const previewHash = isLoadedStory ? getStoryMediaHash(story) : undefined;\n  const previewBlobUrl = useMedia(previewHash);\n  const isVideo = Boolean(isLoadedStory && story.content.video);\n  const noSound = isLoadedStory && story.content.video?.noSound;\n  const fullMediaHash = isLoadedStory ? getStoryMediaHash(story, 'full') : undefined;\n  const fullMediaData = useMedia(fullMediaHash, !story, isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl);\n  const altMediaHash = isVideo && isLoadedStory ? getStoryMediaHash(story, 'full', true) : undefined;\n  const altMediaData = useMedia(altMediaHash, !story, ApiMediaFormat.Progressive);\n\n  const hasFullData = Boolean(fullMediaData || altMediaData);\n  const bestImageData = isVideo ? previewBlobUrl : fullMediaData || previewBlobUrl;\n  const hasThumb = !previewBlobUrl && !hasFullData;\n\n  const canDownload = isCurrentUserPremium && isLoadedStory && !story.noForwards;\n  const downloadHash = isLoadedStory ? getStoryMediaHash(story, 'download') : undefined;\n  const downloadMediaData = useMedia(downloadHash, !canDownload && !isDropdownMenuOpen);\n\n  return {\n    isLoadedStory,\n    isDeletedStory,\n    hasText,\n    hasForwardInfo,\n    thumbnail,\n    previewHash,\n    previewBlobUrl,\n    isVideo,\n    noSound,\n    fullMediaHash,\n    fullMediaData,\n    altMediaHash,\n    altMediaData,\n    hasFullData,\n    bestImageData,\n    hasThumb,\n    canDownload,\n    downloadMediaData,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GNraau1Tus9Dhh2t0acA\",\"closeButton\":\"osHMUMN4HFvGPbQ6eYUw\",\"stealthIcon\":\"VLiBdviejkHCeGYNuGbe\",\"title\":\"uEr8ArVuYRUD3Ca3K1Sr\",\"description\":\"uV7xfk10UeLETmkHjCSv\",\"listItem\":\"P7J78AMcEBuYTdRnkNpv\",\"icon\":\"cFpiujXxzIbtMShso6wr\",\"button\":\"z5JVVwDZqJmujLRuZYiL\",\"subtitle\":\"ADx8YQgxcFasnFZ14Tcy\"};","import React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStealthMode } from '../../api/types';\n\nimport { selectIsCurrentUserPremium, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTime } from '../../util/serverTime';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport TextTimer from '../ui/TextTimer';\n\nimport styles from './StealthModeModal.module.scss';\n\ntype StateProps = {\n  isOpen?: boolean;\n  stealthMode?: ApiStealthMode;\n  isCurrentUserPremium?: boolean;\n};\n\nconst StealthModeModal = ({ isOpen, stealthMode, isCurrentUserPremium } : StateProps) => {\n  const {\n    toggleStealthModal,\n    activateStealthMode,\n    showNotification,\n    openPremiumModal,\n  } = getActions();\n  const [isOnCooldown, setIsOnCooldown] = useState(false);\n\n  useEffect(() => {\n    if (!stealthMode) return;\n    const serverTime = getServerTime();\n    if (stealthMode.cooldownUntil && stealthMode.cooldownUntil > serverTime) {\n      setIsOnCooldown(true);\n    }\n  }, [stealthMode, isOpen]);\n\n  const lang = useLang();\n\n  const handleTimerEnds = useLastCallback(() => {\n    setIsOnCooldown(false);\n  });\n\n  const handleClose = useLastCallback(() => {\n    toggleStealthModal({ isOpen: false });\n  });\n\n  const handleActivate = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      openPremiumModal({ initialSection: 'stories' });\n      return;\n    }\n\n    activateStealthMode();\n    showNotification({\n      title: lang('StealthModeOn'),\n      message: lang('StealthModeOnHint'),\n    });\n    toggleStealthModal({ isOpen: false });\n  });\n\n  return (\n    <Modal\n      className=\"component-theme-dark\"\n      contentClassName={styles.root}\n      isOpen={isOpen}\n      isSlim\n      onClose={handleClose}\n    >\n      <Button\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        className={styles.closeButton}\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <i className=\"icon icon-close\" />\n      </Button>\n      <div className={styles.stealthIcon}>\n        <i className=\"icon icon-eye-closed-outline\" />\n      </div>\n      <div className={styles.title}>{lang('StealthMode')}</div>\n      <div className={styles.description}>\n        {lang(isCurrentUserPremium ? 'StealthModeHint' : 'StealthModePremiumHint')}\n      </div>\n      <ListItem\n        className={buildClassName(styles.listItem, 'smaller-icon')}\n        multiline\n        inactive\n        leftElement={<i className={buildClassName('icon icon-stealth-past', styles.icon)} />}\n      >\n        <span className=\"title\">{lang('HideRecentViews')}</span>\n        <span className={buildClassName('subtitle', styles.subtitle)}>{lang('HideRecentViewsDescription')}</span>\n      </ListItem>\n      <ListItem\n        className={buildClassName(styles.listItem, 'smaller-icon')}\n        multiline\n        inactive\n        leftElement={<i className={buildClassName('icon icon-stealth-future', styles.icon)} aria-hidden />}\n      >\n        <span className=\"title\">{lang('HideNextViews')}</span>\n        <span className={buildClassName('subtitle', styles.subtitle)}>{lang('HideNextViewsDescription')}</span>\n      </ListItem>\n      <Button\n        className={styles.button}\n        size=\"smaller\"\n        disabled={isOnCooldown}\n        isShiny={!isCurrentUserPremium}\n        withPremiumGradient={!isCurrentUserPremium}\n        onClick={handleActivate}\n      >\n        {!isCurrentUserPremium ? lang('UnlockStealthMode')\n          : isOnCooldown\n            ? (<TextTimer langKey=\"AvailableIn\" endsAt={stealthMode!.cooldownUntil!} onEnd={handleTimerEnds} />)\n            : lang('EnableStealthMode')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal((global): StateProps => {\n  const tabState = selectTabState(global);\n\n  return {\n    isOpen: tabState.storyViewer?.isStealthModalOpen,\n    stealthMode: global.stories.stealthMode,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n  };\n})(StealthModeModal));\n","import React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiTypeStory } from '../../api/types';\n\nimport useLang from '../../hooks/useLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\ninterface OwnProps {\n  isOpen: boolean;\n  story?: ApiTypeStory;\n  onClose: NoneToVoidFunction;\n}\n\nfunction StoryDeleteConfirmModal({\n  isOpen, story, onClose,\n}: OwnProps) {\n  const { deleteStory, openNextStory } = getActions();\n\n  const lang = useLang();\n\n  const handleDeleteStoryClick = useCallback(() => {\n    if (!story) {\n      return;\n    }\n\n    openNextStory();\n    deleteStory({ peerId: story.peerId, storyId: story.id });\n    onClose();\n  }, [onClose, story]);\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('DeleteStoryTitle')}\n      text={lang('DeleteStorySubtitle')}\n      confirmLabel={lang('Delete')}\n      confirmHandler={handleDeleteStoryClick}\n      confirmIsDestructive\n      className=\"component-theme-dark\"\n    />\n  );\n}\n\nexport default memo(StoryDeleteConfirmModal);\n","import React, { memo, useMemo, useState } from '../../../lib/teact/teact';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { filterUsersByName } from '../../../global/helpers';\nimport { unique } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useLang from '../../../hooks/useLang';\n\nimport Picker from '../../common/Picker';\n\ninterface OwnProps {\n  id: string;\n  contactListIds?: string[];\n  currentUserId: string;\n  selectedIds?: string[];\n  lockedIds?: string[];\n  usersById: Record<string, ApiUser>;\n  onSelect: (selectedIds: string[]) => void;\n}\n\nfunction AllowDenyList({\n  id,\n  contactListIds,\n  currentUserId,\n  usersById,\n  selectedIds,\n  lockedIds,\n  onSelect,\n}: OwnProps) {\n  const lang = useLang();\n\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const displayedIds = useMemo(() => {\n    const contactIds = (contactListIds || []).filter((userId) => userId !== currentUserId);\n    return unique(filterUsersByName([...selectedIds || [], ...contactIds], usersById, searchQuery));\n  }, [contactListIds, currentUserId, searchQuery, selectedIds, usersById]);\n\n  return (\n    <Picker\n      key={id}\n      itemIds={displayedIds}\n      selectedIds={selectedIds ?? MEMO_EMPTY_ARRAY}\n      lockedIds={lockedIds}\n      filterValue={searchQuery}\n      filterPlaceholder={lang('Search')}\n      searchInputId={`${id}-picker-search`}\n      isSearchable\n      forceShowSelf\n      onSelectedIdsChange={onSelect}\n      onFilterChange={setSearchQuery}\n    />\n  );\n}\n\nexport default memo(AllowDenyList);\n","// extracted by mini-css-extract-plugin\nexport default {\"buttonHolder\":\"wU1uWdwnVeSGSB5gOjJ6\",\"active\":\"SlrHi8_ck8rgqhL48EhA\"};","import React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { filterUsersByName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { unique } from '../../../util/iteratees';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Picker from '../../common/Picker';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nimport styles from './CloseFriends.module.scss';\n\nexport type OwnProps = {\n  isActive?: boolean;\n  currentUserId: string;\n  usersById: Record<string, ApiUser>;\n  contactListIds?: string[];\n  onClose: NoneToVoidFunction;\n};\n\nfunction CloseFriends({\n  isActive, contactListIds, usersById, currentUserId, onClose,\n}: OwnProps) {\n  const { saveCloseFriends } = getActions();\n\n  const lang = useLang();\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isSubmitShown, setIsSubmitShown] = useState<boolean>(false);\n  const [newSelectedContactIds, setNewSelectedContactIds] = useState<string[]>([]);\n\n  const closeFriendIds = useMemo(() => {\n    return (contactListIds || []).filter((userId) => usersById[userId]?.isCloseFriend);\n  }, [contactListIds, usersById]);\n\n  const displayedIds = useMemo(() => {\n    const contactIds = (contactListIds || []).filter((id) => id !== currentUserId);\n    return unique(filterUsersByName([...closeFriendIds, ...contactIds], usersById, searchQuery));\n  }, [closeFriendIds, contactListIds, currentUserId, searchQuery, usersById]);\n\n  useEffectWithPrevDeps(([prevIsActive]) => {\n    if (!prevIsActive && isActive) {\n      setIsSubmitShown(false);\n      setNewSelectedContactIds(closeFriendIds);\n    }\n  }, [isActive, closeFriendIds]);\n\n  const handleSelectedContactIdsChange = useCallback((value: string[]) => {\n    setNewSelectedContactIds(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSubmit = useLastCallback(() => {\n    saveCloseFriends({ userIds: newSelectedContactIds });\n    onClose();\n  });\n\n  return (\n    <>\n      <Picker\n        itemIds={displayedIds || []}\n        selectedIds={newSelectedContactIds}\n        filterValue={searchQuery}\n        filterPlaceholder={lang('Search')}\n        searchInputId=\"close-friends-picker-search\"\n        isSearchable\n        onSelectedIdsChange={handleSelectedContactIdsChange}\n        onFilterChange={setSearchQuery}\n      />\n\n      <div className={buildClassName(styles.buttonHolder, isSubmitShown && styles.active)}>\n        <FloatingActionButton\n          isShown={isSubmitShown}\n          onClick={handleSubmit}\n          ariaLabel={lang('Save')}\n        >\n          <i className=\"icon icon-check\" />\n        </FloatingActionButton>\n      </div>\n    </>\n  );\n}\n\nexport default memo(CloseFriends);\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"Tc2kIulYTlFPvwfiTsFu\",\"header\":\"JXAfpcoB9izWjIX_WP0Q\",\"closeButton\":\"Hku60UdVn3LASgJdRQuw\",\"headerTitle\":\"L0Y7Snis7FiIcjMWZBBV\",\"content\":\"TBDaWd1Xw_wRqKUfj6IE\",\"section\":\"aNUFlXJVOpJVBLust1Ow\",\"title\":\"zNuDMViBzMNzGZxwFYGt\",\"list\":\"uW2YeebP6I62I5STt6az\",\"option\":\"CmouOddJNYo5qMb1eDhZ\",\"checked\":\"PxjIam8OpB7IAvp7fByQ\",\"input\":\"K9FImlb6XOJreshP5cfK\",\"icon\":\"Wpl9IXFnTYZf8HWj8H7_\",\"action\":\"oOUd_PRdTkIxpN_BekC1\",\"optionContent\":\"BkziTDKbvbzgii4mPbsx\",\"footer\":\"gH3hgLj6tnN_xhycOx0Q\",\"info\":\"i2HOS8g2UGDP69ABnvAe\",\"submit\":\"XwAIvijHgerStkRxm6rt\"};","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStory, ApiUser } from '../../api/types';\nimport type { ApiPrivacySettings, PrivacyVisibility } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport { getSenderTitle, getUserFullName } from '../../global/helpers';\nimport { selectPeerStory, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport Switcher from '../ui/Switcher';\nimport Transition from '../ui/Transition';\nimport AllowDenyList from './privacy/AllowDenyList';\nimport CloseFriends from './privacy/CloseFriends';\n\nimport styles from './StorySettings.module.scss';\n\ninterface OwnProps {\n  isOpen?: boolean;\n  onClose?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  story?: ApiStory;\n  visibility?: ApiPrivacySettings;\n  contactListIds?: string[];\n  usersById: Record<string, ApiUser>;\n  currentUserId: string;\n}\n\ntype PrivacyAction = 'blockUserIds' | 'closeFriends' | 'blockContactUserIds' | 'allowUserIds';\n\ninterface PrivacyOption {\n  name: string;\n  value: PrivacyVisibility;\n  color: [string, string];\n  icon: IconName;\n  actions?: PrivacyAction;\n}\n\nconst OPTIONS: PrivacyOption[] = [{\n  name: 'StoryPrivacyOptionEveryone',\n  value: 'everybody',\n  color: ['#50ABFF', '#007AFF'],\n  icon: 'channel-filled',\n  actions: 'blockUserIds',\n}, {\n  name: 'StoryPrivacyOptionContacts',\n  value: 'contacts',\n  color: ['#C36EFF', '#8B60FA'],\n  icon: 'user-filled',\n  actions: 'blockContactUserIds',\n}, {\n  name: 'StoryPrivacyOptionCloseFriends',\n  value: 'closeFriends',\n  color: ['#88D93A', '#30B73B'],\n  icon: 'favorite-filled',\n  actions: 'closeFriends',\n}, {\n  name: 'StoryPrivacyOptionSelectedContacts',\n  value: 'nobody',\n  color: ['#FFB743', '#F69A36'],\n  icon: 'group-filled',\n  actions: 'allowUserIds',\n}];\n\nenum Screens {\n  privacy,\n  allowList,\n  closeFriends,\n  denyList,\n}\n\nfunction StorySettings({\n  isOpen,\n  story,\n  visibility,\n  contactListIds,\n  usersById,\n  currentUserId,\n  onClose,\n}: OwnProps & StateProps) {\n  const { editStoryPrivacy, toggleStoryPinned } = getActions();\n\n  const lang = useLang();\n  const [isOpenModal, openModal, closeModal] = useFlag(false);\n  const [privacy, setPrivacy] = useState<ApiPrivacySettings | undefined>(visibility);\n  const [isPinned, setIsPinned] = useState(story?.isPinned);\n  const [activeKey, setActiveKey] = useState<Screens>(Screens.privacy);\n  const [editingBlockingCategory, setEditingBlockingCategory] = useState<PrivacyVisibility>('everybody');\n  const isBackButton = activeKey !== Screens.privacy;\n\n  const closeFriendIds = useMemo(() => {\n    return (contactListIds || []).filter((userId) => usersById[userId]?.isCloseFriend);\n  }, [contactListIds, usersById]);\n\n  const lockedIds = useMemo(() => {\n    if (activeKey === Screens.allowList\n      && (!privacy?.allowUserIds?.length || privacy.allowUserIds[0] === currentUserId)\n    ) {\n      return [currentUserId];\n    }\n\n    return undefined;\n  }, [activeKey, currentUserId, privacy?.allowUserIds]);\n\n  const selectedBlockedIds = useMemo(() => {\n    if (editingBlockingCategory !== privacy?.visibility) return [];\n    return privacy?.blockUserIds || [];\n  }, [editingBlockingCategory, privacy?.blockUserIds, privacy?.visibility]);\n\n  const handleAllowUserIdsChange = useLastCallback((newIds: string[]) => {\n    setPrivacy({\n      ...privacy!,\n      allowUserIds: newIds?.length ? newIds?.filter((id) => id !== currentUserId) : [currentUserId],\n    });\n  });\n\n  const handleDenyUserIdsChange = useLastCallback((newIds: string[]) => {\n    setPrivacy({\n      ...privacy!,\n      blockUserIds: newIds,\n      visibility: editingBlockingCategory,\n    });\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      setActiveKey(Screens.privacy);\n      openModal();\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    setPrivacy(visibility);\n  }, [visibility]);\n\n  const handleCloseButtonClick = useLastCallback(() => {\n    if (activeKey === Screens.privacy) {\n      closeModal();\n      return;\n    }\n\n    setActiveKey(Screens.privacy);\n  });\n\n  function handleVisibilityChange(newVisibility: PrivacyVisibility) {\n    setPrivacy({\n      ...privacy!,\n      visibility: newVisibility,\n    });\n  }\n\n  function handleActionClick(e: React.MouseEvent<HTMLDivElement>, action: PrivacyAction) {\n    stopEvent(e);\n\n    switch (action) {\n      case 'closeFriends':\n        setActiveKey(Screens.closeFriends);\n        break;\n      case 'allowUserIds':\n        setActiveKey(Screens.allowList);\n        break;\n      case 'blockUserIds':\n        setActiveKey(Screens.denyList);\n        setEditingBlockingCategory('everybody');\n        break;\n      case 'blockContactUserIds':\n        setActiveKey(Screens.denyList);\n        setEditingBlockingCategory('contacts');\n        break;\n    }\n  }\n\n  const handleIsPinnedToggle = useLastCallback(() => {\n    setIsPinned(!isPinned);\n  });\n\n  // console.warn(privacy?.visibility, story?.visibility, OPTIONS);\n\n  const handleSubmit = useLastCallback(() => {\n    editStoryPrivacy({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      privacy: privacy!,\n    });\n    if (story!.isPinned !== isPinned) {\n      toggleStoryPinned({ peerId: story!.peerId, storyId: story!.id, isPinned });\n    }\n    closeModal();\n  });\n\n  function renderActionName(action: PrivacyAction) {\n    if (action === 'closeFriends') {\n      if (closeFriendIds.length === 0) {\n        return lang('StoryPrivacyOptionCloseFriendsDetail');\n      }\n\n      if (closeFriendIds.length === 1) {\n        return getSenderTitle(lang, usersById[closeFriendIds[0]]);\n      }\n\n      return lang('StoryPrivacyOptionPeople', closeFriendIds.length, 'i');\n    }\n\n    if ((action === 'blockUserIds' && privacy?.visibility === 'everybody')\n      || (action === 'blockContactUserIds' && privacy?.visibility === 'contacts')) {\n      if (!privacy?.blockUserIds?.length) {\n        return lang('StoryPrivacyOptionContactsDetail');\n      }\n\n      if (privacy.blockUserIds.length === 1) {\n        return lang('StoryPrivacyOptionExcludePerson', getUserFullName(usersById[privacy.blockUserIds[0]]));\n      }\n\n      return lang('StoryPrivacyOptionExcludePeople', privacy.blockUserIds.length, 'i');\n    }\n\n    if (!privacy?.allowUserIds || privacy.allowUserIds.length === 0) {\n      return lang('StoryPrivacyOptionSelectedContactsDetail');\n    }\n\n    if (privacy.allowUserIds.length === 1) {\n      return getUserFullName(usersById[privacy.allowUserIds[0]]);\n    }\n\n    return lang('StoryPrivacyOptionPeople', privacy.allowUserIds.length, 'i');\n  }\n\n  // eslint-disable-next-line consistent-return\n  function renderHeaderContent() {\n    switch (activeKey) {\n      case Screens.privacy:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertEditTitle')}</h3>;\n      case Screens.allowList:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertSelectContactsTitle')}</h3>;\n      case Screens.closeFriends:\n        return <h3 className={styles.headerTitle}>{lang('CloseFriends')}</h3>;\n      case Screens.denyList:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertExcludedContactsTitle')}</h3>;\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function renderContent(isActive: boolean) {\n    switch (activeKey) {\n      case Screens.privacy:\n        return renderPrivacyList();\n      case Screens.closeFriends:\n        return (\n          <CloseFriends\n            key=\"close-friends\"\n            isActive={isActive}\n            contactListIds={contactListIds}\n            currentUserId={currentUserId}\n            usersById={usersById}\n            onClose={handleCloseButtonClick}\n          />\n        );\n      case Screens.denyList:\n        return (\n          <AllowDenyList\n            key=\"deny-list\"\n            id=\"deny-list\"\n            contactListIds={contactListIds}\n            currentUserId={currentUserId}\n            usersById={usersById}\n            selectedIds={selectedBlockedIds}\n            onSelect={handleDenyUserIdsChange}\n          />\n        );\n      case Screens.allowList:\n        return (\n          <AllowDenyList\n            key=\"allow-list\"\n            id=\"allow-list\"\n            contactListIds={contactListIds}\n            lockedIds={lockedIds}\n            currentUserId={currentUserId}\n            usersById={usersById}\n            selectedIds={privacy?.allowUserIds}\n            onSelect={handleAllowUserIdsChange}\n          />\n        );\n    }\n  }\n\n  function renderPrivacyList() {\n    const storyLifeTime = story ? convertSecondsToHours(story.expireDate - story.date) : 0;\n\n    return (\n      <>\n        <div className={styles.section}>\n          <h3 className={styles.title}>{lang('StoryPrivacyAlertSubtitleProfile')}</h3>\n          <div className={styles.list}>\n            {OPTIONS.map((option) => (\n              <label\n                key={option.value}\n                className={buildClassName(styles.option, option.value === privacy?.visibility && styles.checked)}\n              >\n                <input\n                  type=\"radio\"\n                  name=\"story_privacy\"\n                  className={styles.input}\n                  value={option.value}\n                  checked={option.value === privacy?.visibility}\n                  onChange={() => handleVisibilityChange(option.value)}\n                  teactExperimentControlled\n                />\n                <span\n                  className={styles.icon}\n                  style={`--color-from: ${option.color[0]}; --color-to: ${option.color[1]}`}\n                >\n                  <i className={`icon icon-${option.icon}`} />\n                </span>\n                <div className={styles.optionContent}>\n                  <span className={buildClassName(styles.option_name)}>{lang(option.name)}</span>\n                  {option.actions && (\n                    <div\n                      tabIndex={0}\n                      role=\"button\"\n                      className={styles.action}\n                      aria-label={lang('Edit')}\n                      onClick={(e) => { handleActionClick(e, option.actions!); }}\n                    >\n                      <span className={styles.actionInner}>{renderActionName(option.actions)}</span>\n                      <i className=\"icon icon-next\" aria-hidden />\n                    </div>\n                  )}\n                </div>\n              </label>\n            ))}\n          </div>\n        </div>\n        <div className={styles.section}>\n          <ListItem ripple onClick={handleIsPinnedToggle}>\n            <span>{lang('StoryKeep')}</span>\n            <Switcher\n              id=\"group-notifications\"\n              label={lang('StoryKeep')}\n              checked={isPinned}\n              inactive\n            />\n          </ListItem>\n        </div>\n        <div className={styles.footer}>\n          <div className={styles.info}>{lang('StoryKeepInfo', storyLifeTime)}</div>\n          <div className={styles.submit}>\n            <Button onClick={handleSubmit}>{lang('StoryPrivacyButtonSave')}</Button>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpenModal}\n      className={buildClassName(styles.modal, 'component-theme-dark')}\n      onClose={closeModal}\n      noBackdrop\n      onCloseAnimationEnd={onClose}\n    >\n      <div className={styles.header}>\n        <Button\n          className={buildClassName(styles.closeButton, 'close-button')}\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleCloseButtonClick}\n          ariaLabel={isBackButton ? lang('Common.Back') : lang('Common.Close')}\n        >\n          <div className={buildClassName('animated-close-icon', isBackButton && 'state-back')} />\n        </Button>\n        <Transition name=\"slideFade\" activeKey={activeKey}>\n          {renderHeaderContent()}\n        </Transition>\n      </div>\n      <Transition\n        activeKey={activeKey}\n        name=\"slideFade\"\n        slideClassName=\"ChatOrUserPicker_slide\"\n        className={styles.content}\n      >\n        {renderContent}\n      </Transition>\n    </Modal>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    storyViewer: {\n      storyId, peerId,\n    },\n  } = selectTabState(global);\n  const story = (peerId && storyId)\n    ? selectPeerStory(global, peerId, storyId)\n    : undefined;\n\n  return {\n    story: story && 'content' in story ? story as ApiStory : undefined,\n    visibility: story && 'visibility' in story ? story.visibility : undefined,\n    contactListIds: global.contactList?.userIds,\n    usersById: global.users.byId,\n    currentUserId: global.currentUserId!,\n  };\n})(StorySettings));\n\nfunction convertSecondsToHours(seconds: number): number {\n  const secondsInHour = 3600;\n  const minutesInHour = 60;\n\n  const hours = Math.floor(seconds / secondsInHour);\n  const remainingSeconds = seconds % secondsInHour;\n  const remainingMinutes = Math.floor(remainingSeconds / minutesInHour);\n\n  // If remaining minutes are greater than or equal to 30, round up the hours\n  return remainingMinutes >= 30 ? hours + 1 : hours;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiPeer,\n  ApiStoryForwardInfo,\n  ApiTypeStory,\n} from '../../../api/types';\nimport type { IconName } from '../../../types/icons';\n\nimport {\n  getSenderTitle,\n  isUserId,\n} from '../../../global/helpers';\nimport { selectPeer, selectPeerStory } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getPeerColorClass } from '../helpers/peerColor';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Icon from '../Icon';\nimport EmojiIconBackground from './EmojiIconBackground';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  forwardInfo: ApiStoryForwardInfo;\n  className?: string;\n};\n\ntype StateProps = {\n  sender?: ApiPeer;\n  story?: ApiTypeStory;\n};\n\nconst EmbeddedStoryForward: FC<OwnProps & StateProps> = ({\n  className,\n  forwardInfo,\n  sender,\n  story,\n}) => {\n  const { openStoryViewer, loadPeerStoriesByIds, openChat } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  useEffect(() => {\n    if (!story && forwardInfo.fromPeerId && forwardInfo.storyId) {\n      loadPeerStoriesByIds({\n        peerId: forwardInfo.fromPeerId,\n        storyIds: [forwardInfo.storyId],\n      });\n    }\n  }, [forwardInfo, story]);\n\n  const senderTitle = sender ? getSenderTitle(lang, sender) : forwardInfo.fromName;\n\n  const openOriginalStory = useLastCallback(() => {\n    const { fromPeerId, storyId } = forwardInfo;\n    if (!fromPeerId) return;\n\n    const isStoryReady = story && !('isDeleted' in story && story.isDeleted);\n\n    if (isStoryReady) {\n      openStoryViewer({\n        peerId: fromPeerId,\n        storyId,\n        isSingleStory: true,\n      });\n    } else {\n      openChat({ id: fromPeerId });\n    }\n  });\n\n  const { handleClick, handleMouseDown } = useFastClick(openOriginalStory);\n\n  function renderTextContent() {\n    if (story && 'content' in story && story.content.text) {\n      return (\n        <p className=\"embedded-text-wrapper\">\n          {renderTextWithEntities(story.content.text)}\n        </p>\n      );\n    }\n\n    return undefined;\n  }\n\n  function renderSender() {\n    if (!sender || !senderTitle) {\n      return undefined;\n    }\n\n    const icon: IconName | undefined = !isUserId(sender.id) ? 'channel-filled' : 'user-filled';\n\n    return (\n      <>\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {senderTitle && renderText(senderTitle)}\n      </>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        getPeerColorClass(sender, true, true),\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      {sender?.color?.backgroundEmojiId && (\n        <EmojiIconBackground\n          emojiDocumentId={sender.color.backgroundEmojiId}\n          className=\"EmbeddedMessage--background-icons\"\n        />\n      )}\n      <div className=\"message-text\">\n        {renderTextContent()}\n        <div className=\"message-title\">\n          {renderSender()}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { forwardInfo }): StateProps => {\n    const sender = forwardInfo.fromPeerId ? selectPeer(global, forwardInfo.fromPeerId) : undefined;\n    const story = forwardInfo.storyId && forwardInfo.fromPeerId\n      ? selectPeerStory(global, forwardInfo.fromPeerId, forwardInfo.storyId) : undefined;\n    return {\n      sender,\n      story,\n    };\n  },\n)(EmbeddedStoryForward));\n","import React, {\n  memo, useEffect, useLayoutEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { addExtraClass, removeExtraClass } from '../../lib/teact/teact-dom';\n\nimport type { ApiStory } from '../../api/types';\n\nimport { requestForcedReflow, requestMeasure, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useLang from '../../hooks/useLang';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport EmbeddedStoryForward from '../common/embedded/EmbeddedStoryForward';\nimport MessageText from '../common/MessageText';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  story: ApiStory;\n  isExpanded: boolean;\n  className?: string;\n  onExpand: NoneToVoidFunction;\n  onFold?: NoneToVoidFunction;\n}\n\nconst EXPAND_ANIMATION_DURATION_MS = 400;\nconst LINES_TO_SHOW = 3;\n\nfunction StoryCaption({\n  story, isExpanded, className, onExpand, onFold,\n}: OwnProps) {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const contentRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const textRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const showMoreButtonRef = useRef<HTMLDivElement>(null);\n  const renderingStory = useCurrentOrPrev(story, true);\n\n  const caption = renderingStory?.content.text;\n\n  const [hasOverflow, setHasOverflow] = useState(false);\n  const prevIsExpanded = usePrevDuringAnimation(isExpanded || undefined, EXPAND_ANIMATION_DURATION_MS);\n  const isInExpandedState = isExpanded || prevIsExpanded;\n\n  useEffect(() => {\n    requestMutation(() => {\n      if (!contentRef.current) {\n        return;\n      }\n\n      if (isExpanded) {\n        addExtraClass(contentRef.current, styles.animate);\n      } else {\n        removeExtraClass(contentRef.current, styles.animate);\n      }\n    });\n  }, [isExpanded]);\n\n  const canExpand = hasOverflow && !isInExpandedState;\n  const { shouldRender: shouldRenderShowMore, transitionClassNames } = useShowTransition(\n    canExpand, undefined, true, 'slow', true,\n  );\n\n  useLayoutEffect(() => {\n    requestMeasure(() => {\n      if (!showMoreButtonRef.current) {\n        return;\n      }\n\n      const button = showMoreButtonRef.current;\n\n      const { offsetWidth } = button;\n\n      requestMutation(() => {\n        button.style.setProperty('--expand-button-width', `${offsetWidth}px`);\n      });\n    });\n  }, []);\n\n  useLayoutEffect(() => {\n    requestForcedReflow(() => {\n      if (!contentRef.current || !textRef.current) {\n        return undefined;\n      }\n\n      const container = contentRef.current;\n      const textContainer = textRef.current;\n\n      const textOffsetTop = textContainer.offsetTop;\n      const lineHeight = parseInt(getComputedStyle(textContainer).lineHeight, 10);\n      const isOverflowing = textContainer.clientHeight > lineHeight * LINES_TO_SHOW;\n      const overflowShift = textOffsetTop + lineHeight * LINES_TO_SHOW;\n\n      return () => {\n        if (isOverflowing) {\n          addExtraClass(container, styles.hasOverflow);\n          setHasOverflow(true);\n        }\n\n        container.style.setProperty('--_overflow-shift', `${overflowShift}px`);\n      };\n    });\n  }, [caption]);\n\n  useEffect(() => {\n    if (!isExpanded) {\n      ref.current?.scrollTo({ top: 0 });\n    }\n  }, [isExpanded]);\n\n  const fullClassName = buildClassName(\n    styles.captionContent,\n    isInExpandedState && styles.expanded,\n    shouldRenderShowMore && styles.withShowMore,\n  );\n\n  return (\n    <div className={buildClassName(styles.caption, className)}>\n      <div\n        ref={contentRef}\n        className={fullClassName}\n        role={canExpand ? 'button' : undefined}\n        onClick={canExpand ? onExpand : onFold}\n      >\n        <div\n          ref={ref}\n          className={buildClassName(styles.captionInner, 'allow-selection', 'custom-scroll')}\n        >\n          {renderingStory?.forwardInfo && (\n            <EmbeddedStoryForward\n              forwardInfo={renderingStory.forwardInfo}\n              className={styles.forwardInfo}\n            />\n          )}\n          {renderingStory && (\n            <div ref={textRef} className={styles.captionText}>\n              <MessageText\n                messageOrStory={renderingStory}\n                withTranslucentThumbs\n                forcePlayback\n              />\n            </div>\n          )}\n        </div>\n      </div>\n      {shouldRenderShowMore && (\n        <div\n          ref={showMoreButtonRef}\n          className={buildClassName(styles.captionShowMore, transitionClassNames)}\n          onClick={onExpand}\n        >\n          {lang('Story.CaptionShowMore')}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryCaption);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"SZ7yrkn5jnFJYa8rf9Lq\",\"viewInfo\":\"sGmslpAUN8yKBOxe13Kg\",\"interactive\":\"UfBe8dmqVfC7BCCMwpOI\",\"avatars\":\"fx7W4KZAaiK5T2nIZL5c\",\"spacer\":\"SdmjC2sdiWVr6VAguB1N\",\"reactionCount\":\"be7sESSsLrdDEAFmfgN1\",\"reactionCountHeart\":\"j6UTHtXm5pGlZTUQtiNw\",\"footerItem\":\"HeAnIGNLSRuOeQHda2j9\",\"views\":\"nrvshNssU3J7YjDRMGJt\",\"viewIcon\":\"ALYrJzsIz00qOE3fZxAg\",\"reactionButton\":\"BnHCTCGK8AHZZfrBsrRz\",\"reactionHeart\":\"oDRgq62aSPNYamk9P2EV\"};","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiStory } from '../../api/types';\n\nimport { HEART_REACTION } from '../../config';\nimport { getStoryKey, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport AvatarList from '../common/AvatarList';\nimport Icon from '../common/Icon';\nimport ReactionAnimatedEmoji from '../common/reactions/ReactionAnimatedEmoji';\nimport Button from '../ui/Button';\n\nimport styles from './StoryFooter.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  areViewsExpired?: boolean;\n  className?: string;\n};\n\nconst StoryFooter = ({\n  story,\n  areViewsExpired,\n  className,\n}: OwnProps) => {\n  const { openStoryViewModal, openForwardMenu, sendStoryReaction } = getActions();\n  const lang = useLang();\n\n  const {\n    views, isOut, peerId, id: storyId, sentReaction,\n  } = story;\n  const { viewsCount, forwardsCount, reactionsCount } = views || {};\n  const isChannel = !isUserId(peerId);\n\n  const isSentStoryReactionHeart = sentReaction && 'emoticon' in sentReaction\n    ? sentReaction.emoticon === HEART_REACTION.emoticon : false;\n\n  const canForward = Boolean(\n    (isOut || isChannel)\n    && story.isPublic\n    && !story.noForwards,\n  );\n\n  const containerId = getStoryKey(peerId, storyId);\n\n  const recentViewers = useMemo(() => {\n    const { users: { byId: usersById } } = getGlobal();\n\n    const recentViewerIds = views && 'recentViewerIds' in views ? views.recentViewerIds : undefined;\n    if (!recentViewerIds) return undefined;\n\n    return recentViewerIds.map((id) => usersById[id]).filter(Boolean);\n  }, [views]);\n\n  const handleOpenStoryViewModal = useLastCallback(() => {\n    openStoryViewModal({ storyId });\n  });\n\n  const handleForwardClick = useLastCallback(() => {\n    openForwardMenu({ fromChatId: peerId, storyId });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId,\n      storyId,\n      containerId,\n      reaction,\n    });\n  });\n\n  if (!viewsCount) {\n    return (\n      <div className={buildClassName(styles.root, className)}>\n        {lang('NobodyViewed')}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        className,\n      )}\n    >\n      <div\n        className={buildClassName(styles.viewInfo, !isChannel && styles.interactive)}\n        onClick={!isChannel ? handleOpenStoryViewModal : undefined}\n      >\n        {!areViewsExpired && Boolean(recentViewers?.length) && (\n          <AvatarList\n            size=\"small\"\n            peers={recentViewers}\n            className={styles.avatars}\n          />\n        )}\n\n        {isChannel ? (\n          <span className={styles.views}><Icon name=\"channelviews\" className={styles.viewIcon} />{viewsCount}</span>\n        ) : (\n          <span className={styles.views}>{lang('Views', viewsCount, 'i')}</span>\n        )}\n        {Boolean(reactionsCount) && !isChannel && (\n          <span className={styles.reactionCount}>\n            <Icon name=\"heart\" className={styles.reactionCountHeart} />\n            {reactionsCount}\n          </span>\n        )}\n      </div>\n      <div className={styles.spacer} />\n      {canForward && (\n        <Button\n          color=\"translucent\"\n          size=\"smaller\"\n          round\n          onClick={handleForwardClick}\n          ariaLabel={lang('Forward')}\n          className={styles.footerItem}\n        >\n          <Icon name=\"forward\" />\n        </Button>\n      )}\n      {isChannel && (\n        <>\n          {Boolean(forwardsCount) && (\n            <div className={styles.footerItem}>\n              <Button\n                round\n                color=\"translucent\"\n                size=\"smaller\"\n                nonInteractive\n                ariaLabel={lang('PublicShares')}\n              >\n                <Icon name=\"loop\" />\n              </Button>\n              <span>{forwardsCount}</span>\n            </div>\n          )}\n          <div className={styles.footerItem}>\n            <Button\n              round\n              className={styles.reactionButton}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleLikeStory}\n              ariaLabel={lang('AccDescrLike')}\n            >\n              {sentReaction && (\n                <ReactionAnimatedEmoji\n                  key={'documentId' in sentReaction ? sentReaction.documentId : sentReaction.emoticon}\n                  containerId={containerId}\n                  reaction={sentReaction}\n                  withEffectOnly={isSentStoryReactionHeart}\n                />\n              )}\n              {(!sentReaction || isSentStoryReactionHeart) && (\n                <Icon\n                  name={isSentStoryReactionHeart ? 'heart' : 'heart-outline'}\n                  className={buildClassName(isSentStoryReactionHeart && styles.reactionHeart)}\n                />\n              )}\n            </Button>\n            {Boolean(reactionsCount) && (<span>{reactionsCount}</span>)}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StoryFooter);\n","import React, {\n  memo,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport styles from './StoryProgress.module.scss';\n\ninterface OwnProps {\n  isActive: boolean;\n  isViewed: boolean;\n  isVideo?: boolean;\n  duration?: number;\n  isPaused?: boolean;\n  onImageComplete: NoneToVoidFunction;\n}\n\nconst DEFAULT_STORY_DURATION_S = 6;\n\nfunction StoryProgress({\n  isActive, isViewed, isVideo, duration = DEFAULT_STORY_DURATION_S, isPaused, onImageComplete,\n}: OwnProps) {\n  const handleAnimationEnd = useLastCallback((event: React.AnimationEvent<HTMLElement>) => {\n    if (!isVideo && event.animationName === styles.progress) {\n      onImageComplete();\n    }\n  });\n\n  const classNames = buildClassName(\n    styles.root,\n    isViewed && styles.viewed,\n    isActive && styles.active,\n    isPaused && styles.paused,\n  );\n\n  return (\n    <span\n      className={classNames}\n      aria-hidden\n    >\n      {isActive && (\n        <i style={`--progress-duration: ${duration}s`} className={styles.inner} onAnimationEnd={handleAnimationEnd} />\n      )}\n    </span>\n  );\n}\n\nexport default memo(StoryProgress);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"uXHBlEUDZKJr1u7dvj4k\",\"viewed\":\"GiJXPT0zbAmsx82Nm8ci\",\"active\":\"PaCfy7Nei0tOQAE9i0XV\",\"inner\":\"goBtmBaUzEEUaT_NbrvT\",\"progress\":\"kvGsn6HE3seo_5jfVRs1\",\"paused\":\"J1oS3YeXCbdBhKm3eIBi\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiMediaAreaChannelPost,\n  ApiPeer, ApiStealthMode, ApiStory, ApiTypeStory,\n} from '../../api/types';\nimport type { IDimensions } from '../../global/types';\nimport type { Signal } from '../../util/signals';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { EDITABLE_STORY_INPUT_CSS_SELECTOR, EDITABLE_STORY_INPUT_ID } from '../../config';\nimport { getSenderTitle, isUserId } from '../../global/helpers';\nimport {\n  selectChat,\n  selectIsCurrentUserPremium,\n  selectPeer,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectTabState,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport { formatMediaDuration, formatRelativeTime } from '../../util/dateFormat';\nimport download from '../../util/download';\nimport { round } from '../../util/math';\nimport { getServerTime } from '../../util/serverTime';\nimport { IS_SAFARI } from '../../util/windowEnvironment';\nimport renderText from '../common/helpers/renderText';\nimport { BASE_STORY_HEIGHT, BASE_STORY_WIDTH } from './helpers/dimensions';\nimport { PRIMARY_VIDEO_MIME, SECONDARY_VIDEO_MIME } from './helpers/videoFormats';\n\nimport useUnsupportedMedia from '../../hooks/media/useUnsupportedMedia';\nimport useAppLayout, { getIsMobile } from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLongPress from '../../hooks/useLongPress';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport { useStreaming } from '../../hooks/useStreaming';\nimport useBackgroundMode from '../../hooks/window/useBackgroundMode';\nimport useStoryPreloader from './hooks/useStoryPreloader';\nimport useStoryProps from './hooks/useStoryProps';\n\nimport Avatar from '../common/Avatar';\nimport Composer from '../common/Composer';\nimport Icon from '../common/Icon';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Skeleton from '../ui/placeholder/Skeleton';\nimport Transition from '../ui/Transition';\nimport MediaAreaOverlay from './mediaArea/MediaAreaOverlay';\nimport StoryCaption from './StoryCaption';\nimport StoryFooter from './StoryFooter';\nimport StoryProgress from './StoryProgress';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  peerId: string;\n  storyId: number;\n  dimensions: IDimensions;\n  // eslint-disable-next-line react/no-unused-prop-types\n  isReportModalOpen?: boolean;\n  // eslint-disable-next-line react/no-unused-prop-types\n  isDeleteModalOpen?: boolean;\n  isPrivateStories?: boolean;\n  isArchivedStories?: boolean;\n  isSingleStory?: boolean;\n  getIsAnimating: Signal<boolean>;\n  onDelete: (story: ApiTypeStory) => void;\n  onClose: NoneToVoidFunction;\n  onReport: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  peer: ApiPeer;\n  forwardSender?: ApiPeer;\n  story?: ApiTypeStory;\n  isMuted: boolean;\n  orderedIds?: number[];\n  shouldForcePause?: boolean;\n  storyChangelogUserId?: string;\n  viewersExpirePeriod: number;\n  isChatExist?: boolean;\n  areChatSettingsLoaded?: boolean;\n  isCurrentUserPremium?: boolean;\n  stealthMode: ApiStealthMode;\n  withHeaderAnimation?: boolean;\n}\n\nconst VIDEO_MIN_READY_STATE = IS_SAFARI ? 4 : 3;\nconst SPACEBAR_CODE = 32;\n\nconst STEALTH_MODE_NOTIFICATION_DURATION = 4000;\n\nfunction Story({\n  peerId,\n  storyId,\n  peer,\n  forwardSender,\n  isMuted,\n  isArchivedStories,\n  isPrivateStories,\n  story,\n  orderedIds,\n  isSingleStory,\n  dimensions,\n  shouldForcePause,\n  storyChangelogUserId,\n  viewersExpirePeriod,\n  isChatExist,\n  areChatSettingsLoaded,\n  getIsAnimating,\n  isCurrentUserPremium,\n  stealthMode,\n  onDelete,\n  onClose,\n  onReport,\n  withHeaderAnimation,\n}: OwnProps & StateProps) {\n  const {\n    viewStory,\n    setStoryViewerMuted,\n    openPreviousStory,\n    openNextStory,\n    loadPeerSkippedStories,\n    openForwardMenu,\n    copyStoryLink,\n    toggleStoryPinned,\n    openChat,\n    showNotification,\n    openStoryPrivacyEditor,\n    loadChatSettings,\n    fetchChat,\n    loadStoryViews,\n    toggleStealthModal,\n  } = getActions();\n  const serverTime = getServerTime();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n  const [isComposerHasFocus, markComposerHasFocus, unmarkComposerHasFocus] = useFlag(false);\n  const [isStoryPlaybackRequested, playStory, pauseStory] = useFlag(false);\n  const [isStoryPlaying, markStoryPlaying, unmarkStoryPlaying] = useFlag(false);\n  const [isAppFocused, markAppFocused, unmarkAppFocused] = useFlag(true);\n  const [isCaptionExpanded, expandCaption, foldCaption] = useFlag(false);\n  const [isPausedBySpacebar, setIsPausedBySpacebar] = useState(false);\n  const [isPausedByLongPress, markIsPausedByLongPress, unmarkIsPausedByLongPress] = useFlag(false);\n  const [isDropdownMenuOpen, markDropdownMenuOpen, unmarkDropdownMenuOpen] = useFlag(false);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const {\n    isDeletedStory,\n    hasText,\n    hasForwardInfo,\n    thumbnail,\n    previewBlobUrl,\n    isVideo,\n    noSound,\n    fullMediaData,\n    altMediaHash,\n    altMediaData,\n    hasFullData,\n    hasThumb,\n    canDownload,\n    downloadMediaData,\n  } = useStoryProps(story, isCurrentUserPremium, isDropdownMenuOpen);\n\n  const isLoadedStory = story && 'content' in story;\n  const isChangelog = peerId === storyChangelogUserId;\n  const isChannel = !isUserId(peerId);\n  const isOut = isLoadedStory && story.isOut;\n\n  const canPinToProfile = useCurrentOrPrev(\n    isOut ? !story.isPinned : undefined,\n    true,\n  );\n  const canUnpinFromProfile = useCurrentOrPrev(\n    isOut ? story.isPinned : undefined,\n    true,\n  );\n  const areViewsExpired = Boolean(\n    isOut && (story!.date + viewersExpirePeriod) < getServerTime(),\n  );\n\n  const forwardSenderTitle = forwardSender ? getSenderTitle(lang, forwardSender)\n    : (isLoadedStory && story.forwardInfo?.fromName);\n\n  const canCopyLink = Boolean(\n    isLoadedStory\n    && story.isPublic\n    && !isChangelog\n    && peer?.usernames?.length,\n  );\n\n  const canShare = Boolean(\n    isLoadedStory\n    && story.isPublic\n    && !story.noForwards\n    && !isChangelog\n    && !isCaptionExpanded,\n  );\n\n  const canPlayStory = Boolean(\n    hasFullData && !shouldForcePause && isAppFocused && !isComposerHasFocus && !isCaptionExpanded\n    && !isPausedBySpacebar && !isPausedByLongPress,\n  );\n\n  const duration = isLoadedStory && story.content.video?.duration\n    ? story.content.video.duration\n    : undefined;\n\n  const shouldShowFooter = isLoadedStory && (isOut || isChannel);\n  const headerAnimation = isMobile && withHeaderAnimation ? 'slideFade' : 'none';\n\n  const {\n    shouldRender: shouldRenderSkeleton,\n    transitionClassNames: skeletonTransitionClassNames,\n  } = useShowTransition(!hasFullData);\n\n  const {\n    transitionClassNames: mediaTransitionClassNames,\n  } = useShowTransition(Boolean(fullMediaData));\n\n  const thumbRef = useCanvasBlur(thumbnail, !hasThumb);\n  const previewTransitionClassNames = useMediaTransition(previewBlobUrl);\n\n  const {\n    shouldRender: shouldRenderComposer,\n    transitionClassNames: composerAppearanceAnimationClassNames,\n  } = useShowTransition(!isOut && !isChangelog && !isChannel);\n\n  const {\n    shouldRender: shouldRenderCaptionBackdrop,\n    transitionClassNames: captionBackdropTransitionClassNames,\n  } = useShowTransition(hasText && isCaptionExpanded);\n\n  const { transitionClassNames: appearanceAnimationClassNames } = useShowTransition(true);\n  const {\n    shouldRender: shouldRenderCaption,\n    transitionClassNames: captionAppearanceAnimationClassNames,\n  } = useShowTransition(hasText || hasForwardInfo);\n\n  const isStreamingSupported = useStreaming(videoRef, fullMediaData, PRIMARY_VIDEO_MIME);\n\n  useStoryPreloader(peerId, storyId);\n\n  useEffect(() => {\n    if (storyId) {\n      viewStory({ peerId, storyId });\n    }\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    loadPeerSkippedStories({ peerId });\n  }, [peerId]);\n\n  // Fetching user privacy settings for use in Composer\n  useEffect(() => {\n    const canWrite = isUserId(peerId);\n    if (!isChatExist && canWrite) {\n      fetchChat({ chatId: peerId });\n    }\n  }, [isChatExist, peerId]);\n  useEffect(() => {\n    if (isChatExist && !areChatSettingsLoaded) {\n      loadChatSettings({ chatId: peerId });\n    }\n  }, [areChatSettingsLoaded, isChatExist, peerId]);\n\n  const handlePauseStory = useLastCallback(() => {\n    if (isVideo) {\n      videoRef.current?.pause();\n    }\n\n    unmarkStoryPlaying();\n    pauseStory();\n  });\n\n  const handlePlayStory = useLastCallback(() => {\n    if (!canPlayStory) return;\n\n    playStory();\n    if (!isVideo) markStoryPlaying();\n  });\n\n  const handleLongPressStart = useLastCallback(() => {\n    markIsPausedByLongPress();\n  });\n  const handleLongPressEnd = useLastCallback(() => {\n    unmarkIsPausedByLongPress();\n  });\n\n  const handleDropdownMenuOpen = useLastCallback(() => {\n    markDropdownMenuOpen();\n    handlePauseStory();\n  });\n\n  const handleDropdownMenuClose = useLastCallback(() => {\n    unmarkDropdownMenuOpen();\n    handlePlayStory();\n  });\n\n  const {\n    onMouseDown: handleLongPressMouseDown,\n    onMouseUp: handleLongPressMouseUp,\n    onMouseLeave: handleLongPressMouseLeave,\n    onTouchStart: handleLongPressTouchStart,\n    onTouchEnd: handleLongPressTouchEnd,\n  } = useLongPress(handleLongPressStart, handleLongPressEnd);\n\n  const isUnsupported = useUnsupportedMedia(\n    videoRef,\n    undefined,\n    !isVideo || !fullMediaData || isStreamingSupported,\n  );\n\n  const hasAllData = fullMediaData && (!altMediaHash || altMediaData);\n  // Play story after media has been downloaded\n  useEffect(() => {\n    if (hasAllData && !isUnsupported) handlePlayStory();\n  }, [hasAllData, isUnsupported]);\n\n  useBackgroundMode(unmarkAppFocused, markAppFocused);\n\n  useEffect(() => {\n    if (!hasAllData) return;\n    videoRef.current?.load();\n  }, [hasAllData]);\n\n  useEffect(() => {\n    if (!isOut || isDeletedStory || areViewsExpired) return;\n\n    // Refresh recent viewers list each time\n    loadStoryViews({ peerId, storyId, isPreload: true });\n  }, [isDeletedStory, areViewsExpired, isOut, peerId, storyId]);\n\n  useEffect(() => {\n    if (\n      shouldForcePause || !isAppFocused || isComposerHasFocus\n      || isCaptionExpanded || isPausedBySpacebar || isPausedByLongPress\n    ) {\n      handlePauseStory();\n    } else {\n      handlePlayStory();\n    }\n  }, [\n    handlePlayStory, isAppFocused, isCaptionExpanded, isComposerHasFocus,\n    shouldForcePause, isPausedBySpacebar, isPausedByLongPress,\n  ]);\n\n  useEffect(() => {\n    if (isComposerHasFocus || shouldForcePause || isCaptionExpanded) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (e.keyCode === SPACEBAR_CODE) {\n        e.preventDefault();\n        setIsPausedBySpacebar(!isPausedBySpacebar);\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [isCaptionExpanded, isComposerHasFocus, isPausedBySpacebar, shouldForcePause]);\n\n  // Reset the state of `isPausedBySpacebar` when closing the caption, losing focus by composer or disable forced pause\n  useEffectWithPrevDeps(([\n    prevIsComposerHasFocus,\n    prevIsCaptionExpanded,\n    prevShouldForcePause,\n    prevIsAppFocused,\n    prevIsPausedByLongPress,\n  ]) => {\n    if (\n      !isPausedBySpacebar || isCaptionExpanded || isComposerHasFocus\n      || shouldForcePause || !isAppFocused || isPausedByLongPress\n    ) {\n      return;\n    }\n\n    if (\n      prevIsCaptionExpanded !== isCaptionExpanded\n      || prevIsComposerHasFocus !== isComposerHasFocus\n      || prevShouldForcePause !== shouldForcePause\n      || prevIsAppFocused !== isAppFocused\n      || prevIsPausedByLongPress !== isPausedByLongPress\n    ) {\n      setIsPausedBySpacebar(false);\n    }\n  }, [isComposerHasFocus, isCaptionExpanded, shouldForcePause, isAppFocused, isPausedByLongPress, isPausedBySpacebar]);\n\n  const handleOpenChat = useLastCallback(() => {\n    onClose();\n    openChat({ id: peerId });\n  });\n\n  const handleForwardPeerClick = useLastCallback(() => {\n    onClose();\n    openChat({ id: forwardSender!.id });\n  });\n\n  const handleOpenPrevStory = useLastCallback(() => {\n    openPreviousStory();\n  });\n\n  const handleOpenNextStory = useLastCallback(() => {\n    openNextStory();\n  });\n\n  const handleVideoStoryTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    const video = e.currentTarget;\n    if (video.readyState >= VIDEO_MIN_READY_STATE) {\n      markStoryPlaying();\n    } else {\n      unmarkStoryPlaying();\n    }\n    if (duration && round(video.currentTime, 2) >= round(duration, 2)) {\n      handleOpenNextStory();\n    }\n  });\n\n  useEffect(() => {\n    return !getIsAnimating() && !isComposerHasFocus ? captureKeyboardListeners({\n      onRight: handleOpenNextStory,\n      onLeft: handleOpenPrevStory,\n    }) : undefined;\n  }, [getIsAnimating, isComposerHasFocus]);\n\n  const handleCopyStoryLink = useLastCallback(() => {\n    copyStoryLink({ peerId, storyId });\n  });\n\n  const handlePinClick = useLastCallback(() => {\n    toggleStoryPinned({ peerId, storyId, isPinned: true });\n  });\n\n  const handleUnpinClick = useLastCallback(() => {\n    toggleStoryPinned({ peerId, storyId, isPinned: false });\n  });\n\n  const handleDeleteStoryClick = useLastCallback(() => {\n    onDelete(story!);\n  });\n\n  const handleReportStoryClick = useLastCallback(() => {\n    onReport();\n  });\n\n  const handleForwardClick = useLastCallback(() => {\n    openForwardMenu({ fromChatId: peerId, storyId });\n  });\n\n  const handleInfoPrivacyEdit = useLastCallback(() => {\n    openStoryPrivacyEditor();\n  });\n\n  const handleInfoPrivacyClick = useLastCallback(() => {\n    const visibility = !isLoadedStory || story.isPublic\n      ? undefined\n      : story.isForContacts ? 'contacts' : (story.isForCloseFriends ? 'closeFriends' : 'nobody');\n\n    let message;\n    const myName = getSenderTitle(lang, peer);\n    switch (visibility) {\n      case 'nobody':\n        message = lang('StorySelectedContactsHint', myName);\n        break;\n      case 'contacts':\n        message = lang('StoryContactsHint', myName);\n        break;\n      case 'closeFriends':\n        message = lang('StoryCloseFriendsHint', myName);\n        break;\n      default:\n        return;\n    }\n    showNotification({ message });\n  });\n\n  const handleVolumeMuted = useLastCallback(() => {\n    if (noSound) {\n      showNotification({\n        message: lang('Story.TooltipVideoHasNoSound'),\n      });\n      return;\n    }\n    // Browser requires explicit user interaction to keep video playing after unmuting\n    videoRef.current!.muted = !videoRef.current!.muted;\n    setStoryViewerMuted({ isMuted: !isMuted });\n  });\n\n  const handleOpenStealthModal = useLastCallback(() => {\n    if (stealthMode.activeUntil && getServerTime() < stealthMode.activeUntil) {\n      const diff = stealthMode.activeUntil - getServerTime();\n      showNotification({\n        title: lang('StealthModeOn'),\n        message: lang('Story.ToastStealthModeActiveText', formatMediaDuration(diff)),\n        duration: STEALTH_MODE_NOTIFICATION_DURATION,\n      });\n      return;\n    }\n\n    toggleStealthModal({ isOpen: true });\n  });\n\n  const handleDownload = useLastCallback(() => {\n    if (!downloadMediaData) return;\n    download(downloadMediaData, `story-${peerId}-${storyId}.${isVideo ? 'mp4' : 'jpg'}`);\n  });\n\n  useEffect(() => {\n    if (!isDeletedStory) return;\n\n    showNotification({\n      message: lang('StoryNotFound'),\n    });\n  }, [lang, isDeletedStory]);\n\n  const MenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => {\n      return (\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"tiny\"\n          color=\"translucent-white\"\n          onClick={onTrigger}\n          className={buildClassName(styles.button, isOpen && 'active')}\n          ariaLabel={lang('AccDescrOpenMenu2')}\n        >\n          <i className={buildClassName('icon icon-more')} aria-hidden />\n        </Button>\n      );\n    };\n  }, [isMobile, lang]);\n\n  function renderStoriesTabs() {\n    return (\n      <div className={styles.storyIndicators}>\n        {(isSingleStory ? [storyId] : orderedIds ?? []).map((id) => (\n          <StoryProgress\n            key={`progress-${id}`}\n            isActive={id === story?.id}\n            isVideo={isVideo}\n            isViewed={Boolean(story?.id && ((isPrivateStories || isArchivedStories) ? id > story?.id : id < story?.id))}\n            isPaused={!isStoryPlaying}\n            duration={duration}\n            onImageComplete={handleOpenNextStory}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderStoryPrivacyButton() {\n    if (isChannel) return undefined;\n\n    let privacyIcon = 'channel-filled';\n    const gradient: Record<string, [string, string]> = {\n      'channel-filled': ['#50ABFF', '#007AFF'],\n      'user-filled': ['#C36EFF', '#8B60FA'],\n      'favorite-filled': ['#88D93A', '#30B73B'],\n      'group-filled': ['#FFB743', '#F69A36'],\n    };\n\n    if (isOut) {\n      const { visibility } = (story && 'visibility' in story && story.visibility) || {};\n\n      switch (visibility) {\n        case 'everybody':\n          privacyIcon = 'channel-filled';\n          break;\n        case 'contacts':\n          privacyIcon = 'user-filled';\n          break;\n        case 'closeFriends':\n          privacyIcon = 'favorite-filled';\n          break;\n        case 'nobody':\n          privacyIcon = 'group-filled';\n      }\n    } else {\n      if (!story || !('content' in story) || story.isPublic) {\n        return undefined;\n      }\n\n      privacyIcon = story.isForCloseFriends\n        ? 'favorite-filled'\n        : (story.isForContacts ? 'user-filled' : 'group-filled');\n    }\n\n    return (\n      <div\n        className={buildClassName(styles.visibilityButton, isOut && styles.visibilityButtonSelf)}\n        onClick={isOut ? handleInfoPrivacyEdit : handleInfoPrivacyClick}\n        style={`--color-from: ${gradient[privacyIcon][0]}; --color-to: ${gradient[privacyIcon][1]}`}\n      >\n        <i className={`icon icon-${privacyIcon}`} aria-hidden />\n        {isOut && <i className=\"icon icon-next\" aria-hidden />}\n      </div>\n    );\n  }\n\n  function renderSenderInfo() {\n    return (\n      <div className={styles.senderInfo}>\n        <Avatar\n          peer={peer}\n          size=\"tiny\"\n          onClick={handleOpenChat}\n        />\n        <div className={styles.senderMeta}>\n          <span onClick={handleOpenChat} className={styles.senderName}>\n            {renderText(getSenderTitle(lang, peer) || '')}\n          </span>\n          <div className={styles.storyMetaRow}>\n            {forwardSenderTitle && (\n              <span\n                className={buildClassName(\n                  styles.storyMeta, styles.forwardHeader, forwardSender && styles.clickable,\n                )}\n                onClick={forwardSender ? handleForwardPeerClick : undefined}\n              >\n                <Icon name=\"loop\" />\n                <span className={styles.forwardHeaderText}>\n                  {renderText(forwardSenderTitle)}\n                </span>\n              </span>\n            )}\n            {story && 'date' in story && (\n              <span className={styles.storyMeta}>{formatRelativeTime(lang, serverTime, story.date)}</span>\n            )}\n            {isLoadedStory && story.isEdited && (\n              <span className={styles.storyMeta}>{lang('Story.HeaderEdited')}</span>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  function renderSender() {\n    return (\n      <div className={styles.sender}>\n        <Transition activeKey={Number(peerId)} name={headerAnimation} className={styles.senderInfoTransition}>\n          {renderSenderInfo()}\n        </Transition>\n\n        <div className={styles.actions}>\n          {renderStoryPrivacyButton()}\n          {isVideo && (\n            <Button\n              className={styles.button}\n              round\n              ripple={!isMobile}\n              size=\"tiny\"\n              color=\"translucent-white\"\n              disabled={!hasFullData}\n              onClick={handleVolumeMuted}\n              ariaLabel={lang('Volume')}\n            >\n              <i\n                className={buildClassName(\n                  'icon',\n                  isMuted || noSound ? 'icon-speaker-muted-story' : 'icon-speaker-story',\n                )}\n                aria-hidden\n              />\n            </Button>\n          )}\n          <DropdownMenu\n            className={styles.buttonMenu}\n            trigger={MenuButton}\n            positionX=\"right\"\n            onOpen={handleDropdownMenuOpen}\n            onClose={handleDropdownMenuClose}\n          >\n            {canCopyLink && <MenuItem icon=\"copy\" onClick={handleCopyStoryLink}>{lang('CopyLink')}</MenuItem>}\n            {canPinToProfile && (\n              <MenuItem icon=\"save-story\" onClick={handlePinClick}>{lang('StorySave')}</MenuItem>\n            )}\n            {canUnpinFromProfile && (\n              <MenuItem icon=\"delete\" onClick={handleUnpinClick}>{lang('ArchiveStory')}</MenuItem>\n            )}\n            {canDownload && (\n              <MenuItem icon=\"download\" disabled={!downloadMediaData} onClick={handleDownload}>\n                {lang('lng_media_download')}\n              </MenuItem>\n            )}\n            <MenuItem icon=\"eye-closed-outline\" onClick={handleOpenStealthModal}>{lang('StealthMode')}</MenuItem>\n            {!isOut && <MenuItem icon=\"flag\" onClick={handleReportStoryClick}>{lang('lng_report_story')}</MenuItem>}\n            {isOut && <MenuItem icon=\"delete\" destructive onClick={handleDeleteStoryClick}>{lang('Delete')}</MenuItem>}\n          </DropdownMenu>\n          <Button\n            className={buildClassName(styles.button, styles.closeButton)}\n            round\n            size=\"tiny\"\n            color=\"translucent-white\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <i className={buildClassName('icon icon-close')} aria-hidden />\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.slideInner, 'component-theme-dark')}\n      onMouseDown={handleLongPressMouseDown}\n      onMouseUp={handleLongPressMouseUp}\n      onMouseLeave={handleLongPressMouseLeave}\n      onTouchStart={handleLongPressTouchStart}\n      onTouchEnd={handleLongPressTouchEnd}\n    >\n      <div className={buildClassName(styles.storyHeader, appearanceAnimationClassNames)}>\n        {renderStoriesTabs()}\n        {renderSender()}\n      </div>\n\n      <div\n        className={styles.mediaWrapper}\n        style={`width: ${dimensions.width}px; height: ${dimensions.height}px`}\n      >\n        <canvas ref={thumbRef} className={styles.thumbnail} />\n        {previewBlobUrl && (\n          <img\n            key={`preview-${storyId}`}\n            src={previewBlobUrl}\n            draggable={false}\n            alt=\"\"\n            className={buildClassName(styles.media, styles.mediaPreview, previewTransitionClassNames)}\n          />\n        )}\n        {shouldRenderSkeleton && (\n          <Skeleton className={buildClassName(skeletonTransitionClassNames, styles.fullSize)} />\n        )}\n        {!isVideo && fullMediaData && (\n          <img\n            src={fullMediaData}\n            alt=\"\"\n            className={buildClassName(styles.media, mediaTransitionClassNames)}\n            draggable={false}\n          />\n        )}\n        {isVideo && fullMediaData && (\n          <OptimizedVideo\n            ref={videoRef}\n            key={`video-${storyId}`}\n            className={buildClassName(styles.media, mediaTransitionClassNames)}\n            canPlay={isStoryPlaybackRequested}\n            muted={isMuted}\n            width={BASE_STORY_WIDTH}\n            height={BASE_STORY_HEIGHT}\n            draggable={false}\n            playsInline\n            disablePictureInPicture\n            isPriority\n            onPause={unmarkStoryPlaying}\n            onWaiting={unmarkStoryPlaying}\n            disableRemotePlayback\n            onTimeUpdate={handleVideoStoryTimeUpdate}\n          >\n            <source src={fullMediaData} type={PRIMARY_VIDEO_MIME} width=\"720\" />\n            {altMediaData && <source src={altMediaData} type={SECONDARY_VIDEO_MIME} width=\"480\" />}\n          </OptimizedVideo>\n        )}\n\n        {!isPausedByLongPress && !isComposerHasFocus && (\n          <>\n            <button\n              type=\"button\"\n              className={buildClassName(styles.navigate, styles.prev)}\n              onClick={handleOpenPrevStory}\n              aria-label={lang('Previous')}\n            />\n            <button\n              type=\"button\"\n              className={buildClassName(styles.navigate, styles.next)}\n              onClick={handleOpenNextStory}\n              aria-label={lang('Next')}\n            />\n          </>\n        )}\n        {isLoadedStory && fullMediaData && (\n          <MediaAreaOverlay story={story} isActive />\n        )}\n        {!isMobile && (\n          <div className={styles.content}>\n            <div className={styles.contentInner}>\n              <Avatar\n                peer={peer}\n                withStory\n                storyViewerMode=\"disabled\"\n              />\n              <div className={styles.name}>{renderText(getSenderTitle(lang, peer) || '')}</div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {shouldShowFooter && (\n        <StoryFooter story={story} className={appearanceAnimationClassNames} areViewsExpired={areViewsExpired} />\n      )}\n      {shouldRenderCaptionBackdrop && (\n        <div\n          tabIndex={0}\n          role=\"button\"\n          className={buildClassName(styles.captionBackdrop, captionBackdropTransitionClassNames)}\n          onClick={() => foldCaption()}\n          aria-label={lang('Close')}\n        />\n      )}\n      {hasText && <div className={buildClassName(styles.captionGradient, captionAppearanceAnimationClassNames)} />}\n      {shouldRenderCaption && (\n        <StoryCaption\n          key={`caption-${storyId}-${peerId}`}\n          story={story as ApiStory}\n          isExpanded={isCaptionExpanded}\n          onExpand={expandCaption}\n          onFold={foldCaption}\n          className={captionAppearanceAnimationClassNames}\n        />\n      )}\n      {shouldRenderComposer && (\n        <Composer\n          type=\"story\"\n          chatId={peerId}\n          threadId={MAIN_THREAD_ID}\n          storyId={storyId}\n          isReady={!isOut}\n          messageListType=\"thread\"\n          isMobile={getIsMobile()}\n          editableInputCssSelector={EDITABLE_STORY_INPUT_CSS_SELECTOR}\n          editableInputId={EDITABLE_STORY_INPUT_ID}\n          inputId=\"story-input-text\"\n          className={buildClassName(styles.composer, composerAppearanceAnimationClassNames)}\n          inputPlaceholder={lang('ReplyPrivately')}\n          onForward={canShare ? handleForwardClick : undefined}\n          onFocus={markComposerHasFocus}\n          onBlur={unmarkComposerHasFocus}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, {\n  peerId,\n  storyId,\n  isReportModalOpen,\n  isDeleteModalOpen,\n}): StateProps => {\n  const { appConfig } = global;\n  const user = selectUser(global, peerId);\n  const chat = selectChat(global, peerId);\n  const tabState = selectTabState(global);\n  const {\n    storyViewer: {\n      isMuted,\n      viewModal,\n      isPrivacyModalOpen,\n      isStealthModalOpen,\n      storyList,\n    },\n    forwardMessages: { storyId: forwardedStoryId },\n    premiumModal,\n    safeLinkModalUrl,\n    mapModal,\n  } = tabState;\n  const { isOpen: isPremiumModalOpen } = premiumModal || {};\n  const story = selectPeerStory(global, peerId, storyId);\n  const shouldForcePause = Boolean(\n    viewModal || forwardedStoryId || tabState.reactionPicker?.storyId || isReportModalOpen || isPrivacyModalOpen\n    || isPremiumModalOpen || isDeleteModalOpen || safeLinkModalUrl || isStealthModalOpen || mapModal,\n  );\n\n  const forwardInfo = (story && 'forwardInfo' in story) ? story.forwardInfo : undefined;\n  const mediaAreas = (story && 'mediaAreas' in story) ? story.mediaAreas : undefined;\n  const forwardSenderId = forwardInfo?.fromPeerId\n    || mediaAreas?.find((area): area is ApiMediaAreaChannelPost => area.type === 'channelPost')?.channelId;\n  const forwardSender = forwardSenderId ? selectPeer(global, forwardSenderId) : undefined;\n  const withHeaderAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n  return {\n    peer: (user || chat)!,\n    forwardSender,\n    story,\n    orderedIds: storyList?.storyIdsByPeerId[peerId],\n    isMuted,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    shouldForcePause,\n    storyChangelogUserId: appConfig!.storyChangelogUserId,\n    viewersExpirePeriod: appConfig!.storyExpirePeriod + appConfig!.storyViewersExpirePeriod,\n    isChatExist: Boolean(chat),\n    areChatSettingsLoaded: Boolean(chat?.settings),\n    stealthMode: global.stories.stealthMode,\n    withHeaderAnimation,\n  };\n})(Story));\n","import { useCallback, useEffect, useRef } from '../lib/teact/teact';\n\nconst DEFAULT_THRESHOLD = 250;\n\nfunction useLongPress(\n  onStart: NoneToVoidFunction,\n  onEnd: NoneToVoidFunction,\n) {\n  const isLongPressActive = useRef(false);\n  const isPressed = useRef(false);\n  const timerId = useRef<number | undefined>(undefined);\n\n  const start = useCallback((e: React.MouseEvent | React.TouchEvent) => {\n    const canProcessEvent = ('button' in e && e.button === 0) || ('touches' in e && e.touches.length > 0);\n    if (isPressed.current || !canProcessEvent) {\n      return;\n    }\n\n    isPressed.current = true;\n    timerId.current = window.setTimeout(() => {\n      onStart();\n      isLongPressActive.current = true;\n    }, DEFAULT_THRESHOLD);\n  }, [onStart]);\n\n  const cancel = useCallback(() => {\n    if (isLongPressActive.current) {\n      onEnd();\n    }\n\n    isLongPressActive.current = false;\n    isPressed.current = false;\n    window.clearTimeout(timerId.current);\n  }, [onEnd]);\n\n  useEffect(() => {\n    return () => {\n      window.clearTimeout(timerId.current);\n    };\n  }, []);\n\n  return {\n    onMouseDown: start,\n    onMouseUp: cancel,\n    onMouseLeave: cancel,\n    onTouchStart: start,\n    onTouchEnd: cancel,\n  };\n}\n\nexport default useLongPress;\n","import React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiPeer, ApiPeerStories, ApiTypeStory,\n} from '../../api/types';\nimport type { StoryViewerOrigin } from '../../types';\n\nimport { getSenderTitle, getStoryMediaHash } from '../../global/helpers';\nimport { selectTabState } from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useMedia from '../../hooks/useMedia';\n\nimport Avatar from '../common/Avatar';\nimport MediaAreaOverlay from './mediaArea/MediaAreaOverlay';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  peer?: ApiPeer;\n  peerStories?: ApiPeerStories;\n}\n\ninterface StateProps {\n  lastViewedId?: number;\n  origin?: StoryViewerOrigin;\n  storyIdsForViewer?: number[];\n}\n\nfunction StoryPreview({\n  peer, peerStories, lastViewedId, storyIdsForViewer, origin,\n}: OwnProps & StateProps) {\n  const { openStoryViewer, loadPeerSkippedStories } = getActions();\n  const lang = useLang();\n\n  const story = useMemo<ApiTypeStory | undefined>(() => {\n    if (!peerStories) {\n      return undefined;\n    }\n\n    const {\n      orderedIds, lastReadId, byId,\n    } = peerStories;\n    const hasUnreadStories = orderedIds[orderedIds.length - 1] !== lastReadId;\n    const previewIndexId = lastViewedId && storyIdsForViewer?.includes(lastViewedId)\n      ? lastViewedId ?? (hasUnreadStories ? (lastReadId ?? -1) : -1)\n      : -1;\n    const resultId = byId[previewIndexId]?.id || storyIdsForViewer?.[0] || orderedIds[0];\n\n    return byId[resultId];\n  }, [lastViewedId, peerStories, storyIdsForViewer]);\n\n  const isLoaded = story && 'content' in story;\n\n  useEffect(() => {\n    if (story && !isLoaded) {\n      loadPeerSkippedStories({ peerId: story.peerId });\n    }\n  }, [story, isLoaded]);\n\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbUrl = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  if (!peer || !story || 'isDeleted' in story) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={styles.slideInner}\n      onClick={() => { openStoryViewer({ peerId: story.peerId, storyId: story.id, origin }); }}\n    >\n      {thumbUrl && (\n        <img src={thumbUrl} alt=\"\" className={styles.media} draggable={false} />\n      )}\n      {isLoaded && <MediaAreaOverlay story={story} />}\n\n      <div className={styles.content}>\n        <div className={styles.contentInner}>\n          <Avatar\n            peer={peer}\n            withStory\n            storyViewerMode=\"disabled\"\n          />\n          <div className={styles.name}>{renderText(getSenderTitle(lang, peer) || '')}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { peer }): StateProps => {\n  const {\n    storyViewer: {\n      lastViewedByPeerIds,\n      origin,\n      storyList,\n    },\n  } = selectTabState(global);\n\n  return {\n    lastViewedId: peer?.id ? lastViewedByPeerIds?.[peer.id] : undefined,\n    origin,\n    storyIdsForViewer: peer?.id ? storyList?.storyIdsByPeerId[peer.id] : undefined,\n  };\n})(StoryPreview));\n","import React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiPeerStories, ApiTypeStory } from '../../api/types';\nimport type { RealTouchEvent } from '../../util/captureEvents';\n\nimport { EDITABLE_STORY_INPUT_ID } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { getStoryKey } from '../../global/helpers';\nimport {\n  selectIsStoryViewerOpen,\n  selectPeer,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\nimport {\n  captureEvents,\n  IOS_SCREEN_EDGE_THRESHOLD,\n  SWIPE_DIRECTION_THRESHOLD,\n  SWIPE_DIRECTION_TOLERANCE,\n} from '../../util/captureEvents';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { clamp } from '../../util/math';\nimport { disableScrolling, enableScrolling } from '../../util/scrollLock';\nimport { IS_IOS } from '../../util/windowEnvironment';\nimport { calculateOffsetX } from './helpers/dimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePrevious from '../../hooks/usePrevious';\nimport useSignal from '../../hooks/useSignal';\nimport useWindowSize from '../../hooks/window/useWindowSize';\nimport useSlideSizes from './hooks/useSlideSizes';\n\nimport Story from './Story';\nimport StoryPreview from './StoryPreview';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  isOpen?: boolean;\n  isReportModalOpen?: boolean;\n  isDeleteModalOpen?: boolean;\n  onDelete: (story: ApiTypeStory) => void;\n  onReport: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  peerIds: string[];\n  currentPeerId?: string;\n  currentStoryId?: number;\n  byPeerId?: Record<string, ApiPeerStories>;\n  isSinglePeer?: boolean;\n  isSingleStory?: boolean;\n  isPrivate?: boolean;\n  isArchive?: boolean;\n}\n\nconst ACTIVE_SLIDE_VERTICAL_CORRECTION_REM = 1.75;\nconst SWIPE_Y_THRESHOLD = 50;\nconst SCROLL_RELEASE_DELAY = 1500;\n\nenum SwipeDirection {\n  Horizontal,\n  Vertical,\n}\n\nfunction StorySlides({\n  peerIds,\n  currentPeerId,\n  currentStoryId,\n  isOpen,\n  isSinglePeer,\n  isSingleStory,\n  isPrivate,\n  isArchive,\n  byPeerId,\n  isReportModalOpen,\n  isDeleteModalOpen,\n  onDelete,\n  onClose,\n  onReport,\n}: OwnProps & StateProps) {\n  const { stopActiveReaction } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [renderingPeerId, setRenderingPeerId] = useState(currentPeerId);\n  const [renderingStoryId, setRenderingStoryId] = useState(currentStoryId);\n  const prevPeerId = usePrevious(currentPeerId);\n  const renderingIsArchive = useCurrentOrPrev(isArchive, true);\n  const renderingIsPrivate = useCurrentOrPrev(isPrivate, true);\n  const renderingIsSinglePeer = useCurrentOrPrev(isSinglePeer, true);\n  const renderingIsSingleStory = useCurrentOrPrev(isSingleStory, true);\n  const slideSizes = useSlideSizes();\n  const { height: windowHeight, width: windowWidth } = useWindowSize();\n  const swipeDirectionRef = useRef<SwipeDirection | undefined>(undefined);\n  const isReleasedRef = useRef(false);\n  const { isMobile } = useAppLayout();\n\n  const rendersRef = useRef<Record<string, { current: HTMLDivElement | null }>>({});\n  const [getIsAnimating, setIsAnimating] = useSignal(false);\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n    shouldBeReplaced: true,\n  });\n\n  function setRef(ref: HTMLDivElement | null, peerId: string) {\n    if (!ref) {\n      return;\n    }\n    if (!rendersRef.current[peerId]) {\n      rendersRef.current[peerId] = { current: ref };\n    } else {\n      rendersRef.current[peerId].current = ref;\n    }\n  }\n\n  const renderingPeerIds = useMemo(() => {\n    if (renderingPeerId && (renderingIsSinglePeer || renderingIsSingleStory)) {\n      return [renderingPeerId];\n    }\n\n    const index = renderingPeerId ? peerIds.indexOf(renderingPeerId) : -1;\n    if (!renderingPeerId || index === -1) {\n      return [];\n    }\n\n    const start = Math.max(index - 4, 0);\n    const end = Math.min(index + 5, peerIds.length);\n\n    return peerIds.slice(start, end);\n  }, [renderingIsSingleStory, renderingIsSinglePeer, renderingPeerId, peerIds]);\n\n  const renderingPeerPosition = useMemo(() => {\n    if (!renderingPeerIds.length || !renderingPeerId) {\n      return -1;\n    }\n\n    return renderingPeerIds.indexOf(renderingPeerId);\n  }, [renderingPeerId, renderingPeerIds]);\n\n  const currentPeerPosition = useMemo(() => {\n    if (!renderingPeerIds.length || !currentPeerId) {\n      return -1;\n    }\n    return renderingPeerIds.indexOf(currentPeerId);\n  }, [currentPeerId, renderingPeerIds]);\n\n  useEffect(() => {\n    if (!isMobile) return;\n\n    // If animation disabled, set rendering peer id to current peer\n    setRenderingPeerId(currentPeerId);\n  }, [currentPeerId, isMobile]);\n\n  // Handling the flipping of stories from a current user\n  useEffect(() => {\n    if (renderingPeerId === currentPeerId && currentStoryId !== renderingStoryId) {\n      setRenderingStoryId(currentStoryId);\n    }\n  }, [currentPeerId, currentStoryId, renderingPeerId, renderingStoryId]);\n\n  useEffect(() => {\n    if (isMobile) return undefined;\n    if (prevPeerId && prevPeerId !== currentPeerId) {\n      setIsAnimating(true);\n    }\n\n    return () => {\n      setIsAnimating(false);\n    };\n  }, [prevPeerId, currentPeerId, setIsAnimating, isMobile]);\n\n  useEffect(() => {\n    return () => {\n      if (!currentStoryId || !currentPeerId) return;\n      stopActiveReaction({\n        containerId: getStoryKey(currentPeerId, currentStoryId),\n      });\n    };\n  }, [currentStoryId, currentPeerId]);\n\n  const slideAmount = currentPeerPosition - renderingPeerPosition;\n  const isBackward = renderingPeerPosition > currentPeerPosition;\n\n  const calculateTransformX = useLastCallback(() => {\n    return peerIds.reduce<Record<string, number>>((transformX, peerId, index) => {\n      if (peerId === renderingPeerId) {\n        transformX[peerId] = calculateOffsetX({\n          scale: slideSizes.scale,\n          slideAmount,\n          isBackward,\n          isActiveSlideSize: isBackward,\n        });\n      } else {\n        let isMoveThroughActiveSlide = false;\n        if (!isBackward && index > 0 && peerIds[index - 1] === renderingPeerId) {\n          isMoveThroughActiveSlide = true;\n        }\n        if (isBackward && index < peerIds.length - 1 && peerIds[index + 1] === renderingPeerId) {\n          isMoveThroughActiveSlide = true;\n        }\n\n        transformX[peerId] = calculateOffsetX({\n          scale: slideSizes.scale,\n          slideAmount,\n          isBackward,\n          isActiveSlideSize: currentPeerId === peerId && !isBackward,\n          isMoveThroughActiveSlide,\n        });\n      }\n\n      return transformX;\n    }, {});\n  });\n\n  useEffect(() => {\n    if (!containerRef.current || !isOpen) {\n      return undefined;\n    }\n\n    let offsetY = 0;\n\n    const getCurrentStoryRef = () => {\n      return renderingPeerId ? rendersRef.current[renderingPeerId]?.current : undefined;\n    };\n\n    const onRelease = (event: MouseEvent | TouchEvent | WheelEvent) => {\n      // This allows to prevent onRelease triggered by debounced wheel event\n      // after onRelease was triggered manually in onDrag\n      if (isReleasedRef.current) {\n        isReleasedRef.current = false;\n        return;\n      }\n      const current = getCurrentStoryRef();\n      if (!current) return;\n\n      if (offsetY < -SWIPE_Y_THRESHOLD) {\n        const composer = document.getElementById(EDITABLE_STORY_INPUT_ID);\n        if (composer) {\n          requestMutation(() => {\n            focusEditableElement(composer);\n          });\n        }\n        return;\n      }\n\n      if (offsetY > SWIPE_Y_THRESHOLD) {\n        onClose();\n        if (event.type === 'wheel') {\n          disableScrolling();\n          setTimeout(enableScrolling, SCROLL_RELEASE_DELAY);\n        }\n      } else {\n        requestMutation(() => {\n          current.style.setProperty('--slide-translate-y', '0px');\n        });\n      }\n    };\n\n    return captureEvents(containerRef.current, {\n      isNotPassive: true,\n      withNativeDrag: true,\n      withWheelDrag: true,\n      excludedClosestSelector: '.Composer',\n      onDrag: (event, captureEvent, {\n        dragOffsetX, dragOffsetY,\n      }) => {\n        if (isReleasedRef.current) return;\n        // Avoid conflicts with swipe-to-back gestures\n        if (IS_IOS && captureEvent.type === 'touchstart') {\n          const { pageX } = (captureEvent as RealTouchEvent).touches[0];\n          if (pageX <= IOS_SCREEN_EDGE_THRESHOLD || pageX >= windowWidth - IOS_SCREEN_EDGE_THRESHOLD) {\n            return;\n          }\n        }\n        if (event.type === 'mousemove') return;\n        const absOffsetX = Math.abs(dragOffsetX);\n        const absOffsetY = Math.abs(dragOffsetY);\n        const current = getCurrentStoryRef();\n        if (!current) return;\n        // If vertical shift is dominant we change only vertical position\n        if (swipeDirectionRef.current === SwipeDirection.Vertical\n          || Math.abs(absOffsetY) > SWIPE_DIRECTION_THRESHOLD || absOffsetY / absOffsetX > SWIPE_DIRECTION_TOLERANCE) {\n          swipeDirectionRef.current = SwipeDirection.Vertical;\n          const limit = windowHeight;\n          offsetY = clamp(dragOffsetY, -limit, limit);\n          if (offsetY > 0) {\n            requestMutation(() => {\n              current.style.setProperty('--slide-translate-y', `${offsetY * (isMobile ? 1 : -1)}px`);\n            });\n          }\n          if (event.type === 'wheel' && Math.abs(offsetY) > SWIPE_Y_THRESHOLD * 2) {\n            onRelease(event);\n            isReleasedRef.current = true;\n          }\n        }\n      },\n      onRelease,\n    });\n  }, [isOpen, onClose, windowWidth, windowHeight, isMobile, renderingPeerId]);\n\n  useLayoutEffect(() => {\n    if (isMobile) return;\n    const transformX = calculateTransformX();\n\n    Object.entries(rendersRef.current).forEach(([peerId, { current }]) => {\n      if (!current) return;\n\n      if (!getIsAnimating()) {\n        current.classList.remove(styles.slideAnimation, styles.slideAnimationToActive, styles.slideAnimationFromActive);\n        current.style.setProperty('--slide-translate-x', '0px');\n        current.style.setProperty('--slide-translate-y', '0px');\n        current.style.setProperty('--slide-translate-scale', '1');\n        current.style.setProperty('--slide-content-scale', String(slideSizes.toActiveScale));\n\n        return;\n      }\n\n      const getScale = () => {\n        if (currentPeerId === peerId) {\n          return String(slideSizes.toActiveScale);\n        }\n        if (peerId === renderingPeerId) {\n          return String(slideSizes.fromActiveScale);\n        }\n        return '1';\n      };\n\n      let offsetY = 0;\n      if (peerId === renderingPeerId) {\n        offsetY = -ACTIVE_SLIDE_VERTICAL_CORRECTION_REM * slideSizes.fromActiveScale;\n        current.classList.add(styles.slideAnimationFromActive);\n      }\n      if (peerId === currentPeerId) {\n        offsetY = ACTIVE_SLIDE_VERTICAL_CORRECTION_REM;\n        current.classList.add(styles.slideAnimationToActive);\n      }\n\n      current.classList.add(styles.slideAnimation);\n      current.style.setProperty('--slide-translate-x', `${transformX[peerId] || 0}px`);\n      current.style.setProperty('--slide-translate-y', `${offsetY}rem`);\n      current.style.setProperty('--slide-translate-scale', getScale());\n    });\n  }, [currentPeerId, getIsAnimating, renderingPeerId, slideSizes, isMobile]);\n\n  const handleTransitionEnd = useLastCallback((event: React.TransitionEvent<HTMLDivElement>) => {\n    // It is `target` that is needed here, not `currentTarget`\n    const target = event.target as HTMLDivElement | null;\n\n    if (!target || !target.classList.contains(styles.activeSlide)) return;\n\n    if (renderingPeerId !== currentPeerId) {\n      setRenderingPeerId(currentPeerId);\n      setRenderingStoryId(currentStoryId);\n    } else if (currentStoryId !== renderingStoryId) {\n      setRenderingStoryId(currentStoryId);\n    }\n    setIsAnimating(false);\n  });\n\n  if (isMobile) {\n    return (\n      <div className={styles.wrapper} ref={containerRef}>\n        <div\n          className={styles.mobileSlide}\n          ref={(ref) => setRef(ref, renderingPeerId!)}\n        >\n          <Story\n            peerId={renderingPeerId!}\n            storyId={renderingStoryId!}\n            onDelete={onDelete}\n            dimensions={slideSizes.activeSlide}\n            isPrivateStories={renderingIsPrivate}\n            isArchivedStories={renderingIsArchive}\n            isReportModalOpen={isReportModalOpen}\n            isDeleteModalOpen={isDeleteModalOpen}\n            isSingleStory={isSingleStory}\n            getIsAnimating={getIsAnimating}\n            onClose={onClose}\n            onReport={onReport}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderStoryPreview(peerId: string, index: number, position: number) {\n    const style = buildStyle(\n      `width: ${slideSizes.slide.width}px`,\n      `height: ${slideSizes.slide.height}px`,\n    );\n    const className = buildClassName(\n      styles.slide,\n      styles.slidePreview,\n      `slide-${position}`,\n    );\n\n    return (\n      <div\n        key={peerId}\n        ref={(ref) => setRef(ref, peerId)}\n        className={className}\n        style={style}\n      >\n        <StoryPreview\n          peer={selectPeer(getGlobal(), peerId)}\n          peerStories={byPeerId?.[peerId]}\n        />\n      </div>\n    );\n  }\n\n  function renderStory(peerId: string) {\n    const style = isMobile ? undefined : buildStyle(\n      `width: ${slideSizes.activeSlide.width}px`,\n      `--slide-media-height: ${slideSizes.activeSlide.height}px`,\n    );\n\n    return (\n      <div\n        key={peerId}\n        ref={(ref) => setRef(ref, peerId)}\n        className={buildClassName(styles.slide, styles.activeSlide)}\n        style={style}\n      >\n        <Story\n          peerId={peerId}\n          storyId={renderingStoryId!}\n          onDelete={onDelete}\n          dimensions={slideSizes.activeSlide}\n          isPrivateStories={renderingIsPrivate}\n          isArchivedStories={renderingIsArchive}\n          isReportModalOpen={isReportModalOpen}\n          isDeleteModalOpen={isDeleteModalOpen}\n          isSingleStory={isSingleStory}\n          getIsAnimating={getIsAnimating}\n          onClose={onClose}\n          onReport={onReport}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={styles.wrapper}\n      ref={containerRef}\n      style={`--story-viewer-scale: ${slideSizes.scale}`}\n      onTransitionEnd={handleTransitionEnd}\n    >\n      <div className={styles.fullSize} onClick={onClose} />\n      {renderingPeerIds.length > 1 && (\n        <div className={styles.backdropNonInteractive} style={`height: ${slideSizes.slide.height}px`} />\n      )}\n      {renderingPeerIds.map((peerId, index) => {\n        if (peerId === renderingPeerId) {\n          return renderStory(renderingPeerId);\n        }\n\n        return renderStoryPreview(peerId, index, index - renderingPeerPosition);\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    storyViewer: {\n      peerId: currentPeerId, storyId: currentStoryId, isSinglePeer, isSingleStory, isPrivate, isArchive, storyList,\n    },\n  } = selectTabState(global);\n  const { byPeerId, orderedPeerIds: { active } } = global.stories;\n\n  return {\n    byPeerId,\n    peerIds: storyList?.peerIds ?? active,\n    currentPeerId,\n    currentStoryId,\n    isSinglePeer,\n    isSingleStory,\n    isPrivate,\n    isArchive,\n  };\n}, (global) => selectIsStoryViewerOpen(global))(StorySlides));\n","// extracted by mini-css-extract-plugin\nexport default {\"views-list\":\"hOwWWII6h241MvvB87N5\",\"viewsList\":\"hOwWWII6h241MvvB87N5\",\"views-list-loading\":\"ZaMMMcb_gGs7nmClMvzj\",\"viewsListLoading\":\"ZaMMMcb_gGs7nmClMvzj\",\"info\":\"Yt7QHLaCNE1N3OSWXa_n\",\"centeredInfo\":\"vKqMQNiuvK152lO__j16\",\"view-reaction\":\"x77ctFpUWd2rG2IUxz7y\",\"viewReaction\":\"x77ctFpUWd2rG2IUxz7y\",\"header\":\"oGYCTCHvXEkdIBMd0dHh\",\"content\":\"NfqCS7dx9c9nxYXZc3p2\",\"top-button\":\"hMKJ4bqsyGw0fQn5RwVQ\",\"topButton\":\"hMKJ4bqsyGw0fQn5RwVQ\",\"contact-filter\":\"RnVt9sK0OgnrHADARI9k\",\"contactFilter\":\"RnVt9sK0OgnrHADARI9k\",\"selected\":\"deHea5ii46_J57LhYmaj\",\"sort\":\"Mq_j5_FRMS06qJcPCwmC\",\"sort-button\":\"BYQ1X4iADCMrIUqdd3Lt\",\"sortButton\":\"BYQ1X4iADCMrIUqdd3Lt\",\"icon-sort\":\"yq5P30VXV4gSKmSHmXLL\",\"iconSort\":\"yq5P30VXV4gSKmSHmXLL\",\"icon-down\":\"mjcXdhEuASJWWO5Cqlxq\",\"iconDown\":\"mjcXdhEuASJWWO5Cqlxq\",\"search\":\"vs1AYj85WQxzI646EBZt\",\"bottom-info\":\"sWTOVQoWoeNAu2G8kVOl\",\"bottomInfo\":\"sWTOVQoWoeNAu2G8kVOl\",\"scrolled\":\"knxco2DJ3lthvQo2SOG6\",\"footer\":\"RqsPFLpLbJYFm50JYSiw\",\"closeButton\":\"DonddSsGK4E9DM8F5ctU\",\"opacity-fade-in\":\"h15igx036PH4epiXwUBg\",\"opacityFadeIn\":\"h15igx036PH4epiXwUBg\",\"fadeIn\":\"T9DzW6zCmxNgXv1YaUji\",\"blocked\":\"EVxErnsRszao77tgwSaA\",\"check\":\"HbQucamQwAYpvNnTqHVM\",\"menuBubble\":\"Y3KJ1StmiJpvbpeqbMuv\",\"with-colored-status\":\"OrtwVmQOgjKHYJJf4eK4\",\"withColoredStatus\":\"OrtwVmQOgjKHYJJf4eK4\"};","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiAvailableReaction, ApiPeer, ApiTypeStoryView, ApiUser,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\n\nimport { getUserFullName, isUserId } from '../../global/helpers';\nimport { selectPeer } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dateFormat';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport GroupChatInfo from '../common/GroupChatInfo';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ReactionStaticEmoji from '../common/ReactionStaticEmoji';\nimport ListItem, { type MenuItemContextAction } from '../ui/ListItem';\n\nimport styles from './StoryViewModal.module.scss';\n\ntype OwnProps = {\n  storyView: ApiTypeStoryView;\n};\n\ntype StateProps = {\n  peer?: ApiPeer;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst CLOSE_ANIMATION_DURATION = 100;\nconst DEFAULT_REACTION_SIZE = 1.5 * REM;\nconst BULLET = '\\u2022';\n\nconst StoryView = ({\n  storyView,\n  peer,\n  availableReactions,\n}: OwnProps & StateProps) => {\n  const {\n    openChat,\n    closeStoryViewer,\n    unblockUser,\n    blockUser,\n    deleteContact,\n    updateStoryView,\n    focusMessage,\n    openStoryViewer,\n    closeStoryViewModal,\n  } = getActions();\n\n  const lang = useLang();\n\n  const handleClick = useLastCallback(() => {\n    const { type } = storyView;\n\n    if (type === 'repost') {\n      closeStoryViewModal();\n      openStoryViewer({\n        peerId: storyView.peerId,\n        storyId: storyView.storyId,\n      });\n      return;\n    }\n\n    closeStoryViewer();\n\n    setTimeout(() => {\n      if (type === 'user') {\n        openChat({ id: storyView.peerId });\n      } else if (type === 'forward') {\n        focusMessage({ chatId: storyView.peerId, messageId: storyView.messageId });\n      }\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const contextActions = useMemo(() => {\n    if (!isUserId(storyView.peerId)) return undefined;\n    const { peerId, areStoriesBlocked, isUserBlocked } = storyView;\n    const user = peer as ApiUser;\n    const { isContact } = user || {};\n    const fullName = getUserFullName(user);\n\n    const actions: MenuItemContextAction[] = [];\n\n    if (!isUserBlocked) {\n      if (!areStoriesBlocked) {\n        actions.push({\n          handler: () => {\n            blockUser({ userId: peerId, isOnlyStories: true });\n            updateStoryView({ userId: peerId, areStoriesBlocked: true });\n          },\n          title: lang('StoryHideFrom', fullName),\n          icon: 'hand-stop',\n        });\n      } else {\n        actions.push({\n          handler: () => {\n            unblockUser({ userId: peerId, isOnlyStories: true });\n            updateStoryView({ userId: peerId, areStoriesBlocked: false });\n          },\n          title: lang('StoryShowBackTo', fullName),\n          icon: 'play-story',\n        });\n      }\n    }\n\n    if (isContact) {\n      actions.push({\n        handler: () => {\n          deleteContact({ userId: peerId });\n        },\n        title: lang('DeleteContact'),\n        icon: 'delete-user',\n        destructive: true,\n      });\n    } else {\n      actions.push({\n        handler: () => {\n          if (isUserBlocked) {\n            unblockUser({ userId: peerId });\n            updateStoryView({ userId: peerId, isUserBlocked: false });\n          } else {\n            blockUser({ userId: peerId });\n            updateStoryView({ userId: peerId, isUserBlocked: true });\n          }\n        },\n        title: lang(isUserBlocked ? 'Unblock' : 'BlockUser'),\n        icon: isUserBlocked ? 'user' : 'delete-user',\n        destructive: !isUserBlocked,\n      });\n    }\n\n    return actions;\n  }, [lang, storyView, peer]);\n\n  const statusIcon: IconName = storyView.type === 'user' ? 'message-read'\n    : storyView.type === 'forward' ? 'forward' : 'loop';\n  const shouldColorStatus = storyView.type === 'forward' || storyView.type === 'repost';\n\n  const status = useMemo(() => {\n    const isModified = storyView.type === 'repost' && storyView.story.forwardInfo?.isModified;\n    const parts = [formatDateAtTime(lang, storyView.date * 1000)];\n    if (isModified) {\n      parts.push(lang('lng_edited'));\n    }\n\n    return parts.join(` ${BULLET} `);\n  }, [lang, storyView]);\n\n  return (\n    <ListItem\n      key={storyView.peerId}\n      className={buildClassName(\n        'chat-item-clickable small-icon',\n        styles.opacityFadeIn,\n        (storyView.isUserBlocked || storyView.areStoriesBlocked) && styles.blocked,\n      )}\n      // eslint-disable-next-line react/jsx-no-bind\n      onClick={() => handleClick()}\n      rightElement={storyView.type === 'user' && storyView.reaction ? (\n        <ReactionStaticEmoji\n          reaction={storyView.reaction}\n          className={styles.viewReaction}\n          size={DEFAULT_REACTION_SIZE}\n          availableReactions={availableReactions}\n          withIconHeart\n        />\n      ) : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      menuBubbleClassName={styles.menuBubble}\n    >\n      {isUserId(storyView.peerId) ? (\n        <PrivateChatInfo\n          className={buildClassName(shouldColorStatus && styles.withColoredStatus)}\n          userId={storyView.peerId}\n          noStatusOrTyping\n          status={status}\n          statusIcon={statusIcon}\n          withStory\n          forceShowSelf\n        />\n      ) : (\n        <GroupChatInfo\n          className={buildClassName(shouldColorStatus && styles.withColoredStatus)}\n          chatId={storyView.peerId}\n          status={status}\n          statusIcon={statusIcon}\n          withStory\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { storyView }) => {\n  const peer = selectPeer(global, storyView.peerId);\n\n  return {\n    peer,\n    availableReactions: global.availableReactions,\n  };\n})(StoryView));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStory, ApiTypeStoryView } from '../../api/types';\n\nimport {\n  STORY_MIN_REACTIONS_SORT,\n  STORY_VIEWS_MIN_CONTACTS_FILTER,\n  STORY_VIEWS_MIN_SEARCH,\n} from '../../config';\nimport {\n  selectIsCurrentUserPremium,\n  selectPeerStory,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTime } from '../../util/serverTime';\nimport renderText from '../common/helpers/renderText';\n\nimport useDebouncedCallback from '../../hooks/useDebouncedCallback';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useScrolledState from '../../hooks/useScrolledState';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport ListItem from '../ui/ListItem';\nimport MenuItem from '../ui/MenuItem';\nimport Modal from '../ui/Modal';\nimport PlaceholderChatInfo from '../ui/placeholder/PlaceholderChatInfo';\nimport SearchInput from '../ui/SearchInput';\nimport StoryView from './StoryView';\n\nimport styles from './StoryViewModal.module.scss';\n\ninterface StateProps {\n  story?: ApiStory;\n  isLoading?: boolean;\n  views?: ApiTypeStoryView[];\n  nextOffset?: string;\n  viewersExpirePeriod: number;\n  isCurrentUserPremium?: boolean;\n}\n\nconst REFETCH_DEBOUNCE = 250;\n\nfunction StoryViewModal({\n  story,\n  viewersExpirePeriod,\n  views,\n  nextOffset,\n  isLoading,\n  isCurrentUserPremium,\n}: StateProps) {\n  const {\n    loadStoryViews, closeStoryViewModal, clearStoryViews,\n  } = getActions();\n\n  const [areJustContacts, markJustContacts, unmarkJustContacts] = useFlag(false);\n  const [areReactionsFirst, markReactionsFirst, unmarkReactionsFirst] = useFlag(true);\n  const [query, setQuery] = useState('');\n\n  const lang = useLang();\n\n  const isOpen = Boolean(story);\n  const isExpired = Boolean(story?.date) && (story!.date + viewersExpirePeriod) < getServerTime();\n  const { viewsCount = 0, reactionsCount = 0 } = story?.views || {};\n\n  const shouldShowJustContacts = story?.isPublic && viewsCount > STORY_VIEWS_MIN_CONTACTS_FILTER;\n  const shouldShowSortByReactions = reactionsCount > STORY_MIN_REACTIONS_SORT;\n  const shouldShowSearch = viewsCount > STORY_VIEWS_MIN_SEARCH;\n  const hasHeader = shouldShowJustContacts || shouldShowSortByReactions || shouldShowSearch;\n\n  useEffect(() => {\n    if (!isOpen) {\n      setQuery('');\n      unmarkJustContacts();\n      markReactionsFirst();\n    }\n  }, [isOpen]);\n\n  const refetchViews = useDebouncedCallback(() => {\n    clearStoryViews({ isLoading: true });\n  }, [], REFETCH_DEBOUNCE, true);\n\n  useEffect(() => {\n    refetchViews();\n  }, [areJustContacts, areReactionsFirst, query, refetchViews]);\n\n  const sortedViews = useMemo(() => {\n    return views?.sort(prepareComparator(areReactionsFirst));\n  }, [areReactionsFirst, views]);\n\n  const placeholderCount = !sortedViews?.length ? Math.min(viewsCount, 8) : 1;\n\n  const notAllAvailable = Boolean(sortedViews?.length) && sortedViews!.length < viewsCount && isExpired;\n\n  const handleLoadMore = useLastCallback(() => {\n    if (!story?.id || nextOffset === undefined) return;\n    loadStoryViews({\n      peerId: story.peerId,\n      storyId: story.id,\n      offset: nextOffset,\n      areReactionsFirst: areReactionsFirst || undefined,\n      areJustContacts: areJustContacts || undefined,\n      query,\n    });\n  });\n\n  const { handleScroll, isAtBeginning } = useScrolledState();\n\n  const handleClose = useLastCallback(() => {\n    closeStoryViewModal();\n  });\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        fluid\n        size=\"tiny\"\n        color=\"translucent\"\n        className={buildClassName(!isMenuOpen && 'active', styles.sortButton, styles.topButton)}\n        faded={isMenuOpen}\n        onClick={onTrigger}\n        ariaLabel={lang('SortBy')}\n      >\n        <i className={buildClassName(\n          'icon',\n          areReactionsFirst ? 'icon-heart-outline' : 'icon-recent',\n          styles.iconSort,\n        )}\n        />\n        <i className={buildClassName('icon icon-down', styles.iconDown)} />\n      </Button>\n    );\n  }, [areReactionsFirst, lang]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={handleClose}\n      className=\"component-theme-dark\"\n      contentClassName={styles.viewsList}\n      isSlim\n    >\n      {hasHeader && (\n        <div className={styles.header}>\n          {shouldShowJustContacts && (\n            <div className={styles.contactFilter}>\n              <Button\n                className={buildClassName(!areJustContacts && styles.selected, styles.topButton)}\n                size=\"tiny\"\n                color=\"translucent-white\"\n                fluid\n                onClick={unmarkJustContacts}\n              >\n                {lang('AllViewers')}\n              </Button>\n              <Button\n                className={buildClassName(areJustContacts && styles.selected, styles.topButton)}\n                size=\"tiny\"\n                color=\"translucent-white\"\n                fluid\n                onClick={markJustContacts}\n              >\n                {lang('Contacts')}\n              </Button>\n            </div>\n          )}\n          {shouldShowSortByReactions && (\n            <DropdownMenu\n              className={styles.sort}\n              trigger={MoreMenuButton}\n              positionX=\"right\"\n            >\n              <MenuItem icon=\"heart-outline\" onClick={markReactionsFirst}>\n                {lang('SortByReactions')}\n                {areReactionsFirst && (\n                  <i className={buildClassName('icon icon-check', styles.check)} aria-hidden />\n                )}\n              </MenuItem>\n              <MenuItem icon=\"recent\" onClick={unmarkReactionsFirst}>\n                {lang('SortByTime')}\n                {!areReactionsFirst && (\n                  <i className={buildClassName('icon icon-check', styles.check)} aria-hidden />\n                )}\n              </MenuItem>\n            </DropdownMenu>\n          )}\n          {shouldShowSearch && (\n            <SearchInput className={styles.search} value={query} onChange={setQuery} />\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName(styles.content, !isAtBeginning && styles.topScrolled, 'custom-scroll')}\n        onScroll={handleScroll}\n      >\n        {isExpired && !isLoading && !query && Boolean(!sortedViews?.length) && (\n          <div className={buildClassName(styles.info, styles.centeredInfo)}>\n            {renderText(\n              lang(isCurrentUserPremium ? 'ServerErrorViewers' : 'ExpiredViewsStub'),\n              ['simple_markdown', 'emoji'],\n            )}\n          </div>\n        )}\n        {!isLoading && Boolean(query.length) && !sortedViews?.length && (\n          <div className={styles.info}>\n            {lang('Story.ViewList.EmptyTextSearch')}\n          </div>\n        )}\n        <InfiniteScroll\n          items={sortedViews}\n          onLoadMore={handleLoadMore}\n        >\n          {sortedViews?.map((view) => {\n            const additionalKeyId = view.type === 'forward' ? view.messageId\n              : view.type === 'repost' ? view.storyId : 'user';\n            return (\n              <StoryView key={`${view.peerId}-${view.date}-${additionalKeyId}`} storyView={view} />\n            );\n          })}\n          {isLoading && Array.from({ length: placeholderCount }).map((_, i) => (\n            <ListItem\n              // eslint-disable-next-line react/no-array-index-key\n              key={`placeholder-${i}`}\n              className=\"chat-item-clickable contact-list-item scroll-item small-icon\"\n              disabled\n            >\n              <PlaceholderChatInfo />\n            </ListItem>\n          ))}\n          {notAllAvailable && (\n            <div key=\"not-all-available\" className={buildClassName(styles.info, styles.bottomInfo)}>\n              {lang('Story.ViewList.NotFullyRecorded')}\n            </div>\n          )}\n        </InfiniteScroll>\n      </div>\n      <div className={buildClassName(styles.footer, 'dialog-buttons')}>\n        <Button\n          className={buildClassName('confirm-dialog-button', styles.close)}\n          isText\n          onClick={handleClose}\n        >\n          {lang('Close')}\n        </Button>\n      </div>\n    </Modal>\n  );\n}\n\nfunction prepareComparator(areReactionsFirst?: boolean) {\n  return (a: ApiTypeStoryView, b: ApiTypeStoryView) => {\n    if (areReactionsFirst) {\n      const reactionA = a.type === 'user' && a.reaction;\n      const reactionB = b.type === 'user' && b.reaction;\n      if (reactionA && !reactionB) {\n        return -1;\n      }\n      if (!reactionA && reactionB) {\n        return 1;\n      }\n    }\n\n    return b.date - a.date;\n  };\n}\n\nexport default memo(withGlobal((global) => {\n  const { appConfig } = global;\n  const { storyViewer: { viewModal } } = selectTabState(global);\n  const {\n    storyId, views, nextOffset, isLoading,\n  } = viewModal || {};\n  const story = storyId ? selectPeerStory(global, global.currentUserId!, storyId) : undefined;\n\n  return {\n    storyId,\n    views,\n    viewersExpirePeriod: appConfig!.storyExpirePeriod + appConfig!.storyViewersExpirePeriod,\n    story: story && 'content' in story ? story : undefined,\n    nextOffset,\n    isLoading,\n    availableReactions: global.availableReactions,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n  };\n})(StoryViewModal));\n","import React, {\n  memo, useCallback, useEffect, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiTypeStory } from '../../api/types';\nimport type { StoryViewerOrigin } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport {\n  selectIsStoryViewerOpen,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport { animateClosing, animateOpening } from './helpers/ghostAnimation';\n\nimport useFlag from '../../hooks/useFlag';\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\nimport { dispatchPriorityPlaybackEvent } from '../../hooks/usePriorityPlaybackCheck';\nimport useSlideSizes from './hooks/useSlideSizes';\nimport useStoryProps from './hooks/useStoryProps';\n\nimport ReportModal from '../common/ReportModal';\nimport Button from '../ui/Button';\nimport ShowTransition from '../ui/ShowTransition';\nimport StealthModeModal from './StealthModeModal';\nimport StoryDeleteConfirmModal from './StoryDeleteConfirmModal';\nimport StorySettings from './StorySettings';\nimport StorySlides from './StorySlides';\nimport StoryViewModal from './StoryViewModal';\n\nimport styles from './StoryViewer.module.scss';\n\nconst ANIMATION_DURATION = 250;\n\ninterface StateProps {\n  isOpen: boolean;\n  peerId: string;\n  storyId?: number;\n  story?: ApiTypeStory;\n  origin?: StoryViewerOrigin;\n  shouldSkipHistoryAnimations?: boolean;\n  withAnimation?: boolean;\n  isPrivacyModalOpen?: boolean;\n}\n\nfunction StoryViewer({\n  isOpen,\n  peerId,\n  storyId,\n  story,\n  origin,\n  shouldSkipHistoryAnimations,\n  withAnimation,\n  isPrivacyModalOpen,\n}: StateProps) {\n  const { closeStoryViewer, closeStoryPrivacyEditor } = getActions();\n\n  const lang = useLang();\n  const [storyToDelete, setStoryToDelete] = useState<ApiTypeStory | undefined>(undefined);\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag(false);\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag(false);\n\n  const { bestImageData, thumbnail } = useStoryProps(story);\n  const slideSizes = useSlideSizes();\n  const isPrevOpen = usePrevious(isOpen);\n  const prevBestImageData = usePrevious(bestImageData);\n  const prevPeerId = usePrevious(peerId);\n  const prevOrigin = usePrevious(origin);\n  const isGhostAnimation = Boolean(withAnimation && !shouldSkipHistoryAnimations);\n\n  useEffect(() => {\n    if (!isOpen) {\n      setStoryToDelete(undefined);\n      closeReportModal();\n      closeDeleteModal();\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    if (!isOpen) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n    const stopPriorityPlayback = dispatchPriorityPlaybackEvent();\n\n    return () => {\n      enableDirectTextInput();\n      stopPriorityPlayback();\n    };\n  }, [isOpen]);\n\n  const handleClose = useCallback(() => {\n    closeStoryViewer();\n  }, [closeStoryViewer]);\n\n  const handleOpenDeleteModal = useCallback((s: ApiTypeStory) => {\n    setStoryToDelete(s);\n    openDeleteModal();\n  }, []);\n\n  const handleCloseDeleteModal = useCallback(() => {\n    closeDeleteModal();\n    setStoryToDelete(undefined);\n  }, []);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(() => {\n    handleClose();\n  }) : undefined), [handleClose, isOpen]);\n\n  useEffect(() => {\n    if (isGhostAnimation && !isPrevOpen && isOpen && peerId && thumbnail && origin !== undefined) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(peerId, origin, thumbnail, bestImageData, slideSizes.activeSlide);\n    }\n    if (isGhostAnimation && isPrevOpen && !isOpen && prevPeerId && prevBestImageData && prevOrigin !== undefined) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(prevPeerId, prevOrigin, prevBestImageData);\n    }\n  }, [\n    isGhostAnimation,\n    bestImageData,\n    prevBestImageData,\n    isOpen,\n    isPrevOpen,\n    slideSizes.activeSlide,\n    thumbnail,\n    peerId,\n    prevPeerId,\n    origin,\n    prevOrigin,\n  ]);\n\n  return (\n    <ShowTransition\n      id=\"StoryViewer\"\n      className={styles.root}\n      isOpen={isOpen}\n      shouldAnimateFirstRender\n      noCloseTransition={shouldSkipHistoryAnimations}\n    >\n      <div className={styles.backdrop} onClick={handleClose} />\n      <Button\n        className={styles.close}\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <i className={buildClassName('icon icon-close')} aria-hidden />\n      </Button>\n\n      <StorySlides\n        isOpen={isOpen}\n        isReportModalOpen={isReportModalOpen}\n        isDeleteModalOpen={isDeleteModalOpen}\n        onReport={openReportModal}\n        onClose={handleClose}\n        onDelete={handleOpenDeleteModal}\n      />\n\n      <StoryDeleteConfirmModal\n        isOpen={isDeleteModalOpen}\n        story={storyToDelete}\n        onClose={handleCloseDeleteModal}\n      />\n      <StoryViewModal />\n      <StealthModeModal />\n      <StorySettings isOpen={isPrivacyModalOpen} onClose={closeStoryPrivacyEditor} />\n      <ReportModal\n        isOpen={isReportModalOpen}\n        onClose={closeReportModal}\n        subject=\"story\"\n        peerId={peerId!}\n        storyId={storyId}\n      />\n    </ShowTransition>\n  );\n}\n\nexport default memo(withGlobal((global): StateProps => {\n  const {\n    shouldSkipHistoryAnimations, storyViewer: {\n      storyId, peerId, isPrivacyModalOpen, origin,\n    },\n  } = selectTabState(global);\n  const story = peerId && storyId ? selectPeerStory(global, peerId, storyId) : undefined;\n  const withAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n  return {\n    isOpen: selectIsStoryViewerOpen(global),\n    shouldSkipHistoryAnimations,\n    peerId: peerId!,\n    storyId,\n    story,\n    origin,\n    withAnimation,\n    isPrivacyModalOpen,\n  };\n})(StoryViewer));\n","import { useState } from '../lib/teact/teact';\n\nimport useLastCallback from './useLastCallback';\n\nconst THRESHOLD = 5;\n\nexport default function useScrolledState(threshold = THRESHOLD) {\n  const [isAtBeginning, setIsAtBeginning] = useState(true);\n  const [isAtEnd, setIsAtEnd] = useState(true);\n\n  const handleScroll = useLastCallback((e: React.UIEvent<HTMLElement>) => {\n    const { scrollHeight, scrollTop, clientHeight } = e.target as HTMLElement;\n\n    setIsAtBeginning(scrollTop < threshold);\n    setIsAtEnd(scrollHeight - scrollTop - clientHeight < threshold);\n  });\n\n  return { isAtBeginning, isAtEnd, handleScroll };\n}\n","export default function findInViewport(\n  container: HTMLElement,\n  selectorOrElements: string | NodeListOf<HTMLElement> | HTMLElement[],\n  margin = 0,\n  isDense = false,\n  shouldContainBottom = false,\n  isHorizontal = false,\n) {\n  const viewportY1 = container[isHorizontal ? 'scrollLeft' : 'scrollTop'];\n  const viewportY2 = viewportY1 + container[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  const allElements = typeof selectorOrElements === 'string'\n    ? container.querySelectorAll<HTMLElement>(selectorOrElements)\n    : selectorOrElements;\n  const { length } = allElements;\n  const visibleIndexes: number[] = [];\n  let isFound = false;\n\n  for (let i = 0; i < length; i++) {\n    const element = allElements[i];\n    const y1 = element[isHorizontal ? 'offsetLeft' : 'offsetTop'];\n    const y2 = y1 + element[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n    const isVisible = shouldContainBottom\n      ? y2 >= viewportY1 - margin && y2 <= viewportY2 + margin\n      : y1 <= viewportY2 + margin && y2 >= viewportY1 - margin;\n\n    if (isVisible) {\n      visibleIndexes.push(i);\n      isFound = true;\n    } else if (isFound && !isDense) {\n      break;\n    }\n  }\n\n  return { allElements, visibleIndexes };\n}\n","function isFullyVisible(container: HTMLElement, element: HTMLElement, isHorizontal = false) {\n  const viewportY1 = container[isHorizontal ? 'scrollLeft' : 'scrollTop'];\n  const viewportY2 = viewportY1 + container[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  const y1 = element[isHorizontal ? 'offsetLeft' : 'offsetTop'];\n  const y2 = y1 + element[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  return y1 > viewportY1 && y2 < viewportY2;\n}\n\nexport default isFullyVisible;\n","import type { MediaWorkerApi } from '../lib/mediaWorker/index.worker';\nimport type { Connector } from './PostMessageConnector';\n\nimport { IS_TEST } from '../config';\n\nimport { createConnector } from './PostMessageConnector';\n\nexport const MAX_WORKERS = Math.min(navigator.hardwareConcurrency || 4, 4);\n\nlet instances: {\n  worker: Worker;\n  connector: Connector<MediaWorkerApi>;\n}[] | undefined;\n\nexport default function launchMediaWorkers() {\n  if (IS_TEST) return [];\n  if (!instances) {\n    instances = new Array(MAX_WORKERS).fill(undefined).map(\n      () => {\n        const worker = new Worker(new URL('../lib/mediaWorker/index.worker.ts', import.meta.url));\n        const connector = createConnector<MediaWorkerApi>(worker);\n        return { worker, connector };\n      },\n    );\n  }\n\n  return instances;\n}\n","let scrollLockEl: HTMLElement | null | undefined;\nlet excludedClosestSelector: string | undefined;\n\nconst IGNORED_KEYS: Record<string, boolean> = {\n  Down: true,\n  ArrowDown: true,\n  Up: true,\n  ArrowUp: true,\n  Left: true,\n  ArrowLeft: true,\n  Right: true,\n  ArrowRight: true,\n  ' ': true,\n  PageUp: true,\n  PageDown: true,\n  End: true,\n  Home: true,\n  Tab: true,\n};\n\nfunction isTextBox(target: EventTarget | null) {\n  if (!target || !(target instanceof HTMLElement)) return false;\n  const element = target;\n  const tagName = element.tagName.toLowerCase();\n  if (tagName === 'textarea') return true;\n  if (tagName !== 'input') return false;\n  const type = element.getAttribute('type');\n  if (!type) return false;\n  const inputTypes = [\n    'text', 'password', 'number', 'email', 'tel', 'url',\n    'search', 'date', 'datetime', 'datetime-local', 'time', 'month', 'week',\n  ];\n  return inputTypes.indexOf(type.toLowerCase()) > -1;\n}\n\nexport const getTouchY = (e: WheelEvent | TouchEvent | React.WheelEvent | React.TouchEvent) => {\n  return ('changedTouches' in e ? e.changedTouches[0].clientY : 0);\n};\n\nconst preventDefault = (e: WheelEvent | TouchEvent) => {\n  const deltaY = 'deltaY' in e ? e.deltaY : getTouchY(e);\n\n  if (\n    !scrollLockEl\n    // Allow overlay scrolling\n    || !scrollLockEl.contains(e.target as HTMLElement)\n    // Prevent top overscroll\n    || (scrollLockEl.scrollTop <= 0 && deltaY <= 0)\n    // Prevent bottom overscroll\n    || (scrollLockEl.scrollTop >= (scrollLockEl.scrollHeight - scrollLockEl.offsetHeight) && deltaY >= 0)\n  ) {\n    if (excludedClosestSelector && (e.target as HTMLElement).closest(excludedClosestSelector)) return;\n    e.preventDefault();\n  }\n};\n\nfunction preventDefaultForScrollKeys(e: KeyboardEvent) {\n  if (IGNORED_KEYS[e.key] && !isTextBox(e.target)) {\n    e.preventDefault();\n  }\n}\n\nexport function disableScrolling(el?: HTMLElement | null, _excludedClosestSelector?: string) {\n  scrollLockEl = el;\n  excludedClosestSelector = _excludedClosestSelector;\n  // Disable scrolling in Chrome\n  document.addEventListener('wheel', preventDefault, { passive: false });\n  document.addEventListener('touchmove', preventDefault, { passive: false });\n  document.onkeydown = preventDefaultForScrollKeys;\n}\n\nexport function enableScrolling() {\n  scrollLockEl = undefined;\n  excludedClosestSelector = undefined;\n  document.removeEventListener('wheel', preventDefault); // Enable scrolling in Chrome\n  document.removeEventListener('touchmove', preventDefault);\n  // eslint-disable-next-line no-null/no-null\n  document.onkeydown = null;\n}\n","import animateScroll from './animateScroll';\nimport findInViewport from './findInViewport';\nimport isFullyVisible from './isFullyVisible';\n\nconst VIEWPORT_MARGIN = 8;\nconst SCROLL_MARGIN = 10;\n\nexport default function setTooltipItemVisible(selector: string, index: number, containerRef: Record<string, any>) {\n  const container = containerRef.current!;\n  if (!container || index < 0) {\n    return;\n  }\n  const { visibleIndexes, allElements } = findInViewport(\n    container,\n    selector,\n    VIEWPORT_MARGIN,\n    true,\n    true,\n  );\n\n  if (!allElements.length || !allElements[index]) {\n    return;\n  }\n  const first = visibleIndexes[0];\n  if (!visibleIndexes.includes(index)\n    || (index === first && !isFullyVisible(container, allElements[first]))) {\n    const position = index > visibleIndexes[visibleIndexes.length - 1] ? 'start' : 'end';\n    animateScroll(container, allElements[index], position, SCROLL_MARGIN);\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gsyAr7lPlzHWUF_aYaVa\",\"main\":\"cnWk4tq3tmB7r08ScyxQ\",\"main_customEmoji\":\"UEOQzPhb8wS2YI61dKJE\",\"mainCustomEmoji\":\"UEOQzPhb8wS2YI61dKJE\",\"header\":\"x0Qtu0yjl4v02fLLyxV1\",\"headerWithBorder\":\"m4MXEae1lmdJZV64zN6b\",\"stickerCover\":\"A5Fetmgo_VQRMWxFTV_v\",\"activated\":\"yiTAGOkL3Hgb0VXRPy46\",\"pickerDisabled\":\"jNEbrwsYAlEp67HG75uy\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Qj1MQaLfhumlxACIpkUl\",\"content\":\"ph5g3hCSQ_72FnZ3YkuA\",\"section\":\"bYZBp9H7Ks8tqaBvQm57\",\"general\":\"CSjgq5gkTxM3iZQ9oJ9b\",\"top\":\"sV6D57DhbsFwQhRNzw9K\",\"bottom\":\"pUkmozcBdIn4yWGGPoX1\",\"iconWrapper\":\"JT0__kgf23rGv5BWQF2s\",\"icon\":\"gx85t_IsGh2fgS2yDGtk\",\"clickable\":\"TVwtYFuxdwJH5LZ7yvwu\",\"heading\":\"o9l56jP2uXfAul061gXq\",\"icon-picker\":\"ByQF8Qg3NcYnBCvGwoH0\",\"iconPicker\":\"ByQF8Qg3NcYnBCvGwoH0\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"UVY7Yw7FZIXqiQz310aE\",\"pie-slim-in\":\"rMcATdqt_vPTZWegxZnZ\",\"pieSlimIn\":\"rMcATdqt_vPTZWegxZnZ\",\"pie-slim-out\":\"pOTFiXCpoSGRhYNCYnv3\",\"pieSlimOut\":\"pOTFiXCpoSGRhYNCYnv3\",\"messages\":\"lCCeuYH8gfegCu3fmxME\",\"publicForwards\":\"LHsus1ITUb_QhEm_uAl8\",\"messages-title\":\"_4XlhRzwPDhLoDu5duJbU\",\"messagesTitle\":\"_4XlhRzwPDhLoDu5duJbU\",\"publicForwards-title\":\"L_AoFaFttdXFpHyqlOb1\",\"publicForwardsTitle\":\"L_AoFaFttdXFpHyqlOb1\",\"ready\":\"bjHXcNGdDCoKJZ5bnKww\",\"graph\":\"zotml6OW8tvxvArOWgzD\",\"hidden\":\"Z3t1TaWlpk0w5KB9PanI\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"cQYi9REIkDGmDa3wl8h0\",\"title\":\"L3EjdT2D9WVH82czad4K\",\"views\":\"cMiQQIlRC4JJ_GUZ1JUr\"};"],"names":["memo","AboutAdsModal","isOpen","onClose","lang","useLang","React","createElement","Modal","hasCloseButton","title","renderText","SafeLink","url","text","className","Button","isText","onClick","MAX_SAFE_DATE","MAX_INT_32","WEEKDAY_LETTERS","isDisabledDay","year","month","day","minDate","maxDate","selectedDay","Date","fixedMinDate","getDayStart","fixedMaxDate","formatInputTime","value","String","padStart","formatDay","CalendarModal","selectedAt","minAt","maxAt","isFutureMode","isPastMode","withTimePicker","submitButtonLabel","secondButtonLabel","onSubmit","onSecondButtonClick","now","useMemo","Math","max","min","passedSelectedDate","prevIsOpen","usePrevious","isTimeInputFocused","markTimeInputAsFocused","unmarkTimeInputAsFocused","useFlag","selectedDate","setSelectedDate","useState","currentMonthAndYear","setCurrentMonthAndYear","getFullYear","getMonth","selectedHours","setSelectedHours","getHours","selectedMinutes","setSelectedMinutes","getMinutes","getDate","currentYear","currentMonth","useEffect","getTime","newSelectedDate","shouldDisableNextMonth","shouldDisablePrevMonth","prevMonthGrid","currentMonthGrid","nextMonthGrid","date","setDate","setMonth","setFullYear","firstDay","getDay","totalDaysInPrevMonth","i","push","gridDate","lastRowDaysCount","length","buildCalendarGrid","submitLabel","formatDateToString","code","formatTime","formatSubmitLabel","handleSubmit","useCallback","handleChangeHours","e","target","replace","hours","Number","setHours","hoursStr","handleChangeMinutes","minutes","setMinutes","minutesStr","onEnter","round","size","color","disabled","undefined","d","dateCopy","map","role","tabIndex","handleDateSelect","buildClassName","Boolean","type","inputMode","onChange","onFocus","onBlur","TOPIC_ICON_SIZE","REM","ChatOrUserPicker","currentUserId","chatOrUserIds","chatsById","search","searchPlaceholder","loadMore","onSearchChange","onSelectChatOrUser","onCloseAnimationEnd","loadTopics","getActions","containerRef","useRef","topicContainerRef","searchRef","topicSearchRef","viewportIds","getMore","useInfiniteScroll","forumId","setForumId","topicSearch","setTopicSearch","activeKey","viewportOffset","indexOf","resetSearch","useLastCallback","useInputFocusOnOpen","topicIds","topics","topicsResult","searchTitle","toLowerCase","result","Object","values","reduce","acc","topic","getCanPostInChat","id","includes","keys","handleHeaderBackClick","handleSearchChange","currentTarget","handleTopicSearchChange","handleKeyDown","useKeyboardListNavigation","index","chatId","chat","isForum","handleTopicKeyDown","handleClick","handleTopicClick","topicId","Transition","name","slideClassName","Fragment","dir","isRtl","ariaLabel","InputText","ref","onKeyDown","placeholder","InfiniteScroll","items","withAbsolutePositioning","maxHeight","CHAT_HEIGHT_PX","ListItem","key","style","clickArg","TopicIcon","letterClassName","Loading","onLoadMore","isUserId","PrivateChatInfo","status","userId","GroupChatInfo","HEADER_BUTTON_WIDTH","FADED_BUTTON_SET_IDS","Set","RECENT_SYMBOL_SET_ID","FAVORITE_SYMBOL_SET_ID","POPULAR_SYMBOL_SET_ID","STICKER_SET_IDS_WITH_COVER","CHAT_STICKER_SET_ID","PREMIUM_STICKER_SET_ID","withGlobal","global","isStatusPicker","isReactionPicker","stickers","setsById","stickerSetsById","customEmojis","byId","customEmojisById","featuredIds","customEmojiFeaturedIds","statusRecent","emojis","recentStatusEmojis","recentCustomEmojis","recentCustomEmojiIds","recentReactions","topReactions","isSavedMessages","selectIsChatWithSelf","addedCustomEmojiIds","added","setIds","canAnimate","selectCanPlayAnimatedEmojis","isCurrentUserPremium","selectIsCurrentUserPremium","defaultTopicIconsId","defaultStatusIconsId","availableReactions","CustomEmojiPicker","pickerListClassName","isHidden","loadAndPlay","selectedReactionIds","idPrefix","isTranslucent","withDefaultTopicIcons","onCustomEmojiSelect","onReactionSelect","onContextMenuOpen","onContextMenuClose","onContextMenuClick","headerRef","sharedCanvasRef","sharedCanvasHqRef","isMobile","useAppLayout","handleScroll","handleContentScroll","isAtBeginning","shouldHideTopBorder","useScrolledState","pickTruthy","prefix","activeSetIndex","observeIntersectionForSet","observeIntersectionForPlayingItems","observeIntersectionForShowingItems","observeIntersectionForCovers","selectStickerSet","useStickerPickerObservers","areAddedLoaded","allSets","MEMO_EMPTY_ARRAY","defaultSets","topReactionsSlice","slice","TOP_SYMBOL_SET_ID","accessHash","reactions","count","isEmoji","cleanRecentReactions","filter","reaction","some","topReaction","isSameReaction","cleanAvailableReactions","isPopular","allRecentReactions","concat","defaultStatusIconsPack","defaultTopicIconsPack","setIdsToDisplay","unique","setsToDisplay","noPopulatedSets","set","canRenderContent","useAsyncRendering","SLIDE_TRANSITION_DURATION","shouldRenderContent","useHorizontalScroll","header","current","newLeft","offsetWidth","animateHorizontalScroll","handleEmojiSelect","emoji","handleReactionSelect","fullClassName","pickerStyles","pickerDisabled","headerClassName","headerWithBorder","listClassName","main","main_customEmoji","IS_TOUCH_ENV","stickerSet","firstSticker","buttonClassName","stickerCover","withSharedCanvas","STICKER_PICKER_MAX_SHARED_COVERS","isHq","selectIsAlwaysHighPriorityEmoji","getGlobal","has","hasThumbnail","isRecent","isFaded","faded","StickerSetCover","noPlay","forcePlayback","observeIntersection","StickerButton","sticker","STICKER_SIZE_PICKER_HEADER","noContextMenu","withTranslucentThumb","onScroll","shouldHideHeader","StickerSet","isNearActive","withDefaultTopicIcon","withDefaultStatusIcon","onStickerSelect","customEmojiSetIds","customEmojiSets","canPlayAnimatedEmojis","CustomEmojiSetsModal","openStickerSet","customEmojiModalRef","observe","useIntersectionObserver","rootRef","isDisabled","prevCustomEmojiSets","renderingCustomEmojiSets","handleSetClick","stickerSetInfo","styles","root","sets","teactFastList","customEmojiSet","StickerSetCard","setCard","message","isSchedule","threadId","selectCurrentMessageList","canDeleteForAll","selectAllowedMessageActions","selectChat","contactName","getUserFirstOrLastName","selectUser","getPrivateChatUserId","isChatWithBot","selectBot","willDeleteForCurrentUserOnly","isChatBasicGroup","willDeleteForAll","isChatSuperGroup","DeleteMessageModal","album","onConfirm","deleteMessages","deleteScheduledMessages","handleDeleteMessageForAll","messageIds","messages","shouldDeleteForAll","handleDeleteMessageForSelf","GifButton","gif","onUnsaveClick","localMediaHash","useIsIntersecting","previewBlobUrl","useMedia","ApiMediaFormat","BlobUrl","withThumb","thumbnail","dataUri","thumbRef","useCanvasBlur","videoData","shouldRenderVideo","isBuffered","bufferingHandlers","useBuffering","shouldRenderSpinner","isVideoReady","isContextMenuOpen","contextMenuPosition","handleBeforeContextMenu","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","getTriggerElement","getRootElement","closest","getMenuElement","querySelector","positionX","positionY","transformOriginX","transformOriginY","menuStyle","useMenuPosition","blobUrl","handleUnsaveClick","stopPropagation","preventDefault","handleContextDelete","handleSendQuiet","handleSendScheduled","handleMouseDown","preventMessageInputBlurWithBubbling","width","height","onMouseDown","onContextMenu","pill","noFastClick","src","alt","draggable","OptimizedVideo","_extends","canPlay","autoPlay","loop","muted","disablePictureInPicture","playsInline","preload","Spinner","Menu","autoClose","MenuItem","icon","destructive","ManageUsernames","usernames","onEditUsername","showNotification","toggleUsername","toggleChatUsername","sortUsernames","sortChatUsernames","usernameForConfirm","setUsernameForConfirm","usernameList","username","prevUsernameList","state","setState","orderedUsernames","dragOrderUsernames","draggedIndex","handleCopyUsername","copyTextToClipboard","handleUsernameClick","data","isEditable","closeConfirmUsernameDialog","handleUsernameToggle","isActive","handleDrag","translation","delta","y","isBetween","splice","handleDragEnd","usernameData","isDragged","draggedTop","top","subtitle","Draggable","onDrag","onDragEnd","knobStyle","narrow","secondaryIcon","multiline","contextActions","handler","ConfirmDialog","confirmLabel","confirmHandler","confirmIsDestructive","SEGMENT_COVER_EYES","SEGMENT_UNCOVER_EYE","SEGMENT_COVER_EYE","PasswordMonkey","isPasswordVisible","isBig","isFirstMonkeyLoaded","markFirstMonkeyLoaded","isPeekShown","markPeekShown","stikerSize","STICKER_SIZE_AUTH_MOBILE","STICKER_SIZE_AUTH","useTimeout","handleFirstMonkeyLoad","AnimatedSticker","STICKER_SIZE_TWO_FA","tgsUrl","LOCAL_TGS_URLS","MonkeyClose","playSegment","noLoop","onLoad","MonkeyPeek","isPrivateChat","isChatWithSelf","isChannel","isChatChannel","isGroup","isSuperGroup","canPinForAll","PinMessageModal","messageId","pinMessage","handlePinMessageForAll","isUnpin","handlePinMessage","isOneSide","isSilent","ReactionEmoji","isSelected","isCustom","availableReaction","find","available","thumbDataUri","staticIcon","animationId","selectAnimation","coords","useCoordsInSharedCanvas","mediaData","getDocumentMediaHash","transitionClassNames","useMediaTransition","documentId","CustomEmoji","EMOJI_SIZE_PICKER","observeIntersectionForPlaying","forceAlways","AnimatedIconWithPreview","play","isLowPriority","sharedCanvas","sharedCanvasCoords","chats","listIds","orderedPinnedIds","activeListIds","active","archivedListIds","archived","pinnedIds","contactIds","contactList","userIds","RecipientPicker","API_CHAT_TYPES","onSelectRecipient","setSearch","ids","priorityIds","usersById","users","chatIds","user","isDeletedUser","MAIN_THREAD_ID","sorted","sortChatIds","filterChatsByName","filterUsersByName","filterChatIdsByType","renderingIds","useCurrentOrPrev","selectTabState","seenByModal","seenByDates","selectChatMessage","openChat","closeSeenByModal","renderingSeenByDates","memberIds","sort","leftId","rightId","setTimeout","handleCloseSeenByModal","noStatusOrTyping","formatDateAtTime","statusIcon","contentForStatusMenuContext","arg","canViewSet","observeIntersectionForShowing","noShowPremium","onFaveClick","onUnfaveClick","onRemoveRecentClick","openPremiumModal","setEmojiStatus","menuRef","hasCustomColor","shouldUseTextColor","customColor","useDynamicColorListener","isCustomEmoji","hasEffect","isPremium","isLocked","isIntersecting","shouldLoad","shouldPlay","isIntesectingForShowing","shouldRenderContextMenu","getLayout","withPortal","shouldAvoidNegativePosition","handleRemoveClick","handleContextRemoveRecent","handleContextUnfave","handleContextFave","handleOpenSet","handleEmojiStatusExpiresClick","duration","emojiStatus","expires","getServerTimeOffset","shouldShowCloseButton","contextMenuItems","forEach","item","initialSection","StickerView","isSmall","shouldLoop","shouldPreloadPreview","noLoad","withSharedAnimation","favoriteStickers","noContextMenus","onStickerUnfave","onStickerFave","onStickerRemoveRecent","clearRecentStickers","clearRecentCustomEmoji","clearRecentReactions","toggleStickerSet","loadStickers","windowWidth","useWindowSize","isConfirmModalOpen","openConfirmModal","closeConfirmModal","itemsPerRow","setItemsPerRow","getItemsPerRowFallback","shouldRender","stickerMarginPx","emojiMarginPx","emojiVerticalMarginPx","isFavorite","isPremiumSet","selectIsSetPremium","handleClearRecent","handleAddClick","stickerSetId","handleDefaultTopicIconClick","DEFAULT_TOPIC_ICON_STICKER_ID","isLottie","isVideo","shortName","handleDefaultStatusIconClick","DEFAULT_STATUS_ICON_ID","itemSize","STICKER_SIZE_PICKER","margin","verticalMargin","calculateItemsPerRow","floor","handleResize","entry","contentRect","useResizeObserver","clientWidth","isInstalled","installedDate","isArchived","canCut","isCut","expand","itemsBeforeCutout","totalItemsCount","itemHeight","heightWhenCut","ceil","favoriteStickerIdsSet","withAddSetButton","addSetButtonText","withPremiumGradient","fluid","grey","reactionId","getReactionUniqueKey","isHqEmoji","canvasRef","handleCardClick","inactive","STICKER_SIZE_GENERAL_SETTINGS","renderPreview","fromSticker","stickerSetShortName","currentMessageList","sendOptions","getAllowedAttachmentOptions","threadInfo","selectThreadInfo","isMessageThread","isCommentsInfo","fromChannelId","canSendStickers","canScheduleUntilOnline","selectCanScheduleUntilOnline","shouldSchedule","selectShouldSchedule","shouldUpdateStickerSetOrder","settings","byKey","StickerSetModal","sendMessage","prevStickerSet","renderingStickerSet","isAdded","requestCalendar","calendar","useSchedule","throttleMs","handleSelect","isScheduleRequested","isPreloadedGlobally","scheduledAt","messageList","handleButtonClick","handleCopyLink","suffix","TME_LINK_PREFIX","MoreMenuButton","onTrigger","isMenuOpen","ripple","DropdownMenu","trigger","renderHeader","EMOJI_SIZE_MODAL","STICKER_SIZE_MODAL","renderButtonText","UnpinAllMessagesModal","pinnedMessagesCount","onUnpin","LINK_PREFIX_REGEX","runDebouncedForCheckUsername","debounce","cb","UsernameInput","currentUsername","asLink","isLoading","isUsernameAvailable","checkedUsername","checkUsername","checkPublicLink","setUsername","langPrefix","label","previousIsUsernameAvailable","renderingIsUsernameAvailable","isChecking","usernameSuccess","usernameError","MIN_USERNAME_LENGTH","MAX_USERNAME_LENGTH","USERNAME_REGEX","test","handleUsernameChange","trim","match","newUsername","isUsernameValid","error","success","readOnly","teactExperimentControlled","STICKER_INTERSECTION_THROTTLE","STICKER_INTERSECTION_MARGIN","ANIMATION_END_DELAY","SCROLL_MAX_DISTANCE_WHEN_CLOSE","SCROLL_MAX_DISTANCE_WHEN_FAR","FOCUS_MARGIN","stickerSetIntersectionsRef","setActiveSetIndex","freeze","freezeForSet","unfreeze","unfreezeForSet","entries","stickerSetIntersections","minIntersectingIndex","lowestIndex","Infinity","freezeForShowingItems","unfreezeForShowingItems","useSyncEffect","currentIndex","stickerSetEl","document","getElementById","isClose","abs","animateScroll","ArchivedChats","isForumPanelOpen","archiveSettings","isStoryRibbonShown","onReset","onTopicSearch","onSettingsScreenSelect","onLeftColumnContentChange","foldersDispatch","updateArchiveSettings","useHistoryBack","onBack","handleDisplayArchiveInChats","shouldDisableDropdownMenuTransitionRef","handleDropdownMenuTransitionEnd","useLeftHeaderButtonRtlForumTransition","shouldRenderTitle","titleClassNames","useShowTransition","shouldRenderForumPanel","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","isAnimationStarted","useForumPanelRender","isForumPanelVisible","shouldRenderStoryRibbon","storyRibbonClassNames","isClosing","isStoryRibbonClosing","ANIMATION_DURATION","onTransitionEnd","StoryToggler","canShow","StoryRibbon","ChatList","folderType","ForumPanel","onOpenAnimationStart","foldersById","orderedIds","folderOrderedIds","chatFolders","ChatFolderModal","editChatFolders","initialSelectedFolderIds","folderId","includedChatIds","pinnedChatIds","selectedFolderIds","setSelectedFolderIds","folders","ALL_FOLDER_ID","idsToRemove","idsToAdd","CheckboxGroup","options","selected","MuteDuration","MuteChatModal","muteUntilOption","setMuteUntilOption","Forever","updateChatMutedState","updateTopicMutedState","muteForOptions","OneHour","FourHours","EightHours","OneDay","ThreeDays","muteUntil","RadioGroup","statusesById","userStatusesById","ContactList","openNewContactDialog","shouldReplaceHistory","filteredIds","sortUserIds","forceShowSelf","avatarSize","withStory","storyViewerOrigin","StoryViewerOrigin","FloatingActionButton","isShown","areFeaturedStickersLoaded","selectIsContextMenuTranslucent","StatusPickerMenu","statusButtonRef","onEmojiStatusSelect","loadFeaturedEmojiStickers","isContextMenuShown","markContextMenuShown","unmarkContextMenuShown","getBoundingClientRect","right","Portal","noCompact","bubbleClassName","noCloseOnBackdrop","RENDER_COUNT","LeftColumnContent","NewChat","content","onContentChange","newChatMemberIds","setNewChatMemberIds","handleNextStep","NewChannelStep2","NewGroupStep2","LAYERS_ANIMATION_NAME","renderCount","isStepActive","NewChannelStep1","NewGroupStep1","NewChatStep1","selectedMemberIds","onSelectedMemberIdsChange","onNextStep","NewChatStep2","localContactIds","query","searchQuery","fetchingStatus","globalResults","localResults","globalSearch","globalUserIds","localUserIds","isSearching","setGlobalSearchQuery","handleFilterChange","displayedIds","foundContactIds","contactId","isSelf","canBeInvitedToGroup","isUserBot","Picker","itemIds","selectedIds","filterValue","filterPlaceholder","searchInputId","isSearchable","onSelectedIdsChange","onFilterChange","progress","creationProgress","creationError","chatCreation","maxGroupSize","config","createGroupChat","createChannel","setTitle","about","setAbout","photo","setPhoto","setError","chatTitleEmptyError","channelTitleEmptyError","ChatCreationProgress","InProgress","memberFirstNames","generatedChatName","join","handleTitleChange","newValue","handleDescriptionChange","handleCreateGroup","handleCreateChannel","Complete","renderedError","AvatarEditable","createMapStateToProps","props","tabState","resultsByType","currentType","isVoice","byChatId","globalMessagesByChatId","foundIds","activeDownloads","theme","selectTheme","searchChatId","isChatProtected","isProtected","shouldWarnAboutSvg","runThrottled","throttle","AudioResults","searchMessagesGlobal","focusMessage","openAudioPlayer","handleLoadMore","direction","LoadMoreDirection","Backwards","foundMessages","split","handleMessageFocus","handlePlayAudio","canRenderContents","noFastList","NothingFound","description","isFirst","shouldDrawDateDivider","toYearMonth","formatMonthAndYear","Audio","origin","AudioOrigin","Search","senderTitle","getSenderName","onPlay","onDateClick","canDownload","isDownloading","onSelect","buttonRef","activeElement","window","addEventListener","removeEventListener","privateChatUserId","privateChatUser","ChatMessage","mediaThumbnail","getMessageSticker","getMessageMediaThumbDataUri","mediaBlobUrl","getMessageMediaHash","isRoundVideo","getMessageRoundVideo","useSelectWithEnter","peer","Avatar","FullNameTitle","withEmojiStatus","Link","formatPastTimeShort","renderMessageSummary","isSpoiler","getMessageIsSpoiler","getMessageVideo","renderSummary","DateSuggest","searchDate","suggestions","suggestion","currentDate","latestYear","getSuggestionsFromDate","LeftSearchResultTopic","foundTopicIds","ChatMessageResults","dateSearchQuery","onSearchDateSelect","openThread","a","b","nothingFound","isPinned","selectIsChatPinned","isMuted","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","canChangeFolder","LeftSearchResultChat","withUsername","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","handleChatFolderChange","handleMute","useChatContextActions","SearchResult","topUserIds","topPeers","recentlyFoundChatIds","RecentContacts","loadTopUsers","addRecentlyFoundChatId","clearRecentlyFoundChats","topUsersRef","handleClearRecentlyFoundChats","globalChatIds","accountChatIds","accountUserIds","ChatResults","setGlobalSearchChatId","chatSelectionRef","shouldShowMoreLocal","setShouldShowMoreLocal","shouldShowMoreGlobal","setShouldShowMoreGlobal","handleChatClick","handlePickerItemClick","startsWith","contactIdsWithMe","orderedChatIds","getOrderedIds","localChatIds","localPeerIds","accountPeerIds","accountPeerId","handleClickShowMoreLocal","handleClickShowMoreGlobal","noScrollRestoreOnTop","PickerSelectedItem","peerId","CURRENT_TYPE","FileResults","observeIntersectionForMedia","getMessageDocument","Document","withDate","datetime","smaller","sender","LinkResults","WebLink","onMessageClick","MediaResults","openMediaViewer","handleSelectMedia","mediaId","MediaViewerOrigin","isMediaGrid","isMessageList","classNames","itemSelector","Media","TABS","GlobalSearchContent","Links","Files","Music","Voice","CHAT_TABS","TRANSITION_RENDER_COUNT","currentContent","LeftSearch","setGlobalSearchContent","setGlobalSearchDate","activeTab","setActiveTab","parseDateString","handleSwitchTab","tab","handleSearchDateSelect","TabList","tabs","onSwitchTab","INITIAL_STATE","currentPassword","password","hint","email","twoFaReducer","action","payload","maxChats","selectCurrentLimit","SettingsFoldersChatsPicker","mode","selectedChatTypes","shouldHideChatTypes","onSelectedChatTypesChange","onSaveFilter","openLimitReachedModal","inputRef","chatTypes","INCLUDED_CHAT_TYPES","EXCLUDED_CHAT_TYPES","shouldMinimize","isTouched","setIsTouched","requestMutation","focus","handleItemClick","newSelectedIds","limit","handleChatTypeClick","newSelectedChatTypes","selectedType","typeKey","isMinimized","canClose","Checkbox","checked","withChatType","SettingsFoldersChatFilters","dispatch","chatFilter","selectedChatIds","selectChatFilters","folderAllOrderedIds","useFolderManagerForOrderedIds","folderArchivedOrderedIds","ARCHIVED_FOLDER_ID","folder","isChatList","newFilter","handleSelectedIdsChange","includeFilters","excludeFilters","excludedChatIds","handleSelectedChatTypesChange","newFilters","ERROR_NO_TITLE","ERROR_NO_CHATS","invites","chatListCount","el","loadedActiveChatIds","loadedArchivedChatIds","isRemoved","maxInviteLinks","maxChatLists","SettingsFoldersEdit","onAddIncludedChats","onAddExcludedChats","onShareFolder","onOpenInvite","isOnlyInvites","onSaveFolder","loadChatlistInvites","isCreating","isEditingChatList","isIncludedChatsListExpanded","setIsIncludedChatsListExpanded","isExcludedChatsListExpanded","setIsExcludedChatsListExpanded","includedChatTypes","excludedChatTypes","visibleIncludedChatIds","visibleExcludedChatIds","allLoadedChatsSet","loadedIncludedChatIds","findIntersectionWithSet","loadedExcludedChatIds","handleChange","event","handleCreateInviteClick","selectCanShareFolder","handleEditInviteClick","renderChats","visibleChatIds","isExpanded","leftChatsCount","clickHandler","chatType","renderChatType","ShowMoreButton","itemName","AnimatedIcon","STICKER_SIZE_FOLDER_SETTINGS","FoldersNew","invite","peerIds","runThrottledForLoadRecommended","folderIds","recommended","recommendedChatFolders","maxFolders","SettingsFoldersMain","onCreateFolder","onEditFolder","loadRecommendedChatFolders","addChatFolder","openDeleteChatFolderModal","sortChatFolders","orderedFolderIds","dragOrderIds","prevFolderIds","handleCreateFolder","chatsCountByFolderId","useFolderManagerForChatsCount","userFolders","getFolderDescriptionText","handleCreateFolderFromRecommended","canCreateNewFolder","FoldersAll","isBlocked","isStatic","shareFolderScreen","selectChatFolder","SettingsShareChatlist","createChatlistInvite","deleteChatlistInvite","editChatlistInvite","handleRevoke","unlockedIds","lockedIds","partition","selectCanInviteToChat","setSelectedIds","isFirstRenderRef","useEffectWithPrevDeps","prevUrl","handleClickDisabled","chatsCount","FoldersShare","LinkField","link","withShare","onRevoke","onDisabledClick","isRoundCheckbox","SettingsFolders","currentScreen","shownScreen","onScreenSelect","openShareChatFolderModal","editChatFolder","handleReset","SettingsScreens","FoldersCreateFolder","FoldersEditFolder","FoldersEditFolderFromChatList","FoldersEditFolderInvites","FoldersIncludedChats","FoldersExcludedChats","saveState","newState","folderUpdate","handleSaveFolder","handleSaveFilter","handleEditFolder","handleAddIncludedChats","FoldersIncludedChatsFromChatList","handleAddExcludedChats","FoldersExcludedChatsFromChatList","handleShareFolder","noRequestNextScreen","handleOpenInvite","Folders","SettingsPasswordForm","shouldDisablePasswordManager","expectedPassword","clearError","validationError","setValidationError","shouldShowPassword","setShouldShowPassword","newPassword","handleClearError","PasswordForm","shouldResetValue","onChangePasswordVisibility","SettingsPasscodeCongratulations","fullReset","STICKER_SIZE_PASSCODE","Congratulations","SettingsPasscodeEnabled","Lock","previewUrl","lockPreviewUrl","PasscodeChangePasscodeCurrent","PasscodeTurnOff","SettingsPasscodeStart","onStart","passcode","SettingsPasscode","onSetPasscode","setPasscode","clearPasscode","setPasscodeError","clearPasscodeError","handleStartWizard","PasscodeNewPasscode","handleNewPassword","PasscodeNewPasscodeConfirm","handleNewPasswordConfirm","PasscodeCongratulations","handleChangePasswordCurrent","currentPasscode","decryptSession","then","PasscodeChangePasscodeNew","handleChangePasswordNew","PasscodeChangePasscodeConfirm","handleTurnOff","Privacy","PasscodeDisabled","SettingsPasscodeForm","PasscodeEnabled","getSessionIcon","session","platform","device","deviceModel","systemVersion","hash","activeSessions","byHash","SettingsActiveSession","changeSessionSettings","terminateAuthorization","renderingSession","handleSecretChatsStateChange","areSecretChatsEnabled","handleCallsStateChange","areCallsEnabled","handleTerminateSessionClick","headerButton","iconDevice","formatDateTimeToString","dateActive","box","appName","appVersion","ip","region","country","getLocation","note","actionHeader","actionName","Switcher","SettingsActiveSessions","orderedHashes","ttlDays","terminateAllAuthorizations","changeSessionTtl","isConfirmTerminateAllDialogOpen","openConfirmTerminateAllDialog","closeConfirmTerminateAllDialog","openedSessionHash","setOpenedSessionHash","isModalOpen","openModal","closeModal","autoTerminateValue","AUTO_TERMINATE_OPTIONS","handleTerminateAllSessions","handleOpenSessionModal","handleCloseSessionModal","handleChangeSessionTtl","days","currentSession","currentSessionHash","isCurrent","otherSessionHashes","hasOtherSessions","iconClassName","sessionHashes","sessionHash","areButtonsInColumn","activeWebSessions","bot","botId","SettingsActiveWebsite","terminateWebAuthorization","renderingBot","domain","browser","SettingsActiveWebsites","terminateAllWebAuthorizations","openedWebsiteHash","setOpenedWebsiteHash","handleTerminateAuthClick","handleTerminateAllAuth","handleCloseWebsiteModal","clearHelp","avatar","pick","SettingsCustomEmoji","shouldSuggestCustomEmoji","setSettingOption","stickerSettingsRef","handleStickerSetClick","handleSuggestCustomEmojiChange","onCheck","SettingsDataStorage","canAutoLoadPhotoFromContacts","canAutoLoadPhotoInPrivateChats","canAutoLoadPhotoInGroups","canAutoLoadPhotoInChannels","canAutoLoadVideoFromContacts","canAutoLoadVideoInPrivateChats","canAutoLoadVideoInGroups","canAutoLoadVideoInChannels","canAutoLoadFileFromContacts","canAutoLoadFileInPrivateChats","canAutoLoadFileInGroups","canAutoLoadFileInChannels","autoLoadFileMaxSizeMb","renderFileSizeCallback","AUTODOWNLOAD_FILESIZE_MB_LIMITS","handleFileSizeChange","renderAutoDownloadBlock","canAutoLoadFromContacts","canAutoLoadInPrivateChats","canAutoLoadInGroups","canAutoLoadInChannels","isChecked","RangeSlider","renderValue","renderContentSizeSlider","LOCAL_SUPPORTED_DETECTION_LANGUAGES","SUPPORTED_LANGUAGES","SUPPORTED_TRANSLATION_LANGUAGES","language","doNotTranslate","SettingsDoNotTranslate","displayedOptions","setDisplayedOptions","langCode","translatedName","Intl","DisplayNames","of","originalName","subLabel","prevIsActive","option","otherLanguages","unselected","newDoNotTranslate","v","handleSearch","filteredDisplayedOptions","ERROR_FIRST_NAME_MISSING","editUsernameError","profileEdit","currentUser","maxBioLength","firstName","currentFirstName","lastName","currentLastName","currentUserFullInfo","selectUserFullInfo","currentAvatarHash","getChatAvatarHash","currentBio","bio","SettingsEditProfile","loadCurrentUser","updateProfile","firstEditableUsername","isUsernameTouched","setIsUsernameTouched","isProfileFieldsTouched","setIsProfileFieldsTouched","setFirstName","setLastName","setBio","editableUsername","setEditableUsername","currentAvatarBlobUrl","ProfileEditProgress","isUsernameError","shouldRenderUsernamesManage","isSaveButtonShown","handlePhotoChange","newPhoto","handleFirstNameChange","handleLastNameChange","handleBioChange","handleProfileSave","trimmedFirstName","trimmedLastName","trimmedBio","TextArea","maxLength","maxLengthIndicator","toString","USERNAME_PURCHASE_ERROR","purchaseInfoLink","PURCHASE_USERNAME","s","renderPurchaseLink","shouldShowLoginCodeInChatList","shouldForceHttpTransport","shouldAllowHttpTransport","shouldCollectDebugLogs","shouldDebugExportedSenders","SettingsExperimental","requestConfetti","isAutoUpdateEnabled","setIsAutoUpdateEnabled","electron","getIsAutoUpdateEnabled","handleDownloadLog","file","File","getDebugLogs","DEBUG_LOG_FILENAME","URL","createObjectURL","download","handleIsAutoUpdateEnabledChange","Experimental","nonInteractive","IS_ELECTRON","TIME_FORMAT_OPTIONS","shouldUseSystemTheme","SettingsGeneral","messageTextSize","messageSendKeyCombo","timeFormat","isMobileDevice","IS_IOS","IS_ANDROID","appearanceThemeOptions","keyboardSendOptions","IS_MAC_OS","handleMessageTextSizeChange","newSize","documentElement","setProperty","setAttribute","handleAppearanceThemeChange","newTheme","getSystemTheme","handleTimeFormatChange","newTimeFormat","wasTimeFormatSetManually","setTimeFormat","handleMessageSendComboChange","newCombo","isTrayIconEnabled","setIsTrayIconEnabled","getIsTrayIconEnabled","handleIsTrayIconEnabledChange","GeneralChatBackground","IS_WINDOWS","WallpaperTile","wallpaper","slug","localBlobUrl","isLoadingRef","isLoadAllowed","setIsLoadAllowed","fullMedia","loadProgress","useMediaWithLoadProgress","wasLoadDisabled","spinnerClassNames","UPLOADING_WALLPAPER_SLUG","cacheKeyRef","blob","fetchBlob","cacheApi","save","CUSTOM_BG_CACHE_NAME","isAllowed","ProgressSpinner","background","isBlurred","themes","loadedWallpapers","SettingsGeneralBackground","loadWallpapers","uploadWallpaper","setThemeSettings","themeRef","handleFileSelect","files","validatedFiles","validateFiles","handleUploadWallpaper","openSystemFilesDialog","handleSetColor","GeneralChatBackgroundColor","handleResetToDefault","backgroundColor","patternColor","DARK_THEME_PATTERN_COLOR","DEFAULT_PATTERN_COLOR","handleWallPaperSelect","currentWallpaper","getAverageColor","getPatternColor","rgbColor","rgb2hex","handleWallPaperBlurChange","isUploading","DEFAULT_HSB","rgb2hsb","hex2rgb","PREDEFINED_COLORS","hsb2positions","hsb","rects","colorPosition","colorRect","huePosition","hueRect","positions2hsb","colorPickerRef","huePickerRef","isFirstRunRef","setHsb","getInitialHsb","hsbRef","isDragging","markIsDragging","unmarkIsDragging","rgbInput","setRgbInput","hexInput","setHexInput","rectsRef","colorCtxRef","offsetLeft","handleColorDrag","pageX","pageY","scrollTop","handleHueDrag","captureEvents","onCapture","onRelease","selectorToPreventScroll","withCursor","hex","hsb2rgb","hue","hueHex","rgb","canvas","w","h","ctx","offsetHeight","getContext","imgData","createImageData","pixels","col","perY","st","ed","x","perX","putImageData","drawColor","firstChild","drawHue","handleRgbChange","rgbValue","channel","handleHexChange","hexValue","handlePredefinedColorClick","dataset","SettingsHeader","editedFolderId","signOut","isSignOutDialogOpen","setIsSignOutDialogOpen","handleMultiClick","amount","callback","currentAmountRef","timeoutRef","clearTimeout","useMultiClick","openSignOutConfirmation","closeSignOutConfirmation","openDeleteFolderConfirmation","handleSignOutMessage","forceInitApi","SettingsMenuButton","EditProfile","General","QuickReaction","Notifications","DataStorage","Language","DoNotTranslate","Stickers","PrivacyPhoneNumber","PrivacyLastSeen","PrivacyProfilePhoto","PrivacyBio","PrivacyForwarding","PrivacyVoiceMessages","PrivacyGroupChats","PrivacyPhoneCall","PrivacyPhoneNumberAllowedContacts","PrivacyLastSeenAllowedContacts","PrivacyProfilePhotoAllowedContacts","PrivacyBioAllowedContacts","PrivacyForwardingAllowedContacts","PrivacyVoiceMessagesAllowedContacts","PrivacyGroupChatsAllowedContacts","PrivacyPhoneCallAllowedContacts","PrivacyPhoneP2PAllowedContacts","PrivacyPhoneNumberDeniedContacts","PrivacyLastSeenDeniedContacts","PrivacyProfilePhotoDeniedContacts","PrivacyBioDeniedContacts","PrivacyForwardingDeniedContacts","PrivacyVoiceMessagesDeniedContacts","PrivacyGroupChatsDeniedContacts","PrivacyPhoneCallDeniedContacts","PrivacyPhoneP2PDeniedContacts","Performance","ActiveSessions","ActiveWebsites","PrivacyBlockedUsers","TwoFaDisabled","TwoFaEnabled","TwoFaNewPassword","TwoFaChangePasswordNew","TwoFaChangePasswordConfirm","TwoFaNewPasswordConfirm","TwoFaNewPasswordHint","TwoFaChangePasswordHint","TwoFaNewPasswordEmail","TwoFaRecoveryEmail","TwoFaNewPasswordEmailCode","TwoFaRecoveryEmailCode","TwoFaCongratulations","TwoFaChangePasswordCurrent","TwoFaTurnOff","TwoFaRecoveryEmailCurrentPassword","renderHeaderContent","languages","canTranslate","canTranslateChats","SettingsLanguage","loadLanguages","loadAttachBots","selectedLanguage","setSelectedLanguage","markIsLoading","unmarkIsLoading","canTranslateChatsEnabled","setLanguage","currentLangCode","navigator","shortLangCode","substr","nativeName","buildOptions","handleShouldTranslateChange","handleShouldTranslateChatsChange","handleShouldTranslateChatsClick","doNotTranslateText","IS_TRANSLATION_SUPPORTED","handleDoNotSelectOpen","rightIcon","onClickLabel","loadingOption","sessionCount","canBuyPremium","selectIsPremiumPurchaseBlocked","SettingsMain","loadProfilePhotos","openSupportChat","openUrl","isSupportDialogOpen","openSupportDialog","closeSupportDialog","profileId","ProfileInfo","canPlayVideo","ChatExtra","chatOrUserId","langName","hasPrivateChatsNotifications","hasPrivateChatsMessagePreview","hasGroupNotifications","hasGroupMessagePreview","hasBroadcastNotifications","hasBroadcastMessagePreview","hasContactJoinedNotifications","hasWebNotifications","hasPushNotifications","notificationSoundVolume","SettingsNotifications","loadNotificationSettings","updateContactSignUpNotification","updateNotificationSettings","updateWebNotificationSettings","runDebounced","useRunDebounced","areNotificationsSupported","checkIfNotificationsSupported","areOfflineNotificationsSupported","checkIfOfflinePushFailed","handleSettingsChange","peerType","setting","currentIsSilent","currentShouldShowPreviews","shouldShowPreviews","handleWebNotificationsChange","isEnabled","handlePushNotificationsChange","handlePrivateChatsNotificationsChange","handlePrivateChatsPreviewChange","handleGroupsNotificationsChange","handleGroupsPreviewChange","handleChannelsNotificationsChange","handleChannelsPreviewChange","handleContactNotificationChange","handleVolumeChange","volume","playNotifySound","ANIMATION_LEVEL_OPTIONS","ANIMATION_LEVEL_CUSTOM_OPTIONS","PERFORMANCE_OPTIONS","IS_BACKDROP_BLUR_SUPPORTED","performanceSettings","selectPerformanceSettings","updatePerformanceSettings","sectionExpandedStates","setSectionExpandedStates","sectionCheckedStates","every","animationLevelState","areDeepEqual","INITIAL_PERFORMANCE_STATE_MAX","ANIMATION_LEVEL_MAX","INITIAL_PERFORMANCE_STATE_MIN","ANIMATION_LEVEL_MIN","INITIAL_PERFORMANCE_STATE_MID","ANIMATION_LEVEL_MED","ANIMATION_LEVEL_CUSTOM","animationLevelOptions","handleToggleSection","sectionIndex","prev","handleAnimationLevelChange","newLevel","performance","animationLevel","handlePropertyGroupChange","perfomanceSection","sectionName","newSettings","handlePropertyChange","hasPassword","isSensitiveEnabled","canChangeSensitive","shouldArchiveAndMuteNewNonContact","canDisplayChatInTitle","privacy","blocked","hasPasscode","appConfig","blockedCount","totalCount","webAuthCount","canDisplayAutoarchiveSetting","privacyPhoneNumber","phoneNumber","privacyLastSeen","lastSeen","privacyProfilePhoto","profilePhoto","privacyForwarding","forwards","privacyVoiceMessages","voiceMessages","privacyGroupChats","chatInvite","privacyPhoneCall","phoneCall","privacyBio","canSetPasscode","selectCanSetPasscode","SettingsPrivacy","loadPrivacySettings","loadBlockedUsers","loadContentSettings","updateContentSettings","loadGlobalPrivacySettings","updateGlobalPrivacySettings","loadWebAuthorizations","handleArchiveAndMuteChange","handleVoiceMessagesClick","handleChatInTitleChange","handleUpdateContentSettings","getVisibilityValue","visibility","blockCount","blockChatIds","blockUserIds","allowCount","allowChatIds","allowUserIds","total","exceptionString","allowDisabledClick","rightElement","blockedIds","userSearch","BlockUserModal","setUserSearchQuery","blockUser","filteredContactIds","availableContactIds","firstId","secondId","getUserFullName","secondName","localeCompare","handleRemoveUser","chatsByIds","usersByIds","countryList","phoneCodes","phoneCodeList","SettingsPrivacyBlockedUsers","unblockUser","isBlockUserModalOpen","openBlockUserModal","closeBlockUserModal","handleUnblockClick","blockedUsernamesById","mainUsername","getMainUsername","isPrivate","userMainUsername","formatPhoneNumberWithCode","renderContact","getPrivacyKey","screen","PrivacyPhoneP2P","PrivacyAddByPhone","SettingsPrivacyPublicProfilePhoto","hasCurrentUserFullInfo","currentUserFallbackPhoto","loadFullUser","uploadProfilePhoto","deleteProfilePhoto","isDeleteFallbackPhotoModalOpen","openDeleteFallbackPhotoModal","closeDeleteFallbackPhotoModal","handleSelectFile","isFallback","handleConfirmDelete","handleOpenFileSelector","click","SelectAvatar","leftElement","PrivacySubsection","setPrivacyVisibility","visibilityOptions","hasNobody","primaryExceptionLists","shouldShowDenied","shouldShowAllowed","privacyKey","descriptionText","headerText","prepareSubtitle","userIdsCount","chatIdsCount","allowedString","blockString","handleVisibilityChange","allowedContactsScreen","deniedContactsScreen","primaryPrivacy","secondaryPrivacy","addByPhone","phoneP2P","fallbackPhoto","SettingsPrivacyVisibility","secondaryScreen","getCurrentPrivacySettings","SettingsPrivacyVisibilityExceptionList","isAllowList","setPrivacySettings","selectedContactIds","setSearchQuery","isSubmitShown","setIsSubmitShown","newSelectedContactIds","setNewSelectedContactIds","handleSelectedContactIdsChange","updatedIds","selectedReaction","defaultReaction","SettingsQuickReaction","setDefaultReaction","isInactive","ReactionStaticEmoji","emoticon","DEFAULT_REACTION_SIZE","addedSetIds","SettingsStickers","shouldSuggestStickers","handleSuggestStickerSetOrderChange","handleSuggestStickersChange","stickerSets","SettingsTwoFaCongratulations","animatedEmoji","selectAnimatedEmoji","codeLength","twoFaSettings","waitingEmailCodeLength","SettingsTwoFaEmailCode","focusDelayTimeoutMs","setValue","handleInputChange","AnimatedIconFromSticker","SettingsTwoFaEnabled","SettingsTwoFaSkippableForm","shouldConfirm","isConfirmShown","markIsConfirmShown","unmarkIsConfirmShown","handleSkip","handleSkipConfirm","SettingsTwoFaStart","SettingsTwoFa","updatePassword","checkPassword","clearTwoFaError","updateRecoveryEmail","provideTwoFaEmailCode","clearPassword","handleNewPasswordHint","handleNewPasswordEmail","onSuccess","handleChangePasswordConfirm","handleChangePasswordHint","handleRecoveryEmailCurrentPassword","handleRecoveryEmail","handleEmailCode","SettingsTwoFaPassword","TWO_FA_SCREENS","PASSCODE_SCREENS","FOLDERS_SCREENS","PRIVACY_SCREENS","PRIVACY_PHONE_NUMBER_SCREENS","PRIVACY_LAST_SEEN_PHONE_SCREENS","PRIVACY_PROFILE_PHOTO_SCREENS","PRIVACY_BIO_SCREENS","PRIVACY_PHONE_CALL_SCREENS","PRIVACY_PHONE_P2P_SCREENS","PRIVACY_FORWARDING_SCREENS","PRIVACY_VOICE_MESSAGES_SCREENS","PRIVACY_GROUP_CHATS_SCREENS","Settings","foldersState","shouldSkipTransition","closeShareChatFolderModal","twoFaState","twoFaDispatch","useReducer","privacyPasscode","setPrivacyPasscode","forceReturnToChatList","isFromSettings","renderCurrentSection","isScreenActive","_isFrom","_currentKey","activeScreen","privacyAllowScreens","isTwoFaScreen","isPasscodeScreen","isFoldersScreen","isPrivacyScreen","Main","SettingsGeneralBackgroundColor","SettingsPerformance","renderCurrentSectionContent","shouldWrap","withSwipeControl","AttachBotRecipientPicker","requestedAttachBotInChat","cancelAttachBotInChat","callAttachBot","markIsShown","unmarkIsShown","startParam","handlePeerRecipient","recipientId","BotTrustModal","shouldRequestWriteAccess","cancelBotTrustRequest","markBotTrusted","isWriteAllowed","setIsWriteAllowed","handleBotTrustAccept","handleBotTrustDecline","DeleteFolderDialog","closeDeleteChatFolderModal","deleteChatFolder","renderingFolder","isMyChatlist","hasMyInvites","handleDeleteFolderMessage","isConfirmedForChatlist","getErrorHeader","isSlowMode","hasErrorKey","dialogs","Dialogs","dismissDialog","acceptInviteConfirmation","dialog","contactRequest","participantsCount","isRequestNeeded","participantsText","joinText","requestToJoinText","renderInviteHeader","handleJoinClick","renderInvite","handleConfirm","contact","getReadableErrorText","withVideo","DraftRecipientPicker","requestedDraft","openChatWithDraft","resetOpenChatWithDraft","handleSelectRecipient","handleClose","storyId","forwardMessages","isManyMessages","isStory","ForwardRecipientPicker","setForwardChatOrTopic","exitForwardMode","forwardToSavedMessages","forwardStory","renderingIsStory","toChatId","getChatTitle","historyCalendarSelectedAt","HistoryCalendar","searchMessagesByDate","closeHistoryCalendar","handleJumpToDate","timestamp","valueOf","InviteViaLinkModal","sendInviteMessages","closeInviteViaLinkModal","setSelectedMemberIds","handleSendInviteLink","userNames","isSlim","userStatus","selectUserStatus","NewContactModal","isByPhoneNumber","updateContact","importContact","closeNewContactDialog","renderingUser","renderingIsByPhoneNumber","phone","setPhone","shouldSharePhoneNumber","setShouldSharePhoneNumber","canBeSubmitted","handlePhoneChange","getUserStatus","notifications","dismissNotification","localId","actionText","Notification","onDismiss","SafeLinkModal","toggleSafeLinkModal","handleOpen","open","ensureProtocol","handleDismiss","renderingUrl","textParts","forUserId","monthlyCurrency","monthlyAmount","giftPremiumModal","gifts","premiumGifts","GiftPremiumModal","closeGiftPremiumModal","renderedUser","renderedGifts","selectedOption","setSelectedOption","firstGift","fullMonthlyAmount","cheaperGift","gift","currency","months","selectedGift","botUrl","handlePremiumClick","PremiumSubscriptionOption","parts","isPrimary","renderPremiumFeaturesLink","isShiny","formatCurrency","COLORS","hexToRgb","PremiumFeatureItem","isFontIcon","newIndex","colorA","colorB","r","g","lerpRgb","fontIcon","SliderDots","onSelectSlide","startFrom","isPreLastBatch","isLastBatch","isFirstBatch","isPreFirstBatch","shownDotsCount","handleGoForward","handleGoBack","Array","fill","_","isLast","isPreLast","isPreFirst","isInvisible","COLOR_START","COLOR_END","PremiumLimitPreview","leftValue","rightValue","colorStepProgress","start","lerp","PremiumLimitsCompare","rightStyle","AnimatedCircleSticker","realIndex","onEnded","mediaDataAround","isActivated","isAnimated","animate","inanimate","circleSize","angle","PI","scale","cos","sin","handleEnded","premium","PremiumFeaturePreviewStickers","offset","setOffset","setSize","renderedStickers","cycleRestrict","container","STORY_FEATURE_TITLES","stories_order","stories_stealth","stories_views","stories_timer","stories_save","stories_caption","stories_link","STORY_FEATURE_DESCRIPTIONS","STORY_FEATURE_ICONS","STORY_FEATURE_ORDER","CIRCLE_SIZE","PremiumFeaturePreviewVideo","circleRef","dpr","useDevicePixelRatio","useLayoutEffect","drawGradientCircle","segmentsCount","readSegmentsCount","readSegmentColor","maxSize","forPremiumPromo","section","videoId","isReverseAnimation","isDown","videoThumbnail","thumbnailRef","wrapper","reverse","down","DeviceFrame","frame","video","PREMIUM_FEATURE_TITLES","double_limits","infinite_reactions","premium_stickers","animated_emoji","no_ads","voice_to_text","profile_badge","faster_download","more_upload","advanced_chat_management","animated_userpics","emoji_status","translations","stories","PREMIUM_FEATURE_DESCRIPTIONS","PREMIUM_FEATURE_SECTIONS","PREMIUM_BOTTOM_VIDEOS","LIMITS_ORDER","LIMITS_TITLES","channels","dialogFolderPinned","channelsPublic","savedGifs","stickersFaved","aboutLength","captionLength","dialogFilters","dialogFiltersChats","recommendedChannels","LIMITS_DESCRIPTIONS","PremiumFeatureModal","promo","limits","premiumPromoOrder","onClickSubscribe","scrollContainerRef","currentSlideIndex","setCurrentSlideIndex","reverseAnimationSlideIndex","setReverseAnimationSlideIndex","isScrolling","startScrolling","stopScrolling","isScrolledToTop","setIsScrolledToTop","isScrolledToBottom","setIsScrolledToBottom","prevInitialSection","filteredSections","handleLimitsScroll","clientHeight","scrollHeight","scrollContainer","handleSelectSlide","async","scrollLeft","scrollLeftOriginal","reverseIndex","prevElement","reverseElement","classList","toggle","slide","defaultLimit","premiumLimit","PremiumFeaturePreviewStories","videoSections","videos","STATUS_EMOJI_SIZE","PREMIUM_FEATURE_COLOR_ICONS","PremiumStatus","PremiumLimits","PremiumReactions","PremiumStickers","PremiumEmoji","PremiumAds","PremiumVoice","PremiumBadge","PremiumSpeed","PremiumFile","PremiumChats","PremiumVideo","PremiumTranslate","premiumModal","fromUser","fromUserId","fromUserStatusEmoji","fromUserStatusSet","isSuccess","isGift","monthsAmount","toUser","toUserId","limitChannels","selectPremiumLimit","limitFolders","limitPins","limitLinks","premiumSlug","premiumInvoiceSlug","premiumBotUsername","PremiumMainModal","dialogRef","closePremiumModal","openInvoice","openTelegramLink","isHeaderHidden","setHeaderHidden","currentSection","setCurrentSection","selectedSubscriptionOption","setSubscriptionOption","handleClickWithStartParam","handleChangeSubscriptionOption","foundOption","showConfetti","left","prevIsPremium","defaultOption","handleOpenStatusSet","stickerSetTitle","template","first","second","thumbCustomEmojiId","monthOption","subscribeButtonText","perMonthPrice","isClosed","PremiumLogo","renderTextWithEntities","statusText","entities","statusEntities","renderFooterText","perMonth","discount","LIMIT_DESCRIPTION","uploadMaxFileparts","chatlistInvites","chatlistJoined","savedDialogsPinned","LIMIT_DESCRIPTION_BLOCKED","LIMIT_DESCRIPTION_PREMIUM","LIMIT_ICON","LIMIT_VALUE_FORMATTER","formatFileSize","MAX_UPLOAD_FILEPART_SIZE","defaultValue","premiumValue","PremiumLimitReachedModal","closeLimitReachedModal","startClosing","stopClosing","valueFormatter","limitType","defaultValueFormatted","premiumValueFormatted","getLimiterDescription","canUpgrade","floatingBadgeIcon","Icon","viewBox","createGhost","source","ghost","add","img","Image","oncontextmenu","stopEvent","HTMLVideoElement","poster","appendChild","ProfileAvatar","SettingsAvatar","profileInfo","cloneNode","isMessageImageFullyVisible","imageEl","messageListElement","imgOffsetTop","offsetTop","parentElement","getNodes","containerSelector","mediaSelector","Album","ScheduledAlbum","getMessageHtmlId","SharedMedia","MiddleHeaderAvatar","SuggestedAvatar","ScheduledInline","Inline","MESSAGE_CONTENT_SELECTOR","mediaEls","querySelectorAll","mediaEl","applyShape","objectFit","signal","createSignal","setIsPictureInPicture","getSetPresentationMode","webkitSupportsPresentationMode","webkitSetPresentationMode","bind","exitPictureInPictureIfNeeded","pictureInPictureElement","exitPictureInPicture","err","DEBUG","console","log","cache","Map","useMediaProps","avatarOwner","delay","getMessagePhoto","actionPhoto","getMessageActionPhoto","webPagePhoto","getMessageWebPagePhoto","webPageVideo","getMessageWebPageVideo","isDocumentPhoto","isMessageDocumentPhoto","isDocumentVideo","isMessageDocumentVideo","videoSize","getMessageFileSize","avatarMedia","photos","isVideoAvatar","isPhoto","isGif","isFromSharedMedia","isFromSearch","getMediaHash","isFull","getVideoAvatarMediaHash","pictogramBlobUrl","previewMediaHash","fullMediaBlobUrl","getMessageMediaFormat","bestImageData","blurredRef","isChanged","imgToCanvas","fastBlur","toDataURL","blurredAsync","get","forceUpdate","useForceUpdate","onload","blurredDataUri","clear","useBlur","useBlurSync","bestData","isLocal","fileName","getMessageFileName","hasVideoAvatar","dimensions","mediaSize","getPhotoFullDimensions","getVideoDimensions","VIDEO_AVATAR_FULL_DIMENSIONS","AVATAR_FULL_DIMENSIONS","avatarPhoto","getZoomChange","setZoomChange","useZoomChange","DeleteProfilePhotoModal","deleteChatPhoto","handleDeletePhoto","canUpdateMedia","selectIsDownloading","selectIsMessageProtected","selectIsChatProtected","canDelete","canDeleteMessage","isCurrentAvatar","avatarHash","canUpdate","messageListType","avatarOwnerId","MediaViewerActions","canReport","selectMedia","onReport","onCloseMediaViewer","onBeforeDelete","onForward","isDeleteModalOpen","openDeleteModal","closeDeleteModal","downloadMessageMedia","cancelMessageMediaDownload","updateProfilePhoto","updateChatPhoto","downloadProgress","handleDownloadClick","handleZoomOut","zoomChange","handleZoomIn","handleUpdate","MenuButton","renderDeleteModals","menuItems","isForwardingAllowed","children","href","noCross","renderDownloadButton","useSignalRef","getValue","useEffectOnce","subscribe","getControlsVisible","setControlsVisible","getIsLocked","setIsLocked","useControlsSignal","useDerivedSignal","MediaViewerFooter","isForVideo","isForceMobileVersion","isMultiline","setIsMultiline","getIsVisible","useDerivedState","footerContent","checkIsMultiline","getCurrentTime","setCurrentTime","useCurrentTimeSignal","getIsVideoWaiting","setIsVideoWaiting","useVideoWaitingSignal","IS_MOBILE","PREVIEW_SIZE_RATIO","MAX_FRAMES","PREVIEW_MAX_SIDE","connections","launchMediaWorkers","videoPreview","VideoPreview","constructor","_defineProperty","this","connector","request","args","MAX_WORKERS","onFrame","time","frames","currentTime","render","clearCache","close","drawImage","destroy","worker","params","callApi","mediaFormat","Progressive","arrayBuffer","postMessage","cancelAnimation","SeekLine","bufferedRanges","isReady","posterSize","playbackRate","isPlaying","isPreviewDisabled","onSeek","onSeekStart","seekerRef","getCurrentTimeSignal","getIsWaiting","useThrottledSignal","getSelectedTime","setSelectedTime","useSignal","getPreviewOffset","setPreviewOffset","getPreviewTime","setPreviewTime","isLockedRef","isPreviewVisible","setPreviewVisible","isSeeking","setIsSeeking","previewCanvasRef","previewRef","progressRef","previewTimeRef","previewSize","ratio","getPreviewDimensions","setPreview","renderVideoPreview","createVideoPreviews","remaining","animateNumber","from","to","onUpdate","innerText","formatMediaDuration","seeker","seekerSize","getPreviewProps","MouseEvent","touches","t","clamp","preview","stopAnimation","handleStopSeek","cleanup","handleStartSeek","handleSeekMouseMove","handleSeekMouseLeave","ShowTransition","end","PLAYBACK_RATES","VideoPlayerControls","bufferedProgress","fileSize","isFullscreenSupported","isFullscreen","onChangeFullscreen","onVolumeClick","onVolumeChange","onPlaybackRateChange","isPictureInPictureSupported","onPictureInPictureChange","onPlayPause","isPlaybackMenuOpen","openPlaybackMenu","closePlaybackMenu","trunc","getIsSeeking","setVisibility","isVisible","timeout","body","remove","handleSeek","position","handleSeekStart","volumeIcon","bold","renderTime","rate","VideoPlayer","posterData","isMediaViewerOpen","shouldCloseOnClick","isClickDisabled","setMediaViewerVolume","setMediaViewerMuted","setMediaViewerPlaybackRate","setMediaViewerHidden","videoRef","setIsPlaying","setFullscreen","exitFullscreen","useFullscreen","isLooped","handleEnterFullscreen","IS_YA_BROWSER","handleLeaveFullscreen","enterPictureInPicture","isInPictureInPicture","elRef","onLeave","isSupported","setIsSupported","setIsActive","IS_PWA","setMode","pictureInPictureEnabled","autoPictureInPicture","onEnterInternal","onLeaveInternal","getIsVideoPlaying","requestPictureInPicture","safePlay","usePictureInPicture","toggleControls","lockControls","handleVideoMove","handleVideoLeave","bounds","clientX","clientY","bottom","isUnsupported","useUnsupportedMedia","shouldRenderPlayButton","playButtonClassNames","pause","togglePlayState","useVideoCleanup","handleTimeUpdate","readyState","handleFullscreenChange","newVolume","handleVolumeMuted","handlePlaybackRateChange","newPlaybackRate","rewind","newTime","isFinite","wrapperStyle","videoStyle","shouldToggleControls","onMouseMove","onMouseOut","onDoubleClick","controlsList","onWaiting","onPause","onTimeUpdate","square","ownProps","mediaViewer","senderId","selectScheduledMessage","withAnimation","onFooterClick","isMoving","toggleControlsOnMove","calculateMediaViewerDimensions","ARE_WEBCODECS_SUPPORTED","renderPhoto","renderMessageText","isForMediaViewer","hasFooter","shouldForceMobileVersion","imageSize","canDrag","easeOutCubic","easeOutQuart","timingFunctions","SLIDES_GAP","cancelZoomAnimation","SwipeDirection","MediaViewerSlides","getMediaId","rest","activeSlideRef","leftSlideRef","rightSlideRef","lastTransformRef","swipeDirectionRef","initialContentRectRef","isReleasedRef","prevZoomChangeRef","useFullscreenStatus","isMouseDown","setIsMouseDown","getTransform","setTransform","transformRef","getActiveMediaId","setActiveMediaId","activeMediaIdRef","isScaled","activeMediaId","windowHeight","isResizing","shouldBeReplaced","selectMediaDebounced","useDebouncedCallback","clearSwipeDirectionDebounced","setIsActiveDebounced","shouldCloseOnVideo","clickXThreshold","handleControlsVisibility","isFooter","transform","getTransformStyle","lastTransform","lastDragOffset","lastZoomCenter","panDelta","lastGestureTime","setLastGestureTime","changeSlide","mId","timing","changeSlideOnClick","calculateOffsetBoundaries","initialContentRect","inBoundsX","inBoundsY","centerX","centerY","minOffsetX","maxOffsetX","minOffsetY","maxOffsetY","absX","absY","s1","scaleFactor","x1","y1","k","Vx","Vy","dirX","isNotPassive","withNativeDrag","excludedClosestSelector","minZoom","maxZoom","doubleTapZoom","withWheelDrag","checkIfControlTarget","captureEvent","dragOffsetX","dragOffsetY","cancelDrag","IOS_SCREEN_EDGE_THRESHOLD","absOffsetX","absOffsetY","Vertical","Horizontal","SWIPE_DIRECTION_THRESHOLD","SWIPE_DIRECTION_TOLERANCE","SWIPE_X_THRESHOLD","SWIPE_Y_THRESHOLD","onZoom","zoom","zoomFactor","initialCenterX","initialCenterY","currentCenterX","currentCenterY","MIN_ZOOM","MAX_ZOOM","offsetX","offsetY","scaledCenterX","scaledCenterY","scaleOffsetX","scaleOffsetY","isInThreshold","hasNextSlide","checkIfInsideSelector","hasZoomChanged","steps","prevValue","wheelEvent","WheelEvent","deltaY","ctrlKey","dispatchEvent","nextMediaId","prevMediaId","hasPrev","hasNext","MediaViewerContent","toFixed","element","selector","matches","isAvatar","selectPeer","selectSender","SenderInfo","isFallbackAvatar","closeMediaViewer","toggleChatInfo","handleFocusMessage","force","forceSyncOnIOs","getSenderTitle","formatMediaDateTime","shouldSkipHistoryAnimations","selectPerformanceSettingsValue","chatMessages","collectionIds","isChatAdmin","avatarOwnerFallbackPhoto","selectChatScheduledMessages","selectChatMessages","selectOutlyingListByMessageId","selectListedIds","currentSearch","selectCurrentMediaSearch","media","MediaViewer","openForwardMenu","animationKey","prevSenderId","headerAnimation","isGhostAnimation","isReportModalOpen","openReportModal","closeReportModal","singleMediaId","mediaIds","p","getChatMediaMessageIds","selectedMediaIndex","getIsPictureInPicture","disableDirectTextInput","stopPriorityPlayback","dispatchPriorityPlaybackEvent","enableDirectTextInput","useElectronDrag","mql","matchMedia","MEDIA_VIEWER_MEDIA_QUERY","prevMessage","prevIsHidden","prevOrigin","prevAvatarOwner","prevBestImageData","shouldAnimateOpening","dispatchHeavyAnimationEvent","fromImage","windowSize","availableWidth","availableHeight","getMediaViewerAvailableDimensions","toWidth","toHeight","calculateDimensions","toLeft","toTop","topOffsetRem","getTopOffset","fromTop","fromLeft","fromWidth","fromHeight","uncovered","realWidth","realHeight","srcWidth","srcHeight","uncover","fromTranslateX","fromTranslateY","fromScaleX","fromScaleY","applyStyles","clearShape","contains","removeChild","animateOpening","toImage","targetTop","isElementInViewport","shouldFadeOut","existingGhost","getElementsByClassName","transition","transformOrigin","opacity","animateClosing","mediaIdRef","useStateRef","handleFooterClick","currentMediaId","handleForward","fromChatId","forceOnHeavyAnimation","captureEscKeyListener","stopCurrentAudio","mediaIdsRef","fromId","mIds","handleBeforeDelete","shouldAnimateFirstRender","noCloseTransition","ReportModal","subject","chatLanguageModal","currentLanguageCode","selectLanguageCode","activeTranslationLanguage","selectRequestedMessageTranslationLanguage","selectRequestedChatTranslationLanguage","ChatLanguageModal","requestMessageTranslation","closeChatLanguageModal","requestChatTranslation","toLanguageCode","translationLanguage","translateLanguages","filteredDisplayedLanguages","highlight","activeEmojiInteraction","animatedEffect","selectAnimatedEmojiEffect","effectAnimationId","EmojiInteractionAnimation","stopActiveEmojiInteraction","isHiding","startHiding","startPlaying","stop","handleCancelAnimation","dispatchHeavyAnimationStop","effectHash","effectTgsUrl","startSize","isReversed","quality","BOT_BUTTONS","help","isRestricted","canAddContact","getCanAddContact","isMainThread","canReportChat","isChatGroup","currentChatId","currentThreadId","chatBot","REPLIES_USER_ID","userFullInfo","chatFullInfo","selectChatFullInfo","fullInfo","canGiftPremium","canCreateTopic","isCreator","isUserRightBanned","getHasAdminRight","canEditTopic","getCanManageTopic","canManage","selectCanManage","selectCanTranslateChat","isTranslationDisabled","savedDialog","getIsSavedDialog","isTopic","isForumAsMessages","canDeleteChat","getCanDeleteChat","hasLinkedChat","linkedChatId","botCommands","botInfo","commands","isChatInfoShown","isRightColumnShown","selectIsRightColumnShown","isBot","HeaderMenuContainer","withExtraActions","anchor","withForumActions","canStartBot","canSubscribe","canSearch","canCall","canMute","canViewStatistics","canViewBoosts","pendingJoinRequests","canLeave","canEnterVoiceChat","canCreateVoiceChat","onJoinRequestsClick","onSubscribeChannel","onSearchClick","onAsMessagesClick","enterMessageSelectMode","sendBotCommand","restartBot","requestMasterAndJoinGroupCall","createGroupCall","openLinkedChat","openAddContactDialog","requestMasterAndRequestCall","toggleStatistics","openBoostStatistics","openGiftPremiumModal","openThreadWithInfo","openCreateTopicPanel","openEditTopicPanel","toggleManagement","togglePeerTranslations","setViewForumAsMessages","setIsMenuOpen","shouldCloseFast","setShouldCloseFast","setIsDeleteModalOpen","setIsReportModalOpen","setIsMuteModalOpen","isViewGroupInfoShown","usePrevDuringAnimation","handleReport","handleDelete","closeMenu","handleViewGroupInfo","handleStartBot","command","handleRestartBot","handleUnmuteClick","handleMuteClick","handleCreateTopicClick","handleEditClick","handleEditTopicClick","handleViewAsTopicsClick","handleEnterVoiceChatClick","handleLinkedChatClick","handleGiftPremiumClick","handleAddContactClick","handleSubscribe","handleVideoCall","handleCall","handleStatisticsClick","handleBoostClick","handleEnableTranslations","handleSelectMessages","handleOpenAsMessages","handleBlock","handleUnblock","disableScrolling","enableScrolling","botButtons","cmd","deleteTitle","MenuSeparator","DeleteChatModal","isSavedDialog","selectedMessageIds","selectedMessages","selectCanDeleteSelectedMessages","selectCurrentChat","DeleteSelectedMessageModal","exitMessageSelectMode","selectCanReportSelectedMessages","selectCanDownloadSelectedMessages","hasProtectedMessage","selectHasProtectedMessage","canForward","selectCanForwardMessages","isForwardModalOpen","isModalShown","isAnyModalOpen","requestedAttachBotInstall","selectedMessagesCount","selectSelectedMessagesCount","canDeleteMessages","canReportMessages","canDownloadMessages","canForwardMessages","MessageSelectToolbar","canPost","openForwardMenuForSelectedMessages","downloadSelectedMessages","copySelectedMessages","useHotkeys","useCopySelectedMessages","handleExitMessageSelectMode","captureKeyboardListeners","onBackspace","onDelete","onEsc","handleCopy","handleDownload","prevSelectedMessagesCount","formattedMessagesCount","renderButton","runDebouncedForSearch","results","selectCurrentTextSearch","isHistoryCalendarOpen","MobileSearchFooter","setLocalTextSearchQuery","searchTextMessagesLocal","closeLocalTextSearch","openHistoryCalendar","focusedIndex","setFocusedIndex","visualViewport","mainEl","pageTop","input","blur","handleMessageSearchQueryChange","newQuery","handleUp","newFocusIndex","handleDown","handleCloseLocalTextSearch","SearchInput","getDayStartAt","reactorModal","reactors","ReactorListModal","loadReactors","closeReactorListModal","chosenTab","setChosenTab","canShowFilters","chatIdRef","handleCloseAnimationEnd","allReactions","uniqueReactions","seenByUserIds","nextOffset","formatIntegerCompact","reactionsCount","flatMap","peerReactions","reactor","seenByUser","addedDate","div","BLUR_CANVAS_SIZE","AttachmentModalItem","attachment","isSingle","shouldDisplayCompressed","shouldDisplayGrouped","onToggleSpoiler","displayType","quick","SUPPORTED_IMAGE_CONTENT_TYPES","mimeType","SUPPORTED_VIDEO_CONTENT_TYPES","getDisplayType","handleSpoilerClick","filename","extension","getFileExtension","previewData","shouldSkipGrouping","canDisplaySpoilerButton","GIF_MIME_TYPE","shouldDisplaySpoiler","shouldSendAsSpoiler","shouldRenderOverlay","rootClassName","MediaSpoiler","ATTACHMENT_MODAL_INPUT_ID","recentEmojis","attachmentSettings","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","groupChatMembers","members","keywords","customEmojiForEmoji","forEmoji","captionLimit","AttachmentModal","attachments","getHtml","canShowCustomSendMenu","isForMessage","shouldSuggestCompression","shouldForceCompression","shouldForceAsFile","isForCurrentMessageList","forceDarkTheme","onAttachmentsUpdate","onCaptionUpdate","onSend","onFileAppend","onClear","onSendSilent","onSendScheduled","onRemoveSymbol","onEmojiSelect","addRecentCustomEmoji","addRecentEmoji","updateAttachmentSettings","mainButtonRef","hideTimeoutRef","prevAttachments","renderingAttachments","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","shouldSendCompressed","setShouldSendCompressed","shouldCompress","isSendingCompressed","shouldSendGrouped","setShouldSendGrouped","handleAttachmentsScroll","areAttachmentsNotScrolled","isAtEnd","areAttachmentsScrolledToBottom","handleCaptionScroll","isCaptionNotScrolled","renderingIsOpen","isHovered","markHovered","unmarkHovered","hasMedia","hasOnlyMedia","audio","hasSpoiler","isEverySpoiler","getSelectionRange","useGetSelectionRange","EDITABLE_INPUT_MODAL_ID","isEmojiTooltipOpen","filteredEmojis","filteredCustomEmojis","insertEmoji","closeEmojiTooltip","useEmojiTooltip","isCustomEmojiTooltipOpen","insertCustomEmoji","closeCustomEmojiTooltip","useCustomEmojiTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","removeAllSelections","isCustomSendMenuOpen","sendAttachments","shouldSendScheduled","handleSendSilent","handleSendClick","handleScheduleClick","handleFilesDrop","dataTransfer","getFilesFromDataTransferItems","handleDocumentSelect","handleEnableSpoilers","handleDisableSpoilers","handleToggleSpoiler","mainButton","leftChars","leftCharsBeforeLimit","html","innerHTML","fixImageContent","br","replaceWith","textContent","isQuickGallery","areAllPhotos","areAllVideos","areAllAudios","SUPPORTED_AUDIO_CONTENT_TYPES","hasAnySpoilerable","isMultiple","isBottomDividerShown","noBackdropClose","onDragEnter","onDrop","onDragOver","onDragLeave","relatedTarget","toTarget","fromTarget","uniqueId","MentionTooltip","filteredUsers","onInsertUserName","EmojiTooltip","CustomEmojiTooltip","SymbolMenuButton","isAttachmentModal","canSendPlainText","MessageInput","isAttachmentModalInput","customEmojiPrefix","editableInputId","canAutoFocus","shouldSuppressFocus","onSuppressedFocus","CustomSendMenu","canSchedule","onSendSchedule","BotCommand","withAvatar","botCommand","BotCommandMenu","handleMouseEnter","handleMouseLeave","useMouseInside","onMouseEnter","onMouseLeave","BotCommandTooltip","handleSendCommand","selectedCommandIndex","useKeyboardNavigation","setTooltipItemVisible","prevCommands","renderedCommands","chatBotCommand","customEmoji","clearCustomEmojiForEmoji","prevStickers","displayedStickers","handleCustomEmojiSelect","ce","hidden","emojiButton","COMPOSER_EMOJI_SIZE_PICKER","isOpenToBottom","onSendWhenOnline","displayScheduleUntilOnline","setDisplayScheduleUntilOnline","EmojiButton","native","IS_PACKAGED_ELECTRON","BASE_URL","image","isLoaded","LOADED_EMOJIS","names","IS_EMOJI_SUPPORTED","loading","handleEmojiLoad","CustomEmojiButton","listEmojis","handleSelectEmoji","handleCustomEmojiClick","selectedIndex","isHorizontal","shouldRemoveSelectionOnReset","prevSelectedIndex","visibleIndexes","allElements","findInViewport","isFullyVisible","setItemVisible","BaseResult","thumbUrl","thumbnailDataUrl","decoding","getFirstLetters","ArticleResult","inlineResult","webThumbnail","GifResult","canSendGifs","_gif","MediaResult","isForGallery","StickerResult","STICKER_SIZE_INLINE_BOT_RESULT","InlineBotTooltip","isGallery","inlineBotResults","switchPm","switchWebview","onSelectResult","startBot","requestSimpleWebView","renderedIsGallery","debounceMs","noArrowNavigation","handleSendPm","param","handleOpenWebview","extractCurrentThemeParams","buttonText","isFromSwitchWebView","prevInlineBotResults","renderedInlineBotResults","sensitiveArea","inlineBotResult","handleUserSelect","forceFocus","handleSelectMention","member","selectedMentionIndex","shouldSelectOnTab","shouldSaveSelectionOnUpdateItems","prevChatMembers","renderedChatMembers","PollModal","isQuiz","shouldBeAnonymous","questionInputRef","optionsListRef","question","setQuestion","setOptions","isAnonymous","setIsAnonymous","isMultipleAnswers","setIsMultipleAnswers","isQuizMode","setIsQuizMode","solution","setSolution","correctOption","setCorrectOption","hasErrors","setHasErrors","handleSolutionChange","focusInput","addNewOption","newOptions","requestNextMutation","list","requestMeasure","scrollTo","behavior","handleCreate","isNoCorrectOptionError","answers","correct","questionTrimmed","substring","optionsTrimmed","o","summary","isPublic","multipleChoice","quiz","parseHtmlAsFormattedText","correctAnswers","solutionEntities","updateOption","removeOption","handleCorrectOptionChange","handleIsAnonymousChange","handleMultipleAnswersChange","handleQuizModeChange","handleKeyPress","keyCode","handleQuestionChange","getQuestionError","getOptionsError","renderOptions","onKeyPress","renderQuizNoOptionError","noReplaceNewlines","SendAsMenu","selectedSendAsId","sendAsPeerIds","saveDefaultSendAs","markMouseInside","sendAsId","selectedSendAsIndex","avatarClassName","noFake","membersCount","isVideos","useCustomEmoji","colorFilter","useColorFilter","shouldFallbackToStatic","IS_WEBM_SUPPORTED","staticHash","getStickerPreviewHash","staticMediaData","mediaHash","isPriority","StickerTooltip","sendMessageAction","useSendMessageAction","handleMouseMove","EMOJI_MARGIN","EMOJI_VERTICAL_MARGIN","EMOJI_VERTICAL_MARGIN_MOBILE","MOBILE_CONTAINER_PADDING","EmojiCategory","category","allEmojis","useOnIntersect","emojisPerRow","displayedEmoji","ICONS_BY_CATEGORY","recent","people","nature","foods","activity","places","objects","symbols","flags","categoryIntersections","emojiDataPromise","emojiRawData","emojiData","EmojiPicker","categories","setCategories","setEmojis","activeCategoryIndex","setActiveCategoryIndex","MENU_TRANSITION_DURATION","allCategories","themeCategories","unshift","exec","default","uncompressEmoji","ensureEmojiData","selectCategory","categoryEl","containerClassName","gifs","saved","GifPicker","onGifSelect","loadSavedGifs","saveGif","shouldUnsave","favorite","premiumSet","chatStickerSetId","recentStickers","premiumStickers","selectShouldLoopStickers","StickerPicker","loadRecentStickers","addRecentSticker","unfaveSticker","faveSticker","removeRecentSticker","existingAddedSetIds","addedPremiumStickers","flat","totalPremiumStickers","uniqueByField","fullSet","shouldRenderContents","handleStickerSelect","handleStickerUnfave","handleStickerFave","handleRemoveRecentSticker","activated","PremiumIcon","withGradient","big","SymbolMenuTabs","SYMBOL_MENU_TAB_TITLES","Emoji","GIFs","SYMBOL_MENU_TAB_ICONS","SymbolMenuFooter","onSearchOpen","renderTabButton","handleSearchOpen","isLeftColumnShown","isBackgroundTranslucent","SymbolMenu","isMessageComposer","setRecentEmojis","setRecentCustomEmojis","recentEmojisRef","recentCustomEmojisRef","canUpdateStickerSetsOrder","renderContent","isFrom","mobileClassName","selectedItemIndex","setSelectedItemIndex","getSelectedIndex","handleArrowKey","handleItemSelect","altKey","metaKey","shiftKey","isSelectionOutOfRange","onUp","onDown","onLeft","onRight","onTab","ALLOWED_QUOTE_ENTITIES","ApiMessageEntityTypes","Bold","Italic","Underline","Strike","Spoiler","getSelectionAsFormattedText","range","clonedSelection","cloneContents","commonAncestorContainer","nodeType","Node","ELEMENT_NODE","currentElement","tag","tagName","entityType","wrapHtmlWithMarkupTags","getSelectionAsHtml","entity","stripEntitiesForQuote","selection","getSelection","detectedLanguage","selectActiveDownloads","seenByExpiresAt","seenByMaxChatMembers","maxUniqueReactions","noOptions","canReply","canPin","canUnpin","canEdit","canFaveSticker","canUnfaveSticker","canCopy","canCopyLink","canSelect","canSaveGif","canRevote","canClosePoll","isOwn","isOwnMessage","isScheduled","isMessageLocal","hasTtl","hasMessageTtl","canShowSeenBy","isAction","isActionMessage","canShowReactionsCount","areReactionsEmpty","canSeeList","canCopyNumber","customEmojiSetsInfo","selectMessageCustomEmojiSets","customEmojiSetsNotFiltered","translationRequestLanguage","hasTranslation","selectMessageTranslations","selectCanTranslateMessage","isChatTranslated","messageLink","selectMessageLink","canSendNow","canReschedule","enabledReactions","isForbidden","hasFullInfo","canShowReactionList","SERVICE_NOTIFICATIONS_USER_ID","canShowOriginal","canSelectLanguage","isMessageTranslated","isReactionPickerOpen","selectIsReactionPickerOpen","ContextMenuContainer","targetHref","repliesThreadInfo","noReplies","updateDraftReplyInfo","setEditingId","toggleMessageSelection","sendScheduledMessages","rescheduleMessage","loadSeenBy","openSeenByModal","openReactorListModal","loadFullChat","copyMessagesByIds","cancelPollVote","closePoll","toggleReaction","showOriginalMessage","openChatLanguageModal","openMessageReactionPicker","isPinModalOpen","setIsPinModalOpen","isClosePollDialogOpen","openClosePollDialog","closeClosePollDialog","canQuoteSelection","setCanQuoteSelection","hasCustomEmoji","seenByRecentPeers","uniqueReactors","PREVIEW_AVATAR_COUNT","msg","selectionRange","rangeCount","getRangeAt","collapsed","ancestor","TEXT_NODE","parentNode","isSelectionRangeInsideMessage","selectionText","startOffset","endOffset","closePinModal","handleReply","replyToMsgId","quoteText","handleOpenThread","handleEdit","handlePin","handleUnpin","handleFaveSticker","handleUnfaveSticker","handleCancelVote","handlePollClose","handleSelectMessage","childMessageIds","withShift","handleScheduledMessageSend","handleRescheduleMessage","handleOpenCalendar","handleOpenSeenByModal","handleOpenReactorListModal","handleCopyMessages","handleCopyNumber","handleSaveGif","handleToggleReaction","shouldAddToRecent","handleReactionPickerOpen","handleTranslate","handleShowOriginal","handleSelectLanguage","reportMessageIds","scheduledMaxDate","MessageContextMenu","canQuote","onOpenThread","onReply","onEdit","onPin","onFaveSticker","onUnfaveSticker","onReschedule","onCopyLink","onCopyMessages","onCopyNumber","onDownload","onSaveGif","onCancelVote","onClosePoll","onShowSeenBy","onToggleReaction","onShowReactors","onReactionPickerOpen","onTranslate","onShowOriginal","onSelectLanguage","getCopyLabel","hasSelection","noTransition","onAboutAds","onSponsoredHide","onSponsorInfo","openCustomEmojiSets","scrollableRef","withReactions","isSponsoredMessage","areItemsHidden","hideItems","markIsReady","unmarkIsReady","isDesktop","seenByDatesCount","handleAfterCopy","handleOpenCustomEmojiSets","copyOptions","afterEffect","getMessageText","getMessageContact","canImageBeCopied","hasMessageLocalBlobUrl","CLIPBOARD_ITEM_SUPPORTED","Promise","resolve","mediaLoader","copyImageToClipboard","anchorNode","getMessageIdsForSelectedText","execCommand","clipboardText","shouldRenderAsHtml","copyHtmlToClipboard","getMessageTextWithSpoilers","getMessageCopyOptions","extraHeightAudioPlayer","pinnedElement","extraHeightPinned","extraPaddingX","extraTopPadding","marginSides","extraMarginTop","menuElMinWidth","withScroll","handleOpenMessageReactionPicker","bubbleStyle","ReactionSelector","allAvailableReactions","currentReactions","onShowMore","messagesCount","AvatarList","peers","Skeleton","inline","withWrap","sponsorInfo","ReactionPickerLimited","isTouchScreen","sortReactions","allowed","pickerHeight","pickerWidth","gapWidth","itemsInRow","rowsCount","pickerMaxHeight","REACTION_SELECTOR_WIDTH","storyPeerId","sendAsMessage","reactionPicker","story","selectPeerStory","areSomeReactionsAllowed","areCustomReactionsAllowed","areCustomAllowed","withCustomReactions","ReactionPicker","closeReactionPicker","sendStoryReaction","renderedMessageId","renderedChatId","renderedStoryPeerId","renderedStoryId","storedPosition","renderingPosition","isDense","deltaX","getIsMobile","FULL_PICKER_SHIFT_DELTA","handleToggleCustomReaction","handleStoryReactionSelect","isFree","containerId","getStoryKey","customEmojiMessage","buildCustomEmojiHtml","isReaction","chosenOrder","backdropExcludedSelector","SponsoredMessageContextMenuContainer","showDialog","handleAboutAdsOpen","handleSponsoredHide","handleSponsorInfo","additionalInfo","AttachBotInstallModal","confirmAttachBotInstall","cancelAttachBotInstall","isTosAccepted","setIsTosAccepted","tosLabel","linkText","MINI_APP_TOS_URL","rel","isConfirmDisabled","getFirstAvailableBoost","myBoosts","boost","info","firstBoost","boostedChat","BoostModal","applyBoost","closeBoostModal","isReplaceModalOpen","openReplaceModal","closeReplaceModal","isWaitDialogOpen","openWaitDialog","closeWaitDialog","isPremiumDialogOpen","openPremiumDialog","closePremiumDialog","chatTitle","boostedChatTitle","isStatusLoaded","isBoosted","leftText","rightText","canBoostMore","boostStatus","level","currentLevelBoosts","hasMyBoost","areBoostsInDifferentChannels","boosts","currentLevel","hasNextLevel","levelProgress","remainingBoosts","getBoostProgressInfo","hasBoost","isJustUpgraded","moreBoosts","currentStoriesPerDay","nextLevelStoriesPerDay","modalTitle","isBoostDisabled","isReplacingBoost","handleApplyBoost","slots","slot","handleProceedPremium","cooldownUntil","handleCloseClick","contentClassName","PremiumProgress","floatingBadgeText","isOnlyConfirm","formatDateInFuture","getServerTime","ChatlistAlready","closeChatlistModal","joinChatlistInvite","selectedPeerIds","setSelectedPeerIds","missingPeerIds","hasChatsToAdd","newChatsCount","badgeText","handleSelectionToggle","areAllSelected","pickerWrapper","pickerHeader","pickerHeaderInfo","selectionToggle","alreadyPeerIds","Badge","buttonBadge","isAlternateColor","ChatlistDelete","suggestedPeerIds","leaveChatlist","ChatlistNew","joinedIds","isNotJoined","selectedCount","removal","ChatlistInviteModal","renderingInfo","renderingFolderTitle","folderTabNumber","folderTitle","foldersWrapper","Tab","badgeCount","isBadgeActive","modal","chatMessage","messageSender","GiftCodeModal","closeGiftCodeModal","applyGiftCode","canUse","toId","usedAt","handleOpenChat","handleOpenGiveaway","giveawayMessageId","isFromGiveaway","OpenMapModal","geoPoint","closeMapModal","googleUrl","bingUrl","appleUrl","osmUrl","google","prepareMapUrl","bing","osm","handleGoogleClick","handleBingClick","handleAppleClick","handleOsmClick","OneTimeMediaModal","closeOneTimeMediaModal","handlePlayVoice","closeBtnTitle","voice","OneTimeModal","renderMedia","UrlAuthModal","urlAuth","currentUserName","closeUrlAuthModal","acceptBotUrlAuth","acceptLinkUrlAuth","isLoginChecked","setLoginChecked","isWriteAccessChecked","setWriteAccessChecked","currentAuth","button","handleLoginChecked","SANDBOX_ATTRIBUTES","DEFAULT_BUTTON_TEXT","ok","cancel","webApp","attachBot","attachMenu","bots","isPaymentModalOpen","payment","paymentStatus","WebAppModal","closeWebApp","sendWebViewData","prolongWebView","toggleAttachBot","setWebAppPaymentSlug","switchBotInline","sharePhoneWithBot","setMainButton","isBackButtonVisible","setIsBackButtonVisible","isSettingsButtonVisible","setIsSettingsButtonVisible","setBackgroundColor","headerColor","setHeaderColor","shouldConfirmClosing","setShouldConfirmClosing","isCloseModalOpen","openCloseModal","hideCloseModal","isRemoveModalOpen","openRemoveModal","hideRemoveModal","markLoaded","markUnloaded","popupParameters","setPopupParameters","isRequestingPhone","setIsRequestingPhone","isRequesingWriteAccess","setIsRequestingWriteAccess","unlockPopupsAt","handlePopupOpened","handlePopupClosed","sequentialLimit","resetAfter","setUnlockPopupsAt","sequentialCalls","lastClosedDate","usePopupLimit","themeParams","bg_color","frameRef","queryId","replyInfo","isSimple","reloadFrame","sendEvent","sendViewport","sendTheme","useWebAppFrame","isSimpleView","onEvent","isReloadSupported","reloadTimeout","ignoreEventsRef","lastFrameSizeRef","handleLoad","contentWindow","JSON","stringify","forceReloadFrame","once","eventType","isNonStable","eventData","is_expanded","is_state_stable","theme_params","sendCustomStyle","handleMessage","parse","scrollbarColor","getComputedStyle","getPropertyValue","reload_supported","req_id","linkUrl","path_full","is_visible","validateHexColor","color_key","newColor","button_color","textColor","text_color","is_active","isProgressVisible","is_progress_visible","need_confirmation","buttons","handleAppPopupClose","chat_types","convertToApiChatType","isSamePeer","handleRejectPhone","handleRejectWriteAccess","canWrite","handleRequestWriteAccess","method","requestId","parameters","customMethod","handleInvokeCustomMethod","shouldShowMainButton","useInterval","handleMainButtonClick","handleSettingsButtonClick","handleRefreshClick","buttonId","button_id","handleAppPopupModalClose","prevIsPaymentModalOpen","handleRemoveAttachBot","handleToggleClick","handleBackClick","handleAcceptPhone","handleAcceptWriteAccess","openBotChat","backButtonClassName","headerTextVar","luma","getColorLuma","prevMainButtonColor","prevMainButtonTextColor","prevMainButtonIsActive","prevMainButtonText","mainButtonCurrentColor","mainButtonCurrentTextColor","mainButtonCurrentIsActive","mainButtonCurrentText","shouldDecreaseWebFrameSize","setShouldDecreaseWebFrameSize","shouldHideButton","setShouldHideButton","buttonChangeTimeout","buildStyle","isAttachBot","sandbox","allow","allowFullScreen","Checkout","invoice","prices","shippingPrices","checkoutInfo","totalPrice","onAcceptTos","tipAmount","needAddress","hasShippingOptions","savedCredentials","isPaymentFormUrl","setPaymentStep","isInteractive","termsUrl","suggestedTipAmounts","maxTipAmount","paymentMethod","paymentProvider","shippingAddress","shippingMethod","photoUrl","getWebDocumentHash","handleTipsClick","tips","handlePaymentMethodClick","step","PaymentStep","SavedPayments","PaymentInfo","handleShippingAddressClick","ShippingInfo","handleShippingMethodClick","Shipping","checkoutPicture","forceAspectRatio","checkoutTitle","checkoutDescription","priceInfo","renderPaymentItem","priceInfoItem","priceInfoItemTitle","tipsList","tip","tipsItem","tipsItem_active","invoiceInfo","renderCheckoutItem","customIcon","provider","langStringSplit","renderTosLink","tosCheckbox","priceInfoItemMain","checkoutInfoItemInfoTitle","checkoutInfoItemInfoData","VISA","MASTERCARD1","MASTERCARD2","MIR","CardType","cards","Default","Visa","Mastercard","Mir","detectCardType","cardNumber","streetLine1","streetLine2","city","countryIso2","postCode","fullName","shipping","cardholder","expiry","cvv","billingCountry","billingZip","saveInfo","saveCredentials","formErrors","savedCredentialId","reducer","iso2","defaultName","ConfirmPayment","noRedirect","onPaymentFormSubmit","passwordHint","PasswordConfirm","onPasswordChange","clearPaymentError","cardName","shouldShowSubmit","onInputChange","useFocusAfterAnimation","animationDuration","CardInput","cardNumberRef","cardType","setCardType","newCardType","formatCardNumber","cardIcon","mastercardIconPath","visaIconPath","mirIconPath","getCardIcon","ExpiryInput","endsWith","formatCardExpiry","canSaveCredentials","needCardholderName","needCountry","needZip","selectCountryRef","handleCardNumberChange","handleCardholderChange","toUpperCase","handleExpiryChange","handleCvvChange","handleCountryChange","handleBillingPostCodeChange","handleChangeSaveCredentials","Select","hasArrow","SavedPaymentCredentials","onNewCardClick","shippingOptions","handleShippingSelect","needEmail","needPhone","needName","phoneRef","handleAddress1Change","handleAddress2Change","handleCityChange","handleStateChange","handlePostCodeChange","handleFullNameChange","handleEmailChange","handleSaveInfoChange","DEFAULT_PROVIDER","DONATE_PROVIDER","SUPPORTED_PROVIDERS","savedInfo","invoiceContainer","nativeProvider","nativeParams","passwordMissing","confirmPaymentUrl","inputInvoice","stripeCredentials","smartGlocalCredentials","temporaryPassword","isExtendedMedia","providerName","isProviderError","isNameRequested","isShippingAddressRequested","isPhoneRequested","isEmailRequested","shouldSendPhoneToProvider","shouldSendEmailToProvider","general","smartGlocalToken","token","stripeId","passwordValidUntil","validUntil","PaymentModal","loadPasswordInfo","validateRequestedInfo","sendPaymentForm","sendCredentialsInfo","validatePaymentPassword","setSmartGlocalCardInfo","paymentState","paymentDispatch","setIsLoading","twoFaPassword","setTwoFaPassword","prevStep","prevRequestId","canRenderFooter","setStep","nextStep","field","shippingAddressRest","shippingCountry","charAt","handleErrorModalClose","shippingOption","getShippingPrices","cur","getTotalPrice","cardTypeText","detectCardTypeText","findShippingOption","getCheckoutInfo","handleNewCardClick","handleClearPaymentError","sendForm","shippingOptionId","handlePaymentFormSubmit","credentials","validateRequest","requestInfo","getRequestInfo","sendCredentials","expiryMonth","expiryYear","zip","getCredentials","ConfirmPassword","handleModalClose","modalHeader","isSubmitDisabled","isRecurring","getIsSubmitDisabled","shouldCleanup","cleanupOnlyKey","currentStep","renderModalContent","renderError","optionId","receipt","totalAmount","credentialsTitle","ReceiptModal","fullAddress","ICON_SIZE","createTopicPanel","CreateTopic","createTopic","iconColorIndex","setIconColorIndex","iconEmojiId","setIconEmojiId","handleIconClick","getTopicColors","handleCreateTopic","iconColor","dummyTopic","heading","iconWrapper","clickable","noLoopLimit","iconPicker","editTopicPanel","EditTopic","editTopic","isGeneral","GENERAL_TOPIC_ID","newTitle","handleEditTopic","selectCurrentGifSearch","selectIsChatWithBot","canPostInChat","GifSearch","searchMoreGifs","setGifSearchQuery","handleGifClick","handleSearchMoreGifs","hasResults","preloadBackwards","answer","voters","offsets","pollResults","PollAnswerResults","answerVote","totalVoters","loadPollOptionResults","closePollResults","prevVotersCount","votersCount","areVotersLoaded","shouldResetVoters","handleViewMoreClick","handleMemberClick","leftVotersCount","renderViewMoreButton","PollResults","getMessagePoll","resultsByOption","buildCollectionByKey","messagesById","RightSearch","handleSearchTextMessagesLocal","viewportResults","originalSender","selectForwardedSender","senderPeer","foundResult","isOnTop","renderSearchResult","teactOrderKey","LastMessageMeta","StickerSetResult","areStickersLoaded","premiumStickerIds","coverStickerIds","covers","otherStickers","handleStickerClick","canRenderStickers","STICKER_SIZE_SEARCH","selectCurrentStickerSearch","resultIds","featured","openedStickerSetShortName","StickerSearch","loadFeaturedStickers","FLOATING_BUTTON_ANIMATION_TIMEOUT_MS","MEDIA_PERMISSIONS","MESSAGE_PERMISSIONS","useManagePermissions","defaultPermissions","permissions","setPermissions","havePermissionChanged","setHavePermissionChanged","handlePermissionChange","targetName","getUpdatedPermissionValue","oldPermissions","newPermissions","sendGifs","checkMedia","mediaPermissions","sendMedia","assign","embedLinks","sendPlain","sendMessages","ERROR_NAME_MISSING","management","ManageBot","setBotInfo","uploadContactProfilePhoto","startBotFatherConversation","isFieldTouched","markFieldTouched","unmarkProfileTouched","isAvatarTouched","markAvatarTouched","unmarkAvatarTouched","currentName","setName","ManagementProgress","handleNameChange","trimmedName","handleChangeEditIntro","handleChangeEditCommands","handleChangeSettings","isSuggestRef","handleSelectAvatar","isSuggest","CHANNEL_TITLE_EMPTY","isSignaturesShown","canChangeInfo","canInvite","exportedInvites","ManageChannel","updateChat","toggleSignatures","closeManagement","leaveChannel","deleteChannel","loadExportedChatInvites","loadChatJoinRequests","currentTitle","currentAbout","isDeleteDialogOpen","openDeleteDialog","closeDeleteDialog","imageHash","isRevoked","adminsCount","adminMembersById","removedUsersCount","kickedMembers","handleClickEditType","ManagementScreens","ChatPrivacyType","handleClickDiscussion","Discussion","handleClickReactions","Reactions","handleClickAdministrators","ChatAdministrators","handleClickInvites","Invites","handleClickRequests","JoinRequests","handleSetPhoto","handleAboutChange","handleUpdateChannel","trimmedTitle","trimmedAbout","handleToggleSignatures","handleClickSubscribers","ChannelSubscribers","handleRemovedUsersClick","ChannelRemovedUsers","handleDeleteChannel","chatReactionsDescription","enabledLength","totalLength","isChannelPublic","isChatPublic","formatInteger","joinRequests","ManageChatAdministrators","onChatMemberSelect","canAddNewAdmins","adminRights","addAdmins","adminMembers","isOwner","handleAdminMemberClick","promotedByUserId","ChatAdminRights","handleAddAdminClick","GroupAddAdmins","getMemberStatus","promotedByUser","selectManagement","maxPublicLinks","privateInviteLink","inviteLink","ManageChatPrivacyType","updatePublicLink","updatePrivateLink","toggleIsProtected","resetManagementError","privacyType","setPrivacyType","isRevokeConfirmDialogOpen","openRevokeConfirmDialog","closeRevokeConfirmDialog","isUsernameLostDialogOpen","openUsernameLostDialog","closeUsernameLostDialog","handleOptionChange","c","radioGroup","handleForwardingOptionChange","handleSave","handleMakeChannelPrivateConfirm","shouldDisableUsernames","handleRevokePrivateLink","langPrefix1","langPrefix2","forwardingOptions","chatMembers","RemoveGroupUserModal","loadMoreMembers","deleteChatMember","usersId","availableMemberIds","isAdmin","canDeleteMembers","removedMembers","ManageChatRemovedUsers","updateChatMemberBannedRights","isRemoveUserModalOpen","openRemoveUserModal","closeRemoveUserModal","getRemovedBy","kickedByUserId","kickedByUser","getContextActions","bannedRights","forDiscussionIds","linkedChat","ManageDiscussion","loadGroupsForDiscussion","linkDiscussionGroup","unlinkDiscussionGroup","toggleJoinRequest","toggleJoinToSend","linkedGroupId","setLinkedGroupId","isConfirmUnlinkGroupDialogOpen","openConfirmUnlinkGroupDialog","closeConfirmUnlinkGroupDialog","isConfirmLinkGroupDialogOpen","openConfirmLinkGroupDialog","closeConfirmLinkGroupDialog","isJoinToSend","setIsJoinToSend","isJoinRequest","setIsJoinRequest","handleUnlinkGroupSessions","channelId","Initial","handleLinkGroupSessions","handleJoinToSendCheck","handleJoinRequestCheck","DiscussionGroups","STICKER_SIZE_DISCUSSION_GROUPS","linkedGroup","renderLinkGroupHeader","hasPrivateLink","renderLinkGroupConfirmText","GROUP_TITLE_EMPTY","ALL_PERMISSIONS","TOTAL_PERMISSIONS_COUNT","limitReachedModal","hasLinkedChannel","isBasicGroup","canEditForum","canBanUsers","isChannelsPremiumLimitReached","ManageGroup","togglePreHistoryHidden","deleteChat","toggleForum","isForumEnabled","setIsForumEnabled","isPublicGroup","isPreHistoryHiddenCheckboxRef","handleClickPermissions","GroupPermissions","handleUpdateGroup","handleClickMembers","GroupMembers","handleTogglePreHistory","isPreHistoryHidden","handleForumToggle","newIsForumEnabled","checkbox","enabledPermissionsCount","defaultBannedRights","sendStickers","handleDeleteGroup","isForForum","isPromotedByCurrentUser","isFormFullyDisabled","defaultRights","ManageGroupAdminRights","isNewAdmin","selectedUserId","updateChatAdmin","isDismissConfirmationDialogOpen","openDismissConfirmationDialog","closeDismissConfirmationDialog","customTitle","setCustomTitle","selectedChatMember","selectedAdminMember","handleSavePermissions","handleDismissAdmin","getControlIsDisabled","memberStatus","handleCustomTitleChange","changeInfo","blocking","postMessages","editMessages","postStories","editStories","deleteStories","banUsers","inviteUsers","pinMessages","manageCall","manageTopics","anonymous","fetch","response","json","saveFirst","storeSession","data1","localStorage","setItem","location","reload","saveSecond","ManageGroupMembers","areParticipantsHidden","hiddenMembersMinCount","canHideParticipants","ManageGroupPermissions","updateChatDefaultBannedRights","shouldDisablePermissionForPublicGroup","GroupRemovedUsers","handleAddExceptionClick","GroupUserPermissionsCreate","handleExceptionMemberClick","GroupUserPermissions","isMediaDropdownOpen","setIsMediaDropdownOpen","handleOpenMediaDropdown","handleDisabledClick","exceptionMembers","getMemberExceptions","langKey","getLangKeyForBannedRightKey","translatedString","sendPhotos","sendVideos","sendAudios","sendDocs","sendVoices","sendRoundvideos","sendPolls","ManageGroupUserPermissions","selectedChatMemberId","isBanConfirmationDialogOpen","openBanConfirmationDialog","closeBanConfirmationDialog","handleBanFromGroup","viewMessages","ManageGroupUserPermissionsCreate","memberId","DEFAULT_USAGE_LIMITS","DEFAULT_EXPIRE_DATE","hour","week","DEFAULT_CUSTOM_EXPIRE_DATE","editingInvite","ManageInvite","editExportedChatInvite","exportChatInvite","isCalendarOpened","openCalendar","closeCalendar","setIsRequestNeeded","customExpireDate","setCustomExpireDate","selectedExpireOption","setSelectedExpireOption","customUsageLimit","setCustomUsageLimit","selectedUsageOption","setSelectedUsageOption","isSubmitBlocked","setIsSubmitBlocked","oldEditingInvite","editingTitle","usageLimit","expireDate","editingIsRequestNeeded","minSafeDate","handleIsRequestChange","handleCustomUsageLimitChange","parseInt","handleExpireDateChange","handleSaveClick","formatFullDate","n","inviteInfo","importers","requesters","ManageInviteInfo","loadChatInviteImporters","loadChatInviteRequesters","usage","adminId","isExpired","handleCopyClicked","renderImporters","importer","joinTime","isFromChatList","renderRequesters","requester","BULLET","inviteComparator","i1","i2","isPermanent","i1IsPermanent","i1Usage","i1Date","i2IsPermanent","i2Usage","i2Date","revokedInvites","revokedExportedInvites","ManageInvites","setEditingExportedInvite","deleteExportedChatInvite","deleteRevokedExportedChatInvites","setOpenedInviteInfo","isDeleteRevokeAllDialogOpen","openDeleteRevokeAllDialog","closeDeleteRevokeAllDialog","isRevokeDialogOpen","openRevokeDialog","closeRevokeDialog","revokingInvite","setRevokingInvite","deletingInvite","setDeletingInvite","hasDetailedCountdown","MILLISECONDS_IN_DAY","chatMainUsername","primaryInvite","primaryInviteLink","temporalInvites","revokeInvite","askToRevoke","handleCreateNewClick","EditInvite","handlePrimaryRevoke","handleDeleteAllRevoked","showInviteInfo","InviteInfo","deleteInvite","askToDelete","copyLink","prepareUsageText","requested","diff","formatCountdown","getInviteIconClass","prepareContextActions","actions","editInvite","Invite","STICKER_SIZE_INVITES","JoinRequest","hideChatJoinRequest","createClassNameBuilder","fixedDate","dateString","isToday","formatHumanDate","handleAcceptRequest","isApproved","handleRejectRequest","handleUserClick","ManageJoinRequests","hideAllChatJoinRequests","isAcceptAllDialogOpen","openAcceptAllDialog","closeAcceptAllDialog","isRejectAllDialogOpen","openRejectAllDialog","closeRejectAllDialog","handleAcceptAllRequests","handleRejectAllRequests","STICKER_SIZE_JOIN_REQUESTS","ManageReactions","setChatEnabledReactions","localEnabledReactions","setLocalEnabledReactions","reactionsOptions","handleSaveReactions","availableActiveReactions","handleReactionsOptionChange","handleReactionChange","local","personalPhoto","notPersonalPhoto","ManageUser","deleteContact","isResetPersonalPhotoDialogOpen","openResetPersonalPhotoDialog","closeResetPersonalPhotoDialog","isNotificationsEnabled","setIsNotificationsEnabled","handleNotificationChange","handleDeleteContact","handleSuggestPhoto","handleSetPersonalPhoto","handleResetPersonalAvatar","canSetPersonalPhoto","noEmojiStatus","withFullInfo","noPersonalPhoto","Management","managementType","ChatNewAdminRights","GroupRecentActions","noAdmins","selectCurrentManagementType","lovelyChartPromise","LovelyChart","GRAPH_TITLES","viewsGraph","reactionsGraph","GRAPHS","dcId","statisticsDcId","statistics","currentMessage","currentMessageId","setIsReady","loadedCharts","loadMessageStatistics","loadMessagePublicForwards","loadStatisticsAsyncGraph","graph","ensureLovelyChart","zoomToken","create","zoomOutLabel","ready","StatisticsOverview","publicForwards","publicForwardsTitle","publicForwardsData","STATISTICS_PUBLIC_FORWARDS_LIMIT","StatisticsMessagePublicForward","postStatistic","forwardsCount","StatisticsRecentMessage","toggleMessageStatistics","viewsCount","StatisticsRecentPostMeta","toggleStoryStatistics","getStoryMediaHash","imgBlobUrl","withStorySolid","forceUnreadStorySolid","CHANNEL_GRAPHS_TITLES","growthGraph","followersGraph","muteGraph","topHoursGraph","viewsBySourceGraph","newFollowersBySourceGraph","languagesGraph","interactionsGraph","reactionsByEmotionGraph","storyInteractionsGraph","storyReactionsByEmotionGraph","CHANNEL_GRAPHS","GROUP_GRAPHS_TITLES","membersGraph","messagesGraph","actionsGraph","GROUP_GRAPHS","selectStatistics","storiesById","selectPeerStories","Statistics","loadStatistics","graphs","graphTitles","isPercentage","recentPosts","messagesTitle","msgId","StatisticsRecentStory","openChatByUsername","views","currentStory","currentStoryId","loadStoryStatistics","loadStoryPublicForwards","StatisticsStoryPublicForward","OFFSET_BOTTOM","MOBILE_OFFSET","hasBlur","isGhost2","alpha","IS_CANVAS_FILTER_SUPPORTED","RADIUS","getPeerStoryHtmlId","storyRibbonStyles","BASE_SCREEN_WIDTH","BASE_SCREEN_HEIGHT","BASE_ACTIVE_SLIDE_WIDTH","BASE_ACTIVE_SLIDE_HEIGHT","BASE_SLIDE_WIDTH","BASE_SLIDE_HEIGHT","calculateOffsetX","slideAmount","isActiveSlideSize","isMoveThroughActiveSlide","isBackward","mainOffset","additionalOffset","totalOffset","roundToNearestEven","useSlideSizes","baseWidth","baseHeight","newWidth","newHeight","widthScale","heightScale","calculateScale","activeSlideWidth","slideWidth","activeSlide","toActiveScale","fromActiveScale","calculateSlideSizes","useStoryProps","isDropdownMenuOpen","isLoadedStory","isDeletedStory","hasText","hasMessageText","hasForwardInfo","forwardInfo","previewHash","noSound","fullMediaHash","fullMediaData","altMediaHash","altMediaData","hasFullData","hasThumb","noForwards","downloadHash","downloadMediaData","storyViewer","isStealthModalOpen","stealthMode","StealthModeModal","toggleStealthModal","activateStealthMode","isOnCooldown","setIsOnCooldown","serverTime","handleTimerEnds","handleActivate","TextTimer","endsAt","onEnd","deleteStory","openNextStory","handleDeleteStoryClick","contactListIds","saveCloseFriends","closeFriendIds","isCloseFriend","OPTIONS","Screens","editStoryPrivacy","toggleStoryPinned","isOpenModal","setPrivacy","setIsPinned","setActiveKey","editingBlockingCategory","setEditingBlockingCategory","isBackButton","allowList","selectedBlockedIds","handleAllowUserIdsChange","newIds","handleDenyUserIdsChange","handleCloseButtonClick","handleIsPinnedToggle","storyLifeTime","seconds","remainingSeconds","convertSecondsToHours","newVisibility","optionContent","option_name","closeFriends","denyList","handleActionClick","actionInner","footer","submit","renderPrivacyList","CloseFriends","AllowDenyList","noBackdrop","closeButton","headerTitle","fromPeerId","EmbeddedStoryForward","openStoryViewer","loadPeerStoriesByIds","storyIds","fromName","openOriginalStory","isDeleted","isSingleStory","useFastClick","getPeerColorClass","backgroundEmojiId","EmojiIconBackground","emojiDocumentId","renderTextContent","renderSender","onExpand","onFold","contentRef","textRef","showMoreButtonRef","renderingStory","caption","hasOverflow","setHasOverflow","prevIsExpanded","isInExpandedState","addExtraClass","removeExtraClass","canExpand","shouldRenderShowMore","requestForcedReflow","textContainer","textOffsetTop","lineHeight","isOverflowing","overflowShift","MessageText","messageOrStory","withTranslucentThumbs","StoryFooter","areViewsExpired","openStoryViewModal","isOut","sentReaction","isSentStoryReactionHeart","HEART_REACTION","recentViewers","recentViewerIds","handleOpenStoryViewModal","handleForwardClick","handleLikeStory","ReactionAnimatedEmoji","withEffectOnly","isViewed","isPaused","onImageComplete","handleAnimationEnd","animationName","onAnimationEnd","VIDEO_MIN_READY_STATE","IS_SAFARI","viewModal","isPrivacyModalOpen","storyList","forwardedStoryId","safeLinkModalUrl","mapModal","isPremiumModalOpen","shouldForcePause","mediaAreas","forwardSenderId","area","forwardSender","withHeaderAnimation","storyIdsByPeerId","storyChangelogUserId","viewersExpirePeriod","storyExpirePeriod","storyViewersExpirePeriod","isChatExist","areChatSettingsLoaded","isArchivedStories","isPrivateStories","getIsAnimating","viewStory","setStoryViewerMuted","openPreviousStory","loadPeerSkippedStories","copyStoryLink","openStoryPrivacyEditor","loadChatSettings","fetchChat","loadStoryViews","isComposerHasFocus","markComposerHasFocus","unmarkComposerHasFocus","isStoryPlaybackRequested","playStory","pauseStory","isStoryPlaying","markStoryPlaying","unmarkStoryPlaying","isAppFocused","markAppFocused","unmarkAppFocused","isCaptionExpanded","expandCaption","foldCaption","isPausedBySpacebar","setIsPausedBySpacebar","isPausedByLongPress","markIsPausedByLongPress","unmarkIsPausedByLongPress","markDropdownMenuOpen","unmarkDropdownMenuOpen","isChangelog","canPinToProfile","canUnpinFromProfile","forwardSenderTitle","canShare","canPlayStory","shouldShowFooter","shouldRenderSkeleton","skeletonTransitionClassNames","mediaTransitionClassNames","previewTransitionClassNames","shouldRenderComposer","composerAppearanceAnimationClassNames","shouldRenderCaptionBackdrop","captionBackdropTransitionClassNames","appearanceAnimationClassNames","shouldRenderCaption","captionAppearanceAnimationClassNames","isStreamingSupported","useStreaming","PRIMARY_VIDEO_MIME","useStoryPreloader","handlePauseStory","handlePlayStory","handleLongPressStart","handleLongPressEnd","handleDropdownMenuOpen","handleDropdownMenuClose","handleLongPressMouseDown","onMouseUp","handleLongPressMouseUp","handleLongPressMouseLeave","onTouchStart","handleLongPressTouchStart","onTouchEnd","handleLongPressTouchEnd","isLongPressActive","isPressed","timerId","canProcessEvent","useLongPress","hasAllData","useBackgroundMode","load","isPreload","prevIsComposerHasFocus","prevIsCaptionExpanded","prevShouldForcePause","prevIsAppFocused","prevIsPausedByLongPress","handleForwardPeerClick","handleOpenPrevStory","handleOpenNextStory","handleVideoStoryTimeUpdate","handleCopyStoryLink","handlePinClick","handleUnpinClick","handleReportStoryClick","handleInfoPrivacyEdit","handleInfoPrivacyClick","isForContacts","isForCloseFriends","myName","handleOpenStealthModal","activeUntil","StoryProgress","formatRelativeTime","isEdited","privacyIcon","gradient","renderStoryPrivacyButton","onOpen","disableRemotePlayback","SECONDARY_VIDEO_MIME","MediaAreaOverlay","storyViewerMode","StoryCaption","Composer","editableInputCssSelector","EDITABLE_STORY_INPUT_CSS_SELECTOR","EDITABLE_STORY_INPUT_ID","inputId","inputPlaceholder","lastViewedByPeerIds","lastViewedId","storyIdsForViewer","peerStories","lastReadId","hasUnreadStories","previewIndexId","currentPeerId","isSinglePeer","isArchive","byPeerId","orderedPeerIds","selectIsStoryViewerOpen","stopActiveReaction","renderingPeerId","setRenderingPeerId","renderingStoryId","setRenderingStoryId","prevPeerId","renderingIsArchive","renderingIsPrivate","renderingIsSinglePeer","renderingIsSingleStory","slideSizes","rendersRef","setIsAnimating","setRef","renderingPeerIds","renderingPeerPosition","currentPeerPosition","calculateTransformX","transformX","getCurrentStoryRef","composer","focusEditableElement","handleTransitionEnd","Story","renderStory","StoryPreview","renderStoryPreview","storyView","StoryView","closeStoryViewer","updateStoryView","closeStoryViewModal","areStoriesBlocked","isUserBlocked","isContact","isOnlyStories","shouldColorStatus","isModified","opacityFadeIn","viewReaction","withIconHeart","withPortalForMenu","menuBubbleClassName","menuBubble","withColoredStatus","clearStoryViews","areJustContacts","markJustContacts","unmarkJustContacts","areReactionsFirst","markReactionsFirst","unmarkReactionsFirst","setQuery","shouldShowJustContacts","STORY_VIEWS_MIN_CONTACTS_FILTER","shouldShowSortByReactions","STORY_MIN_REACTIONS_SORT","shouldShowSearch","STORY_VIEWS_MIN_SEARCH","hasHeader","refetchViews","sortedViews","reactionA","reactionB","prepareComparator","placeholderCount","notAllAvailable","sortButton","topButton","iconSort","iconDown","viewsList","contactFilter","check","topScrolled","centeredInfo","view","additionalKeyId","PlaceholderChatInfo","bottomInfo","closeStoryPrivacyEditor","storyToDelete","setStoryToDelete","isPrevOpen","handleOpenDeleteModal","handleCloseDeleteModal","thumb","safeAreaBottom","parseFloat","toTranslateX","toTranslateY","toScaleX","toScaleY","ghost2","ghost2Top","StorySlides","StoryDeleteConfirmModal","StoryViewModal","StorySettings","THRESHOLD","threshold","setIsAtBeginning","setIsAtEnd","selectorOrElements","shouldContainBottom","viewportY1","viewportY2","isFound","y2","hardwareConcurrency","instances","IS_TEST","Worker","createConnector","scrollLockEl","IGNORED_KEYS","Down","ArrowDown","Up","ArrowUp","Left","ArrowLeft","Right","ArrowRight","PageUp","PageDown","End","Home","changedTouches","getTouchY","preventDefaultForScrollKeys","HTMLElement","getAttribute","isTextBox","_excludedClosestSelector","passive","onkeydown","VIEWPORT_MARGIN","SCROLL_MARGIN"],"sourceRoot":""}